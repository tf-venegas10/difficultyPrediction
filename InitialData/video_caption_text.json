[{"path": "E:/Coursera/algorithms-part1/06_mergesort/01_mergesort/03_mergesort.mp4", "id": 5138, "text": " Algo r  [h [n 5_ KuI.L|u 5. ...,m .. A w 1;. \\'|\\' \\\\.'.u.\\|v\n\n2.2 MERGESORT\n\n> mergesorr\n\nllllululll \"m\" > bolfom-up mergesor!\n- > soning comp/exily\n\nAlgonthms\n' '\" \"\"\"\" > comparators\n\n» srabiliry\n\nmw /mm u..mm..... gm. Two classic sorting algorithms\n\n  \n\nCritical components in the world’: compuulional infrastructure.\n\n- Full scientiﬁc understanding oftheir properties has enabled us\nto develop them Into ntgcticai system sorts.\n\n. Quickson honored as one of top to algorithms at 2am century\n\nIn science and engineering.\n\n  \n\nMergeson. [this lecture]\n- Java sort for objects.\n- Perl, c++ stable sort, Python stable sort, Firefox Javasmpt. \n\n  \n\nQuicksort. [next iedure]\n. Java sort for primitive types.\n- C qsort. Unix. vlsuai C». Python. Matlab. Chrome Javascript. 2.2 MERGESORT\n\ny margesorl Margosori\n\nBasic plan.\n- Divide may into two halves.\n. Recursuvery sort each half.\n\n. Merge two halves.\n\n  \n\n        \n       \n        \n     \n \n   \n   \n \n     \n    \n\nm»«rM£xc:sonvzxAnn>\n;a:\\l’H«.vU[fcy1u|(n5\n\n...m,v-.»‘.u A 2 2 l M p v x\nAEEEECLMMDPKRSYX\n\n \n\nL 2\n\n    \n\n        \n\nMugtson muvhw\n\nHIS! Dtcd!\n\nof a\nInput! on the\nEDVAC\n\nu....a.._.. Abslracl in-place merge damo\n\nGoal. cwen two suned subarrays a[1o] to a[mid] and a[mI'd+1] to a[hi].\nreplace with Sorted subarray a['la] (0 a[hi].\n\n \n\num: suhnnqy cxhauurd mm «mm ollvrr\n\nmu T Merging: Java implemenlation\n\nprint: static ma merge(comparab'!e[] a. Comparable[] aux. m In. in: mid, m: M)\n(\n\nzsser(1'sSor(ed(a, In, mid): m»mnmuou- ma mm smtad\nassert 1'sSart2d(I. midu, In , , urmL)nmLww: a[mvu~L .m] sowed\n\nfor um k 10, k <_ 011; um)\n\n \n\n \n\nmix] and: “’“‘\n1nt1=1o.)= mm:\nfor um k - Yu, k (B h1;ku) V‘:-vm\n(\nIf‘ (1 > mvd) alkl - Au)<Llq.].\n:15: if (1 > M) .1[k] nuxhn].\nelse 16(1css(nuxIJ1.nux[1]>)a[k] Qux[]A«]:\nmg and V’ AHXLHJ.\n9\nas52rl1'sSart:d(i. In. hi): ’ \\)us(<nmi‘Lvon «Ho hw] smleu\n)\nm . mu 1\nMuAuLoa|u;-as:\nk\n\n.anAcuIL~: Mergesoﬂ: Java implementation\n\nmm: chu Mum\n(\n\nyvivnu mm mm —m(. 3\n( /‘ as hzfnra '/ }\n\nmvau sun: void snrztcoivirlbllll a. caunarabl-[I an. In In. in M)\nI\nat {In <~ la) mum:\nnu ma - lo . (M - lo) / 2:\nsort (a. aux, lo. mm):\nSun (a. aux, mu. m):\nM£rg¢(a. aux, la. mm, hi):\n\n3\n\nDub“: mm mm IorK((olInlr|b1a[l -J\n(\n\nm . nut cwmmra ngm];\n\nsorm, aux. 0. Llﬂlﬁlh - 1):\nI\n\n \n\n) Mergesori: vruco\n\n \n\nM “w';=‘.,x,xvv‘\\\"“v:\n:nc:;ouv:x.»»>;[\nmergeh.\nmergeh‘\nm«>Ig9(.1,\nmergeiu‘\nmm.‘\nmer9e(a\nm£Y9h(-3.\nmarque‘\nmarque‘\nmum‘\nmerqeu‘\nIWEPKKKA‘\nmar9Q(a‘ \\\nmer\"Je(d. ..\nmvrgx-(.1 U\n\n \n\nA\nAEEEILAHM\n\n \n\ncm\n_A3m\n\nmu av merge vexum for mpdown mergesevl M eeeeeeeeeeeeeeee on Merg eeee 0: animation\n= Mergesori: animation\n\nsu mndown .:.-nu\n\n\\\n\nMw m.. wrung 4»-um»., (Q7 vtrgc xnrl\n\nnul m urdnr rrrrrrrrrrrrrrrr on\nA algonmmrmsmon\nj movder\nV j mr...mu.mv\n' 7 nulmurdtr Mergasori: animation\n\nsu row): \\(|V\\EH rlrnn\n\nA HIQDVIINIVDDXWHDH\nI  j ,...,m.,\nl  } j zuvramxuhaway\nnnlmarder\n\nM19/'/mm mruﬂﬂ .u;¢.mm (OI nmrqa $OV| Mergasori: animation\n\n:::::::::::::::::::: ., Mergesorl: animation\n\n \n\nsu vr\\(r~r—\\nr|rL1 Hm-In\n\nMw  xnnvvﬂ m.,...m w. rmrgv: SUV!\n\n>\n\nalgonmm Doxmon\nm mder\n\ntuvrml mmw\nmu m ardnr Mergesoriz empirical analysis\n\n  \n\nRunning nme estimates:\n- Laptop executes IOI compares/second.\n- Supercomputer executes IOU compares/second.\n\n    \n      \n          \n       \n    \n    \n\n \n\nwvrvns-n‘. 0.‘ Mn) '4‘\n.um.v...,., mm. HM mm VI ivwHunv Hutu. W, N W .,m,,‘\nname mum 2.5 hours 3| 7 mu mxnnt n mum; H4 mm\n\nsuper mmm Vxecond Iwnek muaul wshutt Ivuhml\n\nR\n\nBottom line. Good algorithms are better than supercomputers. roams! Improvements\n\nMergesorr\n\ny mam. ‘H.\n\n  \n\n-‘I$I1Ig(;é::tm>m\\r\\1:r$(h.1|?: svmHest Hem m S2-(0nd mm\n- 1:4:-1p: for p.x:u.:I1y mdered .5rv..av;\n\n \n\n.nM.g‘a . io . on —1o)/ 2;\n' >1§0I‘K,(A, aux. 10, may:\n\n\" .s:..-v, 9. 4... Wu vm\nwf um.;ga:m.m1, a[mC])) return:\n\nmergzh. aux, 10‘ mm. m):\n\n) Mergeson: practical improvements\n\nL mm.-.1» mu mp, “ Hy» .1.u.m.~,uwev Save ume (bu: no: space)\n\nby swltrhmg ms ml? of the mum and auxiliary array m earh rerurslvv rall\n\n.7--Wm mm mm ne.«m-mmgmmu ._ Lammabweu ._ nu la, nu ma. VVL m)\n(\nmm m. \\ ma.»\nrm» (Mu x , lo: . <_ nu kv-4)\n«\nu <. , mu; m — u-v1\nemg .r u -. In) ‘ Lu W4‘\neise)f(\\ess(a‘.1LiL-D) m — n L \" ’\nelse Lu — u»J:\n\n)\n\nu\"wa\\e smut vma 5urL{Lm-A><\\vab\\:U .‘ Lnvrpav*a\\:\\eLJ aux H11 19‘ nu x..;\n4\nn (M ¢, 101 vewv'\n\n \n\nnu ma Va . um 7 ya; / 1.\nsunk ‘ V0. men\n\nsoy\". :. , , mxdvl‘ rm,\nvernal. . H). m, rm)‘\n\nJ . Mergasori:\n\nvisuulizaiion\n\n \n\n, ..mnII1l|\n, ‘.u\\|l\\|l\n.n.nIIAHllMm\nmull\nmull\n..m:umnI\\II\n‘ .....mumI\\IVHIIHIIIIWIIWII\n...mII\\\n‘..nl|\n.“..‘..x|IHl|\nmill\nMIN\n‘..‘.uuuIIll1\\\nmulmlllllllm\n..‘..m.u. uxImuIxmInIIImIImI\\IIn|\\||\\H 2.2 MERGESORT\n\nr mergesort\n\nAlgorithms\n\nx‘.__. )\\\\\\V.‘-,\n\nmxv » ralwu u..=..mm. .a.. Copyright © 2012 Robert Sedgewick and Kevin Wayne"}, {"path": "E:/Coursera/algorithms-part1/06_mergesort/01_mergesort/04_bottom-up-mergesort.mp4", "id": 5139, "text": " 2.2 MEIGESORT\n\nw\n\n.I.‘: 11\n\n. i , r bottom-up mergesort\n‘Algorithms ‘\n\ny\n\nM. . r u Bonom-up margewrl\n\nEaslc pun.\n- Pass through array, merging subarrays ofsize 1.\n- Repeat for subarrays of size 2, 4. s. 15. \n\nml\n7\nn v\n\nBottom line. No recursion needed! Bonom-up morgesarl: Java impiemaniulion\n\n  \n\nmm chss Hergclu\n\nI\np.-mu mm cum;--m[) Inx;\n\n  \n\nnv-Ivan static void ltW|(COIDlrIb|I[] In in ‘lo. 11!! mid. Mt M)\n( /' as before \"I 1\n\n  \n\npubh( mu‘: void sur:(cn-parm-[1 a)\n(\nnu u . mzngxn:\naux - new (amparzIz12(N];\nfa! (em 51 - 1; 51 < N: 51 . mg)\nfor mu la - oz xa < N—sx: la +. smz:\nmergeh. 1o, ms»). HaI:h.nn'n(1oos1osz~l, M»:\n\nR\n\nBottom line. Concise indus!rial~slrengIh code. a you have the space. Boﬂom-up mergeson: visual lrace\n\n2.|.|IlIIl|III|\":|n|.|.|.|II.|.|||||II ..I.I:I\n’..||n||II||II||uI|..||.uI..||II||..II..|| I\n2..|I|lllrIII|||l..u||||...n|I|,.IIII|| ..|I|\n‘“..IIIIIII|||||\".....u:IIII|||\" ....mmIII\n:1.......mIIIIIIllllllllllmm .......uu 2.2 Mskssspkr\n\nv bohornrup mergesorr\n\n;\\]gr>ril’h|n.s\n\nmm w\\g>~I L> wv mm rdz 2.2 MERGESORT\n\n> boﬁom-up mergesorf\n\nAlgorithms\n\n» .\\‘_. )\\>—A‘~\n\nmw : mun u..n...;...,,. .a.. Copyright © 2012 Robert Sedgewick and Kevin Wayne"}, {"path": "E:/Coursera/algorithms-part1/07_quicksort/01_quicksort/05_system-sorts.mp4", "id": 5146, "text": " 2.3 QUICKSORI\n\nAlgorithms\n\n> system sons\n\nx .\\ ..,‘ M ax \n\n».mm.>e.4 ., .mm..m¢.s.. QUECKSORI\n\nAl'VV ‘ II\n\nM L.“ J! ‘.»,um_ Java lyslam saris\n\n  \n\nArrays.sor(().\n- Has different method for each primitive type.\n\n- Has a method for data types that Implement Comparable.\n\n. Has a method that uses a Comparator.\n\n. uses tuned qulcksort for primitive types; tuned mergesort var objects.\n\nimpart java.utH.Arrays:\npmte em: Strlngson\n\nI\npubliz nut: vutd -tn(s:riw11 we)\n(\nsmngn . - smxn.remsmn¢s()1:\nArrays.sart(a)'\nfor (in: i . :t<n:1.o)\nsedmxau-1n:In(a[13):\n\n \n\nQ. Why use different algorithms for primitive and reference types? Sysiem sun: Which ulgorilhm in use?\n\nApplications have diverse attributes.\n- Stable?\n- Parallel?\n- Delerminlslid\n. Keys all dlsﬂncl?\n- Multiple key types?\n. Linked list or arrays?\n- Large or small items?\n- Is your array randomly ordered?\n- Need guaranteed performance?\n\n \n\nmany more zambwnalioni 01\navtrmutux rm aiavnmmx\n\n   \n\n  \n\nElementary sort may he method of choice for some combination.\nCannot cover all combinations of attributes.\n\nQ. Is the system sort good enuugh?\nA. Usually. Soriing summary\n\n \n\nmm? mum wom amage venvarks\nsdeclxan I N 1 / 2 N I / 2 N ‘ / 2 NEXUKIHEES\nmxullon I M N 1 / Z N I / 4 N uxn I01 Emil‘ Nar DaFUiNV ovdcrcd\nmu ./ v 7 N ugh! mdg subquailralm\nmarge ./ N lg N N lg N N lg N N mg N guanlnlee, stable\nW V N A / 2 2 N N N N .9 N “*9 'ja§;g;*:'';;;;;_1\";’a\"‘-*\n3 way muck . N 7 , 2 2 N Vn N N WW3; g:;f;;;';\"_;'=S=\"<=\nI -/ N lg N N ‘U N N N: N holv sommz Wm 2.3 QUICKSORT\n\nAlgorithms\n> sysrem sons\n\n>< .__ mwxm\n\nmw / mm ().|!vm<uI:n ..s.. Copyright © 2012 Robert Sedgewick and Kevin Wayne"}, {"path": "E:/Coursera/algorithms-part1/09_elementary-symbol-tables/01_elementary-symbol-tables/02_symbol-table-api.mp4", "id": 5151, "text": " Algorithms\n\n4\n\nI 1\n2»!-“W _\",‘JlH1!l\nA1g9r.1Ehms_\n\nmu /mm u..=.-mu... .a..\n\nkum-n SF|n.|\\H< x I K: \\'|\\'\\\\'.\\\\\\L\n\n3.1 SYMBOL TABLES\n\n> API\n> elementary implemenlalions\n> ordered operations 3.‘ SYMBOL TABLES\n\n>AP| Symbol rubles\n\nKey-value pzlr absuanlon.\n- Insert a value with specified key.\n- Given I key. search {or the corresponding value.\n\n  \n\nEx. DNS lockup.\nInsert URL with speciﬁed IP address.\n\nGiven mu. find correspanding ip address.\n\n    \n    \n \n\n      \n \n\nwww.zs.pvincelon.eﬂu izu I2 i3s.i i\n\n      \n \n     \n \n\nmm pmiczlon can i2s.i I2 IZBJS\n\n     \n\nwwwsyalzedu i3o.i32.i43 Zi\n\nwww.haN:m.edu i2s.io3 nmss\n\n     \n\nwww ximpxurmzum 2o9.osz.Is5.so Symbol tabla upplicuiions\n\n     \n\nn1wu.mmv ruuymw H? >4 Arr u\n\n        \n    \n\nmm deﬁmlmu .1.«.m.o..\n\n \n\ndvdmnavv\n\n   \n\n   \n    \n\nbook Index mm relevant pain nu ul pig: numlurx\n\n     \n\n   \n\nnu mm ﬁnd song to download name av Hang uamvulu I0\n\n   \n   \n\n           \n  \n      \n    \n      \n     \n\n«mm: Auaunl Izrnceu lrannclvoru uumnl number nummon mans\n\n     \n\n     \n\nweb scum rum mevam web ranges keyword Nu at page namu\n\n   \n\nvarlabk name\n\n   \n\nmmpnlel mm pmnerlmx a! “mum Iype and um\n\nvoulmq um mule lnlemzl mclnexs desllnaunn bu! mule\n\n       \n    \n\nnus «nu n> addvexx glven mu\n\n   \n\nmu n> addvnx\n\n       \n          \n \n\n   \n\nraven: ws «me mu given 17 «mm; n> Iddvus um\n\n        \n\n    \n\n«ma nmkm known wsmons\n\n \n\nDenomvcs om slrlnu\n\n          \n\nHI: mum mm ﬁle an mu mmm Ioczunn an dusk Basic symbol luble AFI\n\nAssoelatlve array abstraction. Associate one value wlth each key.\n\npublI( (lass SY<|(ey, value)\n\nsr() lH|NA.L\\1Hh“»’vV\"[t\n\n,- m M1lm[‘ttrw!uH't.MN.\nVurvrtm key/mm W. « mlutry rvuVH\n\nmy... ,-nu/..l.\\ thko,\nmu .y M v»nI\\..Ml\n\nma deleteoﬁey key)  kwmuJv‘«v.v‘m//NW’\nmtg... (ontams(l(!y um HUMIt4!\\.UJrt[>ut‘n'IHlHK>Y>\nboalean :s:..p:y(> H!/hN'\\h'trHfl«’\nnu sum vHvJ'.vu!L.\\ hllltlrll/V. wk\nIterahVe<Key> keys() 5 A'”HV.’7‘|Y~N‘”Yt’u\"'\\\n\nvotd FuK(KzY key, Vﬂue m)\n\nValue §u(Key key) Conventions\n\n \n\n- Vaiues are not mm.\n- Melhod gem returns mm M’ key not present.\n\n- Melhod putt) overwmes o|d value wnh new value.\n\nmended consequences.\n. Easy lo Implement contains().\n\npubhc boc'lean con(aIns(KeY key)\n( return get(|<e‘/) \\: mm: )\n\n- can Implement lazy version of unezeo.\n\nnubh: void de1eu2(Kev key)\n{ put(key. mm): Keys and values\n\nValue type. Any generic type.\n\n,=..uy rm:-mm U. AN\n\n \n \n      \n   \n   \n     \n \n     \n   \n \n\nKey type: several natural assumptions.\n- Assume keys are Comparable. use :omnar'eYo().\n- Assume keys are any generic type. use enuals() to test equality.\n. Assume keys are any generic type. use equals() to test equality;\nuse hash€ode() to scramble key.\n\nT owl! m mm.\n\nmay mm:\n\nBest practices. use Immutable types for symbol table keys.\n. Immutable lnjavaz Str1‘ng,Integer',Dnub1e. java.1‘o.Fi'|e\n. Mutable in Java: Strlngsullder, java.net.UR|., arrays. Equality list\n\nAll Java classes Inherll : method equI15(). Implelnonﬁng equals for user-deﬁned types\n\nnmulw mm in wt uzualsu mm mrwxuncz\n\nSeems easy. but requires some care Mwmmm WWW\n\n  \n\nwane ﬁnal dun mu 1-ulu-mu Enﬂllrlbhonmo\n(\nmun mm in: south:\nnnuu Hun! In: any.\nnriuu mm in! year:\n\n   \n  \n\n  \n  \n\nmm! by mu...\nvum ixpvux mH u..m:..\n\nnun: mm» IIunll(0h}:cK y)\nC\n\n  \n \n  \n     \n\n  \n\nH U __ mm mm mm mm.r.,m.4.na.mmu.:.w\n\nawn ‘WY rm“\n\n \n     \n    \n  \n\n \n\n1f(y . mu mm mu:\n\n..».m\\ Vlunl n. m m. um! Hm)\nmgmn gunman VK .m..mm\n\n \n\n« (Y.Ie:Chss() 1- lhis.uuClasx())\nmun. false:\n\n     \n   \n        \n\n \n \n\n   \n\nData that . um > y:\n« ((hIs.day I mmay > mum false:\nwe (mIs.mmh mu.mm return false:\nif (lhix.y:ar ! lhanyear 1 return false;\nmun. me:\n\nmy us Exuunlweu \\u wuu-1\n\n  \n   \n\n     \n  \n\nma m... .u wqnmcam\nIwmx M. IN‘ um: Equals design\n\n \n\n\"Standard“ recipe for userdefmed types.\n- optimrzanon for reference equahxy.\n- Check against rum,\n. Chetk mm two objecls are ofthe same type and cast.\n- Compare each s£gmf<cant field:\n— if held us a primmve type. use ==\n— if held Is an object, use aqua1S()\n\n‘M\n\n(« w\n\n— If ﬁeld Is an array, apply to each entry <— J\n\n   \n\n|»_- NA! ,r .\n\n \n\nBest pracuces.\n- No need to use calculated fields that depend on ozher fiefds.\n- Compare fields mostby lokely to differ fsrst.\n. Make cmnpareTn() consistent with equawso.\n\n\\\n\nX uumm w/‘ulIH‘\\\\ x xx r<vyv‘*vr'n,\\/w rm Frequency counter implemenlavion\n\npublic (1155 Frequenzyﬁaunur\n{\nmum: snti: vmd .m'n(su-im,z(] irgs)\n{\nml minlen . In(eqer.narseIn((:rns[0]]:\n\n   \n\nSV<Sn‘mg, 1mgw it = new SY<S(rvng, lnteger>():\nmm: (!StdIn‘isEmpty())\nI\n\nStrum ward = StdIrv.r2adSn1'mz0: ‘.  g yw \n\nyr (won.1,|en9th() < mvrﬂen) zunnrm\n\n« (‘Sr.<on(umS(wurd)) s(.pu({v.ord, 11:\n\nuse SI pumom, ,r gexmm) . 1):\n}\nStrmq max = “\n\nsnputtmax‘ 0),\nfar (swag word : 5: keyS()1\nvf (51 qet(word) > §(.qe1(max))\nmax ; ward. R\nsmouz.pnn:ln<mx ‘ “ \" + sr.get(m3x)1:\n\n \n\n \n\nM 4 HHHI M\n,. 3.1 SYMBOL TABLES\n\nr AP!\n\nAlgorithms\n\nhurt//atwuovvmulunndu R Copyright © 2012 Robert Sedgewick and Kevin Wayne"}, {"path": "E:/Coursera/arduino-platform/02_c-programming/03_lesson-2/01_lecture-2-1-basic-c-operators.mp4", "id": 419, "text": " Unv it 0\nU Cafi sriia, I Ci e\nr\n\ncf\" . H-a:'hsI P\n\nO ess I’ an\n\ncl\n0\nt\ne\nn\nY\ne\nat\nm -J\n\nF‘ -\\-6) % ax\n\n \n\nInternet of Things\nProfessor {an (3 Hams‘ Ph.D. Module 2. Lessnn2\n\nLecture 2.1: Basic E Uperaturs Eunstants\n' Can use X’-Jeh uz Eurnpihzr directive\n:: me £u‘>1§‘/‘IF \"'2\n‘ Any Instance uf the string >5 substttuted at curnplle time\n- Character nunstants\n— Written as a singte character in singte quutes\n\n': ’ tsTE!'lt'ti3t\\.:}TUR‘;:'\n\n# Integer aqua‘ tn the ASCII vatue uf the character\n\n— Same characters are nut easy tn represent (LE. belt) Arithmetic/Relatinnal Uperatnrs\n\n. +‘ ._ 5/\n\n' % is the mnduln nperatnr. divisinn remainder\n' Ex.5\"/uZ=L5%3=|]\n\n' +* (increment) . -- (decrement)\n\n0 ::4 (V >V <:V >=V I:\n\n° Ex. if (x < 5) Luginal ﬂperaturs\n\n3.3. (AND), || (on), ! (NOT)\nTreat arguments as 1-bwt bmary values\n\n— 0 \\s FALSE, not-0 IS TRUE\n\nif ((A == 1) && la) uc University of\nCalifornia, Irvine"}, {"path": "E:/Coursera/arduino-platform/02_c-programming/03_lesson-2/03_lecture-2-3-loops.mp4", "id": 421, "text": " Unv it 0\nU Cafi sriia, I Ci e\nr\n\ncf\" . H-a:'hsI P\n\nO ess I’ an\n\ncl\n0\nt\ne\nn\nY\ne\nat\nm -J\n\nF‘ -\\-6) % ax\n\n \n\nInternet of Things\nProfessor {an (3 Hams‘ Ph.D. Module 2. Lesson?\n\nlecture 2.3: Lnups All Built lntn the \"Fur\" Statement\n\nin: main (H\n., i\n‘\n\nint 1,-\ninitialtlatinn terminatiun step\n\nfor ‘\npr ’\n)\n) Break and Enntinue\n\nBreakjumps tn the end nf a fur,\nwhile, du, er case\n\nwhile (3: > 5) (\ny++;\nif (y < 3) btnnk;\nx++v’\n\n)\n\nBuntinuejumps tn the next\niteratinn at a leap\n\nwhile (x > 5) (\ny++,-\nif (y < 3) contjnun;\nx++;\n) Uc University of\nCalifornia, Irvine"}, {"path": "E:/Coursera/arduino-platform/03_arduino-programs/03_lesson-2/01_lecture-2-1-classes.mp4", "id": 428, "text": " University of\nCalifornia, Irvine F\nInternet of ;l'lg|rF}g§\n\noess F n .H Internet of Things\n\nProfessor Ian G. Harris. Ph.D. Module 3, Lesson?\n\nLecture 2.1: Elasses Classes and Members\n\n:1“. x (\n\npublic:\n\nan-. n,-\n\nin: ntunc v) ( in old = m; n=v; return old; i\n\nL\n\nx viz:\nvnr. ,\nint x = vnr.u1(9):\n\n' ﬂeeiaratinn nf a variable creates an abject\n\n' .|]peratnr used tn access members\n—Data and functions\n\n' Funntiens can be defined inside the class Elasses in libraries\n\n' We dnn'1 need in knew 3 Int ahnut\nclasses\n\n' We wiH nut deﬁne classes\n\n' We will use classes deﬁned in libraries\n\n \n\n¢,begin (mac) :\nbegin (speed) ;\np:inC(“I-Ie11o\") :\n.p:1nc(“Hn11o\"); Uc University of\nCalifornia, Irvine"}, {"path": "E:/Coursera/c-plus-plus-a/02_module-2/01_basics-of-generics-and-classes/10_2-9-natural-way-to-build-widgets.mp4", "id": 733, "text": " Module 2.9\nNatural Way to\nBuild Widgets V\nC++ EQEC §\"*;“::,..-_>‘:  32\n\n \n\nA/czZ‘.¢zra/  Z‘o \n\n   \n\nL rC++ f@E'C ';\":’ i3f_’é\"\"- ?*”“\n\n  \n  \n \n\nA/az‘arc2/ My 50 V‘ /\\/dZZ(/‘a/  Z(o rd‘. A/c2Z‘ara/ MW 20 \nBa//d M43825 “ /\\/dZZ(/‘a/  Z(o A/aZ‘ara/ May Z‘o \nBa//d /J/a/3835\n\n   \n\nL‘? mxuruwn A/az‘arc2/ May z‘o 7\n\nC++ f@E'C '*a\"<}_j'_>‘;\";z H 7*\n\nA/az‘arc2/ May z‘o A/az‘arc2/ May z‘o A \nHi 7\n\nC++ §GE'C '2 <.%jf;”;z ‘WH\n\nA/az‘arc2/ Addy z‘o \n\nL r('I++ fez‘ C \n\n \n\n<os;;_,a‘;“a1: é   eE‘§\nV '3 Q '1\n\nA/az‘ara/ May Zb P’\n\nC++ EQE C $\"\"g\":.:_<-_»‘;“‘;a_ = :a  \n\nA/az‘arc2/ Aday io \n34;/4 A2,;/38:5 ““\n\nL rC++ €63‘ C  :33  ‘ := \n\nA/az‘ara/  Z(o \n\nL A/aZ‘4zrc2/ May 60 \n\n   \n\nmm v: Why add a type?\n\no Types are related to domains\n\no So when you need to talk about widgets-you\nwant the widget type and actions on widgets\n\no C had primitive forms of type extensibility\n\nSHN iii illlilli Va\n\n++ f@§'C  \n\nA/czZ‘ara/ 424/ go rC++ Em C \n\n :4 e; ;= ©E§  \n\n%«»“‘»\n\n/\\/cZZZ(ra/  Z0 ﬁe‘ rC++ EQEC ”;\"€.}:f‘§\"£a.‘§%‘§E\n\n  \n \n \n \n\nA/aZ‘ara/  Z‘o \n\naw u: mum<:u.« /\\/aZ‘ara/ May :0 7\n\nC++ EQEC :;.;§‘§’{73_:'_\"§\"Ez. \n\n  \n \n \n \n\nA/czz‘ara/ AJa/ z‘o 4 7\n\n- C++ Ear C  ‘   \n\nA/az‘ara/ May z‘o I \nBa//d MC/33:5 “‘ rC++ EQEC ’E\";T:.%;';\n\n  \n \n  \n\n/\\/dZZ(ra/  Z(o . \n\nL C type extension:\n\no In C you can “add “ a type using struct.\n\n \n\no In C++ struct is different ~ struct is a named scope that\ncan include functions (methods) and have different\nlayers of opacity (data hiding). While C++ retains struct it\nhas the new keyword class.\n\n0 Class is almost equivalent to struct — but with different\ndata hiding defaults.\n\n<4-’\\u~:'l'  \n€‘l\"-/K47 E1. \"'   g\n/‘\n\n\"\\.P¢.4_,\\ rC++ §@E'C  33%!‘-.\n\nA/az‘arc2/ aiczy zo  »\n\nL C type extension:\n\n. In C you can “add “ a type using struct.\n\n \n\no In C++ struct is different ~ struct is a named scope that\ncan include functions (methods) and have different\nlayers of opacity (data hiding). While C++ retains struct it\nhas the new keyword class.\n\n0 Class is almost equivalent to struct — but with different\n.; data hiding defaults.\n\n<4-’\\u:'l'  \n9'\"-/i~cT Z. \"'   %\n\n/sLn~elu¢lz 5l~.cl-1' PM V\n\n' C++ fez-Q  :23:\n\nA/czz‘arc2/ May io W \n\nL rC++ f6E'C :\"‘g’:.3f'_\":‘;2 ‘v- ’==\n\n  \n \n  \n\nA/az‘ara/ Aday z‘o ‘ \n\nL A/az‘ara/ Aday z‘o “ \n\n   \n\nL 7\n\nC++ f6E°C  \n\nA/az‘ara/ Aiay z‘o “ \n\nmm\n\nL C type extension:\n\no In C you can “add “ a type using struct.\n\n \n\no In C++ struct is different ~ struct is a named scope that\ncan include functions (methods) and have different\nlayers of opacity (data hiding). While C++ retains struct it\nhas the new keyword class.\n\na Class is almost equivalent to struct — but with different\n. data hiding defaults.\n\n:4-’\\u~:'i'  \n€‘l’l/KCT Z. \"'   g\n\n/same 4» fl: slm-I-1' PM rC++ Em C    - C type point as struct:\n\no typedef struct point{doubIe x, y;} point;\n\na void add_points(point* p1, point* p2, point‘ sum)(\no sum->x = p1->x + p2->x;\n\n- sum—>y = P1->y + D2->y;\n\n- }\n\nO\n\n9('L\\S1\n\nsnnmmtnnrz A/az‘ara/ May 50 “ \nBa//d /4)/‘C/\\98Z5 .\n\nL rC++ EQEC i\"\";“:;:_§-_»‘;“T'.  ii\n\nA/az‘ara/ May 50 ‘ \n\nL A/az‘ara/ May io \nBa//d A)/5/3335 '\n\n   \n\nL C type point as struct:\nI\n\nn.z\n\n- typedef structﬂydouble x, y;) point;\nvoid add_points(point“ p1, point‘ p2, point‘ sum){\nsum->x = p1->x + p2->x;\nsum->y = p1->y + P2->y:\n}\n\nD('L\\S\\\n\n3HNHI”I:I1Ii‘z 7\n\nC++ far C  wan \n\nA/az‘ara/ ;Jca/ Zo  .\n\nL C type point as struct:\nI\n\nn.z\n\n- typedef structg>i_n§double x, y;) point;\n\na void add_points(point\" p1, point‘ p2, point’ sum){\no sum->x = p1->x + gg->x;\no sum.>y = p1.>y + 9&>y;\n\nA\nO\nO\n\n}\n\n-o(L\\S\\\n\" ('1)ﬂ\n\n‘ ($73 A/czz‘ara/ May z‘o M \n\n   \n\nL 7\n\nC++ f63'C ’3\":’:3f'.“a‘\";a \n\nA/az‘ara/ May z‘o  V\nB40‘/J /1)/‘C/5eZ(5 ’ H\n\nL rC++ €63‘ C $51.2;-_=   %%\n\n/\\/aZZ(rd/  io “ \n\nL A/az‘ara/ zday Zo A \n\n   \n\nL El-+ fer€  :22 \n\n  \n \n  \n\n/\\/dfé(ra/  Zb  _ .\n\nL C struct:\n\no Struct has fields — data members\n\n0 File scope functions manipulate the struct\nusing pointer operations\n\nSHNIH lllilll 7\n\nC++ far Q   \n\nA/aZ‘4zra/ Aiay Zo L \n34;/4 mg/38:5 \"~\n\nL C struct:\n\no Struct has fields — data members\n\no File scope functions manipulate the struct\nusing pointer operations\n\nSHNIH lllilll UNIVERSITY OF CALIFORNIA\n\n   \n\n©2013 Regents of the University of California"}, {"path": "E:/Coursera/c-plus-plus-b/01_stl-and-the-game-of-hex/03_introduction-to-the-stl-library/02_1-2-new-in-c-11.mp4", "id": 761, "text": " Module 1.2\nNew in C++ 11 enum class 7\n\nC++ €633 \n\nNew in the C++ 1 1\nStandard 7\n\nC++ f6E‘€   'ij%‘:“:\n\n  \n\nNew in the C++ 1 1\nStandard\n\n \n\nL‘ Example: enum class\n\na enum class Color{RED, GREEN, BLUE); Q\n. enum class Stop|ight{RED, YELLOW, GREEN);\n\no With simple enums these shared enumerators would be\nambiguous\n\no In C++11 they constitute separate type Stop|ight::RED is\ndifferent in type from Co|or::RED; both can be used in the same\nscope.\n\nA Si|Nii|%li|iII”l C++ for C Programmers, ,5 4’\n\nPart B: Overview\nModule 1.1 enum class enumerator type\n\na The underlying type of enum classes is by\ndefault an int; this can be specified to be a\ndifferent integral type . / O / I / 1\n\n. enum class Colo RED, BLUE, GREEN);\n\no enum class Identiﬁer: IntgraI_Type( enumerator list};\n\nLu, :<a1a~/L /47. '0'!-+ fGE'€ El-+ fG1‘C   §.2.§¥'”%:\"- 7\n\nC++ Em-C enum class enumerator type\n\na The underlying type of enum classes is by\ndefault an int; this can be specified to be a\ndifferent integral type . / O / I / 2\n\n. enum class Colo RED, BLUE, GREEN);\n\no enum class Identiﬁer: IntgraI_Type( enumerator list};\nT\n\nzfowl M  \n13LMi—-3 SHNll||}ll|ll V\n\n' C++ f@E'C Quiz: Define an enumerator\n\no Define a enum class that models three logical\nvalues — yes, no, maybe- whose underlying\ntype is unsigned and where yes>maybe>no\n\no —-— also yes worth 2 maybe’s\n\nSHNHI lllilll Answers:\n\na enum class WierdLogic :unsigned{\n‘J 4-\n. NO, // o \\\n0 MAYBE = 5,\n0 YES = 10\n\no }; // a yes is worth 2 maybe‘s\n\nSHNHI IIHIII rC++ EQEC UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"}, {"path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/03_basics-of-inheritance/01_2-3-basics-of-inheritance.mp4", "id": 778, "text": " Va\n\n \n\nBasics of\nInheritance\n\n \n\n ‘ ’  ml Calwomia Santa Basics of Inheritance\n\no Inheritance is a Reuse Mechanism\n\no Inheritance uses pure po|ymorphism(to be\ndeﬁned)\n\na Inheritance imposes a type structure\n\no OOP = Inheritance\n\nsnmn lllilll V\n\n' C++ EQEC 2\"*;T::s§>;\n\nBasics of\nInheritance Basics of\nInheritance rC++ f@E'C E”: :3; \n\nBasics of\nInheritance Basics of\nInheritance rC++ f@E'C E”: :3; \n\nBasics of\nInheritance Basics of\nInheritance rC++ f®E'C E”: ii \n\nBasics of\nInheritance rC++ fez-C    \n\nBasics of\nInheritance Inheritance\n\n; Basics of Inheritance\n\no Inheritance is a Reuse Mechanism\n\no Inheritance uses pure po|ymorphism(to be\ndeﬁned)\n\no Inheritance imposes a type structure\n\no OOP = Inheritance\n\nSHNIII IIIIIII 7\n\nC++ fﬁﬁ‘ C :'3‘:\"{.».”‘;\"“a. ‘   \n\nBasics of\nInheritance Basics of Inheritance\n\no Inheritance is a Reuse Mechanism\n\no Inheritance uses pure po|ymorphism(to be\ndeﬁned)\n\nn Inheritance imposes a type structure\n\no OOP = Inheritance\n\nSHNIH lililll rC++ f®E' C §\"\";‘:._.sT \n\nBasics of\nInheritance Basics of\nInheritance Basics of\nInheritance\n\n2 In or u M\n\n,_  5 mn r:m1%z The OOP Design Methodology\n\n1. Decide on an appropriate set of types\n2. Design in their relatedness\n\n3. Use inheritance to share code\namong classes\n\n  \n\nL\n\n  \n  \n\nSlllilll IIHIII r(3++ §®E'C :';‘i‘éss*‘;\"‘- \"‘*“*\n\nBasics of\nInheritance Basics of\nInheritance Inheritance Basics of\nInheritance A Derived Class\n\n0 Class derived from an existing class\noclass classname:(pub|ic|protected|privale)opt\n\nbasename \"’\nT \\ .\n{ &Q/\\/\\/V19 <{’\\4’M\nmember declarations\n};\n\n. Keywords public, protected, and private used to\nspecify how base class members are accessible to\n\n  SHN lH lllllll rC++ §0E'C   \"\n\nBasics of\nInheritance\n\nK; A Derived Class\n\no Class derived from an existing class\noclass o/assname:(public|protected]private)0pt\n\nbasename \"'\n._i. K .\n{ (Q0/ux/V1.49 (\\.o'>~\\\nmember declarations\n};\n\n0 Keywords public, protected, and prwate used to\nspecify how base class members are accessible to\n\nW  SHNIH IIHIIZ Va\n\n++ EQEC  ‘ .2 ‘I L‘:\n\nBasics of\nInheritance '5\n\n++ f®E'C  ‘ 1  J:\n\n \n\nBasics of\nInheritance Public Inheritance = subtyping\no 90% rule — almost always use public\ninheritance\n\no Then base class is the type of the whole\nhierarchy\n\na Private inheritance is LIKEA relationship-not\na subtype but inherits code/members turning\n\nthem private\nSHNHI lililll 'C++ EEEC i\"\";xf..a«  \n\nBasics of\nInheritance\n\n \n\ng Public Inheritance = subtyping\no 90% rule — almost always use public\ninheritance\n\no Then base class is the type of the whole\nhierarchy\n\na Private inheritance is LIKEA relationship-not\na subtype but inherits code/members turning\n\nthem private\nSHNHI Illilll Basics of\nInheritance point and duo\n\n- class duo(\n\na public:\n\nduo():first(0.0),second(0.0)(}\n\nvoid set_ﬁrst(doub|e d){firsi = 43;)\n\nvoid set_second(doub|e d)(second = d;}\n\ndouble get_ﬁrst(){return ﬁrst)\n\ndouble get_second()(return second;)\n\na protected: // intermediate data hiding —nb need forthis exampie\n\n. double ﬁrsi, second;\n\n0);\n\nSHNIH l‘IHll%[ r i  1\n\nC++ EEEC  \n\n  \n\nBasics of\nInheritance\n\n \n\nB point and duo\n\n \n\nclass duo{\n\n7 1:m5>1<)t«.(c{49S T)\n\n. duo():first(0.0),second(0.0)(}\n\na void set_ﬁrst(doubIe d){first = d;)\n\no void set_second(doub|e d)(second = d;)\n. ﬁﬁﬁle get_ﬁrst(){return ﬁrst)\n\n.\n\nIe get_second()(return seoond;}\n/ intermediate data hiding —nb need forthis example\n\n9 rlftéz ‘*1\n” 02?“ v“«‘»c°3«7+.‘»+m+H Izmlz rC'++ f@E°C E\"z  ‘ : \n\n  \n\nBasics of\nInheritance r¢++ f@E°C E\"z  \n\nBasics of\nInheritance point and duo\n\n \n\nclass duo{\n\n7 1¢mﬂJ<.(c{49S T)\n\nduo():first(0.0),second(0.0)(}\n\no void set__ﬁrst(doub|e d){first = d;)\n\no void set_second(doub|e d)(second = d;}\n0 ﬁﬁﬁle get_ﬁrst(){return ﬁrst;)\n\n. Ie get_second()(return second;}\n\n/ intermediate data hiding —nb need forthis example\n\n9 rzrtez 461\n'7 0;?“ »‘f2L’fTs++N+H1:IHI1 7\n\nC++ fez-C  \n\nBasics of\nInheritance What did the program print?\n\npoint q;\n\nq.set_ﬁrst(3.0); q.set_second(4.0);\n\ncout << q.get_ﬁrst() <<  \" << q‘get_second() << endl;\ncout << q.length() << endl;\n\nmy  .w.vw\n\n7 SHNIH |}Hlll Answer:\n\n03,4\n05\n\no Remember pythagoras UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"}, {"path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/03_basics-of-inheritance/04_2-6-c-feature-final.mp4", "id": 781, "text": " Module 2.6\n\nC++ Feature:'fina1‘ C++11 Feature: final\n\no What if you do not want a class to ever be a base class\nC++11 allows you to make if ﬁnal\n\nclass point3d finalzpublic point (//no further inheritance\n\npublic:\npoint3d():point(),z(0.D)()\ndouble length()( return sqrt(ﬁrst‘ﬁrst + second‘second 4» z\"z);)//virtual\nvoid set_z(doub|e d)(z = d;}\n\nprivate:\ndouble 2:\n\n}:\n\nuooouuoo\n\n- //nota bene: ﬁnal is a contextual keyword and can be an identiﬁer\n\n” SHVNLHI lilllll 'E3++ f@3'€   = *»= C++11 Feature: final\n\no What if you do not wanl a class to ever be a base class\nC++11 allows you to make if ﬁnal\n\nclassglfad ﬂnalzpublic point (//no further inheritance\npublic:\npoinl3d():poin!(),z(0.D)(}\ndouble lenglh()( return sqrt(ﬂrst‘ﬂrst + second'second + z\"z);)//virtual\nvoid sel_z(doub|e d)(z = d;)\nprivate:\ndouble 2:\n):\n\noooooouo\n\n- //nota bene: ﬁnal is a contextual keyword and can be an identiﬁer UNIVERSITY OF CALIFORNIA\n\nNT Hlll\n\n©2016 Regents of the University of California"}, {"path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/03_basics-of-inheritance/05_2-7-topics-on-inheritance.mp4", "id": 782, "text": " V\n\n’C++forCP1-ogranmmers \nModule 2.7 \\§\\*/‘k\n\nTopics on Inheritance\n\nK }  ‘I  ‘\n‘Wm. 9 -  ? e v\nV Z  S\\ “i Topics on\nInheritance\n\nx\n‘ ' ~ in SEh(m\\ofEngme '\nLL 33\"“ Topics on\nInheritance Topics on Inheritance\n\n. Subtyping and Code Reuse\n\n. Typing Conversions and Visibility\n\n- Abstract Base Classes\n\n- Multiple Inheritance\n\n0 Inheritance and Design\n\n0 Detailed C++ Considerations\n\n- New C++11 features,eg‘ ﬁnal, defau|t,de|ete UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"}, {"path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/05_inheritance-and-derived-classes/01_2-10-the-inheritance-mechanism.mp4", "id": 785, "text": " Module 2.10\nThe Inheritance Mechanism rC++ fag-C  \n\n7//7e .37/var/z‘ance\n/V/ed/7a/7/5/>7\n\n \n\nI.‘ lnher\n\nﬂance\n\nmwmm 777e .737/ver/z‘ance\n/Wed /7Q/7/.5/)7\n\n \n\nLT /Wed /IQ/7/.5/>7\n\nLT rC++ f@E‘€ E”:  \n\n777a J37/7er/Z‘dnCe\n/V/ea/Ian/5/>7 lnheritanc\n\nam nﬁ My /Wed/IQ/7/l5/>7\n\nLj 'C'++ Em-C   \n\n777a Lv/var/z‘c2nce\n/V/ed /7Q/7/5/>7\n\n  \n\n \n\nLT /W36/7Q/7/5/>7\n\nLT rC++ f6E‘C §'*;:':i:j'?  j=.‘:\n\n777a In/var/icznce\n/Wed/7Q/7/.5/)7\n\n \n\nLT rC++ EQEC   1% ,1‘:\n77742 J37/78f/Z(CZI7C.e | C++ EQEC   \n\n777a Z37/7er/Z‘c2/ﬁe\nMed//an/5M\n\n  \n\nLL 'C++ EQEC   1% ,1‘:\n77742 J37/78f/Z(CZI7C.e /Wed/id/7/5/>7\n\nLT .. rC++ €633 ?§z'i..ef:'§’’‘a.' : .:;-1\n\n777a In/var/z‘ance\n/V/ed /id/7/5/>7\n\n \n\nLj V\n\n' C++ f@E'C \n7773 Z37/78f/‘Z(QI7Ce 777a In/ver/z‘ance\n/‘43C/7Q/7/:5/>7 777a J37/7er/Z‘c2/vce\n\n  \n\n/Wed/Id/7/.5/>7 rC++ E61‘ C     ‘~\n\n777a ./\"J7/ver/z‘anc.e\nMBC /IQ/7/'5/>7\n\n  \n\nLT Li 777a D7/7er/‘Z(QI7Ce ‘’ \n/Wed /id/7/.5/>7 '\n\n \n\nLl /Wed/7Q/7/.5/>7\n\nLi K-+ §61‘C  \n\n777a D7/7en‘z‘c2/ace\n/\"/ed/7a/7/5/>7\n\n   \n\nJ IL /Wed/id/7/.5/>7\n\nLj g++ E93-C \n\n777a L7/ver/ziznce\nMac/Ian/5/>7\n\n \n\nLT /Wed/IQ/7/l5/>7\n\nLT El-+ f6E‘C  2.3:‘;\n\n77742 In/ver/z‘ance\n/V/ea/zan/5m\n\n  \n \n \n\nJ The Inheritance Mechanism\n\n- Means of deriving new class from existing classes,\ncalled base classes\n\n. Reuses existing code eliminating tedious,\nerror—prone task of developing new code 777a Z37/7er/Z62/ace\n\n  \n\nL:A L V. EFF §(BE'€ :”;\"..i=_'.—'_?\n\n777a J37/var/Zcznce\n/Wed/IQ/7/.5/>7 E++ fag-C   \n\n77742 Z37/7er/Zlahce 1’  \n/V/ea/zan/5m V \n\nL. 777a D2/ver/z‘ance\n\n  \n\nL /Wed/IQ/7/5/>7\n\nLT rC++§’@3-C   \n\n777a D2/var/z‘c2nae  ‘A\n/Wed/Id/7/‘5/>7  \"\n\n \n\nLT The Inheritance Mechanism\n\n- Means of deriving new class from existing classes,\ncalled base classes\n\n0 Reuses existing code eliminating tedious,\nerror—prone task of developing new code\n\n. Derived class developed from base by adding or\naltering code 7\n\n777a Z37/7er/Z‘c2nCe ‘  I 7\n\nC++ far Q \n\n \n\n:o:;ga;“’;z1: ?  ;w ©EF‘~ ‘\nQ 2 5- 7\n\n7773 ]37/7ehZ(C2nCe (' \n\n/V/ed/7d/7/5/>7 ' 7\n\n777a J37/7er/Z‘c2nCe K ,5 Q++ f®E'€ i\":’:;.:-  \n\n \n\n777a J37/7er/Z‘c2/vce‘ Q\n/Wed /7Q/7/.5/>7\n\n     \n\n«a\n\n\n\nit ?\n\nV 777a Lv/zer/z‘ance ‘ rC++ fayﬂ  \n\n  \n \n  \n\n777a J37/zer/z‘ance \"  (5 ‘V\n/V/ed/Ia/7/5/)7 777a Lv/zer/z‘ance ‘ I, ’C++ fayﬂ  \n\n  \n \n  \n\n777a J37/zer/z‘ance\n/V/ed/Ia/7/5/)7 7773 L7/zer/‘ﬁance //’ 7\n\nC++ E63’ C 2””;\n\n \n\n 23: a ii 1%?\n\n. v-3: 4 7\n7773 L7/ler/{ﬁnds \n/V/ed/IQ/7/5/>7 777e J37/7er/Z‘a/vce  u rC++ EQEC ”\":‘:T*'* \n\n \n\n.  4:; \n77762 J37/7er/ﬁance \n/V/ed/7a/7/5/>7 ’ 777e J37/7er/Z‘a/vce  i 777a J37/var/z‘ance\n/V/ed /ran/5/>7\n\n \n\nLT LT rC++ EQEC E‘; \n\n777a I/2/7er/Z‘ance\n/W8C /IQ/7/.5/>7\n\n  \n \n\nLT rC++ EQEC  \n\n777a In/var/z‘ance\nMBC /IQ/7/.5/>7\n\n  \n\nLT /Wed/IQ/7/.5/>7\n\nLT The Inheritance Mechanism\n\n- Means of deriving new class from existing classes,\ncalled base classes\n\n. Reuses existing code eliminating tedious,\nerror—prone task of developing new code\n\n. Derived class developed from base by adding or\naltering code\n\n0 Hierarchy of related types created that share code &\ninterface Va\n\n++ f6E'C §';‘;*:.%j'9‘z‘;;_a2e:‘@:\n\n7773 In/ver/z‘ance fl  \n/\"/ed/Ia/7/5/>7 I é\n\nLT 7773 J37/7<‘.’h‘Z(QI7C<2 : /Wed/IQ/7/.5/>7\n\nLT rC++ f6E‘C \n\n77742 J37/7er/Zla/7Ce r I.\n/Wed/Id/7/5/>7\n\n   \n\nLT A base class: student\n\n. class siudent(\n\na public:\n\no enum year ( fresh, soph, junior, senior, grad);\no student(char‘ nm, int id, double g, year X);\n\no void print() const; /I??? What does this mean\na protected:\n\n0 int student_id;\n\n0 double gpa;\n\no year y;\n\n0 char name[30]; 7'\n\nC++ EQE‘ C \"H <.%§'—=‘;\"’§:_ ‘ E  \n\n \n\n777e L7/var/ztznce \n/Wed/7Q/7/'5/>7 ‘V V- 7\n\nC++ fag-C   \n777a J37/78f/Zlcihce rC++ EQEC  \n\n777e Z37/7er/Z‘c2/ace\n/Wed /IQ/7/.5/)7\n\n \n\nLT 7”/7e L7/var/zkznce  \" Va\n\n++ f@E'C '2 :.::_<-_>\n\n777a Z37/7er/Z‘c2/vce ‘  \n/V/ed/Ian/5/>7 ’ ‘ 5’\n\n \n\nLT 777a In/7er/Z‘c2nCe i  ‘A /Wed/IQ/7/‘5/>7\n\nLT 777a Lv/var/Zcznce ' 70\n\n++ f®E‘€ ‘*5 2:33 \n\n777a J37/7er/Z‘c2/vce\n/‘4eC/IQ/7/A5/)7\n\n \n\nLT A base class: student\n\n. class student(\n\na public:\n\no enum year ( fresh, soph, junior, senior, grad);\no student(char‘ nm, int id, double g, year X);\n\no void print() const; /I?’?? What does this mean\n. protected:\n\n0 int student_id;\n\n0 double gpa;\n\no year y;\n\n0 char name[30]; /Wed/Id/7/‘5/>7\n\nLj rC++ fer C \n\n \n\n:o2;;g;:a5   ;= er\n\n777a Dv/var/z‘c2nce\n/W8C /IQ/7/5/>7\n\npt \n\n‘V /‘4eC/IQ/7/.5/>7\n\nLT L %++ fag-C \n\n777a D2/7er/Z‘anCe\n/\"/ed/IQ/7/5/>7\n\n  \n \n\nLL 777a Z’/2/ver/ﬁance  ' rC++ €63‘ C §';‘;’:3:'>  ‘ U: ';=‘:\n\n777a Dv/var/z‘c2nc:.e ‘I K ‘\n/V/ed/7a/7/5/)7\n\n  \n  \n  \n\nL 77762 J37/7en‘z‘anc:,e '  %. 'C'++ f®E'C 3\"; <f..3ff \n\n777a In/var/z‘ance ‘\n/Wed/IQ/7/5/>7 V\n\nC\n\n \n\n7778 J37/7er/ﬁance :1 I '5\n\n++ EQEC 3\"‘:  '\n\n7773 I37/7er/Z‘d/7C \nMed/7an/5/>7  = 7”/7e L7/venzancé‘ 7; L\nMed/7an/5/>7 ' /Wed/IQ/7/5/>7\n\nLT E++ f6E'C ”:':3;f‘;\"’§a '?*\"%=-\n\n777a In/var/z‘c2nce ‘ I\n/V/ed /Ia/7/5/>7 A base class: student\n\n. class siudent(\n\na public:\n\no enum year ( fresh, soph, junior, senior, grad);\no student(char‘ nm, int id, double g, year X);\n\no void print() const; /I?’?? What does this mean\n. protected:\n\n0 int student_id;\n\n0 double gpa;\n\no year y;\n\n0 char name[30]; Va\n\n++ fa:-C   \n\n  \n\n, ‘_ :K‘,;':‘'L '\n\n7773 I/2/var/z‘ance 9‘?\n/‘4¢SChQ/7/15/)7\n\n \n\nLT A base class: student\n\na class student(\na public:\n\no enum year { fresh, soph, 'unior senior, grad );\nCﬁh student(char\" nmilnt ia double g, year X);\n\no void rint ??'? What does this mean\n.\n\nint student_id;\n0 double gpa;\n\n- year y; >q*\"'\\S/‘\n\n0 char name[30];\n\n0): rC++ f®E'C '73:  L‘:\n\n7”/7e In/var/z‘c2nc:e\n/V/ed/7Q/7/5/>7\n\n \n\nLT _ Ky. A base class: student\n\n. KMAAIIC :\n,;*:;7:*“°e\"'< Q0/‘<1{u1n9 .°3.T?i\n\no enum year ( fresh, sophEiB:y:;?or,  \nC,ﬁ[7_ittJ'dent(char’ nmilnt ia double g, year X);\nvoid rint @ //';7ﬁWhat does this mean\n‘\\ \\_)-7\n\nint student_id;\ndouble gpa;\nyear y;\n\nchar name[30];\n\n \n \n  \n\n \n\n); 7\n\nC++ E93‘ C 3”;\n\n \n\n ? 2: ;w 331% \n\n“~’..\"”~.*’\n\n777a J37/78%/‘Z(C2I7Ce \n/V/ed /7Q/7/5/>7 I ’ \"\n\n \n\n_ 777e .737/7er/Z‘c2nCe 1:  ‘ rC++ EEEC  \n\n777a Dv/ver/ziznce ‘ \n/V/ed/Ia/7/5/>7 M\n\n   \n\nkj . L :4- A base class: student\n\n. I< :\n.  ¢o~gg;.«; —.f1<2.H\"\n\no enum year ( fresh, sophmior senior‘  \nCﬁ[7_ident(char’ nmilnt ia double g, year X);\nvoid rint @ //‘zﬁwhat does this mean\n‘\\ 9-7\n\nint student_id;\ndouble gpa;\nyear y;\n\nchar name[30];\n\n \n \n  \n\n \n\n): Q\n\nLIIZI\n\na void print() const; ll’??? What does this mean Answers:\n\na void print()const; /7 '7\"U/\"\"!>U\\\n\no Const here means the this pointer —points at an\ninstance that cannot be mutated (changed)\n\n@ » vwc =\no It is useiip he compiler for const correctness UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"}, {"path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/05_inheritance-and-derived-classes/02_2-11-a-derived-class-grad-student.mp4", "id": 786, "text": " C++ fmC  \n\nModule 2.11 \\}K\nA Derived Class: ‘\n\n' grad_student 4 _>e/*/1/ga/ C/a55~'\ngran/_.5Z‘aa’enZ‘ A Derived Class: grad_student\n\na class grad_student : public student {//public ~ subtype\na public:\n\no enum support ( ta, ra, fellowship, other};\n0 grad_student(char* nm, in! id, double g,\no year x, support I, char* d, char‘ th);\n\na void print() const;\n\na protected:\n\no support 5;\n\na char dept[10];\n\no char thesis[80];\n\nn ); rC++ Ear C \n\n \n\n  ?§ :3. emf‘-4 I\n(’ 9  “\n\n4 Den}/ea’ C/Q55‘ ‘ \ngran/_.5Z‘ao’enf 1 %\n\n   \n\nLT A Derived Class: grad_student\n\no class grad_student : public student //public ~ subtyp *\n\na public:\no enum support ( ta, ra, fellowship, other};\na grad_student(char‘ nm, int id, double g,\no year x, support t, char’ d, char‘ th);\n\n. void rint()const; \nD ‘Z’ (\n\n0 protected: wk\nchar dept[10];\nsupport 5: /  \nthesis[80]; /\n\na char\n\n_); 102 (2¢M/Lt. Va\n\n§Z‘z,{o/e/755 (3:\nGrczdade §Z‘ao’enZ‘5\n\n++ EQEC i\"\"\": i.}_\"?é\"22 7\n\nC++ EQEC i\"”: i.}_\"?é\"22 \n\n§Z‘z,{o/e/755 (3:\nGrczdade §Z‘ao’enZ‘5 A Derived Class: grad_student\n\no class grad_student : public student //public ~ subtyp *\n\na public:\n\n. GM 1»,\no enum support ( ta, ra, fellowship, other};\n0 grad_student(char‘ nm, int id, double g,\n\no year x, support t, char’ d, char‘ th);\n\n. void rlnt()const; \nD ‘Z’ (\n\n0 protected: ﬂy\nchar dept[10];\nsupport 5: z  \nthesis[80]; /\n\na char\n\n_); 107., (?,.,¢.x; '5\n\n++ fey C i\"‘;\":.:\"=  ‘ \n\n4 Derived C/Q55-' \n3/~aaL.5Z‘é{a/e/2Z( —\n\n \n\n_ /4 Der/1/ea’ C/a55-‘\ngran/_.5z‘¢za’enf /4 Der/s/go’ C/a55-'  \ngran/_.5Z‘aa’e/of ~ I C++ f6E'C 33”:\n\n4 Der/vga’ C/a55-‘\ngran/_.5Z‘¢{o/enf\n\n \n\n(, 4“\n\n V Va\n\n4 Derived C/Q55-’ '« \n3/~aoL.5Z‘é{a/e/7'5 ’V .«\n\n++ EQEC §\"’z’::.%§';';\":z_ % Eire 'C'++ EQES i\"‘;—::§;  1-.\n\n4 .>e/‘/.\\/ea/ C/Q55-' ‘  >\ngran/_.5Z‘ao’enZ‘ “ . 7\n\nC++ EQEC §\"*‘;k::\"«°;T;z \n\n/4 Der/vga’ C/ass\"\ngran/_.5Z‘ao’enZ‘\n\n_\\ 7\n\nC++ €035 §';'§\"i}j!*é‘Za \n\n4 Derived C/Q55-’\ngran/_‘5Z‘ac/enf\n\n \n\nB A Derived Class: grad_student\n\n- class grad_student : public student //public - subtyp *\n\na public:\n\n. G’; ‘by\nc enum support ( ta, ra, fellowship, other};\na grad_student(char‘ nm, in! id, double g,\n\no year x, support t, char‘ d, char‘ th);\n\na void rint()const; \nP \n\n0 protected: ﬂy\nchar dept[10];\nsupport 5; z  \nthesis[80]; /\n\na char\n\n_); IDZ MAL rC++ €61‘ C 3\"\";  i4  *« em  ‘\n\nr L ‘.\n/4 ﬁer/1/ea’ C/Q55-‘  V‘\n‘gran/,.5Z‘¢(a/enz‘ ' ~'!\n\n \n\n     \n \n \n\nL 7\n\nC++ fag-C   \n\n/4 Der/‘wed C/a55-‘\ngran/_.5Z‘ao’enf\n\n \n\n_. lnheriting from the Base Class\n\n0 Derived class is modiﬁcation of base class that\ninherits public and protected members of base\nclass 7\n\nC++ fay C    \n\n5Z‘¢{c/e/7f5 (3: C  I\nGraduate §z‘aa’enZ5 §Z‘ao/e/766 C3: \\  .\n6rao’ac<Z‘e Siac/enis \" V\n\nV\n\n \n\n' C++ f@E'C 1”‘: 203;.-§:\"z1iia2::v2 -V\nSz‘ao/enZ5 & \n\nGraduate Sig;/enis\n\n  \n\nLT El-+ fa:-C   ‘\n5Z‘ac/enZ‘5 6: “ 7‘\n\nGraa/aside SZ‘aa’enZ‘5 lnheriting from the Base Class\n\n. Derived class is modiﬁcation of base class that\ninherits public and protected members of base\nclass\n\n. In grad_student, student members are inherited rC++ f@E'€ :'};'i..§)\";\"Za \n\n§Z‘ac/e/755 6:\nGradactée Sz‘aa’enZ‘5 Va\n\nSzizo/ends 6: 7  I\nGradactée Sz‘ac/enZ‘5 A\n\n++ E93-Q   \n\n  \n  \n\n_ rC++ f@E' C §\"*:\":..:‘-'_? 5;: ‘ 1:\n\n5Z‘A{c/<2/735 & \nGradactée Sz‘aa’enZ‘5 '. % ’C++ EGEC  r:\n\nsaga/enzs & ‘*1 42% ‘T\n6/‘Q0/é{6<Z‘e Sig:/enZ‘5 Sz‘aa/22765 6: ~ \nGraduate Sig:/enZ‘5 Graduate Sig:/enZ‘5 Va\n\n++ EQEC 3“:'<:tf:\"'. ‘N v‘-\n\n \n\n«§Z‘4{a/enfé (3: V  .\nGraduate Sig:/enZ‘5 ‘ . §Z‘aa/ends 6: ('3 \n6/‘do/é{6<Z‘e Sig:/enZ‘5 7\"’ Va\n\n++ EQEC :'*:\"<:«_ . 2\n\n \n\n5Z‘ao/e/765 & 6‘  %\nGraduate Sig:/enZ‘5 ‘ “V & I 3\n6/‘do/é{6<Z‘e Sig:/enZ‘5 \n\n  \n\n_ 7\n\nC++ f®E' C ';\";\"~:..%j'—=  ‘W i *\n\nSZ‘ac/eni5 6: \nGraduate SZ‘aa’enZ‘5 : I7\n\n  \n  \n\n_ 5Z‘4(c/e/755 (3:  7- K\nGradactée Sz‘aa’enz‘5 rC++ E93-C    \n\n5Z‘ac/e/755 &\nGraduate Sz‘ac/enZ‘5\n\n   \n \n \n\nLT lnheriting from the Base Class\n\n. Derived class is modiﬁcation of base class that\ninherits public and protected members of base\nclass\n\n. ln gradgtudent, student members are inherited\nn student_id gpa\nI name year\n\nsprint... 3-}1,_,4Q,,“;(' \n<(2\"“*R—9J*»4e-7§:; (v«MZ7()\n\n” ‘SW\nm lnnfbx Add new members in the Derived Class\n\no Derived class adds new members to existing class\nmembers\n\n. grad_student has three new data members and\nredefined member function\nI 5\nu dept\nn thesis\n\nprint() .. 7\n\nC++ f®E' C '‘‘‘a'\n\n§.z1:,4.:::: - —.;.\n\n\\ ‘  ‘'\n§Z‘4{c/enf5 & ‘M \nGradaaie kgf./,{o’enZ’(5 M - ,\n\n \n\n  \n\n_ 7'\n\nC++ f®E°C 2\": ;:§t=‘;”2z‘ \n\n§Z‘ac/endi (3: \n6/‘do/é{C<Z‘e 6z‘aa’enZ‘5 V .\n\n  \n\nLj Benefits of Inheritance\n\n. Code is reused\no grad_student uses tested code from student Va\n\n§Z‘z,(a/enié &\nGraduate SZ‘aa’enZ‘5\n\n  \n   \n\n++ E93‘ C §\"‘:‘::_=»‘z‘;;_ =  \n\n_ 7\n\nC++ E93‘ C E:\n\n \n\ni g: ii“: $E§ \n.3 *3 ;\n\nszaaenzs & ‘V \nGradaaﬂe SZ3/,(a’enZ(5 ‘ \"\n\n    \n\n_ 7\n\nC++ EQEC Z\"*:‘::_«=’;\";a_~:zz\";%%\n\nSzizo/enfé & C  '1\nGraduate Sfadenis A\n\n  \n\n_ 7\n\nC++ fer Q  ‘ \n\n§Z‘¢{o/e/715 (9:\nGraduate Sfadenis\n\n@E‘°§/ﬁx‘ ‘\n\n-32!» ,~\n\n \n\n    \n\n_ 7'\n\nC++ EQEC :.;;§‘i:}_\"_':'§\"§i_\"f“!\";'€T\n\nSzizo/«<2/715 (9:\nGraduate Sfaa’enZ‘5\n\n  \n  \n\n -\"\n\n’r$.; \n\n  \n\n_ '5\n\n++ fer C   \n\n  \n  \n\n§z‘ao/enié & \"5 \nGradacie SZ‘aa’enZ‘5 *\n\nLT Benefits of Inheritance\n\n. Code is reused\nc grad_student uses tested code from student\na Reflects relationship in problem domain\na Special grouping grad student outgr h of real world\nand treatment of this group pg u')u]'A.\\_A_\" 7\n\nC++ E93-C  \n\n/4 Der/vga’ C/ass\"\ngran/Méiac/enf 7\n\nC++ E63‘ C i\"‘g’::«?':\";a_ ‘ a \n\n \n      \n\n& ‘. ‘I\n\n\n/4 Der/1/ea’ C/a55~‘ ‘1 \ngran/_,5z‘ao’enf \" . x4 Der/vga’ C/a55-‘ 57 \ngran/_.5Z‘ao/e/of 5 70\n\n++ f®E‘C ”:‘:}j'>;\"2a ‘?*\"\"‘\n\n   \n  \n\nx4 Der/vga’ C/Q55-' -  ‘\ngran/,5Z‘ao/enz‘ M. r4 Der/1/ea’ C/a§5-’ (- \ngran/_.5Z‘ao/emf 4 Der/vga’ C/a55= ‘I ‘7  ‘\ngran/_.5Z‘ao/e/of rC++ f®E'€ '2  \n\n \n\n:4 Der/x/ea’ C/a55-' \n3/‘do/__.5Z(é{o/e/7Z( ‘\n\n \n\nLT '5\n\n++ €63‘ C §\"‘:~:.3}'% {:2 ‘ii’ ’= ‘\n\n  \n   \n\n4 Der/x/ea’ C/Q55-‘ \"/\"“ 5\n5raaL.5Z‘¢{c/enz‘ ‘ Va\n\n++ EQE C i\"“;\":..%j°‘;\"zz_ “ \n\n  \n     \n\n4 Der/vga’ C/a55-‘ '12  Q, \n\\9/‘ac/_#.\\5Zé{o/8/7% rC++ Ear C \n\n:o:;ga;“ 221 s  an eEf$,\n\n. ,‘.\n\n=2,€ '\n\n \n\n4 Der/vga’ C/a55-‘\ngran/M5640/eni\n\nI %++ EQEC '’‘g 23-‘ ‘£22. ‘ H \n\n  \n\n/4 Der/1/ea’ C/a55-‘ “ \ngran/_.5Z‘aa’enf « ’ 7\n\nC++ E91‘ C i”\"“:<:§'»‘:\"ga. ~  \n\n  \n  \n\n4 Der/wad C/Q55-' ‘  L\ngran/_.5Z‘¢{o’enf 7 Va\n\n4 ﬁer/vga’ C/Q55-'  {\n3/~aoL.5Z(é{o/e/7Z(\n\n++ E63‘ C i\"\";‘:}§'9 :12. “ rC++ €63‘ C i\"“;T:..%§° :12. “ \n\n/4 Der/vga’ C/ass: ‘IA /‘ ~\ngran/_.5Z‘ao’enf '2\n\n++ €33‘ C E”; 17:9?  ‘  V:\n\n \n \n  \n\n4 Der/vga’ C/Q55-' T \n3/‘ac/_#.5Z(é{o/e/7Z(\n\nL *?\n§};\\$§\nw kixw\n\\m\nB‘,\n\\/\n\\3§\nex\nt. rC++ §®E'C §\"‘;’:..:\" {:2 ‘?2‘;v‘:\n\n   \n  \n\n/4 Der/vga’ C/a55= ‘i  ‘.\n3rao/_,5Z‘ac/enf % \" 4 _De/*/V2a/ C/@555 { - rx\ngran/_.5Z‘ac/enf\n\n \n \n \n\nL 4 Der/veg’ C/ass‘ (‘  V\ngran/_.5Z‘ac/enf _ ‘é r(3++ far C 2”;\n\n \n\n/4 ﬁer/vga’ C/ass-‘\ngran/_.5Z‘aa/enz‘\n\n«:Oi=;i§§’E2!i;%ii;?‘:  I\n.; V-\n*9} '\n\n/ 1\n\n  \n\nLj Benefits of Inheritance\n\n0 Code is reused\n0 grad_student uses tested code from student\n- Reflects relationship in problem domain\n\na Special grouping grad student outgrowth of real world\nand treatment of this group\n\n- Polymorphic mechanisms allow client code to treat rC++ fez-C 13\"; :2:  is\n\n4 ﬁer/s/go’ C/Q55-' ‘J 3' \"3, ‘Z\ngraa/_.5Z‘¢zo’enZ . 4 ﬁer/s/go’ C/Q55-'\ngraa/_.5Z‘¢zo’enz‘\n\nLT rC++ ECEEC  <'...3_\"_‘;”§z_\"1*'r'?':\n\n4 Der/s/go’ C/ass‘\nﬂraa/_.5Z‘¢zo’enz‘\n\n \n\n \n\nLT 4 .>e/‘/‘\\/2a/ C/Q55’ ? \nﬂraa/_.5Z‘¢zo’enz‘ ' \n\n \n\nLj Benefits of Inheritance\n\n. Code is reused\no grad_student uses tested code from student\n3 Reflects relationship in problem domain\n\n- Special grouping grad student outgrowth of real world\nand treatment of this group\n\na Polymorphic mechanisms allow client code to treat\ninherited class as subtype of base class\n\na Simpliﬁes code, maintains subtype distinctions V: 4 ﬁer/1/ea’ C/a55-‘\n\n  \n\n3/‘Q0/__.5Z‘é{o/e/OZ‘ 7\n\nC++ fag-C '2   \n\n/4 bar/‘wed C/ass:\n3/‘Q0/_,.5fé{o/e/’)Z(\n\n   \n\n_ 4 Der/s/go’ C/Q55-'\ngran/_.5Z‘¢{a/enz‘\n\nLT Typing Conversions & Visibility\n\n. Publicly derived class is subtype of base\n\n- Variable of derived class treated as if it were base\nclass type\n\nc Pointer type pointer-to-base-class can point to\nobjects of derived class type\nc Subtle implicit conversions occur between base and\n\nderived type\n\n0 Difficult to follow what member is accessed if base and\n\nderived class overloaded same member name H\n\n_, —>s\\M~\\( \\ 7’p~’».»?l() 4 Der/vsa’ C/a55-'\n3/‘do/__.5Z(¢{de/OZ‘\n\nLT 7\n\nC++ €93‘ C :'3’a\"\n\n \n\nn.  --\"—’: \ne...s:5§‘§ 511i 4 533  V\n\n/4 Der/1/ea’ C/Q55\" C  I\n3/~c2aL.5i¢{denZ‘ ' ~\n\n   \n\n_ 4 Ear/vga’ C/Q55-'\ngran/_.5Z‘aa/enz‘ I C-I--I-' fﬁrg i  ;s)!\":’2a ‘?‘§'?‘\n\n4 Der/x/ea’ C/a55-'\n\\3/‘do/_#.\\5{é{c1/ehf\n\n  \n\nLl Typing Conversions & Visibility\n\n. Publicly derived class is subtype of base\n\no Variable of derived class treated as if it were base\nclass type\n\n0 Pointer type pointer-to-base-class can point to\nobjects of derived class type\n\nc Subtle implicit conversions occur between base and\nderived type\n\n- Difficult to foliow what member is accessed if base and\nderived class overloaded same member name It\n\n-, —>s\\Mv\\( \\ 7’Iu’u‘l() \"R1  UNIVERSITY OF CALIFORNIA\nsa ’\n% * *\n©2016 Regents of the University of California l"}, {"path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/05_inheritance-and-derived-classes/04_2-13-virtual-function-selection.mp4", "id": 788, "text": " Module 2.13\nVirtual Function\nSelection L//riaa/ FZZ/7C Z‘/on\nSe/ec Z‘/on\n\n \n\nL.‘ Va\n\nL//rz‘aa/ FZZIK Z‘/on\nSe/ec Z‘/on\n\n \n\n++ f®E'€ ’ﬁ’::.:_«>  \n\n \n\n_ rC++ f@E'€ 1\":   \n\nL//rz‘aa/ FZZMC Z‘/on\nSe/ec Z‘/on\n\nL.‘ Virtual Function Selection\n\n0 Typically base has virtual function and derived\nhave their versions of function 5 § am. 33%  N5‘. '\n\nrC++ €93-Q 2'2»\n 475» >\n\nL//riaa/ ﬂmci/on  ~\n‘Se/eCZ‘/on '\n\n \n\n   \n\n_ Va\n\nl//rZZ(a/ Fahd Z‘/on\n512/ ed?/on\n\n  \n  \n\n++ f®E'C 2'9‘; é..»§—=;“’:z_‘:=‘2:;‘-=\n\n_ 7\n\nC++ EQEC  ‘a  =-\n\nL//rz‘aa/ FL!/7C 5/on\nSe/ec Z‘/on\n\n_ Virtual Function Selection\n\n. Typically base has virtual function and derived\nhave their versions of function\n\nu Pointer to base class can point at either base or\nderived class objects\n\n0 Member function selected depends on class of\nobject being pointed at, not on pointer type rC++ EQEC   ‘\n\n(f\"~?.‘<\"r-“\n\n\\//rz‘aa/ Fang: z‘/on \nSe/3C Z7017 ' ‘\n\n \n\n \n\n_ rC++ fer C  —==\n\n\\//réaa/ Fahd Z‘/on\nSe/sac Z‘/on\n\n   \n\n_ Virtual Function Selection\n\n. Typically base has virtual function and derived\nhave their versions of function\n\n. Pointer to base class can point at either base or\nderived class objects\n\n0 Member function selected depends on class of\nobject being pointed at, not on pointer type\n\n0 In absence of derived type member, base class\nvirtual function used by default '5\n\n++ €93-C  \n\n\\//rZé(a/ FM/7C Z‘/on\nSe/ed 5/on\n\n \n\n_ Vc\n\n++ E63‘ C  ‘   \n\n1//rf aa/ Félhél Z‘/on\nSe/ac Z‘/on\n\n \n\nL.‘ Virtual & Overloaded Function Selection\n\n3 Overloaded member function is compile—time\nselected based on signature rC++ €93‘ C 3”: :a.:;:;;1;\":a1s @  2 arts  ‘\n. . ‘ <9 «-5. \n%/‘Zé(Q/ Fé}/7CZ‘/O/7 / /\n\nSe/ed K/on\n\n \n\n   \n\nL‘ V\n\n' C++ f6E'C 2”; :.:_--_=\n\nL//réad fund Z‘/on\nSe/ec Z‘/on\n\n_ V\n\nc++ f@3'C  \n\nL//rZaa/ 51/(:6/on\nSe/ec Z/on\n\nL‘ a 1: an 813%\n\nrC++ fer C  J ‘\n$1\n\nL//rz‘aa/ ﬂmczvon js . \nSe/scz‘/on 4. \n\n  \n\nL‘ 7\n\nC++ fag-C  — : \n\n\\//riaa/ Farr: 5/on\nSe/ed Z‘/on\n\n \n\n_ Virtual & Overloaded Function Selection\n\n. Overloaded member function is compile-time\nselected based on signature\n\n. It can have distinct return types rC++ far C      «\n\n\\//riaa/ fund Z/on\nSe/ed Z‘/on\n\n  \n\n_ Virtual & Overloaded Function Selection\n\no Overloaded member function is compi|e—time\nselected based on signature\n\nc It can have distinct return types\n\na Once declared virtual, this property is carried\nalong to all redeﬁnitions in derived classes\n\n- virtual modiﬁer not needed in derived functions 3! rC++ EQEC E\"? § 221:‘: \n' '2\n\n\\//rZ‘aa/ ﬂax: Z‘/on 3: 9 _.i \nSe/ed Z‘/on 1 “=5\n\n   \n\n_ Virtual Function Selection (2 of 2)\n\n(\nB b;\nB‘ pb = &b; /lpoint at a B object\nD f;\n\npb —> print_iO§ //call B::print_i()\n\npb = &f; //point at a D ob'ect\npb —> print_iQ‘, Z/call D::print_i() ) rC++ E61‘ C  :35‘;  ‘ % 2% L: \n\n\\//rz‘aa/ FL‘!/7CZ‘/on , \n.32/ed?/on 3 '~ Quiz:\n\n- What gets printed? Se/ed?/on\n\nj 'C++ fa:-C   \n\nL//rz‘aa/ F.//ma Z‘/on\nSe/ed Z‘/on 2:1 2  en; % em ﬂ; I\n\nL//rz‘aa/ ﬂmczﬂbn '3 '3 \\\n58/scab»\n9 rC++ f®E'C  :2;-; %*r;u\n\n\\//rz‘aa/ F//and Z‘/on\nSe/ed Z‘/on\n\nJ Quiz:\n\n. What gets printed? Answers: Comments on the virt program\n\n- Different print_i() executed\n\n- Dynamically selected on object pointed at\n\n. \"Object sent message print_i and selects its\ncorresponding version of method\"\n\n. Pointer‘s base type is not determining method\n(function) selection rC++ Em-C   \n\nL//rz‘aa/ €076 Z‘/on\nSe/ed Z‘/on\n\nJ Comments on the virt program\n\nDifferent print_i() executed\na Dynamically selected an object pointed at\n\n\"Object sent message print_i and selects its\ncorresponding version of method“\n\nPointer‘s base type is not determining method\n(function) selection\n\nDifferent class objects processed by different\nfunctions at run—time\n\nADTs, inheritance, and process of objects\ndynamically are essentials of OOP Wrz‘aa/ Fund z‘/on\n\n  \n\nSe/ea 3/on El-+ f61'C 2”;    ‘\n\nL//rz‘aa/ ﬂmazxon \" 91¢,‘\nSe/ecz‘/on I r‘ rC++ E91-C   \n\nL//rZ‘aa/ ﬂmcz‘/on 4 \ng§e/eCZ‘/.O/’I \"' \\//rZZ(a/ Fahd Z‘/on\nSe/ea Z‘/on\n\n \n\nL‘ ‘\n\nL//rz‘aa/ ﬂmczvon ‘i  x\nSe/ecz‘/on . , é\n\n   \n\nL‘ K//rz‘ 414/ F./,(naZ‘/‘on\nSe/ed Z/on\n\nLj rC++ §®E‘C  \n\nL//rz‘aa/ Fahd Z‘/on\n512/ ec Z‘/on Va\n\n++ E933 i\"“’a\":...w;”2;:2 ta\n\nL//rZ‘aa/ ﬂ{nCZ‘/0/7 .‘ \nSe/ed?/‘on  - r ‘ g _ 1\n\nC++ f®E'C ﬁ§'€}‘f 1:2 \n\nk//rz‘aa/ ﬂmczzvon 34$: ’\nSe/ecz‘/on ‘ Q\n\n \n\n   \n\nL‘ UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"}, {"path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/05_inheritance-and-derived-classes/05_2-14-confusion-with-overloading.mp4", "id": 789, "text": " C++ forCProgrammers \n\nModule 2.14  \\_\nConfusion with ‘ \" ' ‘ ‘\nOverloading 7\n\nC++ E93‘ C '‘‘‘a :.%§'?‘;\";z  \n\nCon/Z15 /on cu/Z/7\nOx/er/can///5 Confusion with Overloading\n\na Member function overloading and virtual functions\ncause mix-ups and confusion because overriding and\noverloading both are in play\n\nciass B ( /  _\n\npublic:\n\nN/inual foo(int); // \n\nvirtual foo(doub|e);\n\n Je,.s;».(.L3\n>: \\_, 64,. (2.5)\n\nclass D: Eublic B {\n\npublic:\n. . __ M\nMaw\"/_ , . 3-yu\\,4L... Con/‘M5/on cu/Z/I\n01/er/Odo///33 Con/Z45/on a2/Z/2\nOver/can//)5 Confusion with Overloading - 2\n\na int main()\n\n- {\n\nn D d;\n\n. B b, *pb = &d;\n\n. b.foo(9.5): //selects B::foo(doub|e);\n\n. d.foo(9.5); //selects D::foo(int);\n\no pb —> foo(9.5); //B::foo(doub|e);\n\n- >\n\n. Base class function B: :f00(int) overriden in derived\nclass\n\n- Base class function B::fo0(doub|e) hidden in derived\nclass Restrictions on Virtual Functions\n\n. Only non-static member functions virtual Con/‘H5/on a2/Zh\nOver/oao///5 rC++ §6E‘C  \n\nCon/Z15/on cu/Z/2\nOx/er/Odo///5 Restrictions on Virtual Functions\n\n. Only non-static member functions virtual\n\no Virtual characteristic is inherited\n- Derived class function automatically virtual virtual\n\nkeyword not needed\na Constructors cannot be virtual \" [&__\\;°“}\\\n’ $64 44/8 gtiiom \\\n\no Destructors can be virtual :.\n\nas lrellﬁlﬁ‘/51\\—ﬁ v/VIL/Q\n\nI UNIVERSITY OF CALIFORNIA\n\nN11\n\n©2016 Regents of the University of California"}, {"path": "E:/Coursera/c-plus-plus-b/03_hex-and-the-use-of-ai-and-c-move-semantics/02_class-constructors-and-the-move-constructor/02_3-2-some-further-constructors.mp4", "id": 791, "text": " '5\n\n++ fan-C ya\n\n \n\nSome Further\nConstructors C++ EQEC 2”: 2:1;  +:;.\n\n  \n\nSome Further\nConstructors\n\n‘H .M‘ ‘Ira Eéhl\n\nProfessor. aaslimschoou of Engine ’\nhi   UWSM omamomiasama\n. Some further constructors\n\n/~/um: - om -\n.. MM“ ‘L W‘.\nex llcit y_contaIner(T *b):my_contaIner()\n{\n\nI\nO\n. for(inti= 0; i <n ; ++i) Qmgﬁ\n- aiil = biil; g 1 _M3,\n' ’—* I\n‘) Com\n. Suppress automatic coercion\n. Delegate construction — new C++11 '~ \n\nF siitiiIii:iiIi‘1\n\n} Some Further \n\nConstructors\n\n\\UFuR7~HA “Es.\n'(;++ Em-C     f ‘\n\n \n\nSome Further\nConstructors Some Further\nConstructors 7'\n\nC++ Em-C  ..\n\n  \n \n\nSome Further\nConstructors Constructor\n\n0 my_container(const my_container &b):my_container()\n\n- <\no for(int i = 0; i <n ; ++i)\no a[i] = b.a[i];\n\n- >\n\n0 Ordinary copy constructor —again with constructor\ndelegation V\n\n  Q :ﬁi\"{.v‘ é\"\"i ‘ ’ \" ’ ‘\n\nSome Further\nConstructors\n\n \n\nL Some Further\nConstructors\n\n \n\nj 7\n\nC++ f6E\"C :'3';\":.»  \n\nSome Further ~\nConstructors ‘ Constructor\n\n0 my_container(const my_container &b):my_container()\n- <\no for(int i = \"<n ; ++i)\n. a[i] b.a[i]; ’f’( I S -7 (fig 7 \n0 } .\n. Ordinary copy constructor —again with constructor\ndelegation\n1- M5 om/«W C T,» :2 ‘ C\"“‘ﬁ**\n\nW ~ 1: ‘f: q,:~;d.~7 *’7fStHN=TH’tIiRt[i2 Quiz:\n\n- What are typical constructors for a class\n\n* snnnlnihliz rC++ f6E'C 2”’;  \n\n  \n\nSome Further\nConstructors\n\nLT Answer:\n\n. Default - void signature\no Conversion constructor - single argument\n\na Copy constructor - const c|assType&\n\n§.,7V,.m M <2/vplnﬁ\n\n“ SHNHIIIHIII UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"}, {"path": "E:/Coursera/c-plus-plus-b/04_monte-carlo-hex-program-further-advanced-c-topics-and-patterns/03_assertions-and-exceptions/01_4-6-asserts-and-exceptions.mp4", "id": 807, "text": " Module 4.6\nAsserts & Exceptions Proiessor, Easkin sum:\nUniversity of Calm‘.\n\nx.- .x\\ %\n+‘~ Ira Pohl\n\nProfessor. Baskln S I 0| Engineering\nUnixersily of rma Santa Cruz ++ Ear C 6 :.o:;;;,a;’2z1s  an; at\n\n \n\nAsserts &\nExceptions\n\n \n\nL‘ Asserts & Exceptions\n\no How to test for correctness\n\no Ideally — you would have a proof that your\ncode works — and could avoid testing — which\nis expensive and finite\n\no Early CS professors such as Dijkstra and\nHoare worked on the logic of proofs of\ncorrectness through assertions\n\nSi|Nll| lllllll 70\n\n++ E93‘ C 2\"’; :3\";  ‘  2* ;a=..\n\nAsserts &\nExceptions rC++ fag-C  \n\n  \n\nAsserts &\nExceptions Asserts & Exceptions\n\no How to test for correctness\n\no Ideally — you would have a proof that your\ncode works — and could avoid testing — which\nis expensive and finite\n\no Early CS professors such as Dijkstra and\nHoare worked on the logic of proofs of\ncorrectness through assertions\n\nSiiiiiil lililll rC++ Em C  \n\nAsserts &\nExceptions Idea:\n\n0 Test a precondition\na Code to be certiﬁed\no Test a postcondition\n\n- If pre and postcondition are true the code is\ncorrect\n\nSIINHI lllilll 7\n\nC++ Em;-C     \n\nAsserts &\nExceptions Exceptions\n\nL‘ rC++ §@E'C Z”: :5  L‘:\n\nAsserts &\nExceptions Idea:\n\n \n\na/uwrf‘ Y 7/ O\no Test a precondition\n\n1; f ’f ( ‘.\n0 Code to be certiﬁed J ?/1 K»\n\no Test a postcondition 7, 99.  jkj: =)(\n\no If pre and postcondition are true the code is\ncorrect\n\ne 3HNTf|l}|1|lZ '2\n\n++ fay C   -- Aa\n\nAsserts & \n\"K\n\nExceptions Idea:\n\n \n\nA/uwrf‘ Y 7/ O\no Test a precondition\n\n1; S‘ ‘I ( ‘O\na Code to be certiﬁed J ?A )<\\'\n\no Test a postcondition M jkj: :)(\n\no If pre and postcondition are true the code is\ncorrect\n\n“ SHNIH‘%I}HH”l Quiz:\n\n0 for (int i = 0; i > n; ++i)\n\na Does this loop make sense ?\n\nSHNHI IIHIIZ Old asserts - New C++11 Static Asserts\n\no Asserts are used extensively in C and C++\ncommunity — basically a form of if test + a\nprint + an abort\n\no Static_asserts added to C++11 allow\ncompiler to statically test conditions\n\n\" SHNHI lllllll rE++ far C i”; 4:;  =-A \n\n  \n\nAsserts &\nExceptions Asserts &\nExceptions Asserts &\nExceptions 7\n\nC++ f®E\"C    \n\nAsserts &\nExceptions Exceptions rC++ EGEC    1‘:\n\nAsserts &\nExceptions Old asserts - New C++11 Static Asserts\n\no Asserts are used extensively in C and C++\ncommunity — basically a form of if test + a\nprint + an abort\n\no Static_asserts added to C++11 allow\ncompiler to statically test conditions\n\nSHNHI lllllll Include <cassert> a C library\n\nassert\nvoid assert (int expression);\nEvaluate assertion\n\nlf the argument expression of this macro with functional\nform compares equal to zero (i.e., the expression is false),\na message is written to the standard error device\n\nand abort is called, terminating the program execution.\n\nit writes the expression whose assertion failed, the name of\nthe source ﬁle, and the line number where it happened.\n\nAssertion failed: expression. ﬁle ﬁlename, line line number\n\nSHNHI lllllll\n\nThis macro is disabled if a macro with the\nname NDEBUG is deﬁned.\n\n#define NDEBUG rC++ €03 C \"\"3  = a at \n\n  \n\nAsserts &\nExceptions Include <cassert> a C library\n\nassert\nvoid assert (int expression);\nEvaluate assertion\n\nlf the argument expression of this macro with functional\nform compares equal to zero (i.e., the expression is false).\na message is written to the standard error device\n\nand abort is called, terminating the program execution.\n\nit writes the expression whose assertion failed. the name of\nthe source ﬁle, and the line number where it happened.\n\nAssertion failed: expression. ﬁle fiiename, line line number\n\nSHNHI lllilli\n\nThis macro is disabled if a macro with the\nname NDEBUG is deﬁned.\n\n#define NDEBUG rC++ f6E‘C  \n\n \n\nAsserts &\nExceptions\n\n \n\nL‘ assert Example\n\na void print (int* my|nt){\no assert (my|nt!=NULL); cout << *my|nt <<\n\nendl; }\n//precondition test\n\na int main(){\n\no int i = 5; int* p = &i; int*q = NULL;\n\no print(&i); //ok\n\na print(p); //ok ‘\n\n- v~m<q>: W A sum“ IIHIII Error Handling\n\no Use asserts\nu Exceptions should monitor — resource problems\n\nu Exceptions can deal with IO difﬁculties such as\nimproper input\n\na Exceptions should not be used as a “goto”\n\nSHNHI lliilll rC++ fez-C 2%  \n\nAsserts &\nExceptions Error Handling\n\no Use asserts\no Exceptions should monitor — resource problems\n\na Exceptions can deal with IO difﬁculties such as\nimproper input\n\no Exceptions should not be used as a “goto\"\n\nSHNHIAIIHIII rC++ EQEC 2”‘;  ‘  r :%\n\nAsserts &\nExceptions Asserts &\nExceptions\n\n(v 3.1:‘ r. rC++ E93‘ C 3”;  ‘  '3‘ ;%\n\nAsserts &\nExceptions Error Handling\n\n- Use asserts\no Exceptions should monitor — resource problems\n\na Exceptions can deal with IO difﬁculties such as\nimproper input\n\na Exceptions should not be used as a “goto\"\n\nSHNHI IIHIIZ 'C++ EGEC  i.._‘>‘;’;a.i.e‘;‘:\n\nAsserts &\nExceptions\n\n \n\nL‘ Error Handling\n\n- Use asserts\no Exceptions should monitor — resource problems\n\na Exceptions can deal with IO difﬁculties such as\nimproper input\n\na Exceptions should not be used as a “goto\"\n\nSHNHI lllilll rC’++ EQEC Z”:é..a_-  \n\n \n  \n\nAsserts &\nExceptions\n\nL‘ Asserts &\nExceptions rC++ fez-C  \n\n  \n\nAsserts &\nExceptions Error Handling\n\n- Use asserts\no Exceptions should monitor — resource problems\n\na Exceptions can deal with IO difﬁculties such as\nimproper input\n\na Exceptions should not be used as a “goto\"\n\nSHNHI lllilll Asserts &\nExceptions rC++ EQEC §\"\"'; \n\n  \n\nAsserts &\nExceptions Asserts & VC++ EEBEC §.'*”:’:,e);';’:=‘ *\"*\n\n  \n\nAsserts &\nExceptions\n\n \n\nL‘ Exceptions UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"}, {"path": "E:/Coursera/c-plus-plus-b/04_monte-carlo-hex-program-further-advanced-c-topics-and-patterns/03_assertions-and-exceptions/03_4-8-exceptions.mp4", "id": 809, "text": " C++ fo1-CP1-ogrammers T\n\nModule 4.8\nExceptions T++fo1-C  ‘\n\nExceptions\n\n  \n\n3 7\n\nC++ §@E' C   2: 32\n\nExceptions\n\nIra Pohl\n\nProfessot Easkm School oi Engineering\nUniversity ofcaiilornia Santa Cruz\nL \" rC++ §®E'€  Lastaa\n\nExceptions\n\n \n\nL‘ Exceptions\n\no I before E except \n\nuh \n\nSHNIH %lVi|{ll'l '5-‘I-+fez-C  \n\nExceptions Exceptions\n\no I before E except \n\nSHNIH IIHIIZ Exceptions\n\no Exceptions are typically left in at run time to\nmonitor resource handling ;\n\no For flow of control where abort must be\navoidable — think nuclear energy plant-\n\no Or where wish to repeat a request where there is\na user error on input\n\nSlllllll lllllll 7\n\nC++ EQEC   “ gs\n\nExceptions\n\n \n\nL‘ Exceptions\n\no Exceptions are typically left in at run time to\nmonitor resource handling ;\n\no For flow of control where abort must be\navoidable — think nuclear energy p|ant—\n\n- Or where wish to repeat a request where there is\n\nSllNll| lllllll V\n\nC++f@3-C  ..\n\nExceptions rC++ EQEC  \n\nExceptions lnane Exception\n\no //Exception Handling\n\n- #include <iostream>\n\ns using namespace std;\n\no int main()\n\n- <\n\no cout << \"an exception test\\n“;\no throw \"This will Abort\";\n\n->\n\n\" SHNHI lllllll F’\n\n- C++ E93-C     \n\n  \n\nExceptions Standard Library <exception>\n\na Standard exceptions\n\no The C++ Standard library has a base class\nexception in the <exception> header\n\n- This class has the usual constructors, operators\nand destructors, plus a virtual member function\ncalled what that returns a nul|—terminated\ncharacter sequence (char *) and that can be\noverwritten in derived classes to contain some\nsort of description of the exception 7'\n\nC++ f@E'C   \n\nExceptions Build your own exception:\n\n#inc|ude<exception>£\n\nc #inc|ude<iostream> eh   Jr‘\nusing namespace std;\n\n SHNHIIIHIII myex throw in main()\n\nint main () {\n\ntry\n< 2_r-wxuvk\n\nthrow myex;\n\n) w-4azwr*'~’” QMVK/\\’\ncatch (e_§ceg’tion& e) %:\n\n( /\ncout << e.what() << endl; * \n\n)\n\nreturn 0;\n\n} UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"}, {"path": "E:/Coursera/c-plus-plus-b/04_monte-carlo-hex-program-further-advanced-c-topics-and-patterns/04_new-parts-of-the-c-11-library-tuple-thread/01_4-9-c-11-design-patterns.mp4", "id": 810, "text": " Module 4.9\nC++1l & Design Patterns C++1 1 &\nDesign Patterns\n\n \n\nPvofgsscr. Easkm School ol Engineering\nUniversity 01 Cal\\lom1a Sanla Cruz ';++§@rC:¢\n\n \n\nC++11&\nDesign Patterns\n\n \n\n  -UMW “Mme W W rC++ EQEC f““;“:..»j  “\" ’ *\n\n \n \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns 7'\n\nC++ f®E\"C : :2\n\n  \n\nC++1 1 &\nDesign Patterns 'EI++ f@E\"C  \n\n  \n \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns '£3++ fag-S  . .\n\n  \n \n\nC++1 1 &\nDesign Patterns rC++ Em C   —» ‘=\n\n  \n \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns 7\n\nC++ EQEC :;°=\"—‘» ‘ -\n\n \n\nC++11 & % /'\nDesign Patterns » C++1 1 &\nDesign Patterns '('3++ f@3'€    \n\n   \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns\n\n \n\nJ C Wrapup\n\no C — 1972 Dennis Ritchie —SlL used to build UNIX\nsimple 29 keywords, call by value, functions, blocks,\nfiles - highly efﬁcient - implementation details could\nvary such as size of types\n\na C — 1985 ANSI standardization — function prototyping,\nIEEE arithmetic\n\n- C- 1999 — ANSI — long long — comformant arrays —\n\n0 Methodology— module = file, ADT is .h and icpp\n\nSIINHI lllilll C++11&\n\n \n\ni r(3++ f@E\"C Z”; :.»_\";\"‘a_ ;=:;‘:\n\n \n \n\nC++1 1 &\nDesign Patterns\n\n \n\ni C++11& C++1 1 &\nDesign Patterns I’\n\nC-l-+ €633 \"é  ;“‘f2 \n\n \n \n\nC++1 1 &\nDesign Patterns C Wrapup\n\n. C — 1972 Dennis Ritchie —S|L used to build UNIX\nsimple 29 keywords, call by value, functions, blocks,\nfiles — highly efficient — implementation details could\nvaw such as size of types\n\n0 C — 1985 ANSI standardization — function prototyping,\nIEEE arithmetic\n\no C— 1999 — ANSI — long long — comformant arrays »\n\no Methodology — module = ﬁle, ADT is .h and .cpp\n\nSHNHI lllilll 7\n\nC++ f®E'C \"\":r:.a§ \n\n \n \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns rC++ fﬁﬁ‘ C §'*‘:':..»_   : \n\n \n \n\nC++1 1 &\nDesign Patterns Va\n\n++§hE€é%a=u:“*\n\n \n \n\nC++11&\nDesign Patterns C++ More\n\na C++ — Originally C with classes — Stroustrup Bell\nLabs; 1985 Cfront compi|er— converts C++ to\nefﬁcient C; can be immediately put to use;\nallows incremental adoption — free and\nsupported by A‘|'|'; still can be used as a SIL —\nbut language is large\n\n9 Competitors — frequently proprietary — Smalltalk,\nObjective—C, EIFFEL ~ not as notationally\nfamiliar, not free, organizational support limited\n\n‘° 3”\" ”e”‘’°' SllNlll lllllll V\n\n  :.§i'V{.V?\".5f‘i U \" ‘\n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns\n\n \n\nL: %++ EQEC E\"*\":*:.»§ \n\n  \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns V\n\n  Q :.;i\"is“‘§“\"i ' ‘ \"3 ’ ‘\n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns C++ More\n\na C++ — Originally C with classes — Stroustrup Bell\nLabs; 1985 Cfront compi|er— converts C++ to\nefﬁcient C; can be immediately put to use;\nallows incremental adoption — free and\nsupported by ATT; still can be used as a SIL —\nbut language is large\n\n9 Competitors — frequently proprietary — Smalltalk,\nObjective-C, EIFFEL — not as notationally\nfamiliar, not free, organizational support limited\n\n‘° 3”\" “e\"‘’°' Sllll I ll lllllll rC++ f@E\"C  ‘ .\n\n \n\nC++1 1 &\nDesign Patterns\n\n \n\nI: Design Patterns\n\nL: 7\n\nC++ £953 :2  ~a =\n\n \n\nC++1 1 &\nDesign Patterns\n\n \n\nL: C++ More\n\na C++ — Originally C with classes — Stroustrup Bell\nLabs; 1985 Cfront compi|er— converts C++ to\nefﬁcient C; can be immediately put to use;\nallows incremental adoption — free and\nsupported by ATT; still can be used as a SIL —\nbut language is large\n\n9 Competitors — frequently proprietary — Smalltalk,\nObjective-C, EIFFEL — not as notationally\nfamiliar, not free, organizational support limited\n\n‘° 3”\" “e\"‘’°' Sllll I ll lllllll '5\n\nC++1 1 &\nDesign Patterns\n\n++ EQEC §\"“:é..s,‘ /7\n\n5‘\n//11\n//\n\nﬂ V\n\n' C++ fez-C  - =\n\nC++1 1 &\nDesign Patterns\n\n \n\nif C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem a major alternative ~\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngc as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSHNHI lllllll C++1 1 &\nDesign Patterns\n\n \n\nL: 7\n\nC++ fag-C   \n\nC++1 1 &\nDesign Patterns C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem a major alternative «\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngo as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSllNll| lllllll V\n\n'    5.95 {'1 3 ' “ 1 ‘\n\n \n \n\nC++1 1 &\nDesign Patterns V\n\n' C++ Em-C   \n\nC++11& c++11& C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem e major alternative «\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngo as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSl|Nll| lllllll 7\n\nC++ f®E'C 2”\": <9; \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns\n\n \n\nL: 7\n\nC++ f®E'C 2”\": <9; \n\nC++1 1 &\nDesign Patterns C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem a major alternative «\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngo as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSl|Nll| lllllll '5\n\n++ €93‘ C 3'3\": €..%f;‘;“'2_ ‘  2* ,\n\nC++1 1 &\nDesign Patterns C++11& C++11& rC++ Em‘ C :\"*—;-4.; \n\n  \n\nC++1 1 &\nDesign Patterns C++11& r(3++ EQEC :\"‘;\":.»§   ’ =\n\n \n \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns 7\n\nC++ EQEC :';“;\"€..~§ \n\nC++1 1 &\nDesign Patterns\n\n \n\nL: Design Patterns\n\nL: 7\n\nC++ fag-C  ..\n\n \n\nC++1 1 &\nDesign Patterns C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem a major alternative «\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngo as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSllNll| lllllll c++11& C++ E93‘ C ¥Z”'=':o:;:;;a;“a s a as \n\n  \n\nC++1 1 &\nDesign Patterns\n\nI: C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem a major alternative «\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngo as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSllNll| lllllll rC++ f@E'C  \n\n \n  \n    \n\nC++1 1 &\nDesign Patterns C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem — major alternative «\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngc as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSHNHI lllllll 7\n\nC++ f®E'C 3\"; as \n\nC++1 1 &\nDesign Patterns C++11& C++1 1 &\nDesign Patterns\n\n \n\nL: V\n\n  E :‘;§\"5.9_*  ‘ L3 ,v\n\nC++1 1 &\nDesign Patterns £4-+ EQEC §\"g\"':,»_¥;\"\":.‘;. gt\n\nC++1 1 &\nDesign Patterns\n\n \n\nL: C++11& 7\n\nC++ f®E'C §\"z>i.» \n\nc++1 1 & 63\nDesign Patterns ‘ 7‘ V\n\nC\n\n \n \n\nC++11& Va\n\nC++1 1 &\nDesign Patterns\n\n++ f®E‘C 39”‘: ::j—*;’25i2‘:€~ '5\n\n++ f®E‘C 39”‘: ::j—*;’25i2‘:€~\n\nC++1 1 &\nDesign Patterns C++11& rC++ Em-C   \n\n \n  \n \n\nC++1 1 &\nDesign Patterns Design Patterns\n\nL: c++11& rC++ EQEC :'*:\"i.._.‘ \n\n \n\nC++1 1 &\nDesign Patterns C++11& C++11 & *’f'»‘{ Design Patterns\n\nx‘ rC++ §®E\"C §\"*;'*:..u  Li\n\n  \n\nC++1 1 &\nDesign Patterns C++11& Design Patterns\n\n:1 C++11& Va\n\n++ EGEC  \" *‘ ' =\n\nC++1 1 &\nDesign Patterns Quiz: New Feature\n\na What is your favorite new C++ 11 feature?\n\n“ HHNIHWII Answer:\n\na Among what we have seen in class:\no -move semantics\n\n. -lambda functions\n\na -class enum\n\no -for—iterator statement\n\n. -better initialization syntax\n\n- -use of auto \\/L/ UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"}, {"path": "E:/Coursera/calcsing/Lecture 53 Absolute Conditional.mp4", "id": 835, "text": " \".l.I.l'l.l'L. ' ' . ' — ' _ ' _ - _ ' — - _ \"\nLLL4 I\n\n2‘\nS\n4\n\"\n\n‘ LECTURE 5:5 -\n\n'Al'A‘A'A'A'A‘l|V C C O C\n\n., ABSOLUTE &OONDIT 9' 3° ‘\n\n2: u 1;: -.-.m.-......._..— QMVERCJE gem 12119.: M 1:Rg~.£ gem J:Rc~r a PI\\ ERQE Lo1\\I\\ERe£ m P!\\ I:RQ~.E\n\nZ<-*>\"?1%§E17‘%\n,, 0 an )\n\nW n l\n23-” 1n(1n*<mn>))\n\nien\": ‘f’-\"\":‘Z\n/l-0 1/rf+ ‘In +l ‘OI\\l\\ ERGE E Pl\\ ERQE QOI\\i\\ ERGE a P1\\ I:RQ~.E\n\nZ<-v\"%%\nH 0 an )\n\n“° u l\n23-0 unanmn)>)\n\niwnj \\’f—:>n.’+Z\nnxo 1/\\’f+ ‘W *l n! cosH(n§)\n\n:(_”~ 'I(“ lm\"n‘+l\nn 0\n\nCW Llﬁiﬁiix LOI\\|\\ ERQE D1\\ ERQE\n\nZ<*”\"71%§$7\"%\nK1 )\n\nu 1\n23-” 1n(w:mn»>)\n\nr\\=1\n\n“’ mi. >. QOI\\|\\ ERGE Pl\\ ERQE\n\n<»<:\n\nV\\ 1\n2\"” 1n(tr<(lr@n)))\n\nr\\=2 SOMESERESARE OOOOOO0IOOOCOIOOOOIOOOIOOOOIOIOOOO SOME SEWES ARE\n\no9<399aace:coeeoovaouoemooooaaaoeeaao\n\nALTERNATN6\n\nsea ;u“g1<»¢ﬂ/\"\"‘; \nTﬁcn «u‘[1<;\\u1\"1a\\:L: \n1 A|_TERF\\HT [N6 ALTERN %TlNL3\n\n93 a“ 7’ o 4-» Dm;'I§GJ:S APPLIO\\BLIT,V:\nWE 0‘ 059 ALT[R?\\‘%Tli\\‘L3\nuscruwrss: AP:-x.IuBuTy:ﬂ? W K ‘\nuse or us: ALT LRNQ [Nb\nusmmrss: APPLl(ABL|T>’1£?\n\nuse or use ALT'ER>\\HTlNL1\nUSEFULNESSI Amuusuryzﬁf V, K _\nuse or uszzﬁi? ALT ERKN [Nb\nuscrumzss: APPLnuBuTy:ﬁ? V K ‘\nuse or useikiiiifi} A|_TER>\\N llxlb\n\nUSEFLLNESSI €f;'E\"3rB”u3§§ikikik ,«u’E1x>\\m’1uqe\nuscrumzssz ifrﬁrﬁr p SEQUENCE ALTERN %T|NG A [RN Qt Z<-”\"%’:\nM )\n\nnno\n\n*° N x\nEH’ 1n(l«<(lrin>))\n:<—u\"V) ‘f’-W {TING\n\nZ<-*>\"?1%§S7\"%\n,, 0 an )\n\n«K: H ‘\n£3-U un(xnmn>>)\n\nfen“: ‘f’-‘W2\nM ,/rf+ ‘in +l Z<-*>\"?1%;;T:17‘%\nan )\n\nn-O\n\n“’ u 1\nQ-U un(xnmn>>)\n\niwnj rf—:>n.’+Z\nA20 7/\\’f*‘1\\’l‘+l\n\n{TING ATINL: :“\"nﬁ’\" \n\n23'\" mi)\n\niﬂfj rf—:>n’+Z\nr\\=0 1/\\\"f+ ‘W *l Zen ‘\n\nr|:2 (C1\\‘\\ 1:KC~[.§ Zen\n\nr\\=1 \"7E}7H\\’lTlOl\\‘ CONDITIONAL\nCONVERGENCE .W:Fn\\'mo1\\I\nABSOLUTE T\nCONVERGENCE\n\nCONDITIONAL\nCONVERGENCE .WZFl\\\\'\\T|O1‘\\'\nco\"NBv5':%£’JNEca@\n\n-\n® mzrnxrmolxl\nABSOLUTE\nQ\n\nCONDITIONAL G,\nCONVERGENCE\n\n|3n| ‘.‘1\\El{G£$ ~m:Fl\\\\'\\‘l(|®1\\\\|\n\nH Ianl )1\\ER®:$ mzrnxrmolxl\n\nCDNAL G,\nCONVERGENCE\n\n!,Mm.M[ H |a4 mx gmis D1:Fn\\'m01\\|\n\nCONDITIONAL G,\nCONVERGENCE .WZ)-‘H\\'\\T|O1‘\\' DOES mus szauzs CONVERGE ?\n\nGIVEN\nSEQUENCE ' 23::\n\n(an) CDNVERGE?\n\nDIVERGENT DOES THIS SERES CONVERGE ?\n\nGIVEN\nsmusucs Ea» - 2 ‘an[\n\n(3 ) CDNVERGE? couvzwaz?\n\nDIVERGENT m\nU\nW\nJ\nA\n\n|_\nnv — szrazs\n\n4\n_\n+\n_\n+\n_\n+\n_\n+\n_\n\n;§—n\";—1, ALTERNATING — smzs\n\nml\nﬂ\nWAD;\nE .‘ 5 A 8 I\n-at-I)\" =l-l+l-I+l-l+l-I+I-l+--- @\nIi\n‘$0! : 1;»\n\n@ eempm 1:. \nF. I-1+l-I+l-I+l-I+I-1+-~\n\nQ-—n\";—1,. ALTERNATING \n\n@ EQNDFFI «A ;  P\nF, y\nE»\nme\nA»\nWW6\n.m—\\bLn\n\n1?\n\n‘K0\n\n \n\n@ F\n\n\\ECAL\\_ I\n~\\- —zI— 4|-\n+\nml’\n1\nrl-\n\nL\nJ\n\nI\n+\ncl-\n\n\\..|—\nu\n+\nml’ IHZOKEW\nABSO»LUTELf/_ CQN\\/‘ERGENI SERIES\n\n. ,_ _r ./ ‘M »'\\l,‘,,. IHZOREMI\nABSOLUTELY CDNVERGENT SERIES\nON BE  D AT WILL...\n\nTHESUMFEMANSCONSTANT\n\nNOT so FDR conpunoww ’\ncowvmcmr SERJES G CALCULUS: SINGLE VARIABLE\n\nRobert Ghrisl\n\n‘HIPS://\\\\’\\\\ “ .4..u».u-.. nrg/umrw/t.\\‘L~\\l!g Sciences"}, {"path": "E:/Coursera/compilers/10 Cool Type Checking/10 - 1 - 10-01_ Static vs. Dynamic Typing (7m14s).mp4", "id": 1171, "text": " Compilers\n\n‘ ) Static vs. Dynamic Typing\n\nmmmmm en Static vs. Dynamic\n\nc1assA{...} 35;‘\nclass B inherits A {...)\n\ncla Main {\nswh‘ L A ><:A)<— new A; <-- dt3vw.In-L +1.‘; mix .3 A\n‘A’ X 35  new.§;g A-ommx. ‘hgp; -P X is B Static vs. Dynamic\n\nSoundness theorem for the Cool type system:\nV E. dynamic_type(§)@ static_type(§)\n\n— All operations that can be used on an object of type C can\nalso be used on an object oftype 2’ S C\n- Such as fetching the value of an attribute-'\n° Or invoking a method on the object\n\n— Subclasses only add attributes or methods\n— Methods can be redefined but with same type!"}, {"path": "E:/Coursera/compilers/10 Cool Type Checking/10 - 4 - 10-04_ Self Type Usage (6m29s).mp4", "id": 1174, "text": " Compilers\n\n‘ ) Self Type Usage\n\nmmmmm en Self Type Usage Self Type Usage\n\n3. let x :T in E\n0 T can be SELF_TYPE\n\n4. new T\n0 T can be SELF_TYPE (Mw~“'\n- Creates an object of the same”type as self\n\n5- m@l(E1,...,En)\n0 TcannotbeSELF_TYPE\n\nu ma Self Type Usage\n\n6. m(x_::l’) :l':{...)\n0 Onlyl’ can be SELF_TYPE l\n\nWhat could go wrong if T were SELF_TYPE?\n\n— c|assA{ z:omp(x : SELF_TYPE) : Bool {...}; };\n\nclass B inherits A {\nb : int;\n—7comp(x : SELF_TYPE) : Bool (  l4§); };\n\nlet x 2 A 4- new B In ...écomp( ; \n\nAlax um"}, {"path": "E:/Coursera/compilers/10 Cool Type Checking/10 - 5 - 10-05_ Self Type Checking (10m00s).mp4", "id": 1175, "text": " Compilers\n\n1 ) Self Type Checking\n\nxxxxx en - Formal parameters cannot be SELF_TYPE\n\n- Actual arguments can be SELF_TYPE\n— The extended 3 relation handles this case\n\n- The type To ofthe dispatch expression could be SELF_TYPE\n— Which class is used to find the declaration of f?\n— Answer: it is safe to use the class where the dispatch appears\n\n2.: sE_sL1\nM(g,,4‘-5: c \n0,»«.c »- ea--$31.3\n\nAlex ma\n\nSelf Type Checking - If the return type of the method is SELF_TYPE we have:\n\n0.M'C F '50 3 To\n\nOVMVC F en I Tn\n-\\T0 5 T\n~'-> M T f) = (T,’,...,T,,’,SELF_TYPE)\n\nlsisn\n\n \n\n0:M;C ‘V eO@I'f(e1:-~-Ien) 5 To\n\nSelf Type Checking - Why is this rule correct?\n\n- If we dispatch a method returning SELF_TYPE in class\n___T, don't we get back a T?\n\nTo 51'\n- No. SELF_TYPE is the type of the self parameter,\n\nwhich may be a subtype of the class in which the\nmethod appears\n\nSelf Type Checking - There are two new rules using SELF_TYPE\n\n0,M,£ F self : SELF,TYPEC\n\n0,M,C F new§ELF_TYPE : SELF_TYPEG\n\nAlex Aiken\n\nSelf Type Checking Self Type Checking Self Type Checking SELF_TYPE is a research idea\n— It adds more expressiveness to the type system\n\nSELF_TYPE is itself not so important\n— except for the project\n\nRather, SELF_TYPE is meant to illustrate that type checking can be\nquite subtle\n\nIn practice, there should be a balance between the complexity of\nthe type system and its expressiveness\n\nAlex Am\n\nSelf Type Checking"}, {"path": "E:/Coursera/compilers/12 Code Generation/12 - 6 - 12-06_ Object Layout (23m56s).mp4", "id": 1188, "text": " Object Layout\n\n00 implementation = Basic code generation + More stuff\n\n00 Slogan: If B is a subclass of A, than an object of class\nB can be used wherever an object of class A is expected\n\nThis means that code in class A works unmodified for an\nobject of class B Compilers\n\n‘ ) Object Layout\n\nxxxxx en Object Layout\n\n—— - How are objects represented in memory?\n\n'- - How is dynamic dispatch implemented?\n\nu Am Object Layout\n\n3 5\nOffset 9 4 8 12 16 20 E :2‘\n(5\nClass\nA  67 : 2 2 .8 -‘mg:\nb\nB Btag 6 * a d f F‘\n' \" ‘ ‘ ~c a-1-u:£.xI_‘l§\nC C_ta£ é * 2 3 g 3 L Object Layout\n\n- The offset for an attribute is the same in a class and all of\nits subclasses\n\n— Any method for an A1 can be used on a subclass AZ\n' Consider layout for An <  < A3 < A2 < A1\n\n \n\nHeader A, object\nA, attrs. A129]-fen\nA’ ams A, object\nA; attrs\n\nAlex mm Object Layout\n\n0355A‘ Class C inheritsA(\na: |nt<A0,' ‘ _ ‘\nd:lnt<A 1; c‘lnt< 3'\n-9 f():|nt{a<-a+d); h()I'\"t{a<-3*“:\n); );\n\nClass BinheritsA(\nb:Int<— 2; - '3-7‘\n\n_..) W Inna ); —- '2 Considerthe dispatch\n\ng():|nt(a<Aa-b): eaf\n):\n\nAlu um Object Layout\n\n- To implement a dynamic dispatch_e._f_(_) we\n— Eva|uate_e, giving an object_>£\n— Call D[Of]\n- D is the dispatch table for x\n- In the call, §e_if is bound to x\n\nu mm"}, {"path": "E:/Coursera/compilers/13 Operational Semantics/13 - 1 - 13-01_ Semantics Overview (7m06s).mp4", "id": 1189, "text": " Compilers\n\n1 ) Semantics Overview\n\nmmmmm en - We have specified evaluation rules indirectly\n— The compilation of Cool to a stack machine\n— The evaluation rules of the stack machine\n\n- This is a complete description\n\n— Why isn't it good enough?\n\nSemantics Overview Semantics Overview\n\nAlex mm Semantics Overview\n\nAlex Aaken Semantics Overview\n- Denotationalsemantics\n\n— Program's meaning is a mathematical function\n\n° Axiomatic semantics\n— Program behavior described via logical formulae\n- If execution begins in state satisfying §, then it ends in\nstate satisfyingY\n\n- X, Y formulas\n— Foundation of many program verification systems\n\nAlex mm"}, {"path": "E:/Coursera/compilers/14 Local Optimization/14 - 2 - 14-02_ Optimization Overview (13m37s).mp4", "id": 1194, "text": " Compilers\n\n1 ) Optimization Overview\n\nmmmmm en Optimization Overview\n\n- A basic block is a maximal sequence of instructions with:\n— no labels (except at the fi n), and\n— no jumps (except in the last instruction) L: 4-\n\n/iii\n- Idea:\n\n— Cannot jump into a basic block (except at beginning)\n— Cannot jump out of a basic block (except at end)\n\n— A basic block is a single—entry, sing|e—exit, straight—|ine\ncode segment Optimization Overview\n\n- A contro|—f|ow graph is a directed graph with\n— Basic blocks as nodes\n\n— An edge from block A to block B if the execution\ncan pass from the last instruction in A to the first\ninstruction in B\n\n- E.g., the last instruction in A is jump LB\n- E.g., execution can fall-through from b|ockA to block B Optimization Overview\n\n     \n\nLt\n\nif-i < 10 goto\n\n   \n\nAlex mm Optimization Overview\n\nIn practice, often a conscious decision is made not to\nimplement the fanciest optimization known\n\nWhy?\n\n— Some optimizations are hard to implement\n\n— Some optimizations are costly in compilation time\n— Some optimizations have low payoff\n\n— Many fancy optimizations are all three!\n\n608“ \n\nAlex mm"}, {"path": "E:/Coursera/compilers/18 Java/18 - 1 - 18-01_ Java (7m21s).mp4", "id": 1211, "text": " Compilers\n\n1 ) Java\n\n \n\nmmmmm en 4. p-~ofJ?--\n\n- Java: COOL on steroids\n\nj:— History]\n\nArrays\n\nExceptions_\n\nInterfaces\n\nCoercions\n\nThreads\n\nDynamic Loading & Initialization\nSummary\n\nJava\n\nu Aiken Java\n\n- Began as Oak at SUN l \n— Originally targeted at set-tog devices\n— Initial development took several years (91-94)\n\n- Retargeted as the Internet language (‘94-95)\n\n— Every new language needs a ’’killer apg”\n— Alernatives such as ‘EL, Python\n\n.x mm - From our perspective, COOL plus\n— Exceptions\n— Interfaces\n— Threads\n— Dynamic Loading\n— Other less important ones . . .\n\n- Java is a I§l_(i|anguage\n— Lots of features\n— Lots ' ' s\n\nJava\n\nu mm"}, {"path": "E:/Coursera/compilers/18 Java/18 - 3 - 18-03_ Java Exceptions (14m09s).mp4", "id": 1213, "text": " Compilers\n\n‘ ) Java Exceptions\n\nxxxxx en T(v) = an exception that has been thrown with value v\n\ny = an ordinag vaiue (an object)\n\nF E)—e_2_1 : E\n‘L Er- try{:1} catch(x) {e2}: v_1\n\nK ‘ Java Exceptions\n\nEr—e1 : \n\nE[_)§<—\\Q]o—E: V2\n\nEv—Ery2e1Fcafcﬁ(x) 2e2F: v2\n_ ..§_\n\nMu um Ea-§:y\n\nE o—31_: _T(v1)\n\nEI—e1 + e2 : T(v1)\n\nJava Exceptions\n\nEv- throw g: Tgv;\n\nH mm Java Exceptions\n\nWhat happen-5 f0 0\" U n thrown during\nobject inaliza ' ?\n\nNa omz Java Exceptions\n\n- Methods must declare types of exceptions they may\nraise\n\nEpublic void_)gQ throws MyExceQtionj\n\n— Checked at compile time\n\n[-2 Some exceptions need not be part of the method signature}\n- e‘g., dereferencing null\n\nOther mundanetype rules\nv Vhcow must be applied to an object of type Exception\n\nAlex Aiken"}, {"path": "E:/Coursera/compilers/18 Java/18 - 4 - 18-04_ Java Interfaces (8m38s).mp4", "id": 1214, "text": " Compilers\n\nJava Interfaces\n\n \n\nAlex mm Java Interfaces\n\n- Dispatches ®_f(...) where e has an interface type are more\ncomplex than usual\n\n— Because methods don't live at fixed offsets  '\ni >\n\n' One approach:\n\n— Each class implementing an interface has a lookup\ntable method names —> methods\n\n— Hash method names for faster lookup\n- hashes computed at compile time"}, {"path": "E:/Coursera/compilers/18 Java/18 - 5 - 18-05_ Java Coercions (7m51s).mp4", "id": 1215, "text": " Compilers\n\n‘ ) Java Coercions\n\nAlex mm Java Coercions\n\n- Coercions can lead to surprising behavior\n— Consider an example from PL[|\n— Let A B C be strings of_3 characters\n\nB§I123r Z |7.3>.P_§ 5.}? _:v a__—§;_1l__7\nC,=’456’ e '-was [I 'T\\\n\n_e = B® C ‘\\:‘L\nraﬁ\n\n- What is A?"}, {"path": "E:/Coursera/compilers/18 Java/18 - 7 - 18-07_ Other Topics (14m28s).mp4", "id": 1217, "text": " Compilers\n\n‘ ) Other Topics\n\nAlex mm Other Topics\n\n- Java is well done\n— By production language standards, very well done\n\n- Java brought many important ideas into the mainstream\n—> — Strong static typing\n-—-> — Garbagecollection\n\n- But Java also\n\n— Jncludes features we don't fully understand\n\n— Has a lot of features\n :—\n\nAlex mm"}, {"path": "E:/Coursera/compilers/9 Semantic Analysis and Type Checking/9 - 4 - 09-04_ Types (11m22s).mp4", "id": 1257, "text": " Compilers\n\n1 ) Types\n\n \n\nmmmmm en Types\n- What is a tyge?\n\n— The notion varies from language to language\n- Consensus _ + ’ <\n4- —— -\n—Aset ofvalues ”‘ ' ’ ' .1\n. - - I\n\n— A set of operations on those values 3+\"\"1-‘ ‘°\"\"‘13 \"M '\n\n- Classes are one instantiation of the modern notion of\ntype Types\n\nConsider the assembly language fragment\n\n+\n\n' \\\nadd $r1, $r2/, $r3\n\nWhat are the types of $r1, $r2, $r3?\n\nu Am Types\n- Type Checking is the process of verifying fully typed\nprograms\n\n- lE§ﬂ1_  is the process of filling in missing type\ninformation\n\n- The two are different, but the terms are often used\ninterchangeably"}, {"path": "E:/Coursera/compilers/9 Semantic Analysis and Type Checking/9 - 8 - 09-08_ Typing Methods (8m12s).mp4", "id": 1261, "text": " Compilers\n\n1 > Typing Methods\n\nuuuuu en Typing Methods O\nI\n\no\nOF_e_oE]\n\nTyping Methods Typing Methods ° In Cool, method and object identifiers live in different\nname spaces\n\n— A method@ and an objectﬂg can coexist in the\nsame scope\n\n- In the type rules, this is reflected by a separate mapping\n\n_l\\_/I for method signatures H5‘- r¢,..H-\n% M(_c,_f) = T1,. . .Tn,TM)\n\nmeans in class C there is a method f\n‘% f(X15T1:- - -:Xn5Tn)1 Tn+1\n|J§_ _I\n\nTyping Methods M(T,f) = (T1'»- - ‘Tn’\nTi:Ti.for1£iSn\nO, M P e0@T.f(e1,  ,en):\n\n[Static Dispatch]\n\nMu um\n\nTyping Methods ° For some cases involving SELF_TYPE, we need to\nknow the class in which an expression appears\n\n- The full type environment for COOL:\n— A mappingggiving types to object id's\n— A mappingmgiving types to methods\n— The current class;\n\nTyping Methods\n\nu Am The form of a sentence in the logic is\n\nExample:\n\n [Add]\nO,M,C |- e1+e2: Int\n\nTyping Methods\n\nu Aiken - The rules in this lecture are COOL—specific\n— Some other languages have very different rules\n\n- General themes\n— Type rules are defined on the structure of exgressons\n— Types of variables are modeled by an environment\n\n- Warning: Type rules are very compact!\n\n \n\nTyping Methods"}, {"path": "E:/Coursera/data-structures-optimizing-performance/01_introduction-to-the-course/01_about-this-course/04_welcome-object-oriented-programming-in-java-specialization.mp4", "id": 1487, "text": " ééf’ /"}, {"path": "E:/Coursera/data-structures-optimizing-performance/03_efficiency-analysis-and-benchmarking/02_measuring-performance-big-o/16_core-a-summary-of-sorting.mp4", "id": 1520, "text": " Core Content\n\nChristine Alvorodo, Mic: Mirmes, Leo Porter\n\nUC San Diego Algorithm performance\n\nSummarizing sorting ' Jet, ‘sou.\n-51:11‘, me» er ~. :51, o‘m.’r*.\"c:verog, . ~—\nperforr'-\"m my \\wSer1ioH sort, se\\e<'wm ,» ‘ w_—:\n\n   \n\nsorT,om;1quu.,k son\n\n-Evoluorat suumﬁrms H‘: which diffomm Ln mg\nOlgorifhms are Oppw pr 31> -5%\nSelection Sort O(n2\\ 7(\"2)\nInsem- d\\’\\Y O\\\\’\\e‘5\"\" (D2)\nMen and ‘“  .09 n) O(n log n)\n\nQuick O(n log n) 0(n '09 \") °(\"2)"}, {"path": "E:/Coursera/data-structures-optimizing-performance/04_interfaces-linked-lists-vs-arrays-and-correctness/02_abstraction-interfaces-and-linked-lists/08_concept-challenge-drawing-linked-lists-second-attempt.mp4", "id": 1536, "text": " Concept Challenge\n\nChristine Alvarado, Mia Minnes, Leo Porter\nUC San Diego Linked MST Implemenfoﬁonz\nConcepT Challenge 2\n\nW public scauc void main(St:inq[] args)\nclass SLLNode<E> I (\n\nSLL“Qde(E) next, SLLNade<Integez> n0 =\n5 data, new SLLNcda<Integez>();\nSLLNode<Integer> n1=\npublic SLLNode() ( new SI-1-N°de<Inte9er> (1,110):\nu.1,,,,e.¢ : ,,.,u, SLLNode<Integer> :12 =\nI:his.daI:a = null; new sI..LNode<Im:egez>(2,na):\n; 1\npublic SLLNode(E chenaca) ( Whuvdoes the H5! at nodes look llke after muln runs?\n\nthis.data = themnza:\n)\npublxc SLLNode(E thebata,\nSLLNode<E> pzevuode) (\nth1s(theData) ;\np::vNode.next = this:\nthismext = prevNode.next; J}.\n\n, .\n\nJ/.f‘  7 7 ‘\n SI “ I\n» 3\n\n3\n\n \n \n\n?~ T , My I\n\n\\ public snulcdel) 4\nclunnuxt - mu,\nm. a... . null.\n\n:\n\nmm suuuaem uuenuub :\nm. m. = ....o.:.,-\n\nFax.» sznlnau :1 u..n.u,\nsu.uua.q:> Pnvltad-I\nm-zmuuu),\nyxnvﬂndn nnxt = u.\ncan nu: . pr-Wad. n-It: x n\n3‘\ni p\n: E‘\ni. « ,\n\nV, .r - x '\n‘-  \ng n\n5\n. . \\\n> .-. 1. ; -4-:\n\n9‘ x .‘\n'u'--\n' n\n3‘? 3\n\nI\n\nQ I\n\nI\n.\n§\n. §\nx\nJ\\\n‘M ’E‘—— --\ni ' A\nl u.uu¢.4-.> nlxt:\n2 an .\n\n,..mm snulod-() 4\nu....n.n - null:\nnun ﬂat. . nun,\n:\nmm snuloaeu ﬂue uh «\nu.....a.:. = anon-\nr\np|I.bl.ll: Susana (1 ...w...,\nsu.uad¢<:> Pnvwad-I I\nun-(Ln .9.\nm,.a.....,¢ an (\nSLLNode<Integer> no\n\nclass SLLNode<E> I\nSLLNode<E> next;\n\n  \n  \n   \n  \n  \n    \n \n \n       \n \n   \n   \n \n     \n\n \n\n \n\n5 data, new SI.LNoda<Inteqe\nSLLNode<1nteqex> n1=\nPublic 5,_,_N°de() ( new SLLNode(1‘m’1V\nthilnext nun, SLLNoda<Intege2> n2\nthiS_da:a null; new SLLNode(2 mu; .-\n; )\npublic SLLNode(E thebata) (\n\nthi.s.data - theData;\n\n)\n\npublxc SLLNode(E r.heDaI:a,\nSLLNode<E> prevﬂode)\n\nthis (:heDa:a);\n\nI:hi.s.next = pzevnode next:\n\npreVNode . next mus;\n\n(\n\n}\n\npublic static void main(St:ingI] atgs)\n\nr>(): VSLLNode<Integer> n2 = new SLLNode(2,nO);\n\npublxc SLLNode(E thenata,\nSLLNod:<E> pzevuade) 4\nno I thus (theData) ,-\np:evNade.nex: = urns;\nthis.next = pzevnode.nexz.-\n\n   \n \n\npzevllode\n\nM I:\n\nn2\n\nnus"}, {"path": "E:/Coursera/game-development/04_designing-and-coding-gameplay-systems/01_programming-in-unity/02_unity-programming-concepts.mp4", "id": 2356, "text": " II~u-I-sac) Tc) ﬁg:-I1 I31\\I:Lzs-IvI1I~nT\n —. INTRO TO GAME DEVELOPMENT\nMICHIGAN STATE UNIVEQSITY EEEEEEEEE BY\n\nBRIAN WINK] \\\\\\\\I V\nF‘\n\nPRESENTED BY\n\nBRIAN\n\nASSOCIATE PROFESSOR\n\n\\‘ ‘ \\,1~ri-LU‘ VJ‘ [,u—:‘ v\\@W!'ﬂ p MICHIGAN sTA'rEw.n W\n\nUNITY\nPROGRAMMING\nONCEPTS\n\n‘wr Evian Winn , H‘\n\n; Mama &lnfovmat1or\\ »g- ‘\nMuchxgan Stale umversxry ff\n\n5AMEnEv.nsu.Enu OBJECT-ORIENTED THINKING\n\n   \n\n> Everything is an object\n\n> Objects have properties\n(aka, variables)\n\n> Objects have methods\n(aka, functions) GAMEOBJECTS AS OBJECTS MICNIGAN snvr: \\ nm E\n\nCOMPONENTS AS OBJECTS\n\n \n\n \n\n \n\nxfg. yf. ,—. ......,\n..... .;......,.\n‘ilk-hunt: ﬂu . ~\n(msnalnn Von ) \"‘ \"‘\n....s...... D ..\n.-.u. 1\" 3\n\n      \n\nInn Ucnnwu\nmm rubs\n\nw MICNIGAN snvr: \\ nm E\n\nCOMPONENTS AS OBJECTS\n\n \n\n \n\n \n\nxiswsu vf. zjamyz\nIaﬂu own-“‘*‘\n‘nu.-ua. ﬂu\n(msmwm m »\nn.«.m.«u D\n.........\n\n      \n\nInn Ucnnwu\nmm rubs COMPONENTS AS OBJECTS\n\no m.m.. nmwmnyha\nmm»... a.\n\nnil\n\n \n\n\"\"*‘»....«n»..m..... .\n\nxivuunvf.\n\n’u»iu.u~..\n\nmxuu... Lou .\nlnoan-tau D\n\n. mm\nIn: mu... D\n‘ﬁn-\n\nu-—s.m.u-awn ST\n.:..m..nm. .\n\n     \n  \n \n \n  \n \n    \n  \n\nz *4 mm\n:2 mm.\n\n \n\n  \n\nM\n\n \n\n \n\n \n\nan Arxmrhvnle ».u. .....:...m _oJ\n\n7;-1 oauu.-nxvwusuin ﬁt\nv:umm.«.. o MICHIGAN snrznmx E\n\nCOMPONENTS AS OBJECTS\n\n \n\n   \n\n.,.mu....u. ».u.m....:...m _oJ\nw o...s..m-umsmn Es.\n\nSaw V zummm o\nv tau. 1.... a I\nmm». W. .3 CLASSES MICHIGAN s1n:mu.w.~.u »\n\nCLASSES\n\nf.   instantxate Clock Object\n. ~ _ \\‘\n(Jock Oass ,% ‘\n\nClock Object p MICHIGAN sTA1Eur.n\\Er: wv\n\nPREFAB = CLASS\n\n*4-sm. mmalu magi\n\nx»....¢ - an )2. an :a- o....- ..‘\n\ncmu.m»\nm-aw.» um\nxoumu\num um.\n\n» Emwnnnum\n\nCamvx\n(mm\nEmail’?\n(a MD\nCum\n\n[vuI§NII1m\n» um-:.m.\n\n» c.mm¢.m.\n. z,.....a..\n\n. En=rWSvIIm:rx\n» c.mx.u..m MICHIGAN STATEHNM. spam\n\nPROGRAMMING\n\n55:6’ MICHIGAN su-rznm v\n\nCREATING SCRIPTS\n\n \n\nvi Audlu\nvﬁ Salpts\n\n@ hum-unuumr\nPE Tamnes\n\nC#\n\n    \n    \n    \n \n     \n\ncompute snnaor\nPruflb\nJS\n\nAudio Mixol\n\nMnwriul\nLana Flam mcmmm sure \\ um Erwwrv\n\nSCRIPTS AS COMPONENTS\n\n   \n\n> Audio\nviscruns\n\nIQ IisI:TugQtMnmer\n> Texnnras SCRIPTS AS COMPONENTS\n\no lnspxtnv\n\n    \n    \n\n   \n \n\n \n\nU Cum Dian: -\nnu uumu Ta um. mu...» H\nVA tn-alum\n\n \n\n0.\nlumen x o ‘v o 19\n\n   \n\n>ﬁA-nib um. x[:|Q vq%_ z1—1u\nvﬁsalpcs sak xT[:, 4:1; zfyx\n\nIIs|:Tug2tMmI:r v|a_m..manm.¢<..,., 0.\n>E'rexwres scrim ‘-1.!-s|<T-rv«,|I=-vv I\n\n. \\‘\n1| public class BasicTargetMcver :\n\n \n\nMICHIGAN su-rsnm m\n\nANATOMY OF A C# SCRIPT\n\n‘using UnityEngine;\n2 usmg Sy5tem.Ca1'lect1cn5;\n\n \n  \n  \n  \n \n     \n    \n   \n \n  \n \n\nMuncﬁehavmu r {\n\npublic mm dnspm : true;\npublxc flea! spsnspeed = nun;\n\npmme Transfurm mover;\nvoid Startl) {\n\n// go: a reference La nus gameﬂbjczt‘\nmover = gameobyecmransform;\n\n, ans ram mmponenr\n\n}\n\nvom Update U {\nxf maspim {\n\n// rotate around L/we up ans :7! me game-Dbjeri\n\nmuver.RntatelVecmr3.up * spinspeed >« T1me.de1taTune); 5 .4.c»..G.\\..smm.\\,,\n\n \n\nEVENT-DRIVEN\n\nOther Events:\n\n1) Update Fixedupdate\nOnCo||isionEnter\nGame OnTriggerEnter\nOnMouseDown\nInltlallzatlon Event OnMOuSeUp\n1) Awake LOOP\n2) OnEnab|e _\n3) Start 2) LateUpdate 7.:\n\nhttp //docs umty3d com/Mama!/Executxonorder html REFERENCING GAMEOBJECTS\n\nthis.gameObject — gameObject MICHIGAN suvsnm »\n\nREFERENCING GAMEOBJECTS\n\npublic Gameobject targetl; :|,_pUb“C Variable\n\nprivate Gameobject target2;\nprivate Gameobject target3;\n\nvoid Start 0 {\n// targetl :5 set 1n the edltur\n\n\"\"99\"-Fi\"°\"'E\"°\"Y\"’= Find it in the scene\nta rget3 . FindWithTag (\"Player\") : ‘\n\n// make the gameobjects znacnve (mv151b1e)\ntarget1.SetActive(fa1se):\ntarget2.SetActive(fa1se):\ntarget3.SetActive(fa1se): MICHIGAN suvsnu »\n\nREFERENCING COMPONENTS\n\nI» = gameobjecttransform\n\n \n\nvoid Update () {\n\ngameobject.transform.position.x += 1:\n}\n\nvoid Update () {\n\ngameﬂhj ect.tran5form.Trans'late (1,o,o);\n} REFERENCING COMPONENTS\n\ngameObject.GetComponent<TYPE>()\n\nJ\n\n\n\nAK MICHIGAN snnznm »\n\nREFERENCING COMPONENTS\n\nprivate Rigidbody rb:\n\n     \n  \n \n  \n \n    \n\nvoid Start () {\n// get a reference to the Rigidbody component\nrb = gameobject.GetComponent<Rigidbody>():\n\n// turn gravity on\nrb.useGravity = true; PROGRAMMING IN UNITY\n\nP-n ‘. MICHIGAN surzwum. .n\n\n \n\nPROGRAMMING IN UNITY\n\nGood documentation (use it!)\nvhtt 2 unit 3d.com learn\n\nOnline Unity Community\n>http:/ unity3d.com supportzcommunity WHAT’S NEXT WHO WILL? \\\\\\\\I 7\nFE\n\nSPARTANS WILL.\n\n#GAMEDEV"}, {"path": "E:/Coursera/hadoop/05_spark/03_lesson-3-job-scheduling-actions-caching-and-shared-variables/04_broadcast-variables.mp4", "id": 2479, "text": " Broadcast Variables . Tfansifer-j L-J31 fo‘nc;j_e= peir E .cuter\n. Efficient peer-to.-peer t7rariSfe¢r config = so.broadcast({\"brder;':3, “fi|ter\":True})\n\nconfig.va|ue Broadcast variable example\n\nFor example large configuration dictionary\nor Iookup table:\n\nconfig = sc.broadcast({\"order\":3, “fi|ter\":True})_~\n\nconfig.va|ue E\n\n‘D .‘hg! config.va|ue Broadcast variable example\n\nFor example large configuration dictionary\nor Iookup table:\n\nconfig = sc.broadcast({\"order\":3, “fi|ter\":True;,_,n,‘\n\nconfig.va|ue R\n,\n\n‘L 4‘ -A\n\n3 (936 Ir'1’?f?'rfgjLt-'1%r.T<a’-t1'té>.%1n‘= :d!c:1%r.e:m:‘ar;y»-V\n\nconfig = sc.broadcast({\"ordér\":3, “fi|ter\":True}) ‘V\n\ni‘.\n\nye«%§¢é\n\nconﬁg.va|ue Broadcast variable example\n\nFor example large configuration dictionary\nor Iookup table:\n\nconfig = sc.broadcast({\"order\":3, “fi|ter\":Trué’\n\nconﬁg.va|ue T‘ =r:‘g;t;=: n’:f?'r‘gj:;amti:@.n: \n\n \n\nconfig = sc.broadcast({\"ordér\":3, “fi|ter\":True‘\n\n3 .) '\nconﬁg.va|ue\n- w.\n- . V’ \\\\\n\nL 4 ozr ‘»|f’o‘.c> my\n\nconfig = sc.broadcast({\"ordér\":3, “fi|ter\":True}) ~\n\nhad\nconfig.va|ue u config.va|ue config = sc.broadcast({\"ordér\":3, “fi|ter\":True})\n\nconfig.va|ue .=r:'9:e Fr1?Ff7Q?EiWti7©ﬂ1 é:.’t‘i~‘.e:m=am—.y-V\n\nozr ‘»|f’o‘.c> my\n\nconfig = sc.broadcast({\"ordér;':3, “fi|ter\":True}) \n\nconfig.va|ue E config = sc.broadcast({\"ordér\":3, “fi|ter\":True})\n\nconfig.va|ue conﬁg.va|ue conﬁg.va|ue Broadcast variable example\n\nFor example large configuration dictionary\nor lookup table:\n\nconfig = sc.broadcast({“order\":3, “fi|ter\":True})\n\nconflg.va|ue I"}, {"path": "E:/Coursera/initiation-programmation-java/01_initiation-a-la-programmation/03_bases-de-programmation/02_introduction.mp4", "id": 5303, "text": " qivnu\n\nIlllflllllllilillll\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier “(WW ”(1’|l” 1IVIII‘1IIWIIHIIINIIH||lW|||l1|lWVlll1l|H\n\nIll}lllllllllllIINIIUIIIIIINIIlllﬂlllllllﬂ virtuellep\n\nC PU\nlllllllllllllllVIN||ﬂ|||l||N||llllllllllllll Il|’ll_I réﬂéchir au probléme;\nconcevoir Ia sequence d'instruc1ions\n\n   \n   \n\ntester Ie programme sur la\njmachine virtuelle\n\n   \n  \n   \n\nécrire un programme Java :3\npariir de cette réﬂexion\n\ncompiler Ie programme Java\npour créer un programme en\nbytecode IIPILI I(|’ll_I mm: IM- rs-.-.-r.~_—.s:\n\n \n\n \n\nI-'-. I’-umx... 4 I wlzlil\n\n \n\nI-'... I’-um ha I - um... I\nl Mucnsu um\n\n \n\nI-'... I’-'..u«xms I aubn: class Meuduorld\n\n«us... Is..- Sm n -...... -\nwhit: class Meuduorld\nI\n\n1,11\n\n \n\n \n\n«us...\n\nI’....... In: rum: dnss Meuduorld\n{\n.(;¢suc sum: Md minmringu arcs)\n\n \n\n \n\nmu... nus \\-—..\n\nr..._. mu n-.....4...\n\nll: class Nellauorld\n\n  \n  \n  \n\nH: mm: Md IIain(StrinqD args)\n,‘[_§ylpeq.o‘u¢.na1nt|n{3l§|'L|o, prim‘);\n\n\\-as |u...'. um ‘ sy:;:eq.o‘u¢.pa1ntIn;:u¢Mov .-.-mm-);\n\n\\-as |u...'. um n-.....4...\n\nll: class Nellauorld\n\n  \n   \n \n\nH: mm: Md IIain(StrinqD args)\n‘]_symq.o‘u¢.pr1nt|u;:m|o, prim‘);\n\n\\-as |u...'. um has um... um Mil: class heuouorld\n\n \n\n \n\n(\n- Till: sunk wid Iain(StrirIgD args)\n9¥I$==I'.nIIe.privI!I.ﬁE'l,|,e1la« .\\,-am‘:\n)\n..... ...4 '  — —— Mama» —\n\n \n\nw... r.'..... m—....-\nmm class Icelxounrld\n(\n\ngﬁlic SM!“ vnrid I|ain(StI‘ilIqD ales)\nsyma.u;¢.prin:w;.-uelto. ,-w1.m:® aw-  m ~-\nwbu: class ueuouoru \"\"“\"\"'”‘\n{\n' ?§\\l< SM!“ void lIlilI(Stl‘ilIgD args)\n\n.sgsm-.u:¢.pm:InvZ\"\\e'11a. -um:-‘)1\n\nH . xI‘I-llﬂhsa. u\n,__ ,___,  uuum,-»-. \n'.'.'.....\"\"'..__..\"““\"“\"\n\n   \n\nn-... ;...u.'. 1.... ‘ m----- \n\nMu: elm nelmeru\n(\n- p-am: um: um nain(String|:| ms)\n\n9ymu.oue.p:-intlmrlseue, pui-1A1‘);\n\nu... u. -.annm=.n-\n_-:E...;_.....-—.».—a........n.-—.nu..u........-......n.mnx-. I(|’llI"}, {"path": "E:/Coursera/initiation-programmation-java/01_initiation-a-la-programmation/03_bases-de-programmation/03_variables.mp4", "id": 5304, "text": " !(|'fl_!\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier ‘(Pll IIPIII I(V‘llI Cw)‘ llr\n\n \n\n \n\n. programme sur la\n= vinuelle réﬂéchir au probléme;\n\n    \n\ntester Ie programme sur la\nmachine virtuelle\n\n \n\n  \n\ncompiler Ie programme Java\npour créer un programme en\nbytecode '.‘-\"\"5\n\nséquenoe d‘instructions données F‘-\"\"9\n\n [  J W!\n\ndonnées F‘-'7‘!\n\nopérent sur\n\n/'\\\n\n— données !‘-'7‘! Fm‘!\n\nopérent sur\n\n/'\\.\n\ntraitements  j\nV >\n\n$2,, , \\,ur_ _ \\Ia-P‘ \\o\\e\n\"' ‘4\"\"\"“\"“ L‘ ‘ Q Inﬂuencent ‘L\n\n \n\n'5, 5% .. L7.+\\_,_): +5 zo\n\n \n\n<S\\“‘”‘ S; :,o\n \\ =-‘3\nz\n\n‘1.«\\\\<:):-r SA-u ‘°v~\nShaw Ill’ll-\n\nUnﬁosséde 3 caractéristiques:\n- Sor—qui est le nom par Iequel la donnée\n\nest désignée;\n- Sorgqui déﬁnit de quel « genre » est la donnée\n\ncontenue dans la variable; ?.::f. ¢ .».....x;«s\n\n- Sa- Par exemple, si la donnée est un nombre, sa\nvaleur pourra étre 123 ou 3.14 ymuc um Lesvmams (\npllllc mu: wall mllI(StrlngE| ms) (\n\n \n\n \n\n:n-q...m_~:ms'_-.'u.'—-a. nu pm: clan Lesvmams (\nE nu: nun: mu -umsu-inoI:| -res) (\n\n. mi.“ .\n} Une variable non Initlallsée ne peut étro utlllsée.\n\nPar exemple: “Glue __._ 5 ;\n\nﬁtarre\n\n—> int ncarrei\n:5 *\n\n '\ndonne une erreur a la compilation:\n\nvariable ncarre might not have been initialized\nSystem.out .print1n(nCarre) ; erﬂﬂer\n\n‘E\n£4;\n\ndouble x = 1.0;\n\n\\> E? €V\\‘k‘{Q K‘\n\n\\> A: uM,‘,R_\n\n2:\n\n5% -my\nDéclaration de variables\n\nD'autres exemples de déclaration:\n\nintm= 1;\n\n            \n   \n \n\non peut déclarer plusieurs variables\nsimultanément. Il|’ll!\n\nFypes de variables\n\nLes principauﬂontz\n\n— int, pour les valeurs entieres (pour integer, entiers en anglais);\n— double, pour les nombres a virgule, par exemple 0.5\n\net aussi:\n— char: pour les caracteres (AIAZ etc.); I(V‘llI '.‘.\"\"!\n\nAffectations\nL'exécution d'une affectalion s \n\nGD\n\n(4) ..\nT 4\nr1Carre = n * 1'1; “\n\n‘F./C:J\\c En mathématiques:\n\n.—4>b=a+1\n\n_———~\n\n \n\nsigniﬁe que tout au long des calcul\n\nAutrement dil, quel que soit a, b sera toujours (!.ga !a > 1\n\nEn Java:\n\n \n\n'1'“! ‘Qéclaration dej Mg\n\nII peut arriver que la valeur d‘une variable ne doive pas changer aprés\n|'initia|isation. Dans ce cas, il faut ajouter Ie mot-clé final devant Ia declaration:\n\nfinal type identificateur = valeuriinitialei\n\nPar exemple:\n\n—» final. double : = %\n\nDans ce cas, on ne peut plus modiﬁer la variable:\n\n \n\nvITEssE_DE_LA_LUMIERE — 100; // erreur\n\na.u.,,.r\\aJr\\--'."}, {"path": "E:/Coursera/initiation-programmation-java/02_structures-de-controle-1-branchements-conditionnels/01_semaine-2-structures-de-controle-1-branchements-conditionnels/01_branchements-conditionnels.mp4", "id": 5307, "text": " -:(|’fl!\n\nBHIIIISIIIPIIIIPIIIS lillllllilillllllﬂls\n\nInitiation ‘a la programmation (Java)\nJamila Sam, Vincent Lepetit et .JeanACédric Chappelier I(l’I\\I IIMI\n\nJusqu'ici, toutes Ies instructions des programmes étaient exécutées, at Ies unes aprés\nIes aulres.\n\nLes structures de contrdle permanent de changer ce compodement.\n\nII y a 3 structures de contrélez\n- Ies branchements conditionnels,\n~ Ies itérarions, at\n~ Ies boucles conditionnelles.\n\nNous allons commencer par la ui permet de s_a_u1gL\n du programme 5 cen nes ont rem s,etquiu1i|isent[e\n\nmot-clé i E. 5,4 Qcqn») { V\nBax \\//Z/NE\n\nJ 2153 <\nBLOC Fm/555\n\n,. \\/KW;\n Ia\nSys em‘out.pr).nt1n4\"Votre nombre est plus petlt que 5.\");\n\n‘Delse\nSys em.ouv;,pnnc1nq\"voc:e nomhze est plus graﬁd cu egal a 5.\");\n\n0 7-7‘? (/55 FEM\n\nLes accolades dellmrtent un bloc d Inslrutmons\n\n \n\nt, \n\nSys\\:em.out.px:1nt1n(\"Votre nombze est plus grand cu egal a 5.\"); Les choix imbriqués\n\nL'instruc1ion if suit donc le schéma:\n\n1f (conditionl)\n1;? ‘ @ vHu'£4-’\n(D\n\nii \"Emotions flgurant dans (es blocs sent absolument quelconques. ll peut done s'agir d'au1res Supposons: '‘\n\nA\n;f1x—y)( Fa\n\n1f 1)’ == 2) (\nSystem.out.pr1nt1n(\"Les cnns valeuxs sont ega1es.\"),-\n) Else (\n\nSystem.out.print1nI\"seules 1es deux premieres valeurs sont ega1es.'')7\n}\n\n} else (\n1f Ix 2) (\n\nSystem.out.print1n(\"seules la leze et la 3eme valeuzs sent; eqa1es.\");\n1 else (\n\n1f (y == z)(\n\nSystem.out.p1:int1n(\"Seules les deux dexnieres valeuxs son: ega1es.\"):\n) else (\n\nSystem‘out.pr1‘nt1n(\"Les trols valeurs sent d1ffexentes.\"|.'"}, {"path": "E:/Coursera/initiation-programmation-java/02_structures-de-controle-1-branchements-conditionnels/01_semaine-2-structures-de-controle-1-branchements-conditionnels/02_conditions.mp4", "id": 5308, "text": " !(|’fl!\n\nconditions\n\nInitiation 3 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier I(l‘|lI 311117 lmll\n> Attention: ~ \" “\n\nLbpérateur our tester si deux valeurs sont egales s'écril avec deux\nsignes ég\n\nUn seul sign.eprésenl_\n\nPar exemple. si on veul tester si la variable 11 est egale a 5, il faul\n\nécrire: I\n\nif (3 == 3) ‘—\netnon as: Y‘ ’ 5 .\nac,»-cc c.e\\..\\=«'\\»Jn~o~—\\\négal é\nmférieur ou égal é\nsupérieur ou égal a‘\n\nI: different de\n\nOpérateurs d lnt a: 1;\n\n1ntb—2: W\nrx\n\n \n\nKr“;\n1: 1a 1:) (\n\n-—~ system.out.print1n1\"cas 2\") ; A\né_\n\n   \n\n) else (\nsystem.ouc.prin:1n1\"cas 1\");\nfans;\n\nZT\n—-D1f12*a!-b){\n\nSysten\\.out.pr1nt1n(\"b est different du double de 3.\");\n\nl\n.—o\n\nafﬁche\n\nC35 2 I(?‘llI ’’’’’’’ 1 K \"\"\"\"\"\" l K ’’’’’’’ 1 K Les opérateurs logiques\n\nL'opérateur loglque ! @\n\npar example, Ia condition ,\\ rut\n\n’<—<t% 341:.\n\n\\SL\n>m.L\nest vraia si (a < b) est 1ausse, at fausse si ra < b) estvraie\n\n  \n\nNous verrons des exampl"}, {"path": "E:/Coursera/initiation-programmation-java/02_structures-de-controle-1-branchements-conditionnels/01_semaine-2-structures-de-controle-1-branchements-conditionnels/03_erreurs-de-debutant-le-type-boolean.mp4", "id": 5309, "text": " _-H(|'fl!\n\nErreurs Ile Iléllulant\nll! ume boolean\n\nInitiation 3 la programmation (Java)\nJamila Sam, Vincent Lepetit at Jean—Cédric Chappelier “.f}'|\\' ' ENE guns classiques\n\nif (a O\n\nSystem.out.println(\"a vaut 1\"): On peut initialiser des booléens é I'aide des constantes false et : rue.\n\nOn peut uliliser des booléens oomme des conditions. Par exemple:\n- on peul uliliser des opérateurs logiques (as, at I) entre booléens;\n\n~ on peul uliliser un booléen comme condition dans u a\n\n_>:nra=1,\n\n \n\nr} b:..;ledn\n\n     \n\nC\n9 bomeau d '7’\na I‘ GEN E\n4...;\nI L\n'7 ‘' Kg)’ ‘ +~uJ., M ‘ +_e‘\n\n-9 System.out.p:intln{\"e vaut true\");\n} ' M ’"}, {"path": "E:/Coursera/initiation-programmation-java/03_structures-de-controle-2-boucles-et-iterations/01_semaine-3-structures-de-controle-2-boucles-et-iterations/01_iterations-introduction.mp4", "id": 5310, "text": " r W : ‘rm’ ‘ La boucle for\n\nUna boucle 2: r permet de répéter un nombre donné de fois Ia méme série d'instructions.\n\nPar exemple, si on fait:\n\nle programme afﬁchera Ies carres des 5 premiers entiers:\n\n£u1(1n:\n\n}\n\nSystem.out.pr1ntln(\"le carre de “ + 1 + \" vaut \" + 1 * i):\n\ni=O;i<E-\n\n++i)\n\n(\n\nIEPHI\n\ncarre\ncarre\ncarre\ncarre\ncarre\n\nde ivautﬂ\nde A vaut \\1_\nde g vaut J1_\nde 3 vaut 9\ndei vaut L6) M0?-Clé fo r\n\nIfPIlI\nCondition:\n\ntestée avant Fexécution de chaque tour de boucle.\nSi elle est fausse, on sort de la boucle,\n\n{Eu\n\n++L,' if“?/f/'\n\n \n  \n\n(\"le Carr de “ + 1 + \" vaut \" + 1 * ii;\n)\n\nDéclaration er initialisation: Incrémentatinnz\n\nn'est exécutée qu'une seule fois_ exécutée é Ia ﬁn de chaque tour de boucle. Elle permet\navant d'entrer dans la boucle de changer la valeur du compteur de boucle (ici. la\n\nvariable 1).\n\nRappelz ++i; ajoute 1 é Ia variable 1. Cette instruction\nfail Ia méme chose que 1 = 1 + , ; IfP|lI\n\nComma pour la 15, Ies accolades ne son! obligatoires que si plusieurs instructions\ndoivent étre répétées.\n\nSi il n'y a qu'une seule instruction, on peut ne pas utiliser d'acco|ades:\nf*:(.n' 1 =.'r;1 < :: ++1)O\n\n*7SyStem.Out.prlntln(\"i = \" + 1);\n\nO\n\nMais, toujours comme pour Ie if, il est conseillé de ga der Ies accolades:\nr::(.n', i = U; i < u; ++i]\nSystem.ouL.println(\": = \" + 1'): Q>_r(déc1a2:a\n\nboc\n_._\n\n)\n\n \n\ntion_et_initia1isa t:io1@ incriation)¢{\n\n- Si Ia condition ne deviant jamais fausse, les instruciions dans la boucle som\nrépétées indéﬁniment ! Afﬁchage d’une table de multiplication\n\nOn peui remplaoerz\n\nSystem.out.\nSystem.out.\nSystem.out.\nSystem.out.\n\nSystem.out\n\npar\n\n \n\n‘I\nLa variable i prend ici Ies valeurs d\n\nprintln(“5\nprintln(\"5\nprintln(“5\nprintln(\"5\n.println(\"5\n\nL\n\nmultiplie\nmultiplle\nmultiplie\nmultiplie\nmultiplie\n\n\\<A0\n\nnt'  155 10,- 3;i)(\n\nSystem.out.println(\"5 multiplie par\n\npar\npar\npar\npar\npar\n\nm m w M H\n\nvaut \" + 5 * 1\nVEUC\"+5*2\nvaut \" + E * 3\nvaut \" + 5 * 4\nVaut \" + 5 * 5\n\n\" + 1 + \" vaut\n\nu + 5 * 1); Que s'afﬁche-I-il quand on exécute Ie code :\n\n{—V {‘o.4\n’~‘>for(inf. i = O: i < 5; ++i) ( i\n\nSystem.out.print (i)_I + V\nif(ig2::o)(L€Aqaau\\47.. 4 Z\nI—|\nSystem.out.print(\"p\"); FL‘ ‘'4 P\n)\nSy5t:em.out.print(\" \"H\n}\nSystem.out.println():\n\nA:0p12p34p 5\"\n\n?\n\nB:0p1234\nC:012p34\n\nD2 Op 1p 2p 3p 4p -I. a-mLu.n..gn_-IIA =+..m. J! [Fr 3\n\n1-1\n\n'92‘: ' -  - J\"\"'\"F\n\n.|.¥mM!_ L  % gm\n,\\\n\nu'n::"}, {"path": "E:/Coursera/initiation-programmation-java/03_structures-de-controle-2-boucles-et-iterations/01_semaine-3-structures-de-controle-2-boucles-et-iterations/03_iterations-quizz.mp4", "id": 5312, "text": " !(|'ﬂ!\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier I 16?“? 1 1. I 16?“? 1 : :;,.“_l Que s'afﬁche—t-II quand on exécute Ie code :\n\n-a:>for(inL i = G; i < 3-, ++i) I\n\nforlinr, j = 0; j < i: ++j)(\nSystem.c:ur..print(j):\n\n)\n\nSystem.out.print1n (“\");\n\n-a>\n“$9\n*9"}, {"path": "E:/Coursera/initiation-programmation-java/03_structures-de-controle-2-boucles-et-iterations/01_semaine-3-structures-de-controle-2-boucles-et-iterations/05_blocs-d-instructions.mp4", "id": 5314, "text": " -(|’ﬂI‘\n\nFunctions: IIIOGS\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et .Jean~Cédric Chappelier F!-\".\"!_ Ii|’l_\nLes blocs\nLes blocs ont en Java une grande autonomie.\nIls peuvent contenir Ieurs propres déciarations et initialisation de variables:\nif (i !: O) (\nint j = 0 ;\nj ; 2 * i;\n\n)\n// A partir d‘ici, on ne peut plus utiliser j E‘-'7‘! HF\"! I(_|’llI\n\n     \n\nNotion de portée\nLa d'unevariab|e,c'es      \":.: ' '~ 7;: 3\n. autrement dit ou elle est déﬁnie, existe, a un sens.\n\nif (i != 0)@\n\n   \n\nM ()2 .7 '.‘i'.'.‘E um:\n\nPortée : régle\n\nEn Java, on ne peut pas utiliser Ie nom d‘une variable\ndéclarée plus globalement pour déclarer une autre\n\nif (i !: 0) ‘ variable\n\nintj =0;\n\nCela permet d'éviter des ambigurtés entre noms de\nvariables. E“-\"‘! Inm-\n\nPortée : cas des itérations\n\nLa declaration d'une variable a |'intérieur d'une itération est une déclaration locale\nau bloc de la boucle, et aux deux instructions de test et d‘incrément:\n\nforjffai; €31; @\n\nSystem.out .println@);\n\nA perm moi. an"}, {"path": "E:/Coursera/initiation-programmation-java/04_tableaux/01_semaine-4-tableaux/03_tableaux-declaration.mp4", "id": 5316, "text": " !‘l\".‘!\n\nTEIIIEBIIX : declaration\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier ' '0'“ HM Les crochets mdiquent vv\nplusneurs élémems. ‘\nII existe deux\n\n1. Dans |‘i\n2. Dans r Situation en mémoire \"\"-\n\nlmportant : Un tableau n'est pas de type de base,\nil est donc manipulé via une reference!\n\n[0] [1] [2] [3]\n\n1000 1500 2490 6450\n\nK\n\nint[] scores\n0\" 0|\" We '8 ‘law 1(3) 0\n\nLa variable scores contient une adresse : Femplacement du tableau en mémoire! HWY ' (PH Initialisation d’un tableau de {a \"”\"'\n\nDans Ie cas général, on ne oonnait pas Ies valeurs\nde tous Ies éléments Iors de la déclaration du tableau\n\nOn utilise alors plusieurs instructions pour déclarer e_t initialiser :\n\n1. Déclarer le type du tableau Am’ C] smut: : iii )v\\\\’ ‘V\n@ Construire Ie tableau avec : vs]:\n\n \n\nnew type [ taille 1 D K\n3. remplir Ie tableau élément parélément ’\n\nSaws Acces direct aux éléments d‘un tableau W-\n\nJ‘/WE '3 tab :\n\n‘Alva /WY CA3’);\n\n4039 {PX\n\nAttention ! Les indices correspondant aux elements d‘un tableau tag L03’)\n\nLe i+1éme élément d‘un tableau tab est accessible\nau moyen de |‘indexation :cab[_i]\n\nde taille T varient entre 0 et T-1 ‘\nK ; M5103 C Li .\nLe 15' élément d’un tableau tab précédemment declare est donc\ntab[0] et son 1oe element est mus] _D ML; [M3\n/l,_\n\nAttention 1 En cas danegst Iancée par le programme\n\nmy situation d‘erreur provoquant |'arrét du programme si on ne la traite pas\n(la gestion des exceptions n'est pas présentée dans ce cours d'inIroducIion)\n\nll est impératif que |’élément auquel vous voulez accéder existe effectivement! Initialisation d’un tableau de taille fixe\n\nUne tois Ie tableau déclaré et construit, il faut\nIe remplir élément par élémenl :\n\nint[] scores = new int[4];\n\nscores[0] = 1ooo;4—\nscores[1] = 1500;\nscores[2] = 2490;\n\ns<:ores[3] = 6450;\"’\n\n \n\nSituation en mémoire :\n\nEL [1] [2] J51].\n1000 1500 2490 6450\n\n_ ‘int[] sgg\n\n'f“’\"' lnltlallsaﬂon dun laﬂurdn ujllla Hm:\n\n‘uﬁmans Ia Iamgm uléuaau-am.:m-miunu mraul\n‘k rullnill iiamaal val Iiamael\n\n   \n     \n\nEn!!! |% IN Iii Ml:\nl“lM,I'W E M '\nE lllllllu\nM:-ul _ = MIN\n.....r_m .uu':.n... -\n\nn‘ ma ‘Ill [31\n;.iﬁru~5vﬁ:ésia»a§v:\nI\n\na\n= |mII] mp:"}, {"path": "E:/Coursera/initiation-programmation-java/04_tableaux/01_semaine-4-tableaux/04_tableaux-traitements-courants.mp4", "id": 5317, "text": " MlH(|'fl“-%\n\nTillllﬂallll : trailemems IIIIIIHIIIIS\n\nInitiation 51 la programmation (Java)\nJamila Sam, Vincent Lepeiit et Jean—Cédric Chappelier nuhh: ms: Iterntinnnzbleuu\n{\nmu: sum: vow «mn(smug|:| orgs)\n[\nincl] um .. 0.2.3);\n\n// mramm sur ensembu an valeurs\nfor((nt m : talﬂi\n\nSYsteI|.oat.pnntIn(va|)§\n}\n\n// uerauun rlassmuz\niur(iy\\t a . 9: i < 3; «+i)(\nsys:u.o«c.p-snunngm);\nJ\n, x Acces aux éléments d’un tableau (2) W‘\n\nAttention, les iterations sur ensemble di  \nest trés. eu mais :\nne permet pas modiﬁer le contenu du tableau\n\n® >\nC’) > ne permet d’itérer gue sur un seul tableau a la fois : il n‘est pas possible de\ntraverser en une passe deux tableaux pour les comparer par example\n\n@ > n  ne peut pas par exemple comparer\nu et\n\nlb\nCD > itére d’un pas en avant seulement. 4”“ H V‘: = KW» 2’ 3'\n\n£5: (Am ﬁg %q\\n){ Erreur : accés avant construction \"\"\"\n\nll est impossible en Java d’accéder a un élément si Ie tableau n’a pas encore été\nconstruit,\n\nLa construction se fail :\n\n> Soit en indiquant Ies valeurs directement dans |‘inslruction de déclaration\n> San en spécifiant Iataille avec new type [taille]\n\nExemgle:\nint[] entiersl = {1, 2, 3); // Dé<:1uxation-initialisation\nentiers1[0] = 4; // UK\nint[] entiers2; // Declaration\n%>entiers2 = new int[10]; // Initialisation\n\nentie1's2 [0]"}, {"path": "E:/Coursera/initiation-programmation-java/04_tableaux/01_semaine-4-tableaux/05_tableaux-affectation-et-comparaison.mp4", "id": 5318, "text": " !<'7‘k'\n\nTahleaux : aﬁeclation Bl comnaraison\n\nInitiation 51 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier Types de base I Types évolué (rappel)\n\n  \n\nO-ab\nqY’Q’3;;o'a\n2% ML; 0‘ ”\n’ ‘Aw\n-2 4-. 5 cf BES3 ~3$$© Tableaux : sémantique de |’opérateur == (2)\n\nPour vérifier l‘éga|ité de contenu des tableaux,\nil faut écrire explicitement les tests :\n\n#3 jf (a = M11 ||—|| a.1eng'th != b.1ength) {\nSystem.out.print1n(\"contsnua différenta nu nuls\");\n}\nelse {\nint 1 = 0;\n\nN» uhi1e(  an (aim\n\n++i;\n}\n\n—>ir (1 >= a.1ength) {\nSystem.out. rint1n(\"contanus identiquea\");\n\n \n\n}\n\nelse {\n\nSystem. out .pz‘int1n(\"contenus différenu\")\n> L F[(PKC_J Quelques exemples de manipulation de tableaux\n\nSaisie au clavier des éléments du tableau :\n\n> Il est toujours nécessaire d \n\n*9 far(int i =3; i § talxlegﬁth; ++i) (\nSystelmout.prin1n(\"Entrez 1‘é1ément \" + i + \":\");\ntab[iJ = scannex-.nextDoub1e();\n\n}"}, {"path": "E:/Coursera/initiation-programmation-java/04_tableaux/01_semaine-4-tableaux/06_tableaux-a-plusieurs-dimensions.mp4", "id": 5319, "text": " _q§I'rtg_\n\nTalllﬂﬂllll 3 IlIl|SiBlll'S dimensions\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier ﬁ(\\’|\\'T [ €EPl\\’ I i W’ If?VlI IGPIII («D [,0 Q-’~> , __\n\nIGPIII av>1‘c.o\\«;.§\\ . ._\n\nIFPIII IFHII Parcou rs W‘\n\nLe moyen le plus naturel de parcourir un tableau multidimensionnel consiste é\n\nutiliser des boucles MWHMHEZ\n—~>1.1'°bouc|e:faitvarier|e1°'indice j_‘’{ %—4\\ 2‘ 3 §'é:\nin .93. 4-\n515.4135} 3 6\n\n—I> 2. 2° boucle : fail varier Ie 2e indice\n\nExemgle  \\“”‘)“\"'°\n\n_-pior(irn: 3 1 < y.1ength; +¢i) {\nior(int _j_= 0; j < y[i].1ength; ++j) {\nSystem.out.print1n(y[iJU1); (Hi ' Wk\" ‘ ' ‘EM CIEPHU Les tableaux en Java\n\nEn Java, on utilise :\n\nlaille initiale connue a prioli?\n\nnon our\n\ntaille pouvant varier Iors de ow  \n\nI-utilisation du tableau 7 non tab|eaL:?< de tanlle tableaufx de tanlle\nIXE 1X9"}, {"path": "E:/Coursera/initiation-programmation-java/05_tableaux-dynamiques-et-chaines-de-caracteres/01_semaine-5-tableaux-dynamiques-et-chaines-de-caracteres/02_string-introduction.mp4", "id": 5320, "text": " !(|’f_\n\nString: introduction\n\nInitiation 3 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier IEPHI r Ml’ 3 IEPHI Concaténation \"P\".\n\nLes concaténations de la forme String+char constituent donc un moyen trés\npratlque pour ajouter des caracteres a la fl ne chame.\n\nDe méme Ia concaténation char+St:ring permet |'ajout d‘un caractére en début de\n\nchaine.\nExemple : ajout d’un '5’ final au pluriel :\n\n   \n \n \n   \n\n's,e:.+,»~ \"\n\na String reponse = \"solution\";\n//...\n\n-9 if (n > 1) {\n\nreponse =\n\n} 1 WI’"}, {"path": "E:/Coursera/initiation-programmation-java/05_tableaux-dynamiques-et-chaines-de-caracteres/01_semaine-5-tableaux-dynamiques-et-chaines-de-caracteres/04_string-traitements.mp4", "id": 5322, "text": " !(|’f_\n\nS tr ing: lfﬂilﬂlllﬂllls\n\nInitiation 5 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier IEPHI Les char d’un String ‘Em.\n\n» Lnnstrucnon cha1ne.charAt(1ndex) donne Ie caractere occupant Ia posmon\nindex dans la String chaine\n\n> L’inslruction chge ‘ indexof (caractéére) donne la Qosition de la gremiére\nocgwe du char caractere dans la String cgagge, E13 Si caractere n’est\npas dans chaige\n\n» chaine1.len th donne |atai||e(c’est»z11-direle nombre de caractéres) de\nchaiuei. Attention : il y a une paire de parenthéses ; différent des tableaux!\n\nI 1 \"\nE,xe,r1mg: FD &c,;,‘.Li .\n-—)Strjng S1 = \"abcmbx\"; m\n\n   \n     \n\n—>int longggeur = s1.1engch(); // 6\n—7 char :1 :53.cnarAt@; // a\na char c2 =§_LcharAt(gogg\\_1_suI — 1,); // x\nam: 5 =E1’.3'ndexDf('}J_); // 1 G X /1\n\nas Les caractéres sont numérotés comme Ies éléments d’un tableau (a partir de 0) substring Im-\n\n. .  1 . 4 ' »~ ~\nchame.substrmg(pos1t1on1, pos1t1on2) :donne Ia sous—chame comprise\nentres Ies indices de positionl (compris) et position2 (non-comgris)\nExample:\n\nzxastring exﬂye :¢§;‘&?éai;;sti’ti:ti6 ’e1;';\n—>string racineﬂot = example. ubstring(4,16);\n\n   \n \n\nconstruit Ia nouvelle chaine \" coustzitutzion\". IEPHI"}, {"path": "E:/Coursera/initiation-programmation-java/06_fonctions-methodes/01_semaine-6-fonctions-methodes/03_fonctions-passage-des-arguments.mp4", "id": 5326, "text": " -.\".\" \n\nF0lIl:li0lIS: IIESSEIEIE IIES arnumenls\n\nInitiation 5 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier [MI IIPIII I(1‘llI Le passage des arguments (1) ‘W\n\nConsidérons Ia situation suivante (pseudo-code) 2\n\nstatic void methode(Tme v) {\n// traicement modifiant v\n\n}\n\n// ailleurs, dans le programme principal,\n// par example:\n\nType v1 = .. ; // initialisanon de v1\nmethode(v1);\n\n// V1 ESTAELLE MDDIFIEE ICI DU NON???\n\n \n\nEn programmation de fagon générale, on dira que :\n> |_'argument v est passé par valeur si methods ne peut pas modifier v1 2 v est\nune cople locale de v1.\n> Eargument v est passé par référence si methode peut modifier v1 ‘Le passage des arguments (2) '3\"!\n\n   \n   \n \n \n \n  \n  \n  \n   \n\nll y a done deux \n\nscacic void method ) { // Type :\n// traitement madinant 'objet référencé par v\n// traitement modifiant v 1111 méme (référence)\n}\n\n// ailleur :\nType v1 =\nmethode(;I;2,\n//1. v1 est—el1e Inodifiée ici?\n//2. 1'objet téiérencé par 33 estdl modifié\n// id?\n\nn\n-<:\n-u\n\n  \n\n// initialisation de V1 E‘-\"\"9\n\n \n\nPassage par valeur : type-\n\n \n \n   \n\nstatic void methode(Type v) {\n// craicement modifiant v\n\n \n\n}\n\nType v1 = ..; // lnitialisa '\nmethods (v1) ‘\n\n    \n\n:2? Si Type est un type élémentaire\nIa réponse a la question dans Ie code es- Type évolué : modification de I’objet référencé I-\"T\"!\n\npublic static void main(String[] args) (\n\nint[] tab = {1};\n\nm(tab);\n\nSystem.out.print1n(\" tab[0]= \" + :ab[0]);\n}\nstatic void m(inI:[] x) {\n\nx[0] = 100; // modification de 1’obJet\n\n// referencé par x\n\nSystem.out.print(’'x[0]= \" + x[o]>;\n\n}\n\n \n\nL'exécution de ce roiramme produit Paffichage 2\n\nLes modifications faites dans la méthode sur |’ob‘et référencé restent visibles é\nFextérieur de la méihode !\n\n(on a copié dans x Ia référence tab,"}, {"path": "E:/Coursera/initiation-programmation-java/06_fonctions-methodes/01_semaine-6-fonctions-methodes/05_fonctions-definitions.mp4", "id": 5328, "text": " '.‘!’“!\n\nFOIll3li0lIS: lléﬁlliliﬂlls\n\nInitiation 5 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier IM- Remarques sur |’instruction return (4/4)\n\nLe compilaleur doil étre sﬂr de toujours pouvoir exécuter un return:\n\nstatic double 1ire() {\n~> Scanner keyb = new scam:er(sgscem.in);\n%double 1: = 0.0;\no '\nSysteIn.ont.print(\"Entrez un nombr  ;\nn = keyb.nextDoub1e():\nwhile (E:\necurngf\n\n}\n\n \n\n‘W! IE|’fl! mm: IE|’flI_ lzmq IE|’flI_ mm; La méthode main Im-\n\nmain est aussi une méthode avec um ma\n\nPar convention, tout programme Java doit avoir une méthode main, qui est appelée\nautomatiquement quand on exécute le programme.\n\nIientéte autorisée pour main est 2"}, {"path": "E:/Coursera/initiation-programmation-java/06_fonctions-methodes/01_semaine-6-fonctions-methodes/07_fonctions-surcharge.mp4", "id": 5330, "text": " !(l’fl-\n\nfunctions: surcharge\n\nInitiation 5 la programmation (Java)\nJamila Sam, Vincent Lepeiit et Jean~Cédric Chappelier Ill’llI La surcharge de méthodes : exemple '*‘P~'_\n\n  \n  \n   \n  \n        \n \n\n--7 static void affiche(inc x) {\n_.>sys:em.uut.p{nTt‘1n(\"encsex : \" + x);\n}\n-—*,~static void afficbe(doub1s x) {\n») sys:em.au:.p?iR1n(\"ree1 : \" + x);\n} A A\n9 static void arfiche(i_£_x1, i_xzt?x2) {\n.)Systemout.print1n(“coup1a : \" + x1 + ~_n + x2);\n\n}\n\n(Ax\n3_£;,1che‘(1/), affiche(1.’E)) et affiche(1, 1) produisent alors des affichages\nI eren S.\n\nH -4\nX¢,L\"~.1A.o\n\nz;o».1X:.: /1,4 I(|’llI if (tempsleu 2, mo) { UP\".\nleicore . (int) (me ' Dnints / temsaeu):\n\n \n\n \n\n \n\n}\nreturn lescorzi\n}\n// ...._..._..._..._..._.._\nstatic int saisie£tca1:u1()\n(\n\ndouble nbVaints . o.a;\n\ndo {\nSyste4n.nut.print(” tntrez 1: novrbre dz paints (a-me) :\nnbPaim.s - c1avier.nextDoub|eO;\n\n) vfnile ((nbPoints < 0.3) II (nbPoints > 1001));\n\ndome tenps - e.a;\n\ndo {\nSystem.out.print(” Entrez le temps de jeu (1-so) :\ntenus .. c\\uvier.nextDoub1e();\n\n} mm ((temps < La) ll (temps > 60.6));\n\nreturn score(nhPoints, tenvs);\n\n}\n\n// .._..._..._.....\nstatic void afﬁcheResu1tats(int scurel. int scorez)\n\n(\n\n  \n\nsystem.out.print1n(\" Resuuats ~\"\nSysterlI.aut.Drint'ln(\" Jouzur 1\n5ystem.nnt.Drint'ln(\" Jouaur 2\n\n\" 4 scorn);\n\" 4 score2): \"(WV Wvr \"(WV"}, {"path": "E:/Coursera/initiation-programmation-java/07_etude-de-cas/01_semaine-7-etude-de-cas/03_puissance-4-premieres-fonctions.mp4", "id": 5332, "text": " Fonction affiche '9\"!\n\nprivate final static int VIDE\nprivate final static int JAUIIE\nprivate final static int ROUGE\n\nn u u\n\n0;\n1;\n2;\n\n?2‘arricne u pour une case rouge. x pour uns case jaune\nstatic void affiche(inc[][] grille)\n\nfor(int[] ligne : grille) {\nfot(int cellule : ligne) {\nif (cellule == VIDE) £\nSystem.out.print(‘ ‘);\n} else if (cellule == ROUGE) (\nSystem.out.prinC(’D');\n} else {\nSystem.out.print('X‘);\n} }\nSystem.out.print1n();\n}\n}\n\nint[][] grille = new int[6][7];\ninitia1ise(gri11e); I M’ ‘ I TE>'fl' ‘ I M’ Tester initialise et affiche \"'7\"\n\npublic static void main(StringU args) 0 o 433:4\n{ -_ H-_\nint[] [1 grille = new int[6][7]; A uuuuu an\ng,_._.4xD_...‘\ninitia1ise(gri11e); ' _____ __\n——1> gri11e_[_2;L§J : mums;\n———)grill [4] = UGE; “““““ ”“\n\naﬁic rill ; HHHHH H“\n} I M’ Retour sur affiche \"'~\"\"\n\n// affiche u pour me case rouge, x pour mas case Jauns\n{\n\nSystem.aut .pxint1zI()}\n\nfor(int[] ligne : grille) { . \\' mg\n_uSystem.out.print(\" I\"); ‘M’ ‘II %\nfar(int cellule : Hg-ne) {\n\nif (cellule == VIDE) {  I\n\nstatic void affiche(inc[]U grille)  Q|WI700P\nI I I\nI I I\nI I I\nI I I\n\nSystem. out .pr1nc ( ‘_ ');\n} else if (cellule == ROUGE) {\nSystem. out .pxinc ( '0');\n} else { “\nSystem. out .print ( '3');\n}\nSystem.out.print(‘ I ');\n} _\nSystem. out .px‘int1n();\n}\n\n__4>\n_y Sys:em.ont.print\nior(int i = 1; i\nSystem. out .print\n\n     \n   \n\n11e[0].1ength; ++i) {\n+ i);\n\n}\n3SystsIn.ont.print1n( ==\\n\");\n\n}"}, {"path": "E:/Coursera/initiation-programmation-java/07_etude-de-cas/01_semaine-7-etude-de-cas/07_puissance-4-methodes-estcegagne-et-compte.mp4", "id": 5336, "text": " wily\n\nPuissance4:mélnoIIes es tCeGagne el\ncompte\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetite1Jean—Ce'dric Chappelier —:(\\‘ﬂ\" ' E ‘ml?’ 1 I TEPFIU I “(W 1 Retour sur la méthode main '‘\"'~'''\n\nin cauleurloueur = mums;\nboolaan gagne;\n\ndo {\ndemAndeEtJoue(gri11e , couleurjoneur) ;\n\naffiche (grille) ;\ngagpne : estCeGagne(gri11e, couleuuoueur);\n// on change la cauleur pour 1a couleuz ds 1'autrs jnuenr:\nif (cauleumoueur == JALTNE) {\ncouleunloueux = ROUGE;\n\n} else {\ncou1eu.rJoue\\u' = JAUNE;\n}\n\n} um1a( Igagne); I WI\"? . mm:\nMethode compte \n// :1 (compte(g1'i11e, ligne, colcnna, -1, +1) >= 4 \nstatic int compte(int[] [] grille,\n\ninc lignebepart, int colonnellepart,\nint dirLig'ne, int dirﬁolonne)\n\nint compteur = 0;\n\nint ngne : lignellepart;\nint colonne = colouneneparc;\n\nwhile (gri11e[1igne][co1onne] =: gri11e[1igneDepaIt][co1onneDepart]) {\n\n++compteur;\nligme = ligne + dirljgne;\ncolonne = colonne + dirCo1onne;\n\nN IEPHI Méthode compte ‘ml!\n\n// if (compte(gx111e, ligne, colonna, »1, +1) >= 4 \n\nstatic int compte(int[] [] grille,\ninc ngneueparc, int colonneuepazc,\nint dirLig-ne, int dircolonne)\n\nint compteur = 0;\n\nint ligne = lignehepart;\nint cclanne = colonneneparc;\n\nwhile (gri11e[1igne][co1onne] == gri11e[1ig;1eDepart][co1onneDepart]) {\nMzcompteur;\nngze ligne + dJ'rLig'ne;\ncolonne colonne + dircolonne;\n\n}\n\nu u\n\nreturn compteux;\n\nH IEPHI Retour sur la méthode estCeGagne\n\nif (cou1eu:Case == cou1eurJoueur) {\nfinal int 11gnenax = gri1le.1ength - 4;\nfinal int colonnehax — gri11e[1igne].1ength — 4;\n\nif (\n// en diagonals, vers le hint et la drone:\n(ligne >= 3 an colonne <= calozmeﬂax an\ncompte(gri11e, ligne, colonne, -1, +1) >: 4) H\n\n// lwnzoutalsment, vars la droice:\n(colonne <= co1onneMax uc\n<:ompte(gzi11e, ligne, colonne, 0, +1) >= 4) H\n\n// en diagonals, vers le has at la droice:\n(ligne <: ligneﬂax && colonne <= colonneﬂax an\ncompte(gri11e, ligne, colonne, +1. +1) >= 4) H\n\n// varticalemsnt, ver: 19 has:\n\n(ngne <= ngnenax an\n\ncompte(gri11e, ligne, colcnne, +1, 0) >= 4)\n{\n\nratnm true;\n\n'37\"! IIWII"}, {"path": "E:/Coursera/interactive-python-2/01_week-5-mouse-input-list-methods-dictionaries/02_week-5b-dictionaries-and-images/03_visualizing-iteration.mp4", "id": 5381, "text": " Visualizing Iteration\n\nJohn Greiner\n\n/\n\nJ ;_,_..-. W-.. ;  ...-.M... .  ....,_.._ 4;‘ lﬂrmlnl\n\n \n\n \n\n, -mm, . xm Qi eﬁe sgunxes g: cm mmhaxs )n m. . .\n\nrind‘: u\n. V 1 n 9. numbers:\nxu:u1z.IPpInd(n -4 1r\nH 1.3».\n\n   \n   \n\n‘mm mm mum. 5. -21»\n\n  \n\n \n\nFume; oh;-cu\n\n:...w.\\.. m M ., S<<11 lnowv ... ..\n\n \n\n..m... (.4. xu:u1z.IPpInd(n -4 1r\nxetuxr 1.3».\n\n \n\nFume; oh;-cu\ngm‘ ..u..._u.mu. 5. -21» .... ....4 ,.. :...«m, ... W. w. ..... ...m.. V » ¥lr<| .. M... am... >,.....y.... M...‘=..,. .... v 3.: .._.._.......«...m.\n- -.......... W »... .... an ., .. 0.. 4...... xnnge.\n..»,.... h-um] >. 9 ...a mum — nu ...a nun]\n\nrw E %\n\n BEGIN\n\n3 .. an in 5..\n. dzi . n,_..._.....,...h.u,..\n\n\"';x.x .... . 1... .. tnoau Anya: 5.... EDIE ..= ......... ..\n\n \n\nD\n\n     \n\n     \n\n \n\n   \n\n \n\nmm H Fumes or-nus\n. 5.. .. u .. 2...... _ n_\nH .__}___wb_m: ....... .......... tunccxan .._...,....au us\n. 3....» ..=.==..=m..m .5 ..._....9.\n..m mu , - .....m.. ..u._... nnaeubuxlsi\n‘*~ ’ ha»: \"um-. /\n\n. biHs_m_ra\\ge2 ./x.¢.....m.. ......_...,....m....u..\n\ndef ...u._..._....g.zu..u...\n. .e—,.... :5... fat .,.n .. ...n. .2 ;\n\n  \n\n_....g..u..m1 I\n\n \n\n   \n\n.g..-. ...n. .. .... -zru-5.-W). umox, nmm. nsmum\n\n \n\n:¢..s....... ... ..... ., S<:11 N... ... . .. .............\n\nc.....W ... M... u. Ml ..... ...». .. ...., .... ..4 W... 5.... ......... new\n\n“W 1 (H W,\n\nrum-gs om-M:\n\n \n\n     \n\n.:~-:.- mm_~..\n\n>s,1n_v’1wI .\nem-_wg...-a-x .\num,\" mg.) r ’\n\n    \n\nﬂu. |znu 5 ..«m—. ..-ma...\n\n   \n\ncxvnn 4'. nu. ‘:2’: '=’, '1:' mm\n\n.......g. ——\na mum: bustcm I\n5. ..m.u=\n\nonly = ”\n\nEcx =n .. -Assays:\n\n...-a ~ cxPn:1x|=h}\n\n \n\n1 9,,“ .g.,.,¢, ~...=.a., .9, ..,.,\nL - mm hnlzen\n5.: a.=.,a.u\n\n:ln:g“'\n\n \n\nM Kay, \".1... ... cziuz . Inns“.\n.5 :h vlluuz\n\n;‘ dnsg x.,,\n\n~ \"ﬂccpdmi ~..7-,\n\n    \n\nmm ,.....g. an-my\n«. : Update m .9. mm:\n\n;c 3,: nainggtnsgh\n\nnan: .......q.\n\nnasazge .39\n\n1...; t._ux:(:ugY\n\no c...“ . m... ...a ... an =-xn-1-an m\nm... — .,.9;..,....=x...._:xmu= 9...,-,\nM ..m. */an\n\n   \n\n \n\n \n\n-vunt r..m.m\n4, ma, zoo)\n\n   \n\nmm vnxxnziqn\n\ns<mb\\4guu\ncxvmt\nMme\n\n         \n \n\nmu... ob}-cu\n\n \n\nmm“)\n\n(ﬁn-9\n\n'-=6 I-~=I' mm... mm.»\nluuuun «men\n\ndmsg ~=.~\n\nch ~..~\n\ntunznnn ,..._m.-an\n\nwho -1»\n\n:9..s..m.. _., M .y Sam M...\"\n\n.. llvI0|€~E|M\\rvV|nlSku\\V Vwxmn .... .m.y»...n............. em.».mm..~.w...‘......."}, {"path": "E:/Coursera/interactive-python-2/02_week-6-classes-and-object-oriented-programming/02_week-6b-tiled-images/02_visualizing-objects.mp4", "id": 5387, "text": " {\n\nVisualizing Objects\n\nJohn Greiner\n\n/\n\n4 =2... p.,..=s=\n\n       \n \n\nx.\n\n \n\n:u1f.=ward: :\n\n \n\n.=;.m...m;\n\n \n \n\ndef n=_=:mnsu=1E, inﬂux, M...“\n\n  \n \n\n \n   \n\nszli .m.4m.au: value 3\"“-\ndzf .,.._cmm.m, n9dex)' Fr-mes umecu\nrecur)’. .m.mm..na.x1\nmun-x m...x.. ».,‘.=..<u.\n\n  \n \n\n--, eawrdxn-Kc: — n. 51\n.=.;...a¢=.m,..m;\nP:un:3(=m:Kﬂ1nn:elY\n\n   \n\n    \n\n \n\nm...sm. sn v .\n\n  \n \n\n \n\n:{ ,,.,u_=..,am, In)\n\n  \n \n\n,, .m.~_ p.ga:_:eaxd(DY\nFun: a.-;.=A=mam:\nprim: x.ga:_=caxdLD)\n\n \n \n\n    \n\n \n\n  \n\n..= .m....w. uM.4......m.,WY......M...Wm.»....m._..‘.v.‘.m.... . L 3:1 .:uA(A![il\\deX] valua Elm-\n-y =aw:dn\\ m — n. 51 mm _V '__ ’ “\n, _.m, M\nprint. x.ga:_=auxdm) a h '\nPomnmslnnu\n\n \n\n:...s»w. ... M. ., San ... ~ bvulv A def :u=_=:m:d(I=lE. inﬂux, M...”\nL ,m.=m.4;rs.au1 = valua\n\ndzf .,.._mxay.m, nvdax\nmm. l¢lf.==wxS:hn\n\n \n\n'1 ==.m...;.. = n. 51\n.=.;...a¢=..m..m;\n\n!:vin:3(=w:vrd1nl:ulY\n\nmusu-, sn\n\n \n\n,: ,,..u_=..mn, nu)\n\n, print p.ga:_:eaxdYDY\n.u Prnwr I-9-=_=;mxdu7)\nprint. x.ga:_=c=xd(D)\n\n    \n\nEND\n\n \n\nFulms\n\nsxannx vnxx-Ila!\n\nmm\n\nzaavdlna\n\nznnvﬁnilu\n\nRemm\nxaue\n\nI1:\n\nNun:\n\nunjecu\n\npm. .1“.\n\n \n\n»g....1\n\niaﬁii ~\n\n:...w... ... M. ., S<n1 ... ». .....u . » L 3:1 .:uA(A![il\\deX] valua Elm-\n-y =aw:dn\\ m — n. 51 mm _V '__ ’ “\n. ' ’ ’ In\nprint. x.ga:_=a=xdm) ‘ ‘\n\nW W\nM Pomnmslnnu\n\n \n\n:...s»w. ... M. ., San ... ~ bvulv II D\n\n \n\n  \n\nA class mm\n\n. 5,: _;m/um, =.m,......:\n\n..n.=ma. = m».«mm...:..;\n. def :u=_=:m:d(I=lE. inﬂux, M...”\nK ,.u =m.4m.au1 valua\n. def .,.=_=may.m, mm-\n\nmm. ..n.=me.ma.x1\n\n1 =ma;...;.. = n. 51\nm...m.,m,....,;\n\nm..m=maa...e..»\n\nFeinuﬂlll. in\n\n \n\n_t ,,..u_=.mm. In)\n\ngrin: ,,..,.._mx.-1m\nFun: I-9-=_=;mxdu7)\nprint. x..,.=_=mayo;\n\n    \n\nsssm\n1°\n.\nW\n=..m...$ ’_\\\n\n \n\n:...w.r— ... MAR » y... ... ». s....\n\n.. ;., mm... W.‘ W M...\n\n‘. N W Y... \"4 M... ’:n7mn »....m.... w...m.n... ."}, {"path": "E:/Coursera/internet-of-things-sensing-actuation/03_terminology-cheat-sheet-beginner/04_lesson-3-supplemental-material-beginner/02_java.mp4", "id": 2834, "text": " 1 | Java (oop)\n\nAdvantages Disadvantages\n\n0 Code reuse/recycling ° Size ' V9\"Y W99 P\"°9'a\"‘5\n. Encapsmaﬁon o Slower than other programs\n\na Design Benefits\n\nExample:\nI can have an animal class. A dog would derive from an animal class, as would a cat. I\ncan ask each animal for Ils age, size, etc. This info Is identified as common among both\n\nanimals.\n\nI can deal with animals using common methods such as speak, eat, etc. I can add a\nnew animal later such as a parrot and most of my code would still remain unaware of\nthis addition. The implementation of parrot worries only about parrot particularities,\nwhile I can continue to derive the commonalities from animal class. 3 §R6\n\nJ .i'§ . Mmr-non among W 1 | Java\n\no Object Oriented\n\n0 objects - things that do something; has some kind of behavior, has some\nkind of behaviors (i.e. states)\n\na Android Development ( _\n«:2 Java\nj\n\nc Many libraries available\n4;\n\nu Documentation: http://docs.orac|ercorn/javase/7/docs/api/overview-summam\nhtml\n\no Many teaching resources"}, {"path": "E:/Coursera/intro-programming/01_your-first-computer-program/05_introduction-to-selection/01_selection.mp4", "id": 5411, "text": " E\n\nSE’\n\n4-I‘-(D\n$80.; 0\nanus 9\nIII\nI\n\ncode yourself ! F ,\n\nmove mm steps\n\nif an edge, bounc. SELEUION\n\nSHE4<~SNJi'i n\nSelection invoives the use of\nconditions to control the ﬂow\nprogram and make decision .1‘, THE UNIVERSITY UNIVEURSIDZ/\\D 0R1-\nofEDINBLIRGH '\"‘\"’““’"}, {"path": "E:/Coursera/intro-programming/01_your-first-computer-program/05_introduction-to-selection/03_conditions-within-selection.mp4", "id": 5413, "text": " . F>|ay\n“ Create\n.. program 2 yourself ! E\n\nSE’\n\n4-I‘-(D\n$80.; 0\nanus 9\nIII\nI\n\ncode yourself ! soomw    H BOOLEAN WHAT IS YOUR FAVOURITE EOLOURR\nHOW OH) 15 RUHNR\nWHY DOES ARERI LIVE IN [DINBURGHR\n\nWHEN IS YOUR PARRY? THE UNIVERSITY UNlVEURSlD{\\[) onu-\nafEDINBURGH \"\"‘““’"}, {"path": "E:/Coursera/intro-programming/02_code-gone-loopy/03_birthday-card/02_birthday-card-cake-behaviour.mp4", "id": 5429, "text": " 4.:\n‘U\nCD\n9.\nU.)\nL\n\n>%’\nEa:\nas\n\ncode yourself !\n\nI: Program E\nSE\n<v?2°3\n O0\nEBII ».\n.:I\n\ncode yourself ! BIKIHDAY (ARI) PROGRAM\nBUTTERFLY DIALOGUE ¢ S(m:>\\20mlneEmIav\nQ1755! f run nu ms na-\n\n[-1 Unwed\n\n      \n \n\n..««v\n\nsnmn rwwsvme 6 / «:1 I\n\n‘1 S(m:>\\20mlneEmIav\n\n     \n \n\n::r_2aor..~....y.......\n\nmm: 9'/am Umukq\nh . SQ\n‘I45\n\n \n\nShine)\n‘ Iv . ,.\n-.\nV E\n§\n\n1:‘ E/GI ...«mx.\n\nmsm 9/an\n\n \n\nE/GI E/GI Cﬂﬂ 0 no luv 1., mm\n\n    \n \n\nSwk-3  ;)‘.'a’.‘\nr\"”W .08\n_g.___ I.-II .....w\n\nE/GI . l4V AI .\nSMK-3 WW 9 / (3 n\n\nE/GI Swk-3 mm Um L 4\n\nE/GI Erzm 0 ...~ E... ... .....\n\nE‘-I Unmieo p . saws\n\n \n\n \n\n. .,y -. ‘\nNewspvre 6 / A Q\n1:2» \"W\nE73\". C='.“.TrZI I no E... was A...\n\n[I] Unmieo swm\n\nN\n\n_ U, .44\nmwsome 6/QII\n\nHm‘ ‘\n\n.....w\n\n \n\n|\"I[||[El| HM” Sm. MWSPIM 371:”; ‘\n\nrim‘ ‘\nTI umm\n\n..i''..\n\nE/ﬁﬂ\n\n3\nE\n1\n—\nnj éam 0 Mn mv Va; A... ; +:::: 0\n\n \n\nSwlh WW 9 / «D a\n\nram‘ ‘\n3-H ...m~\n\n.35.\n\nE/ﬁﬂ\n\nI\nI\nI\n1\nTHE\n1\nI\nI\n_\n‘\n-\nZIE\nI\n1\n—9 saws\n[-1 mm F .\n\n. ..u v ‘--\n\nmm. 9/can {I3 Unwed p Q 54\"“\n\nSD06 Wm 3 )1: S ‘\nh\n‘I .08\n:72; Ei ﬂ n-v mv ms nu.- {I3 Unwed p Q 54\"“\n\n..4,,.\n\nsome wsm 6 / «a I\nh\n‘I .08\nE72“. ..4,‘.\n\nSame: WW 9 / m g . M .. .\nSWK1 N¢WSpVﬁB o / m n I-; mm 1- 0 \n\n \n\n,.., .. ‘\n\nSwk-3 mm 6/ m a\n\n \n\nH\n1 .‘B\nE733 1*\n\nmm: 9 / mg Suaxehz OHM: in m. — 5 L\n\nBackdrop Library\n\nAl!\nmums\navnwuvs\n\n7\"‘ Am! p ,...‘\n\n. W\n\n‘ Wm:\n\nnmdlv '\nMun ma gm: - V\n\nN,“ no 4 av1>lm's wmm~ V v :2)»\n\nSpare\n\n HIDE-\n\n,«v, Ha»; an H Hv\\1!: At.\n\néHE@ME Backdrop Library\n\n \n\nSc-l1:hZONneEdvla:I\n\n\n\nH-ma-Bil\n\n“‘f“'   W‘! \n\nl.4lQl—f.»a Suaxehz OHM: in m. _\n\nBackdrop Library\n\nAI!\num:\nUvnwms\nWM‘\n\nﬂ nil ‘\n\nNam:\narm\n\nxx ﬂ ha,\n. 5} PO\n\n   \n \n\nswm\n\nmum.‘\n\nPi/én\n\n-o 0 an\n\n.Inn /\n\n\\\n\n \n\n \n \n\nH) 9\n\nI-<> -IOU/\\Jv=\n\n«=1:\n\nmm. mm.\nmm mmau E WW F. ‘ swm\nmum.‘ T\n\n \n\n \n\n‘E /é - '1 0 on Am: mm H) 3 u\nrk\n3 7 b I\n‘ ' \"2: \\\n. - D\nT\nE 4%. O\n- 2\n  9 / I: n ‘\n   mm\n27:: u - -- / x = = a\n\n| Mu-A:\nn , i .. F. ‘ smw\n\nmu-«.4\n\n \n\nmy Am: mm Nb?\n\no-o -IOU/~ Jvﬂ\n\n«=1:\n\nmm. mm.\nmm mmav maw\nInwnoamr\n\nE M. T -, 0 W  W.\" nae L‘\n\n \n\nI-0 -IOU/\\}‘=\n\n    \n\nSW, W W 9 / :1 g\n272.”. 3;}\nW Mu-A:\n\nmm” mmap ‘ “mm\n\nmu-«.4\n\nE/éﬂ\n\nV,\n\nwe on Am: mum\n\n$4\nIv\n\n \n\nI-0 -IOU/\\ Jvﬂ\n\n \n\n \n\n«=1:\n\nmm. mm.\nmm” ‘WWII? Cﬂ'ax\"ﬂOrI-vnnvvum-I\n\n  \n\n   \n\n   \n\n,5. ‘ \n\n   \n\n:ﬂ'=* -o 0 W  mum on :2 0 L‘\nA\nI\n\\\nD\nO\nT\n0\nJ.\nW   U I: A ‘\n£72.”. °\\;_f‘\nv..,..m.\n\n \n\nmm” ‘WWII? ‘ mm.\n\nIwanaunr\n\nE/é\n\n  \n\n-o (I Uuv W. mm 2134 ‘\n\nI-9 -IOU/\\Jv=\n\n \n\nIll! / \\ I = 4:\n,_ W\n\nW W.\nW, i __, \"ARHf' ‘ ‘ \"\n5:3”\n,2’ /.\n\n \n\n‘ \"“'I\"’-pf\n;.r ‘r THE UNIVERSITY UNlVEURSID{\\D 0R1-\nzy’EDINBLIRGH ”\"g““’"}, {"path": "E:/Coursera/intro-programming/02_code-gone-loopy/03_birthday-card/03_birthday-card-extend-with-if-then-else.mp4", "id": 5430, "text": " 4-:\n‘U\nCl)\nD.\n(U\nL\n\n>*%’\n£0\nas\n\ncode yourself !\n\nI: program E\n813'\n.u'é°8\n 0\nans: 9\n‘II\nI\n\ncode yourself ! :2 mm. 2 Omme mm\n\n \n \n\nvan-1 3+\n\n{-1 unnnm F o may\n\n{I} Unwed\n\nnuuvmuu\n\nPO\n\n-1+\n\nsum 2 mm em. 32¢.\n\na [I] Unwed\n\n \n\nEH E:azazn........m»-4\n\n \n\n \n\nswag ,...W e 2 ‘avg ‘ WW:   u‘ n I-\n«I-\n\nmm o .... .. ,. ..\n{-1 um F o \n\naasuaa-uuewgseastf:\n\n \n\n  o 2 L .. I-\n«I-\n\nmm o .... .. ,. ..\n{-1 um F o \n\n5 U8  I\" 383  5999 \n\n \n\nW, Wm o } Va‘ 1: ' mwsmue 0 / H\n\n_\n_\nw\n.._\n\nI Urviruud\n\n \n\n:5/an ‘@CII-vzavvnn-u &+7€}(I\nPC ‘ ‘ '\n\n[I1 Urvmw [I1 Urvxuw\n\nimzrsaon.-z..~....... a.+::..t\nI-0 ‘ ' , [I] Urmned [-1 unnnua F O “\"\"‘\n\nEm-;_g..........,.... ;+ 0\n\nti Emtaon.-........\n\n{I} umnm {-1 um, 1- 0 \n\nmt’-Elna--nu-vpsuu ;+“ 0\n\nI’ I‘ ~\nI u N\nW” M\n_\nW\nm\now.\n$3 [I] unumm\n\n2/an Eaﬁaomvmvmu .1.-H:::o\n\n{I} Um-um 1 um-Am F O Eaﬁaomvmvmu .1.-H:::o\n\n{I} Um-um E675.-Q0»-vm-Inn-I J-$24310\n\n{I} umm\n\n   \n\n w\nW, Wm »: / a n %\n\n \n\nMy [I] um-mm\n\n.m'aL==lQn.vu-v..»~ :.+:¢..o\nPO Eﬂliflln--zavvo-nu Eﬂ1ETlQn..zq.y..n-.4\n\n   \n \n\nsame;\n\n''’‘‘!!i\n\n  \n\nE/an E/Ii.\n\nmu .. ywv\nnmnu!\nM... «\n\nmvsume 6 / {H In mmc.............. .1.-+2:\n\n1-: um 43 . \nT\n\n   \n   \n   \n   \n\n \n\n  \n\n M. 3 2' la 5 ‘\n7\"‘! \"n\"!\n\n \n\n..,. %\n97:”: %\n\n% q=n\n--._ mane\n\n[-3 umuea 4! 9 ‘W\n\nK ,,,.... J.-#1:. u ywru “-\nmm\n\n \n\n3/an 7'‘!\n\nsun\n\nsame,\n\n1!!\n\n3\"‘!\nﬂﬂ\n\nmom: 6  «A n\n\nat same,\n\n'11?!\n\n3/an ‘m,mo-=.~w....... a.+::::o\n\n{-3 unm 45 Q \n\n       \n\n.‘ 7:\n3%‘\n1\n\n\\\nIt\n\n \n\nW, MW e Z a n\n\nLﬁﬂ |\n\n   \n\n2:; %\n52”: luau {I} Unwed ymtaomu-...... a.+::::o\n\n{-1 Unwed Q -\n\n   \n \n\nrm‘   3)}: n‘\n(1?\n\nam. 3/an man:\n\n[I] unmm m!'a‘:'.!u-a.-«nu.- a.+::::o\n\n[.3 MW . mm\n\n    \n\n \n\nway u. ywv\nnmnu!\nvmmlu 1\n\nsome: SDHV5 e / (‘A n\nF\"! '1'‘?!\n£73\": man:\n\n[I] mum QEEIII-'uvIh:nn &'§~2¢HO\n\n{-3 mm 9 s \n\n     \n\nAté REED»:-vu-vm-an Emmi-a-v-um.-m a.+:¢::o\n\n[-3 ummm 9 $‘\n\nI \nI\n\n  \n \n    \n\n \n\n« 3 2 la n ‘ %\nIE!\n\n  \n\nEmma u an an w. an\n7''‘!\ng\n$/::: ‘mE,..,........... a.+::..o\n\n[-1 unwm O “\"\"‘\n\n-is _...Q\n\nm .\ntin. 4\n\n- -1 +_\nV af\n\n”. 1*‘,\n“.4. .4‘ VERSION 2 Tl-ll} LINIVERSITY mm m_..m;..\\u utrr\nL:}fEr)”\\IBL\"{(1l’{ \" '”“'“'>‘ THE UNIVERSITY UNlVEURSlD,:\\|) ORT\ng’EDINBURGH ”“\"“’"}, {"path": "E:/Coursera/intro-programming/02_code-gone-loopy/05_software-requirements-design-and-implementation/01_software-design.mp4", "id": 5433, "text": " 4.:\n‘U\nCD\n9.\nU.)\nL\n\n>%’\nEa:\nas\n\ncode yourself !\n\nI: Program E\nSE\n<v?2°3\n O0\nEBII ».\n.:I\n\ncode yourself ! SOFTWARE DESIGN\n\nZ SUHWARE DESIGN\n\nSoftware design involves\ndescribing ail aspects of the\n\nsoftware to be built, such as\nthe user interface and the\nfunctionaiity of the software. USER INi[KFA[E\n\nThe user interface is the\nmeans in which the user\n\ninteracts with or controls\nthe software application. ‘ES FRESSENG THE GREEN FLAG\nME THAT IS NEEDED? -IS RRESSING IHE GREEN HAG\nALI IHAI IS NEEDED?\n\n-IS IHE USER GOING I0 BE\nRRESSING KEYS, EOR ERRMPIE I0\nIUNIRUI AN UBIEIIR\n\n-IS IHE USER GOING I0 BE\nUSING IHE I/IMERA?\n\n—/INDWHAIIEHE/SHEDOESN’I .\nHAVE A [AMERAR . -TS TT [LEAH WHAT T3 ETPETTTD\nFROM HIM/HER?\n\n-[AN THE USER EASILY GUESS\n\nHOW TO TNTEHATT WITH THE\nPROGRAM? \"DE(0M|’0SITION\" THE UNIVERSITY ””'V*i,“:,';::,\" °'“\nqf EDINBURGH"}, {"path": "E:/Coursera/intrologic/02_Lesson_2_-_Propositional_Logic/01_2.1_Propositional_Logic_1_min.mp4", "id": 3161, "text": " Introduction to Logic\n\nMichael Genesereth and Eric Kao\nStanford University Session 2\nPropositional Logic End of video"}, {"path": "E:/Coursera/intrologic/02_Lesson_2_-_Propositional_Logic/02_2.2_Syntax_7_min.mp4", "id": 3162, "text": " Compound Sentences II\n\nImplications:\n\n(P => rt)\nThe left argument of an implication is the antecedent.\nThe right argument is the consequent.\n\nReductions:\n(4 = p)\nThe left argument of a reduction is the consequent.\nThe right argument of a reduction is the antecedent.\n\nEquivalences / Biconditionals:\n\n(p©q) Propositional Languages\n\nA propositional vocabulary is a set/sequence of\nproposition constants.\n\nGiven a propositional Vocabulary, a propositional\nsentence is either (1) an individual proposition\nconstant or (2) a compound sentence formed from\nsimpler sentences (as previously deﬁned) and that' s\nall.\n\nA propositional language is the set of all\npropositional sentences that can be formed from a\npropositional vocabulary. Exercise End of video"}, {"path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/01_getting-started-with-bluej/02_why-use-java.mp4", "id": 5479, "text": " Why Use Java?\n\nDuke Hello Around the World\nOlé mundo C/u lCEl;t1’2“aE'?'~\n\nHello world\n(c) g\n' ,  w\n\nL/~* Y£lCl oou Kéopog\n\nJava.» Hola mundo >\n\n3p,paBcTBynTe Ml/1p\nDukc"}, {"path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/02_variables-and-mathematical-operators/04_variables.mp4", "id": 5483, "text": " Variables\n\nDuke int x:\nint y: int x:\nint y: xw.\nCt\nnn\n11\n\nD.t.1.1.<£ mm x\nint y:\n\nDuke xv.\nct\nnn\n1; int x:\nint y: xw.\nCt\nnn\n11\n\nDuke int: X:\n\nint y: mt x\nint y:\n\nDuke int x: X v\nint yr mt x\nint y:\n\nDuke int x: X v\nint yr mt x\nint yr\n\nDuke. int: X:\n\nint yr mt x\nint y:\n\nDuke int x: X\n\nint y: mt x\nint yr\n\nDuke int: X:\n\nint yr int: X:\n\nint yr mt x\nint yr\n\nDuke int x: X 7\nint yr int: X:\n\nint y: int: X:\n\nint y: mm x\nint y:\n\nDuke »int x = 4.‘\n\nint y = 6: ma\n__\n\n‘hm X\n\nint y =4.‘\ninty=6:\n\nint x\n\n \n\nDuke ‘hm X\n\nint y\n\nn 4:\now.» »int x = 4.‘\n\nint y = 6: A...\n__\n\nx\nc\nn\n.1\n\nm\n__\n\nint y\n\n \n\nDuke intx=4.'\ninty=6:\n\n \n\nDuke int: x\nWm y\n\nn «I\nown 47\n\nint: x\n\n6:\n\nint y\n\n \n\nDuke intxgh\n\n*1nc y ‘ 5’ »int x = 47\n\ninty=x+2?\n\n \n\nDuke intx:4;\ninty=x+2?\n\ni.ntz=y—x.' ‘hm X\n\n \n\nDuke 4:\n\n‘km X\n\ninty x+Z?\n\n=y—x;\n\nint 2\n\n \n\nDuke *1“: X\n\n=4?\ninty=x+2?\n1ncz=y—x.- int x\n-51“ y\n\nint 2\n\nx+2;\n\ny—x: 4:\n\nint x\n\n \n\nDuke 4? x 4\n\nint x\n-51“ y\n\nint 2\n\n   \n\nDuke int x\n‘hm y\n\nint 2\n\nx+2;\ny—x: intx:4: X 4\n¢inty=x+Z:\n\ni.ntz=y—x.' int x\n\nint y\n‘km 2\n\nx+2;\ny—x: 4:\n\nint x\n\n \n\nDuke 4:\nx+2;\n\nlnt X\nint y\n\n=y—x;\n\nint 2\n\n \n\nDuke Duke int x\n\nint y\n‘km 2\n\nn\n.l>\nx\n\n»\n\nx+2;\ny—x:\n\n \n\nDuke Duke intx:4; X 4\n\nint y\n‘km 2\n\nx+2;\ny—x:\n\n \n\nDuke Duke intx:4: X 4\n\ninty=x+2:\n'intz=y—x.' V 6\nz 2\n\n \n\nDuke"}, {"path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/04_classes-types-and-for-each-loops/01_classes.mp4", "id": 5487, "text": " Classes\n\nDukc High-level concepts of classes and objects a\nt\n3\nD Object\n\nData + Code publxc class Point 1\nprivate int x;\nprivate int y;\npubllc Polnt(int startx, lnt starty) 1\nX = startxi\ny = stzatty;\n1\npublic int getX(J ( return x; }\npublm int qetYH ( return y; )\npublic double d1stanCe(Poim: otherP() (\nxnt dx x — ot:herPt.getX(|;\n\n \n\nInt dy — y — otherPt.getY();\nreturn Math.sqrt(dx « dx + dy ~ dy);\n\npublic static void main(Strin<Z[] args) Decqaraﬁgn gf\nPoint pl new Point(3,4); astanc\nPoint p2 new Point (6,8): math“,\nSystem.out.printlnlp1.dis(ance(pZ)) main p3's x =5, which is 4 from me\np3's y = -4, which is 5 from me\nsqrt(I6 . as): 7.2\n\n \n\np1 = new Point(1,2)\np2 = new Puint(-3,0)\np3 = new Point(5,-4)\n\np1 .distance(p3) ‘pl: (1,2 ‘"}, {"path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/04_classes-types-and-for-each-loops/02_new.mp4", "id": 5488, "text": " New\n\nDuke pubnc class pom: <\nprivate 1m: x.-\nprivate JnL y;\npublic Pointunt scartx, xnt starty) (\nx = startx;\ny = scarty;\n\nJ\n\npublic int geI:XH 1 return x; y\n\npublic int gemm ( return y.- 3\n\npublic double discancexpomn otherP\\:D (\nint dx x — otharPt.qet><();\nLnn dy y — otherP:.getY():\nreturn Math.sqr\\:{dx ~ dx + dy ~ dyl;\n\n \n\nI\npublic static void main(Strin<][] args) I\nPolnt p] = new Po1nt(3,4|;\n‘Pom-AI: p2 : new Po1nr.(6,87:\nSysr.em.ou:.prinI:lnkp1.d15\\:ance (p21);\n1\n\nDuke"}, {"path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/04_classes-types-and-for-each-loops/03_methods.mp4", "id": 5489, "text": " Method Calls\n\nDukc puhllc class Palm’. 1\nprivate m: x.-\npxxvate xnt y;\npumm vomum: startx, Lnt starty) (\nx : 5La:Lx7\ny — starry;\n1\npunnc m: gezxn 1 return x.- ;\ngwunllc Jnt gecyn 4 return y; >\npublic double d1s(ance1Po1nt or.herE't) 4\nInt dx : x - uche:PL.qe(X().'\nxnt dy = y — ozherPL.qe:Y1)7\nreturn mazmsqzuqux - dx 0 dy - dy);\nJ\npul711c statxc mm ma1n1S:r1ng[] argsy (\nFoxm, p1 = new Po;nr,13,«‘n;\nPolnr. p2 = new Polnl (6,8);\nSy5:em.ouf..pr1nt1n1p1.d1s(anCc(pZH:\n\nDuke\n\n \n\n \n\ny 4\nX 6\ny B"}, {"path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/04_classes-types-and-for-each-loops/04_types.mp4", "id": 5490, "text": " Duke\n\nTypes 3 DA\"\n\\ ' .\n050$ {Q6\n«:3 Q 3\n/  \\\\e\nx / F\n,0 9 J.1eRe5°ub ¥ +\n059 Ce 1‘, ‘\n9 y\n\n   \n\nYou've seen some types: int, Point, Fi|eResource...\nBut what is a type?\n\nDuke Types: Interpretation + Operation\n\n. Everything is a number!\n\n0 Specifically, represented as hits\n\na But not all numbers mean the same thing\no Types specify\n\n- Interpretation: what does a specific\nnumber mean?\n\na Operations: what can you do?\nn And how should it be done?\n\n \n\nDuke Interpretation\n\nsomeFunctio\n\nO1l0l01l01010101011l0101\nOOOOOOOOOOOOOOOOOOOOOOOO\n1010l01010l101l00O1010l0\n010010011001011000O00010\nOOOOOOOOOOOOOOOOOOOOOOOO\nl0llO1101ll0O0l010101010\n\n \n\nHammmw\n\n0 Type specifies interpretation\n\no If x is an String, these 15 and 05\n\nmean the location of the object\nDuke Operations\n\n. Types also specify what operations\n- Consider: x + y\n0 Ifx and y are both int:\n- Legal: does integer addition\no Ifx and y are both String:\n- Legal: does String concatenation\no Ifx and y are both Points:\n\no Not legal: + is no a valid operation\non Points\n\n \n\nD.1.1.l.<.e. Primitives Vs Objects\n\no Objects: String, Point, Shape, any\nclass you write yourself, \n- Reference (arrow) to object,\n\na Can invoke methods, access fields with\ndot\n\na Can be null\n\n- == checks if arrows point at some\nobject\n\n \n\nD,I.1.1.<,<:"}, {"path": "E:/Coursera/java-programming/03_strings-in-java/02_finding-all-genes-in-dna/04_while-loop-syntax-and-semantics.mp4", "id": 5505, "text": " Improving the Gene-Finding Algorithm\nWhile Loop Syntax and Semantics\n\nDuke While Loops: Back to DNA Code\no While loop basics\n\no Syntax: grammar\no Semantics: meaning\n\na Now can use to implement algorithm\n. Back to DNA\n\n \n\nDuke"}, {"path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/01_implementing-the-caesar-cipher/05_counting-loops.mp4", "id": 5544, "text": " Implementing the Caesar Cipher\nCounting Loops\n\nDuke Concept Review: Loops, Indexes\n\n0 You've used different loops in solving problems:\na Finding Codons or Tags in a String\no while (true) (... break ...}\n0 Reading lines from a FileResource\no for(String s : fr.lines ()) (. .}\n0 You've used indexes to access strings\no \"cgatga\" .indexOf(\"atg\") ;\no \"cgatga\" . substring (1 , 4) ;\n\n \n\nDuke Accessing Characters in a String\n. The reverse of \"CGATTA\" is \"ATTAGC\"\n\n0 Useful in genomics to process strand this way\n0 Palindromes can be source of fun\n. Haman i<a6aH Ha 6aKna>i<aH\n. Alli trota la tortilla\n. Eh, ga Va. la vache?\n\no Draw, O Caesar, erase a coward.\n\n \n\nDuke Indexing a String\n0 Must understand for loop with three parts\n\nSeparated by semi-colons\n\nInitialization (happens once, before guard)\n\nGuard, evaluated before loop body\n\nIncrement, executed after loop body\n\npublic §tring7reverTse(String s){\nString ret = \n\nfor(int k=0; k < s.1ength();‘{\nret = s.charAt(k) + ret;\n\nreturn ret;\n\n} 1\n\n} \\ . Continuing with Loop Tracing\n\no Continuing with tracing reverse(”pit”)\n\ns —|—>|p]it\n\npublic String r‘ever'se(Str'ing s){\nString ret = \"“;\nfor‘(int k=0; k < 5.1ength(); k += 1){\nret = s.charAt(k) + ret;\n\n1\n-’return ret;\n}\n\n \n\nV Duke \\ !.3_l.J.1.<..<:\n\nIdiomatic For Loop Idiomatic For Loop \\ \n\nIdiomatic For Loop Idiomatic For Loop\n\no Many programmers use i as index variable\n\nfcr'(int i=0; i < s.1.ength(); i += 1)\no Many programmers use i++, not i += 1 ,\n\nfor(int i=0; i < s.1ength(); i++)\n- Sometimes declare variable before loop, ‘ ,\\.\n\nso scope extends to after loop\nint i;\n‘For'(i=@; i < s.1ength(); i += 1){\n}\n\n// can reference value of i here\n\n \n\nDuke"}, {"path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/02_breaking-the-caesar-cipher/05_developing-an-algorithm.mp4", "id": 5554, "text": " Breaking the Caesar Cipher\nDeveloping an Algorithm\n\nDuke Counting Occurrences\n\nHi, do yll want a lollipop today?\n\nI own many good flavors,\nbut banana is outstanding.\n\n \n\na Code to scan text and increment counter\n\n   \n  \n\n{9,2,o,4,o,1,2,1,5,o,o,4,1,7,1o,2,o,1,3,5,3,1,2,o,3,'\n0123456713.. 14 232425\n\"ABCDEFGHL. O XYZ\"\n\nDuk: Counting Occurrences with Code\n\nString alph = \"abcdefghiji<1mnopqrstuvwxyz\";\n\nintlj counts = new int[Z6];\n\nFor‘(int k=0; k < messnge.'lengi:h(); i<++){\n\nchar ch = Character.toLowerCase(message.churAt(k));\nint dex a1ph.index0F(ch);\n\nif (dex ! ~1){\n\n   \n \n \n\n  \n\n0 Scan message, if character is alphabetic:\n\nu Find location in \"abcdefghijkimnopqrstuvwxyz“\n\no Use index to increment one of 26 counters\n\n \n\nDuke From Algorithm to Code\n\npublic String decrypt(Str.-ing encrypted)(\nCaesar.-Cipher cc = new Caesarcip-hex:();\nint-,[] freqs = countLetters(encrypted);\nint maxbex = maxIndex(freqs);\nint dkey = maxDex — 4;\nif (maxbex < 4) (\n\ndkey = 26 - (4-maxbex);\n\ne\n\nn Count 26 frequencies of 'a'—'z', 'A'—'Z'\n\no Find largest value, assume it's ‘e‘\nc Find distance from ‘e' which has index 4\n\nDuke u Use 26-distance to decrypt using encrypt! Values, Indexes, Details\n\no Array freqs has relationship between\nindex and value, freqs [8] is how many\ntimes 'i' occurs\n\n- When looking for maximal value, return index,\nuse to find distance from 'e' or 4 as shift\n\n0 Using the CaesarCipher class makes writing\nCaesarBreaker easier\n\na Call methods that work rather than rewriting"}, {"path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/02_breaking-the-caesar-cipher/06_summary.mp4", "id": 5555, "text": " Breaking the Caesar Cipher\n\nSummary\n\n.Du.k.e Arrays: Indexed Collections\n\na String[], int[], StorageResource[] or\n\no One variable represents “many values Using Arrays in Java\n\n \n\nD.u.l.<,e. Duke\n\nUsing Arrays in Java\n\nCreate storage when program runs, the\nsize of an array can't change, values in\narray cells can change\n\nString[] names\n\nnew String[100];\nnew int[2048];\n\"Zeus\";\n\nint[] counters\n\nnames[5] = Indexing Array Elements\n\no Typically use for-loops with indexes\n\no Sometimes build methods to solve problems\n\npublic int indexOf(String[] ltst, String word) {\nfor(int k=0; k < list length; k++){\nif (-.equa1s(word)) {\nreturn k;\n\n  \n\n}\n}\n\nreturn —1;\n\n}\n\nDuke Cracking Codes\n\n- You used arrays to crack a Caesar cipher\n- Counting frequencies, using indexing\nu Both encrypt and decrypt used indexing\n\na Internet encryption is more secure\n. Be careful!\n\n   \n\nDuke"}, {"path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/01_introduction.mp4", "id": 5556, "text": " Object Oriented Programming\n\n. Java: Object Oriented Language\n. What does that mean?\n\nu Encapsulate code and data\n\nObject = Code + Data\n\n f ; Fields Familiar: String, lmageResource, \n\n- Familiar example: String\no Data: sequence of characters CTACGATGCCTGATGA\n\no12345s7B9a12345\n\no Code: indexOf, substring,...\n\ns . 1enqth() 15\ns . indexof ( \"Droqram\") 4\ns . indexof ( \"a\") 7\ns . indexof ( \"f\") -1\ns . :i.ndex0f(\"a\" . 8) 14\ns . startswith (\"duke\") true\ns . endswith (\"kind\") false\ns . substrinq (4 . 7) \"pro\"\n3 . tovpnercase () DUKEPROGRAMMING\n\n \n\nDuke Class = Type, Object = Instance\n\n    \n        \n\n  \n   \n   \n\ncharacters =11-I e 1 l 0\nint index01‘(String str) (...}\nString substring(int beginlndex) {AAV}\n\n \n\n \n    \n  \n\ncharacters = [ﬁlo  1' d\nint index0f(String str-) (...}\nString substring(int beginlndex)\n\no Classes are types:\no Define what is in objects of that type\no Objects are instances of class\n\na Can make many (use: new)\nDuke 0 Why objects and classes?\n\n \n\no Facilitate large programs\n0 Some basics here: fields, constructors, visibility\n\n- Java Programming: Principles of Software Desigr. ‘\n\n \n\nD.,u.l<.e \\"}, {"path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/02_rewriting-with-encapsulation.mp4", "id": 5557, "text": " Object Oriented Caesar Cipher\n\nRewriting with Encapsulation\n\nDuke ’ _ 4 . _CaesarCipher\npublic String encrypt(Smng mput)(\n\nStringBui|der sb = new StrIngBui|der(input);\nfor (int i = 0; i < sb.|ength(); i++)(\nchar c = sb.charAt(i);\n\nint idx =n.'mdexo+(c);\n\nif (idx != —1)(\n\nC =%°“a'At<idX>I\n\nsb.setChar/-\\t(i, c);\n\n)\n\nD kgeturn sb.toString0;\nu\n3 What Is Benefit?\n\no Same functionality\no What is benefit of OO approach?\na Easier to think of Cipher as logical unit w/ key\n\nOld New\n\nmessage: rnzs-r zmcmii .-‘«'i\"l'ACK msr r:,s.m< mi-s5a(]e_ _\n\nKey: 23 ‘\n\ncazsamsmu\n\n1\n\ncram uanrL:< xooxzin B}-7E‘O C‘l‘:(Rll\n\nDuke.\n\n   \n\nLaruon ATTACK ms’: FLANK"}, {"path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/03_fields.mp4", "id": 5558, "text": " Object Oriented Caesar Cipher\nFields\n\nDuke CaesarCipher: Fields\n\npublic class CaesarCip|ner(\n\n  \n\npublic CaesarCipher(int key) (\naiphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nshifted/klphabet = a|phabet,substring(key) +\na|phabet.substring(O,key); What Does This Mean?\n\n. Every CaesarCipher has its own copy\na Can make different objects, different values\na Call method on object: use fields in that object\n\n \n    \n   \n\n%CaesarCipher\n\nialphabet “ABC...\"\nisnmedmpna “QRS... \"\n\n   \n\nCaesarcipher CaesarCipher\nalphabet \"ABC..\"' alphabet “ABC...\"\nshiftedAlpha “MNO... \" shif(edAlpha “ HIJ... \"\n\nDuke Summary of Class Concepts\n\n0 Class = Noun\na Method = verb\n\na Field = noun\n. Noun: Things that a class has\n\n \n\no Adjectives describe properties\n\n \n\nDukc"}, {"path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/04_visibility.mp4", "id": 5559, "text": " Object Oriented Caesar Cipher\nVisibility\n\nDuke Private\n\npublic Class CaesarCipher( Only code inside this class\n\nustring Eﬂphabet? can access private fieldsl methods\n\nEstring shiftedA|phabet;\npublic CaesarCipher(int key) (\n\nalphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nshifted/klphabet = a|phabet,substring(key) +\na|p|'\\abet.substring(0,key);\n\n} shiftedAlphabet has private access in Caesarcipher Why Private?\no Why private?\n\no Easier to just make all public?\n\no Abstraction:\n\n \n   \n \n\no Separation of interface + implementation\n\npublic Interface: What It Does\n\nprivate Implementation: How It Does It Genefavl‘ Guidance\nA‘ Fields: priwnee\n.- \"Typically part of irﬁp'Lame'htaE'r9n'\n’-. Methods; depends\n'-. ‘|‘hin9s'objx:ct daeér pusbhic\n-' Helgeis: pni7ya‘tei-\no Ck-1§ae§:‘pub|.ic\n-o Fornowcaiways\no- C;_a‘nstructo:s:.p.ubaliE\n.c For naw: aways\n\nEulﬁ:"}, {"path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/05_constructors.mp4", "id": 5560, "text": " Object Oriented Caesar Cipher\n\nConstructors\n\nDuke Constructors: Initializing Objects\n\npublic class CaesarCip|ner{\nprivate String alphabet;\nprivate String shiftedA|phabet;\npublic CaesarCipher(int key) {\naiphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nshifted/\\|phabet = a|phabet,substririg(|<ey) +\na|phabet.substring(0,key); Constructors: Initializing Objects\n\n    \n\npublic class CaesarCipher( E {alphabet _T,»'[A|B C \nprivate String alphabet; i5hiftedAli-“Tibet ‘i\"\"‘WiX Y \n\nprivate String shiftedA|phabet;\npublic CaesarCipher(int key) {\nalphabet = \"ABCDEFG-HJKLMNOPQRSTUVWXYZ\";\nshiftedA|phabet = a|phabet.substring(key) +\naIphabeLsubstring(0,key);\n\nCaesarcipher cc = new CaesarCipher(22);\n\nme"}, {"path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/06_summary.mp4", "id": 5561, "text": " Lesson Summary: Object Orientation\no Object Oriented Concepts\n\n0 Encapsulation\n0 Fields\n. Visibility\n\n- Constructors ,."}, {"path": "E:/Coursera/java-programming-arrays-lists-data/03_gladlibs-stories-from-templates/02_using-and-improving-gladlibs/01_introduction.mp4", "id": 5568, "text": " G|adLib: Stories from Templates\n\no Ready to tackle modifying the GladLibs story-\ntelling program: learning while telling stories!\n\na All the pieces of the program are ones you\ncould write yourself!\n\na You'll start with a working program, and\nunderstand and extend the program\n\n   \n\na Class design, method design, understanding\nprogram limitations but reveling in telling stories!\n\na Creating re—usable story—tel|ing components\n\nDukc Structure of G|adLib.java\n\no Constructor initializes object\n\no ArrayList for nouns, verbs, colors, \n\n  \n \n     \n       \n      \n\n- Random object for generating random choices\n\n. Read story template, process each word\n\na If <country> or <timeframes>s found: replace\n\nIn <country> a long time ago, nearly <number>\n<timeFrame>s ago, there lived a <color'>,\n<adjective> <animal>. It so loved to sing and\ndance, but there was a <adjective>,\n<adjective> <animal> named <name> that\nscared it so much!\n\no Print!\n\nDuks Stories from Template\n\no Running program generates stories\na One public method: makestory\n\nIn Ecuador a long time ago, nearly 105 months ago, there\nlived a yellow, jovial polar bear. It so loved to sing and\ndance, but there was a furious, angry rabbit named\nAlbert that scared it so much!\n\n     \n\nDuke Reading Words and Printing\n\no Template read from file or URL, simply loop\nover each word, if <|abe|>, then replace\n\na Finding labels straightforward use of .indexOf\nand .substring, for <noun>! or \"<color>\"\n\no Printing story displays words in console\n\na Method uses parameterized line-width\n\no Could modify to print to file\n\nlprivate void print0ut(String 5, int 1ineWidth){\n' int charswritten = 0;\n\n \n\nPuke Instance Variables\no ArrayLists for each <noun>, <color>, \n\n \n\nDuke Instance Variables\n\no ArrayLists for each <noun>, <color>, \na Name variables appropriately,\n- Create and initlallze in constructor\n\no Need all of them to replace a word.\n\nprivate ArrayList<String> adjectiveList;\nprivate ArrayList<String> nounList;\nprivate ArrayList<String> co1orList;\nprivate ArrayList<String> countryList;\n\nprivate ArrayList<String> nameList;\nprivate ArrayList<String> anima1List;\nprivate\n\nprivate Random myRandom;\n\n   \n\nDuke Find Substitute for <co|or>\n\no Based on <co|0r> or <noun> or use the\nappropriate list of replacements\n\no Choose vaiue from list at random in method\nrandomlirom, return for story-telling\n\no Both methods are private, used by sequence of\ncalls from pubiic method makestory\n\no Argument passed to source is instance variable\n\nlprivate String randomFrom {\n\nint tndex = myRandom.nextInt(source.size());\nreturn source.get(index);\n\n}\nDuke Initializing ArrayLists\nc We must construct and initialize many\ninstance variables\n\na Source could be URL or local directory\n\nin;i.tial;i.zeF:cm(\"data\") or initia1izeFrom(\"http: . .\")\n\n‘private void initializeFr*omSour‘ce(Str‘ing source) {\nadjectiveList= readIt(sour‘ce+\"/adjective.txt\");\n\nnounList = readIt(source+\"/noun.txt\");\nco1or‘List = readIt(sour‘ce+\"/color‘.txt“);\ncountryList = readIt(source+\"/country.txt\");\nnameList = r‘eadIt(sour'ce+”/name.txt\");\nanimalList = readIt(source+\"/animal.txt\");\n\ntimeList = readIt(sou rce+\"/timeframe . txt\"); ArrayList Instance Variables\nc To create a new label, <verb>, must create\nnew instance variable, e.g., verbList\n1 Modify code in two methods with verbList\nc initia1izeFromSource\no called: G|adLib constructors\no getsubstitute\no called: makeStory, fromTemp|ate, processWord\n\nc Program documentation should include\ninformation on how to modify code"}, {"path": "E:/Coursera/java-programming-design-principles/02_earthquakes-programming-and-interfaces/01_searching-earthquake-data/03_relationships-between-classes.mp4", "id": 3248, "text": " Searching Earthquake Data\nRelationships Between Classes\n\nDuke The QuakeEntry Class\n\no QuakeEntry class is essentially a POJO\n\no Plain Old Java Object — but here cannot\ncreate object without all characteristics\n\no No default/parameterless constructor\no Immutable with getters() 4 7 I\n\no Reasonable .toString() method\n\npublic class Quakelintry (\npublic Location qetLocat:'.on() 1 . .\npublic double getDepth() (...\npublic String getInfo() (...\n\nl V\nl The Location Class\no Many, many contexts: beyond QuakeEntry\n\n0 Use simple, functional design for course?\n\n0 Use industria|—strength design for course? '~\n\n0 Well adopt Android class\no Latitude and Longitude\n\n  \n\no Initialize from source\n0 Distance from A to B?\n0 More than state/POJO\n\n0 Behavior!\nDuke Has-A and Uses-A Relationships\n\n. QuakeEntry object created by Parser\n\n. Location constructor cailed from OuakeEntry A\nconstructor\n\na myLocation is instance field in O.uakeEntry:\nHas-A relationship\n\no Location used in EarthQuakeC|ient\n\n \n\na .distanceTo(..)\no OuakeEntry used in EarthQuakeCiient too\n\n- getMagnitude(..) \\\n\n1.3u.l.<¢"}, {"path": "E:/Coursera/java-programming-design-principles/02_earthquakes-programming-and-interfaces/01_searching-earthquake-data/08_summary.mp4", "id": 3252, "text": " Searching Earthquake Data\n\nSummary\n\nDuke Developing Classes and Programs\n\no Develop classes using Has—A and Uses—A\n\no Creating new objects and storing them in\ninstance and local variables\n\n. Using object~oriented principles for design\na Reading streaming data, parsing data\n. Use APls, read documentation\n\na Store data to have repeatable process for\ndebugging and smaller data for debugging l Software Licenses and APIs\n\nc We used the Android Location.java class\n0 Licensed with Apache 2‘O license\n0 Allows for reuse, changing code, more\n\n- We used the Apache Commons CSV too ‘ ~\n. Also licensed with Apache 240\n\n““*Apache\n\nSoftware Foundation\nhttp://www.apache.org/\nApache iogo by Jose’ Caries Ga||ego/ CC-by-SA 3 o\n\n\\ Processing Quake Data\no Searching for earthquakes satisfying\nproperties: magnitude, ‘location, more\na Returning Arr-ayLi5t 9'? Quaksaintry abjects\n0: ‘Finding closest N quakes\n- Aevoid slda effect of madifyirrg data, mznks a\nCﬁpy\n\no Fouﬁdation for further work‘: in searching V_ V‘\nand scwrting data\n\n \n\nI.3.,u.1.<e."}, {"path": "E:/Coursera/java-programming-design-principles/02_earthquakes-programming-and-interfaces/02_filtering-data/02_interfaces-to-avoid-duplication.mp4", "id": 3254, "text": " Avoiding Code Duplication\n\n0 First: look at two filters\na See similarities Idea: Parameterize—How to Filter\n\npublic ArrayList<QuakeEntry>\nfilter(ArrayList<QuakeE'ntry> quakeData,\nFilter f) (\nArrayList<QuakeEntry> answer : new ArrayList<QuakeEntry\nfor(QuakeEntry qe : quakenata) (\nif —> <\nanswer . add (qe);\n)\nLew,“ answer; But how do you make Filters with\n\n) different .satisifes() methods?\n\n  \n   \n  \n \n\no Generic method: parameterized by Filt\n\nDuke. Compatible Types\n\npublic ArrayList<QuakeEntry>\nfilter(ArrayList<QuakeEntry> quakeData,\nFilter f) {\nArrayList<QuakeEntry> answer = new ArrayList<QuakeEntry>();\nfor(QuakeEm:ry qe : quakeData) (\nif (f.satisfies(qe)) [\nanswer.add (qe):\n}\n}\n\nreturn answer;\n\nFilter f = new MinMagFilter(4.0);\nArrayList<QuakeEntry> largeQuakes = filter(list, f);\nf = new DistanceF'11ter (myLoc,100);\n\nArrayList<QuakeEntry> sha1lowQuakes =—\n\nDuke UH\nDw"}, {"path": "E:/Coursera/java-programming-design-principles/02_earthquakes-programming-and-interfaces/02_filtering-data/05_summary.mp4", "id": 3257, "text": " Filtering Data\n\nSummary\n\nDuke Interface Summary\n\n‘Fi=1-t_er f = new M-inM‘agFi—lI;er(4 .0);\nArrayList<QuakeEntry> 1argeQuakes\n= filter(list, f);\n\n   \n \n\na Type compatibility: use class as interface\n\n\\\nn Will still use methods in class: dynamic dispatch‘ \\\n\nDuke"}, {"path": "E:/Coursera/java-programming-design-principles/03_earthquakes-sorting-algorithms/02_sorting-at-scale/06_summary.mp4", "id": 3269, "text": " Sorting at Scale\nSummary\n\nD..u.l<,e Comparable/Comparator Summary\n\no Two ways to deﬁne ordering on a type\n\na Comparable:\n\n. Natural ordering on own type\na thingl . compareTo (thing2)\n\no Comparator:\n\no Ordering on another type\n\nc comparator.compare(thingl, thingz)\n\n   \n\no Can use either with Collections . sort (\n\nDuke."}, {"path": "E:/Coursera/java-programming-design-principles/04_n-grams-predictive-text/01_generating-random-text/08_interfaces-and-abstract-classes.mp4", "id": 3275, "text": " Generating Random Text\nInterfaces and Abstract Classes\n\nDuke Commonalities in Code\n\na Method MarkovRurmer . runMarkov\nc We changed MarkovZero to MarkovOne\no Code still worked! Why?\n\n3 Capture code commonalities using a Java\nInterface\n\n. Just as you did with Comparable and\nComparator\n\no Methods setTraining() and\ngetRandomText (int) Developing an Interface\n\n- Common method signatures in Interface\n\n   \n\nrllu\n\na Name interfaces starting with is common;\nwe create lMarkovMode| with required methods\n\n- MarkovZero, MarkovOne, MarkovTwo—each\nimplement interface; methods already there!\n\npublic class Markowwo TI\n\nprivate String in)/Text;\nprivate Random mykandom;\n\npublic MurkovTwo() {\nmykandom = new Random();\n\n}\n\nDuke Interface: Utility and Flexibility\n\no Write methods that use Interface\n\npublic void r‘unMode'l(IMar'kovMode'L markov,\nString text, int size){\nmar-kov.setTr'uining(text);\nSystem.out.print1n(\"running with \"+rnurkov);\nFor(int k=0; k < 3; k++){\nString st (size);\nprint0ut(st ,\n}\n}\n\nﬁarkovlero mz = new MarkovZero();\nr‘unMode'l(m2,text,800);\n\nMarkox/Two m2 new Mar'kovTwo(\nrunMode1(mZ , text , 800\n\n \n\nDuh: Software Design: Open-Closed\n\n. Open for extension, closed to modification\n. Don't change tested/proven code!\n\n0 Interface provides flexibility\no Add new, general MarkovModel class\na All orders 1,2,... implements IMarkovMode1\n0 No change to existing code! eg., runMode1\n\no Implement efficient version with HashMap\no Avoid re—scanning for 'th' follows\n\no Still use existing code with no change!\n\n \n\nDuke Abstract Class\n\n- MarkovOne, MarkovTwo, MarkovMode|\nclasses share state and code\n\n    \n  \n \n \n\no Each class has random number generator and\ntext in instance variables mykandom, myText\n\no Duplicated helper method getlrollows (key)\no Capture commonality in Abstract Base Class\no Relies on object-oriented concept: Inheritance\n\na Used extensively in java.uti|: Ab5tractList, and\nAbstractMap\n\nDuke AbstractMarkovMode|\n\no Class marked as abstract\n\na Shared state is protected, not private\n\npublic abstract class AbstractMar‘ko\\/Model\nimplements IMarkovMode'|. {\n\nprotected String myText;\nRandom m)/Random;\n\npublic AbstractMar‘kovMode1() {\nmyRandom = new Random();\n\n}\n\npublic void setTr'aining(String text) {\nmyText = text;\n}\n\n \n\nDuke Abstract and Shared Methods\n\no At least one method marked as abstract\n\n \n    \n \n\n0 Must be implemented in subclasses\n\n. Shared helper functions protected\n\npublic abstract class AbstractMarkm/Model\nimplements IMarkovMode'|. {\n\n// state and shared methods here\nabstract public String getRandomText(int rIumChars);\n\nqArrayL\"Lst<Str\"Lng> getFo1'|.ows(String key){\n code not shown\n}\n\nDuke Extending the Base Class\n\na When base class extended, get access to\nprotected instance variables and methods\nfrom super class\n\nc Also implement interfaces of base class\n\na Can have instance variables as well\npublic class Mar'kovModel extends AbstrdctMarkovModel\n\nprivate int ‘\n\npublic MdrkovModel(int order) {\nmyorder = order;\n\n}\n\n// more code here\n\n \n\nDuke Implementing Abstract Base Class\n\no Implement the |MarkovMode| interface\n0 Supply default functionality when possible\no Avoid duplicating state and code\n\na Subclasses extend AbstractMarkovMode|\n. They implement |MarkovMode| too!\n\na Interface the same, client code doesn't change\n. Some methods are abstract\n\na getRandomText implementation changes"}, {"path": "E:/Coursera/java-programming-design-principles/04_n-grams-predictive-text/01_generating-random-text/09_summary.mp4", "id": 3276, "text": " Generating Random Text\nSummary\n\nDuke Markov Text Generation\n\no Developing a sequence of related classes\nhelped in understanding new concepts\n\n  \n \n \n  \n   \n\nu Predictive text is the basis for machine learning\nand autocomplete functions in search and\nmobile phones\n\no Related classes led to designing and\nunderstanding interfaces and abstract\nclasses\n\n. Familiar context helped with extending desig\n\nD..u.l<¢ Interfaces in Java\n\nc We used the same names for methods\n\n  \n  \n   \n\n0 Allowed us to reuse client/testing programs\n\n- MarkovTwo and MarkovOne used same\nmethod names as MarkovZero\n\no Extended to interface |MarkovMode|\n0 Powerful technique, extensively used in Java\nc Extended to Abstract Base Class\n\no Capture common code that can't be captured\nin an interface, also extensively used in Java\n\nPuke"}, {"path": "E:/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/01_using-java-beyond-bluej/03_main-method.mp4", "id": 3286, "text": " Using Java Beyond B|ueJ\nMain Method\n\nDuke Main Example: Using Command Line Args\n\npublic cslaaa Hellawarld (\npublic static void maincstringll argsﬂ\n\nif Cargsmlenqlfh =: 91) l\nSysLam.auL.p intlntwtérsse specify the Eilemame\"): .\n\n)\nFilelkescaurce helld = new Eilaﬁasuurcetargslﬁli;\n\nfarlStr;'mq line : he11s.1il>4esliH\nSyst:m1’v.cauI:.pz.iCntln ciingi :\n\n   \n\n)\n\nDuke"}, {"path": "E:/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/02_mainstream-java/02_understanding-exceptions.mp4", "id": 3291, "text": " Mainstream Java\nUnderstanding Exceptions\n\nDuke Exceptions\n\nException in thread \"main\" java.lang.Stringlndex0ut0fBoundsException:\n\nString index out of range: 82\nat java.lang.String.charAt(String.java:646)\nat Test.doStuff(Test.java:5)\n\no Unhandled exceptions:\n0 Crash program\n\no Print stack trace: tells you about problem Exceptions\n\nHandling exceptions: try, catch, finally\n\nException propagation: when you do not handle\n- May require declaring “throws\"\n\nThrowing exceptions: when you discover a problem\n\n \n\nDuke\n\n}  , exceptions: print stack trace j\nI Tells you about problem \""}, {"path": "E:/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/02_mainstream-java/03_handling-exceptions.mp4", "id": 3292, "text": " Mainstream Java\nHandling Exceptions Handling Exceptions: Try/Catch\n\ntry (\n\nURL myURL = new URL(someString):\n//code that uses myURL\n//e.g., connects to it and reads data\n\n   \n\n)\ncatch (MalformedURLException mfe) {\n//code to handle the error\n\n. Exception is thrown\no someString = \"blahblahblah\"\n\nQuk:"}, {"path": "E:/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/02_mainstream-java/04_declaring-exceptions.mp4", "id": 3293, "text": " Mainstream Java\nDeclaring Exceptions\n\n.Du.1,<e. When You Don't Know How to Handle It\n\n   \n\npublic void myMethod(String urlName)\nthr°.v.s :M.a:1§orme§!JR1iE¥9!:Pt:i<en‘ (\nURL myURL = new URL(someString);\n//Code that uses myURL\n//e.g., connects to it and reads data\n\no \"Catch or Specify”\n\no For \"checked exceptions\": declare throws\n\nDu1.<¢"}, {"path": "E:/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/02_mainstream-java/05_throwing-exceptions.mp4", "id": 3294, "text": " Mainstream Java\nThrowing Exceptions\n\nDuke So What Can You Throw?\n\na Technically: any class that extends Throwable\n\n  \n\no Typically, a class that extends Exception\n\n. (Exception extends Throwabie)\n\n- Java has many bui|t—in exceptions\n\no ArraylndexOutOfBoundsException\n\nString|ndexOutOfBoundsExecption\n\nNuiiF‘ointerException\n\n|OException\n\nDuk: You Can Create Your Own\n\n0 Java's exceptions: generally sufficient\n\no Need something else?\n. You can make your own class!\n\n. Just extend appropriate exception class\n\n \n\nDuke"}, {"path": "E:/Coursera/learn-to-program/01_python-variables-and-functions/03_variables-and-functions/03_visualizing-assignment-statements.mp4", "id": 3335, "text": " Visualizing Assignment Statements\n\njennifer Campbell and Paul Gries\n\n2* /‘ m that his bustexamled\n-. nut Hm x. mm.\n\n«W x ‘:.g wow-m .,..¢...=.a\n\n    \n\n_ I Frames «menu\n= x . 2 IIunnm¢1';u‘J ..,\n= 7 I 3\n\nmm . gm\n\nv. 1. Evaluate me expression on We m_;h(o1|IIe\nIn produce a value. Th 5 yam. has a msmory\naddress.\n\n2. sum um memory aﬂdruss no In. value an me\nvannhleon «he left uﬂhe —.\n\n \n\ncm-rm um\n\nmmm; vxsuihziuam (V-(I Ir-eﬁenevale um‘ mm awvrand snaruvm um fa rewt . bug‘ Dam-xm-unit\nmm: min . Mala-ovatswnmn M M emmllnuntssed m p».muengm..n..n.: The mignmsm gammy“ ﬂanges me value M 3\n\niunrm: e :7: wariahle.\n\nmmmm; vmnllnmn »« vawmaae. mm. m 5eneraaecrna«1ooae‘bullun alxzveanu Dane the rzsunmﬂ\nmm M Vnmyaurwalsolat Mun z». nmnunn mum Diumeius ., named\n\nmmgmmmsuumgmmu human; mm .m....m..‘. Imnnrlsamlnn M W m. mum;\nmndulasmzv a. mum Mm‘ Kmamnns‘ a....m, mm; mm unmg, ,9... mam. .,.y.m, mm, re,\nm.\n\nmu nuuunm mvbn mm M mermmmmm ma. mm nut m.m.:m..g\n\nlam xna  »...w.gus. m vinmvau m usermsmsswms :nu :um:axm\nn<m\\nna\\ announumenxs (‘mm mm. and amid adrlrrsswm I1: ken: V“/axe? my m. Vsrnvmevan ;...»...m\n\nCnwnqr-I m znnrzals mum Au ngms rnserved"}, {"path": "E:/Coursera/learn-to-program/03_booleans-import-namespaces-and-if-statements/02_if-statements/05_structuring-if-statements.mp4", "id": 3350, "text": " Structuring\nif statements\n\nJennifer Campbell and Paul Gries \\|1re:1D1tat1on mu\nJ mpemure -\n\n \n\n;\nA If preclpltatlnrv\n\n5 yr temnzraturz > e-\n\n«, nr1nL('Br(nl ynur ul||1re\\|i!‘)\n\n, H52:\n\n2 pr1nt(‘Hur ymlr mm; and mm man’)\n\nH Dracipitaucn and lemperzlure > 3:\nprml('Brin§ your Iunhreﬂz! '1\n\n1: ehf pretlpltatlnlv\n\n’ |1rj_MV('Hejrr your ngmgs and y1_ntl[ gum’:\n\nmum\n\n \n\n0\n\n‘fun mm Prugnmkvmlruwd s....Ka, nu»:\n\n» kn: max hashuslexnmleu\n-o nzxl hue .. uamle\n\nImgrxm auluul:\n\nHear your Duals and mﬁu to:\nHear ynur boots and mm: com\n\n \n\nFr1m=$\n\nmom ...m~xa\n\n \n\nomens\n\nm....;\nYru:\n\nmm:\n.1"}, {"path": "E:/Coursera/learn-to-program/04_for-loops-and-fancy-string-manipulation/01_fancy-string-processing/03_str-indexing-and-slicing.mp4", "id": 3352, "text": " str: indexing and slicing\n\nJennifer Campbell and Paul Gries\n\n’: [ace 4. .1 (Apple In . mum sass) (am. an on darn n\nupyrignc\", \"credits\" or \"li::en5eH' for max: infunnution.\nL: Python 1.2.3 <v:.2.3 3d06E6d90f5§. zap: no 2012, n:25:5nh\n\n[ccc 4.2.1 (Apple Inc. mum 5555) (am. an on darwin\n\n‘Up; ' \"credits“ or ~ucense4>\" for more intunnation.\n>>>‘s . Learn to Program\n\n»>\n\nmaex a pusman wmun 2 smug Index a pusman wumn 2 smug\n\n234S67B9|0||l2|3HlS\n\nazn to p gram mm. a posman wmm a sling\n\n423456789ID|||1l3l4lS\n\nLearn to Program\n\n.|e.|s.\\4.|3.|1.|| .10 .9 .3 .7 4 .5 4 .2 .2 .|\n\n \n\nu um s ’ »> new\n.m.\n\n»> 5|9:l6]\n\n'Pragram‘\n\n>>> lI9.lelI1sH\n\n-program‘ Index a pasman wmm a smug\n\n?» 519:; snoeamsmng cﬁaslxlngivmnasmrl\n\n>f§°gf?'gl hm hm mcludmg an and index\n\n.I_e_m, m. Smnqs ave wmmulable. They cannot be changed.\n»> 5;:\n\n‘Learn m Yxogram‘\n\n»>.n:a1 0V23456789IlJ|||1|3|4|5\n‘earn tn‘\n>>>s|1-B] Learn to Program\n'e.u'n to‘\n»> H-1 31 -I6-IS-M-I3-|1»|| -I0 J? -3 -7 -6 -5 4 -3 -2 -I\n'e.:xn co‘\n\n»> .\n\n‘Learn to Program‘\n\n»> gm . 'd‘\n\nTxacehzck {most recent. can use):\n\nPile ‘-<,,y nanny)-, ma: 1, in qtadulv\ngm : a-\n\nTypeﬁrru '52:‘ oblccl. dues not lllppuzz item assignment\n\n»> suns] run‘\n\nTrlczblck (most recent ell! XIII):\n\nm. \"<pyshel1r1l)>\", line 1, m <1nndu)e>\n§I9:15l ' ‘Iun‘\n\nTypeszrcr: '51:!‘ objects does not support. new: assxgnment.\n\n>>) s|:5l t 'ed‘ 1- 5[5:I\n\nlearned to Pxagzam’\n\n>>) 5 I 5I:5l 4- ‘ed’ 9 5[5:]\n\n»> s\n\n‘Learned to Program‘\n»> \\"}, {"path": "E:/Coursera/learn-to-program/06_for-loops-over-indices-parallel-and-nested-lists-and-strings-and-files/01_parallel-lists-and-strings/01_for-loop-over-indices.mp4", "id": 3364, "text": " for loops over indices\n\nJennifer Campbell and Paul Gries mm Vourwlmnoouvnr\nan count Idiacent repuull\n\n \n\n1\n2  1 m —> 3 2\n\n1\n\n.~ Iutnxn nu number of occurxnnc . as - zhlrwzex Inn!\na u. adjlcnnr. cnmcm» mm Lhl um.\n\nI:\n\n1 »> .=m....,-ah Inl:_rnpIl(l{'n.b1:I:dAi!§qh‘)\n\na 3\n\n, . .\n\nm\n\nu up...“ . n\n\n:2\n\nu (or 1 1.. nn¢¢1lanll)—-1):\n\nu 1: um .. .n « ]]x\n\nA5 1.9..“ . ;.p..c. « 1\n\nX2 mum repuu\n\nIs\n\n19 prinuI:n\\InD._ndjnI:Int_zupInD.I1 ’u:I:f!h‘ 1)\n\n   \n\nExenxlecndulslni r7-«.1 ' aﬁ.......47. «vfunx V , x T.» up..a..x».'....T.\n k _mL.n ...... \"mg, T... .... um. :._,...<.. and f....@m.\n\nNeva m sum: mm» vmun cud: snuznms «.1 ..§...«\nmmmmummusmlmulmnmlmmmmlmmmummm\nN:m.[aanna1Inhanas:Alm:mmL:i.nnnniidl:nui&um$lnmlhaw:15.uLhann nu sMu_|ul|L).\n (115!) -> llonﬂwle\n\nsmfz each m. m l on! pnsvlmn to the la!\nand sum the first View In the last pnsuhz\n\nPretamﬂunn: |an(L) >n 1\n\nnrstjrem = uel\n\nfor 1 m rmen. |uI(L7)'\nLh — II = lhl\n\nLl-ll - Hrsl_Heln\nImus = |'z'. -n- 'c'. -4'1\n\n:2 Fr!nt(sMf£_|:H(\\ell:rs))\n19 L)\n\n    \n\nmx_u2n.a\nfan. fax vw.mu.mm.a 7 ms) Ia:x>>\n\n«V Ime mu nmm uamzed\n- nun Mn: m neon:\n\n \n\n \n\nFhnws\n\nmom has!\n\nmnu-n\nuh:-1\n\nu.\n:1\n\nVol am.\"\nsmu_n-nu)\n\nm.,..\n\nmm"}, {"path": "E:/Coursera/learn-to-program/07_tuples-and-dictionaries/01_tuples-and-dictionaries/03_type-dict.mp4", "id": 3380, "text": " Type dict\n\nJennifer Campbell and Paul Gries »> asn_zo_gn.ae\n\n('A)‘ an, us an, 12': 70)\n\n»> for assignment; In asn_:o_gn.d=:\npxxntussxgnment)\n\nA1\n\nA3\n\nAZ\n\n»> for assignment m asx-._m_gmse=\nprint(asnAto_9rade|aasi9nInentl >\n\nan\n\nso\n\n7n\n\n»> for assignment .\\n .sn_:u_qndg:\npxiM:(assignInen\\:, a§n_l:o_gzade[ass1gnment])\n\nA1 ac\nA3 90\n\nA2 7o\n\n»> a - 0\n»> lentdy\nn\n\n»> d . ('.pp1e‘ : 2, 5 s)\n»> run, 2” = xnnnnn\nTraczhnck llnst recent cnll um:\nHue <py.ne;m9>~, lxne x, 1|: <||Indu]e>\ndin, 211- ‘bnnan-'\nTypesrzo unnashable type: ‘nsr\n>» am, 2)! - ‘bannnn\n»> .1\n(u, 2»: 'banani‘y 'app1=‘: 2, 5: 5)\n»>\n\n \n\ndxcl‘ Pymorvs mcnanary mu\n\n(ksyl : valuely keyz : value},\nm. kelm: vuuem\n\nKeys mus1 be unique Values may be dup1ica|ed\nmama: Slmml\n\nm eamams\nan remuve\n\nJenunu 1- vemm me numbevol kuy—valu: pulls m\ndict\n\namiss am mulable.\nDnwananes are unmma.\n\nKeys lIIus| be irnmmable\n\n‘u« 41 n1 4‘"}, {"path": "E:/Coursera/matlab/05_programmers-toolbox/01_lesson-4-programmers-toolbox/02_introduction-to-programmers-toolbox.mp4", "id": 5616, "text": " VANDERBILT  UNIVE RSITY INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB PROGRAMMER’S\nTOOLBOX\n\nInfroducﬁon Computer Programming with\nMATLAB\n\n',esson 4: Programmer’: Toolbox 4+; 1- J ,.-W 9 4.. :;:;j;;f_v 133337: :  c, ;:\"w\"j_7;;_V\n5; \"r \"2\" .»-~-' “:3 -,‘:;.. 4(....._. . ;‘..;.,.... .  iw-~ “r ;...m. %, v 3 WW 1' 4.. ‘°\"“””:“\"“_‘_V  L  a ;:3j;gg_M\num. um um ,m-u. Wu-rt 30¢ \"°‘\" '\"' “ um: _:,>.<m mu ;\nW . . .,.. mm. M...._.. _“HllElrr-Iuﬂ\\w . . _,..... Mi ? 3 WW .! J‘ Qbdmvxurlk :.mm., _— M_m__ _,/ :(>mmun\\\\y\n__ _‘_ 9 n ‘ M .,o..n...‘.... H..m.m Wm “M M _..Mu...«\n.« ,c._.. ~..,. _, .. ,\nW . . ... .........« dm...._.. _,n...;.»........ . . 3....\nV . g ,5 A ‘ . mm . h'ry|Hm . n..,..”. . IMV)mumnm . f4>r'1|1u(u‘vugumrwrwMVRMAH/IR>Yu14>vuV\\ r [IA j ~ .\n. W. ,__ » mm W. W %, v 3 WM 9 4.. wf”j‘;__ 3337;; L  ; ;;:“::”§‘‘u*___“\num. um um t(n$Ix- Wu-rt 104 '’°“\"'” “ um: _:,>.<m MI j\n505! . . .,.. M... d.u..._.. ﬂ..;.\"...... . . _,..... g W...“ c -v‘'””“\"‘\"\n\n \n\n \n\n‘~41; v :1 wm. 9 4.1 ')MW__ _a_Wm_\n:; 1' fr\" w-M \":2.\" .11” ,;.......... ;(..;.»...... *2“ a'~~» 2- 9....\n\"‘-\"~\"l~\"1“  '   ‘ g M...m.. J, -*‘”“”“\"“*\n\n \n\n   \n\n«I ‘I J 44-um. 9 An WW_W_‘v HI ‘\ns«'~‘x \"7 \"f='” \"'\"‘\" “F-1'5‘ mm ;’:...—.....~ $32.2... *2“ —'v~~~ 1- 9....\n\n1. » sanH14.§1e, 2. am q; f : J4’-amt“ 9 4.. _ Q\n-.. .... 9.. Mm... mam ... -1\"'*“\"'“*' ~\"\"“'\"‘“\"\" mm: _;,.y..» -o. r”‘“‘”‘“”\"\nSou: . . .... mm. 4;.......K.. _,‘..;.»...... . . W...\n\nA\n» sand! 4:9 1.. 2. my g gm...“ 3, -‘*W‘\"\n\n \n\n   \n\n«4-I ‘O J 44-«rm 9 An\n -~ °=~ ~~—  -:-.. ::::;‘;::.  ~c~«  ~.~ \n\nA\n» mm 4:9 1.. 1. ssh ‘~41’ 9; 2: «W. 9 4.. egjmfjxi V 1 :  :, ;-:'_jj;jj V\n-.. .... can /arm. M. y. -I ~ L...“ 3w.» ~. — \"‘\n. ... M...“ 4m......K. . _,.,..s....... . . . 9....\n\n \n\nV a a _ ‘ . U\\rr\\ . n-,,..,m . nmpbm. . Mdlrlmvurm . rm-w|mluvvn'4umrwngv-HRH/l‘l|/IR . Ymmuh r M\n. mm ,, same) mew“\n\nA\n» mm 4:9 1.. 1. ssh\n\nv g gm...“ 3, -‘*W‘\"\n\n \n\n   \n\n«4-I ‘O J 44-«rm 9 An\n -~ °=~ ~~—  -:-.. ::::;‘;::.  ~c~«  ~.~ \n\nA\n» mm 4:9 1.. 1. ssh\n\nv ‘H v :: 44-».4m«. 9 4.. MW-‘r A-~=w»«= — , , _,mm\n5,; Diet 5.. M... W ,.. mm\"--v ;»»mm ;  v ¢..u...§u....\nK ‘. ... _,.....“df-....,__, _lMf_:__m_  _,,.,.» 3. ‘—E__M\n_‘:;Wq~«~ ‘V W‘ . ,\n,, mm  .\nHzuam\n\nNB 3\n» sarxﬂp ‘~41’ 9; 2: «W. 9 4.. egjmfjxi V 1 :  :, ;-:'_jj;jj V\n-.. .... can /arm. M. y. -I ~ L...“ 3w.» ~. — \"‘\n. ... M...“ 4m......K. . _,.,..s....... . . . 9....\n\n \n\nV a a _ ‘ . U\\rr\\ . n-,,..,m . nmpbm. . Mdlrlmvurm . rm-w|mluvvn'4umrwngv-HRH/l‘l|/IR . Ymmuh r M\n. mm ,, same) mew“\n\nA\n» mm 4:9 1.. 1. ssh g gm...“ 3, -‘*W‘\"\n\n \n\n   \n\n«4-I ‘O J 44-«rm 9 An\n -~ °=~ ~~—  -:-.. ::::;‘;::.  ~c~«  ~.~ \n\nA\n» mm 4:9 1.. 1. ssh g W...“ 3, -‘*W‘\"\n\num: _~',>«r.¢» ».\n\nMi ;’ J “_W_ 9 J‘ M..v..‘..‘. JlruVvre(nd:\n\nm. . . » ... u........ d;.‘....,..(.. _,.,...;..........\n\n.,.».m.._.. V 3 ..m..m.. 3...u...su.....\n\n   \n\nA\n»sarx\\u4 1,351)\n\n2\nu g gm...“ 3, -‘*W‘\"\n\n \n\n   \n\n«4-I ‘O J 44-«rm 9 An\n -~ °=~ ~~—  -:-.. ::::;‘;::.  ~c~«  ~.~ \n\nA\n» mm «-4 1.. 1. ssh Mi ;, J M_W_ 9 J M...v..‘..‘. ,.n.wm. : M_\"_M_ 3/ _,C>mmwww\n__ __ W /W__'_ W\" M .,.».m..‘..., ;...m..m. H ._M 3...u...su.....\n. ... w-my-m 4c..»......(. . _,.,...;......... . “'.‘ 4 ‘f’ 9...».\n\nV a a _ ‘ . mm . y‘-M . am. .  . mu..,.,..mmWW.” .  , DA\n- ~m ,, mm  '\nuzuam\n\nA\n» sar!\\H4:§1b. 2. ssh g gm...“ 3, -‘*W‘\"\n\n \n\n   \n\n«4-I ‘O J 44-«rm 9 An\n -~ °=~ ~~—  -:-.. ::::;‘;::.  ~c~«  ~.~ \n\nA\n» mm 4:9 1.. 1. ssh Polymorphism\n\n» If the type of an input argument to a function\ncan vary from one call to another, it is called a\n“polymorphic” function.\n\n» Polymorphic means “having multiple forms\",\nand it can save us a huge amount of work.\n\n. Second form of polymorphism: Variation in the\nnumber of arguments from call to call.\n\n5 Many bui|t—in MATLAB functions employ the\n\nfirst form of polymorphism by returning an\n\noutput that is shaped like the input. ~51 'i‘ J 44-um“ 1! An \"‘\"'\"“\"“‘ J‘\"“”“\"“ : @m.v.m.. & \"”'\"'\"“\"\"’\n_, M,  ‘M W M ,....W....., .,.M.m M.M_,,.,\nw - ‘- ' -. ‘-my-A-“4ifN\"'|'rK-V _\"..;.:.__.. \"rm aw-~ 1- W-..\n\nA\n» sand! 4:9 1.. 1. am a: re :1 :+..W. 0;, 4“\n\n-.. .... 9.. /m... W... M\nW . .\n\n \n\n... .......-m 4c.........(. .\n\n.1DrmVan4* V ;. ..m.m..\n\nA a _ ‘ . Hun . n-,,..,m . nmnbm. . mm  . fnmnulnVvm1umrwngnHhMA1L.ll . mm r M\n\nx 2 1 ,4 21\n’ 1 2 1\n» >un(vr\n\numu\n\n1\n2 .\n»,.muu\n4 u\n,~..—m,mz um\n.,<;m mun 431»\n\n>v1ru-:su\\l rumttza Kw m\nw\\\n2\n\n \n\ng (y Ynﬂxvvmu 0 ”“”“\"\"*\n\n. .9 IDCAII4 9....\nW. _,« . V.»\n\n_[L‘CdlElmu:ﬂ\\ . ‘;..m.. . Lead Vnstructor Mike Fitzpatrick\n\nCUWCLNUW design Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas VANDERBILTVUNIVERSITY\n\nVl  IFISIRSTITUTE\n\nDIGITAL\n\nLEAR_N|NG \nlB[.."}, {"path": "E:/Coursera/matlab/06_selection/01_lesson-5-selection/02_selection.mp4", "id": 5621, "text": " VANDERBILT  UNIVE RSITY INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB SELECTION\n\nIntroduction if—statement\n\n,» Most common selection construct: if—statement\nExample:\n\n  \n   \n\ng'uess_my_nuIu.ber (x)\nx 2\n£px‘intf( F\n\n \n\nBegins with control statement\n\n5.: keyword followed by a condition\nEnds with statement: : =\nIn between: statements to be executed if and\nonly if condition is true A\n' J H :,...m ‘ .m_,,,_,‘.\n\n \n\n \n\n     \n\n   \n   \n\n& ‘ E. II  g,..u.m\n\nMa 3... 5... J‘‘\"'“' >'-“”' “”\"'\" i«— ......m.. .... n... ...... mu\n\n. . .,,....u. “M. ....m.‘._. . .......h M\n\n\\/ \\ a a _ ‘ . W . n-mm . pm. . Wﬂm . fnr'1|1ulnVvI1Eumrwr1gMVRMAH/ll .  , DC ~ .\nW, . gm. .;..,,....,,mu.Wm. .$ umuwm . ,  .\n\n,-~~‘ GUu\\mv,m4MI>evm . W. \n,_ ummbwmwmm ; WW2m,.(,.,_m.‘m ..\n,_ 33;; ;;,;:;;;,;;-1:33;; , VVUIKH    V1; HVVKV  ,,\n\n» guess_ny_mnm<r\\n\n\n., um, n mm»\n» ‘ I.f.E,:L\"..“:. ‘W. =..';”;;”;~,‘ L r   ._~\n\n- - -,=--«- --- \"“\"‘Ad.~_'; \"\"9\" ~::::'.w~« ~..:-\n\nV a a‘- k .  . h.:;';;:':  .    \n\n  - z    W   \n i \n\n» mW_mm,.,.\n., W. W Wm.’\n/-. »x ‘ w J an «;~_‘:V Law W1-1;-fw\" L w  gnaw 3\n\n~:«°:\"*-.\",...«. _,... ...,..m._., '\"':-'f ':“ :;:‘.~~*-\" \"...:‘\n\n«‘-I_u:;W«>A~ - z-:3: m:;~uw:“;|'z:wym    W . , Mw..‘  .\n,; »::;:_M:;;;33_WM ;  .\n\n,_ 335;; ;;,;:;:;,;;;~_;;;,;; , VVUIIH [mvwmls   V‘;  Wrv ,,\n\n» guLvsS_ny_rNnrn<r\\3)\n\n., W. V! mmh(‘V{G‘\n\n» m.,ny,.m;mzy\n\nLn/ujxaxy V.“ quwa my mm\n/-. »\\ Condition: false\n\ncontrol\n\nstatement \\‘ if—e|se—statement Condition: false false Condition: false 3 J g::::.;w..=.:;::;:~;‘ L w \n\n...n.,,_,._., .\n\n \n\ng,.m.m ..\n.......... ... :22. h...... .3...\n\n ' m..mm.,.,m . \n       m\n\n' S3§1f'21Z§2'Z.‘C'Cf.’fl‘.’Z'i2 \" I <7\n\n \n\n.u..‘ X<-‘I\nVp*|MH Vluv hywmw\n\ndin 9\nmumu M W V‘,  \\\\ ,\n\n» qucssjwm mm»\n\n., W. », Nmm\n\n» ,.m,wW.n»\n\nrnwqxanw Van qwccoa my mrmm‘\n\n>, qua» m mm»\n\n«.7. V)'V1ly Im «A nave Wm\n\n., Dues‘. mmm\n\nLnmzruu‘ M mm W mm\n,._ ..\n\n>\n\ng a _ ‘ . |\\\\rv\\ . h'rpHm . 9,...” . .mmn.m . Kar‘1|wlu7vngv.\\mnvmgMWRMAHJII . Ymmuh r .1;\n\n«mm m.m..‘\\ W ,H.,,(V  ‘.,..,(, W ,, WOlKSDa(e\nName . um\n\n  \n\n1f x = A2\n» fprinU(‘Congvats‘. vuu guessed my number!\\n');\n- else\n\nfnr1IItfl‘TLm mg. Yry agam.\\n')\n\nCommand Wmdow ®\n\n>> gu2ss_my_numher(3)\n» guess_my_numher(D)\n» guess_my_nu...uert2)\n\nCongrats! You gues my number! \"*'5l’!‘F§'I5l='F§S1a] 1\n\n \n\n‘f G ‘M “”\"‘\"‘ ‘ \"' W\"-M‘ L I! *1.‘ ElI'Vk(\"\\ .3\nWW M i.. 4‘--— ' v-'~'~- WW «J ......n In W. M... ....\n~ ~ 'Hu\"\"\" .:-- \"“‘w:.m; - -...... ..\nv Q n a _r - m r Wrrwm . “mm. . m..m.m . [umnu:rvIvngummmgvmhMA1|/ll r mm. . as ,\n\n     \n\n \n\n   \n \n     \n   \n      \n\n  \n\n \n\nA. M, M, MW  .,..s;,.,,M..u.;\nw....‘m;m».. M M’ <7\nV V V Vuunm m..‘.., m.~.,.M.mmw.\n\n/- Q...» WV   2 \n\n,.« . m\naueu,my MAWIIXV vemnn Jm\n\nmnrxﬂ my mu H» zqaw V»\n\n   \n\n» qunss,WvJNnberU)\n» M. »w»..m.y\n\n» *lH(§3,rIV_vmnixv{D\n\nEnrvuran‘ Van queued my W...“\n>) mwmmm‘.\n\nNun rmhl. mu d mind VH0).\n\n» aue5sJ\"v_nunIxv4)>\n\nLnmzrau‘ Ynu gmm my my-\n., M. 'rv,mnaxrm>\n\nYul: xmu m ow.\n\n,, ElAe\\s,\"'VJIuWl:erl43?\n\nVan mg. m .9.” Lead Vnstructor Mike Fitzpatrick\n\nCUVFVCLNUW d€S\\gﬂ. Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas VANDERBILTVUNIVERSITY\n\nINSTITUTE\n\nITDOIEBITAL\n\nLEAR.N|NG \nMT."}, {"path": "E:/Coursera/matlab/06_selection/01_lesson-5-selection/03_if-statements-continued.mp4", "id": 5622, "text": " VANDERBILT  UNIVE RSITY INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB SELECTION\n\nh‘—SfaremenI Continued ‘I’ J Id \"'”\"“' “ '‘‘''''i’ J ' L g,x...;.m 3\n\n».. 9.» 50-: z‘‘\"'“‘ ' V-“”' “”\"‘”‘ K‘ S« ~—‘ .......... .3...“ ...4\n. . . cum: ,3... ....n.,_,._., . .\n\nV \\ a :2 _‘ |V\\n\\ r mm . mm\". . Mvllrnumnm . fnr‘V|‘uluVvm1umrmr1gMMMAYLAR . mm r as ~ .\nM-\":3-U5‘ ' m m NY M .0 V’! an .,»,..x M LIX?\" W '\n\n1uu:'|<>/x ¢.y,.._..,.m»\nn 1 ,, .\nmam Sumkw. a.\n\n1- 2521 EC 2E2.;I,Yi1il:‘£ J4\n\n~;r.n..‘ \\uc>na\\.\nwmyrw V :,\nmun ...mW.\nany mm 1;\nmm ‘. 5\nHJY mac , 1,\n,\\w‘_ 5\nwmvu F M. :.\nmu». 1.\nmm 7- 7\n4,>..m. Qnumu, x.\nmm. , 1\ndie\n«Wm Nu-hm  ., M . Vrv 1 “ y.\nn M W 1\nVOHMH .m‘ xv-AV HA1 ‘\n.u.\nﬁpnmnw W» ., xl vv(Lk7'V‘J :.vv\\x M\n\n \n\ncmm .\\\nmy snn. m mm\n,, gun» rw numm»\n\nmu Mr}. W mm. Jm\n,2.“\n3m\n\ngues5_my_numhev.m\n\n \n\n1 day_uLwaekm\nfunction day_uf_weekln)\nif n : 1\nrprmm ‘Sunday: ‘ >;\nday_type 2;\ne\\se1f n = 2\nrpnnm ‘Monday, * r;\n\n \n\nday_type : 1;\n\nelself n :\nfprmtH'TuesdzY\ndaLt)/De 1:\n\netsen n ._ 4\nrprmm Hednesday,‘};\naay_:ype 1;\n\nuser n : 5\nfprmtf('Thursday,\naamyne 1:\n\nelsen n 5\nvprsnzfwrmay.\n\n   \n\n   \n\nrpnnm ‘Saturday,\n\n   \n\ndamyne ;\nelse\nfDr1nti('NuInber must be from 1 m 7.\\n'H\nreturn\nand\nif day_type 1\n\nfprJntF(' whxzh :5 a week nayxnp;\nelse\n\nfprxntF(' wmch ;s a weekend day\\n‘);\nend ‘I’ J In\n~:« D-:~ 5': ’f.'.Z'?‘ ' \"Eff\nV K, i a, _ \n,‘._.‘w\n\nr- ¢.y_.r.m..\nr- 253$ 22 ?E2.,.I,Y§lil.“,2 J\n\n  \n\n4...». V\n\nA\n\n\"M 1- 5- J ......w ..L... .......\n.... ,1‘ ._., _, . ...... *=\n\nlhrn , wrvvrm . mm». . mm  . fnr‘1|1ul:vvvﬂEumrwng ».uM.</um: . mm r .1;\nV Lmvvmwm }'Hl§v\\mmuuvnI' ‘J/\\HJ\\B W\n\nmun W. mzunm um-.m wr>....m+\nW. KM m,m_..,.xm'\n4;nnxH sumw. :,\n7.\n\n \n\n«Wm n.m.\\. a-,\nn.>LV1\\)t , 1‘\n\nmm V, :\nVprnnxvx \\ua>aa».\naw Wilt V 1.\nmm; M W.\naanwrr 1;\n\n5\n\n \n\n \n\nvvmmu vm.‘-um. a\nHJY W 7 1;\n(‘\\)k’]4V|r D\n1(>v|MHF um. 1.\n.mm , 1,\n\nmm n 1\n1y>m\\4A<mmw.l.\n\n \n\nmm» . 1\n(ls:\n\n4.,..m.m..,‘, W [k M ‘. M “ y,\nn M W 1\n\n1/mmn .m‘ ‘n-«run\n.u.\n\nhymn! »<h)(h A541 mm, mm» M\n\nmmm. mun .5 A ...k nay\n\n,, div .7: «(Kl zw\nNmhrr W In W“ . U) 1\n\n \n\n\"\"'~M' L v v»; 1\n\n  \n\n   \n\n   \n\n \n\n \n\n \n\n«I J u<:\"‘“ vw mj‘_‘:=v”' ‘ L Ir  a..11..1.11 3\n11:. u._.11 s._.. A‘_:_ \"_ _ W‘  \"J -111.11“. -.11 1.1.». 1,141.11 1.»\nE, ‘ W: . . 1.... 1.1.\nV —. a a -1 .  . 11-11.111.111.111.  . 11m.1...1.11..W11111.1... 1  1 11 1 1\n11 .1111... .  111111....1,m111111111,11..11. 111111111 . 1 1111.111. .\n; ~~-~ 1111,1111.11.1,111 1..,.11,...1111 1 1111. 1.1.\n,_ 4» ~'mw=e;gWm 1 1111-111 1.1,11_..111111 -.\nl_111.,11~ I , MW,\n;;;;;;;,;:;M;,;1_x;;;;,;3 1 11.11.11 5111.11. 1,\n1  11  11 ; I\n1 11.11.11 11111.1. 1,\n1 1.111111 = 1,\n1 11111111 111111,.\n1. 111.1111 — 1,\n11 1111.11. 1\n11 11111111 111111111.\n.1 1111111 11\n11 111.11. 1\n11 1111111 1111.11,. 1\n11 111,111.11\n.1 1111.11, 1\n11 111.11111.1.1.1,\n1. 111.1111 , 1.\n11 111.111 1\n11 111.111.  1.\n11 1111111..\n11 11..\n11 11.111.111.111  11-M1111 11.\n15 ‘ 11-111\n11 1111111111 1\n11 11111111 .1111 1.11\n11 111.\n1. 11111.11 1111111\n\n111115111. .1111 .1 1 .111 111\n\n,1 1111111111 11\n11111111111111m111 1 A:\n\n \n\nM. mm % , ,,\nM“ ' ”\"' m.~.'.4\n ' ¢.,,n._.,,:;\"; -.\n\nu...» my numbvv  2 'H ‘ ’”'““\" 5“‘\"“\"> ‘v\n\nr-mm W /'\\AMDQV_»aI\\u>H Sm\n\n \n\n \n\n; mum \\uc>na\\.\n.. xnmvvv — 1.\n\nu aw ‘. .\n\nu mum M W,\n\nn mu» 1;\n\n.. mun ‘. 5\n\nn ummu m.‘.,m. a\n\n.5 mm». , 1‘\n\nn a,q.«‘., D\n\nu wvmvu s M. 1.\n\n.. am». 1,\n\nin mm n 7\n\n2. Vl>v|u\\4A ~.mw, a.\n\nn <1ayJ17>e , 1\n\n11 (ls:\n\n1» , «Wu. mm.  ‘ Kk M ‘. Vrv 1».\n27 .v M mx 1\n\n2: mu-1H HHVHV my (‘/57\n\n1. ug.\n\n;. ﬁnunnw »<h)(h A541 mm, mm» M\nn UM\n\nmmm. mum .5 .1 W nay\n\n,, div .. «(Ink zw\num” ms! In Vu/u \\ U) 1 A:\n\n    \n   \n\n \n\nM. mm } , ,,\n\nyd\" ”\"'m.~_'.4\n2  .  ¢.,,n._.,,.;\"; -.\n/» 33;; \";“:—:‘_:2\";;—:‘_:j;::—;: . .;;.‘...‘  ,.\n\nw..1ma.yT.mn .5 .1 W nay\n\n,, div .. «(Ink zw\nNmhrr ms! In Vu/u \\ U) 1 A:\n\n    \n\n   \n\n \n\n \n\n \n\n,..m. W.“ i , _,\n..r- - -~ £112.;\nV ., a a _  , mum . Wm. . Mn. . ;.m.u..,..,g..mmmm.“ .  y as ~ .\n.m..m... _  |;1wvu:y.w;m Um/n.IurM»L><4<.me W  ‘Y/\\HJ\\I W a , ‘.m.\\,‘.. .\n; ~~‘   5.. .,» mm . W. \nL w w mu .  d.,_.._....xm -.\n, HM<u_rvWJmMl>orm I M W‘\n335;: ::—:‘_:2\";;—:‘_:j:::—;:j . .-mm W.../. a.\n\n5 «mm ...m..\\, 1-,\n\n, Mm,» = L\n\n. mm H 3\n\n9 ..,mm mm»,\n\n.. my W I 1.\n\nn mu ‘. .\n\nn mum M W.\n\nn «Wm 1;\n\n.4 awn ‘. 5\n\n.5 vvmmn u.‘.‘.,.~. x\n\n.5 aw W V 1;\n\nu c\\:m4ur D\n\n.5 mm. s HI/‘iv 1.\n\n.. “mm 1,\n\n1. Wu n y\n\n1. wmux  1.\n\nn «W». , 1\n\n1: as.\n\n2/» «W... W...  [K M ‘. Vrv 1 “ M\n\n21 H M W .\n\nIn V/Nu-1H .m ‘ H W \n\n1; .u.\n\n,. “mm  ., ¢   M\n\n \n   \n\nmmaayi mun .5 A W W\n,, an .7: mod zw\nNuwhrr W In Warn \\ U) 1 A:\n\n    \n   \n\n \n\nM. mm } , ,,\n\nyd\" ”\"'m.~_'.4\n2  .  ¢.,,n._.,,.;\"; -.\n/» 33;; \";“:—:‘_:2\";;—:‘_:j;::—;: . .;;.‘...‘  ,.\n\nmmaayt mun .5 . Wk nay\n\n,, ﬂay_aI mm\nNu'wl7(rrmslM1u/u\\\\u 1 ~va»~;L9u~ A:\n\n \n\n~e :1 ... «;:_*:V 1%‘ M-Lzffu\" L I!  g.m.m 3\n~:~ °:\" 5': M... _.. . ..,m_  ':\" .'“:;..r=‘*-1' '.'::‘\n\n  \n\n/.  '  \n\n  \n\n#2521 EC ?E2.;I,YZillZ2 :2\n\numm «.,‘....\\. a-,\nn.ny_m>> = L\nmm ‘ 3\nVprnnxvx \\uc>ﬂa\\.\n(M W — 1.\nmm; M sﬂnv,\na»v,m>r 1;\nmun ‘. 5\nummu m.‘.,m. x\nmm. , 1‘\n<\\m4 ‘. D\nwvmvu s M. 1.\n.mm 1,\nmm n 7\n1l>uu\\H ~.W«., 1.\n«my». , 1\n(ls:\n10V|\\v\\H Mm.  ‘ Kk M ‘. M “ ».\nR-4 HJLWW 1\n1DVAn\\H mum V) U All M\nVarmxﬁ M.» \\\\nmF€A¢\\M’.)y\\V »\n\n \n\nugamaaﬂ mm .5 .1 yeah nay\n,, day .» amid zw\nNmhrr MAQK in WV“ \\ .0 1 ~u»~;L«n=~ A:\n\n  \n\n   \n\n \n\n,ql:<Ynv (wanna § , _,\n\nuﬂ“ ' \"\"\"RJ.*_'.4\n/.  .  q.,M..m .\n” 33;: ;;—;g;:;r;;;;;g;r;g . “mm Sumkv/. a.\n\n \n\nmmani mun .5 . veek nay\n,, day .»,(m zw\n\nW, M43! In Vn/u . la 1 (mm A:\n\n,..m.. mm. i , _,\n\n    \n\n   \n\n \n\n \n\n..r- - -~ £112.;\nV ., a a _  , mum . Wm. . Mn. . ;.m.u..,..,g..mmmm.“ .  y as ~ .\n.m..m... _  |;1wvu:y.w;m Um/n.IurM»L><4<.me W  ‘Y/\\HJ\\I W a , ‘.m.\\,‘.. .\n; ~~‘   5.. .,» mm . W. \nL w w mu .  d.,_.._....xm -.\n, HM<u_rvWJmMl>orm I M W‘\n335;: ::—:‘_:2\";;—:‘_:j:::—;:j . .-mm W.../. a.\n5 «mm ...m..\\, 1-,\n, Mm,» = L\n\n. mm H 3\n\n9 ..,mm mm»,\n\n.. my W I 1.\n\nn mu ‘. .\n\nn mum M W.\n\nn «Wm 1;\n\n.4 awn ‘. 5\n\n.5 vvmmn u.‘.‘.,.~. x\n\n.5 aw W V 1;\n\nu c\\:m4ur D\n\n.5 mm. s HI/‘iv 1.\n\n.. “mm 1,;\n\n1. aw n y\n\nn W...  1.\n\n22 mm» . .\n\n1: as.\n\n2» mm...‘ mm.  .K ‘V/V! . Yr 1 “ M\n\n13 W\n\n,5 .. awwe 1\n\n2, «Wm  U41 will MM!\n\n1; the\n\n2. Vnrw-VH  h _ N   A\n\n.. dﬂY,wV_>rc¢H u\nNu-mm M. be myu . w 1\n\nmm... mm W or viV)iD‘l' -.m_M\\- .\nErrar m 4 ..~ -gm H1716 zs‘ A:\n\n \n\n,..m.. mm. § , _,\n..~- - W‘ m u. 4\nV lhrn r mum . ma». . Mn.  . fm‘1|1ul:v9vﬂEummmg pmmmyuk . Ymmuh r as ~ .\n\n \n\n. [mun |;1wvu1L|-‘rmUm/IL/urMyL>o<.mevLcmpnvm>'ur<\\mmuumU‘V/\\HJ\\Im V. , ‘.m.w.. .\n\n \n\n   \n\n \n\n” :33: ;;—;gg;;;r;‘_;;;;;r;: . “mm Sumkv/. a.\n.. dw.WD\\*'l.\n.. ‘. .\n., VDVWVKVV  \n., Wm H\n..  5\n.5 am». , ‘L\n.,  D\n., W... F  ,,\n.. am». 1,\n2.  7\n2. W...  ,.\n1] «.,,.,».,,\n1, (.5.\n2, ..M.m .\n1,   \n\nummm ‘UH m .. w,.m ‘m,:w«»\n  9L0!/IQOK u  yr.»\n\n,. ¢.,,xyn.\n,, m_.,:_m« 2‘\nNwhrr rust In Vu/u \\ W if—statement summary\n> if—e|seif—e|se—statement:\n\nconditional\nblockl\nconditional\nb1ock2\n\nconditional\nblock“\nIsa\n\nblock\n\nC. Lead Vnstructorz Mike Fitzpatrick\n\nCUWCLNUW destgﬂ: Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology. Robert Tairas VANDERBILTVUNIVERSITY\n\nINSTITUTE\n\nEOIESITAL\n\nLEAR.NlNG \nET."}, {"path": "E:/Coursera/matlab/06_selection/01_lesson-5-selection/05_nested-if-statements.mp4", "id": 5624, "text": " VANDERBILTVUNIVERSITY INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB‘ INTRCZ ,1\" Z\n\nPROGRAM’ M’ ‘.I— \n\\;’;— SELECTION\n\nNested if-slafemenfs Nested if—statements\n\n> Here is another version with nesting:\n\nfL‘C;.0n u1tinnte_queation_nas:ed2(x)\n1: x <: 42\n;: x xx 42\n\nEpxintE[‘Nnu‘ wnu nw:wor>u ‘nu 5H¢:L‘n1.\\n‘¥\n\nfyrin£f(‘Tuo Lmall Txy ugu;\n\n\\:\\‘)7\n\nend\n\n£px1n€f(‘T1u b;g, Trv . 13 \\n’); Lead Vnstructorz Mike Fitzpatrick\n\nCUWCLNUW d€S>gﬂ. Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas VANIIIIIIIHLI‘ V UNIV? H’o| I ‘V’\n\nVIDLW VANDERBILTVUNIVERSITY\n\nINSTITUTE\n\nEOIEEITAL\n\nLEAR_NlNG \nMT."}, {"path": "E:/Coursera/matlab/07_loops/01_lesson-6-loops/02_for-loops.mp4", "id": 5628, "text": " VANDERBILT  UNIVE RSITY INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB LO O PS\nFor Loops Loops\n\nThe loop Is a new control construct that makes it\npossible to repeat a block of statements a\nnumber of times.\n» We have already used loops without knowsng it:\n>> n = 1:5;\n» total = sun-(n);\n. MATLAB uses loops internally both to compute\nthe result of the colon operator and to compute\nthe sum of the elements of the vector 11 above.\n\nImplicit loop Schematic of a loop\n\n» Let's compute the sum of 1 trough S w/thautusing\nthe bui|t—irI sum function!\n\n. Use a loop: 1\n\n...,..e :5. . = 1 c. 5  V‘. Execution\n\n, Set total to o\n\n. Set n to 1\n\nn Executt Add n to\nequals 1)\n\n, Set n m 2\n\n. Execute Add 71 to\nequals 37\n\n. Set n m 3\n\n, Execute Add :1 to\n\nequals 6)\n\nSet n to 4\n\nExecute Add n to\n\nequals 19)\n\nSet n to 5\n\nExecutt Add 71 to\n\nequals 15)\n\nPrint total\n\nof a loop\n\ntotal (tomi\n\ntotal (total\n\n \n\ntotal (total for~|oop\n\n. MATLAB implementation using a for—Ioop:\n\ntotal = 0;\nfcw n = 1:5\n\ntotal = total + n;\nerr;\n\n \n\n£pzin:£('r :1 equals :c'.\\n‘,«:ota1); 4 a» J  2 _. v;-ff-_'_‘__ _g:;~:;: ‘: ,.._.m.. 2,  I\n\n.....u.n,:...u.»... 5.. -1\"‘ ~' ..,.._gm... Mu \"\"'”\"\n\nW. . . Dru ........ ,c.......... _‘<..(...... . . .\n\n.» V 3 2| » Ultk » mwam V nvarbux . wnmmmm» » (nmmmv>'VG«1uVrvvmw-rjwwxh mun v mmm. v Vexuv-HI; ~ yr\n. W.  .  \nfwwm 1 Ywuvvmv >u'unlu|V(NY .\n\n ; 13» —:N\n\n;r-=«-mm . xuut — (Dl4\\ . \n\nL  71! § \n\n.Wm,_m 3 .W..‘    ....‘..,\nM mnajm » Drnnhox » My Dtxnmeuu » Comvulevwosvam rug wm. mrua » Tum\n‘ E .1 m E/IVIZDIJN/DH1pbDX/MYDOCLIMEIIIS/CUIUPIIIEI Praqvammmg mu MATLAE/Tulonals... (9 x Workspace\n\n \n\n  \n\n \n\nwmmmpm - + Nmu Wm\nmmcuon smncuprm I EN 5\n\nO ‘ xotal 0\n‘ Var n = J\n\n \n\ntotal mm . n:\nand\n(nrinm ‘mm equaxs ud\\n',ma1):\n\n \n\n \n\n» 5um)ntup15)\ntuta\\ annals :5\n» summ-mun)\n(ctal eauals 55\n» summupuaa)\ntutal equals sasa\n» sImnntu|I15l\n\n2 tntal = o;\n\nx~.I<>>I _, J H  V w,._,,. . L‘ _, _?   a\nW W  :=»~~~-  «mm a - Wm  W:   . QM\n\n. . . W. W». m..W‘w . ‘ mm W.\n\n. . g {I , » A/nu . m.;».n. . umrnm . Myliammnvlv » mmm.~aw..,.mwmM.u.u , mm. . . Vrunralz ' ~ I\n;r;;;v;~;M 1  .  <\n\n \n\n \n\n,, ,um.M4.»\nu1u\\ mud: 1;\n,, )Umrn1vu>(\\5)\nmm edmk \\.\n,, m.m.,«m»\nmm Adm‘) sm\n.v 1uMmKHp{\\)\n\n2 mm\n; x» wmu mm.\n\n \n\nL14 .. u\n\n \n\nat J H ;;.....,. , ......_,,._.. W\n\nW. 5... .>=».... . .,m.- mm‘ a 2 « ........... W... m —\"\"'”'\" W... ~ q..\n. . _,,,.,, . “N. . M... w A . .,....(.... ........\n\\/ . g z. , ..\\..\\.,..,...,W.....,.,.............,..,.....,..........W.... .............\\..,... T 2\n.........,... . .. .  .\n, W.  \n f;j.\"_\"l...  4.   >........m. 5\nm........ .\n2':?:.'.\".;:.:......  ~ \n\n,;:,.,.,.....m ......u W. W... .. ,....m\n\n \n\n» ,.m.m..4.>\nLvl.1\\ <qm\\s .5\n,, ,......:.»«m\nmm sank ..\n,. ,..m...«m»\n.....\\ OWN‘) wso\n.. «,......pm\nLu... 9\n\n.. K.) ,  _, ,. _4 .\nmm. . 5.... am‘, ,1 , W kg‘ !4‘“““‘“\" K’\n: - ......m In hm»! um,“ Mm\n—mw. ,.rh-- MW; . . mun Wm\n\\¢ . .1 ac- .u\\..\\.m,.,..n.,mm“..W..W.m..W.‘..,.»m.‘.Ww..mm.  i.\nm..M.. - 7,m.xm  “...‘.M.W..‘.,,,_.\\,   .\n,.““”\"\" v Mhmv >\\n1nluW5U\n‘WW. W. W , W, ; ,\n M ,5, A V _ N\n,-=3‘-k~L;;‘;L‘_m W... ..7..m,\n£:£»ZJL...m wwm W W... .‘_ .....m\n\n \n\n» ,Wm.u.»\nmml <qu.\\\\5 .5\n» \\UmHV1\\/V(‘0}\nnun emu ,.\n,, mm.,um\nu1m\\u1.m\\: wsu\n,» r.ummmp4)\\\nLam 0‘\nlat-1| rvwah u\nh ,4 Parts of a for—|oop\n\n \n\ntotal\n‘.2: n = . T control statemenl\nloop total = total + n; — body\nart‘\n\n£pn.ntE(‘. ' .~«,...Lr, .«\\‘«,1‘,tota1): Example revisited\n\n» Notice that we do not need the list variable at all:\n\nrm x = undu,s>\n\n     \n\nm x > 0.5\nfprim:f{‘.‘. . :\n\nelse\ntpnnm .‘im.<Zr\"v nuvbz: ,. _‘ :.‘.1‘ . w ,x)\n\nma Observations\n\n. The values assigned to the loop index do not\nhave to be\nIntegers,\nregularly spaced. or\nassigned m Increasing order,\nv In fact, they do not have to be scalars either:\nThe loop index will be assigned me columns of the array\n» Any other control construct can be used in the\nbody of the for-loop\nmsratements\nother loops\netc. ‘_.—, 4 \"W 3  . .w..~.. a _\n... .. nun mu. M... 5... -I°\"‘”\"“\"\" -'*“\"“‘\"' ...n am... M \"‘“\"\"\"\"”\nM. . . I W. M... Jc....,...... _‘(|Al(CVﬂBﬂ| . . . W”...\n\n3 ix _ 'U)tV\\ . »m..m . Um|1:Mx>Mv|)¢<mVI<rvnvkwvmvv>'V4‘<1mnmwnr1ww(hMAHAVV n..m, . \\r««nrA\\u\nw.m‘.«.. (ONV «wt-\\wmc.\\ . \\.a»¢,,, 5' J ,3 ;m.m,. , m..H,,. . D._ E 9 M Q\n\n        \n\n   \n\n \n\nnu aw 5. Accra». - “mu. ummn <1. ; 4 .,..4,.mu Kunmue Kw -\"'’°\" ., L... V q...\n. . Hm. WWII MWJ . §<_,m-m(uvv¢ .......\n;~;;;»_v;m 3 ..;.,,.mu.m: ‘ ‘ \n\n;:c.,wm.m , my ’ ' >\n\n;“:q~'~‘~ x— vm.‘..ux.Wm\" mm M _\n\nr. ::.::M 2 \n\n- «:5.\n\nh K». wmal R2014]?\n\nruansn\n\n    \n\n \n\na re bB:::ul\n\n--zgnms_ 499°-we an »\n\n \n  \n \n      \n   \n    \n\nayu/Dm9lmxlMVDucumenrs/ComnumrPragrammm... vv\n\n* ‘_\nLrheck\n\n  \n\nValue\nIn.au7.o.9asa‘u :27o.o.9m.n.a324I\n\n5 x\n\n \n\nmm s. assxqns a row mm m random numbers\n\n5\n\\tf{‘HanrIom number at )5 large.\\n‘,x)\n\num ‘Random number an IS snn\\\\\\.\\v»‘,x) Value\n[o.a147.o.9oss,o.127a.o.9134,o.5324]\n5\n\n \n\ntor of random numbers\n\n\\arqe.\\n',x)\n\nsma11.\\n',x) 5' J H _'.FvmM:) . W..‘_,,..;. V, IL Um Q\n\n \n\n   \n\n     \n\n           \n\n   \n \n\nrm :2.» 5... -=vm». . 4“... (.,....m <5 :4 ‘ u..¢..m. (unlmue in -\"\"’°” mum“ ~ on\n- - - _.‘,.. ,,... mwud . U.W,.. .......\nV ‘ a z.  . m.,..m , .».w.. . MvUc<mmnn . k.m,,m..,W,M..mm..  . ‘.\\..W T L\nm,..M.‘ . ‘.‘.‘...W....‘,.‘..—.. ‘   V\n- W W . ‘ W. \n4  1 ‘  .« ‘Ml wnumamsoxzru/xamM321!\n;:;;;-hv~«~m 3 ..;. , ,.nm.m= ‘ ‘K ,  ‘V m cm\n,_ kg-m‘ .7 W nu\nL _‘n.D.m.W.m H V, “M\n.,,,,,,,,,,_m 3 Wmm.\\m..w    ..\n;gm«»«~ X, ,,.‘.‘..,,W\" M. M ‘ \\. ,,‘\nmm.;.w..‘... .\nN :5)\" 5' J H _'.FvmM:) .\n\n \n\n        \n\n;:;;;-hv~«~m 3 ..;.,,.nm.m= ‘\n;g'm~»r~ 3, .Wm mm W\n\n(y'uFHv:\\Vm.‘a.»\n\n_ N r_;‘mn.\n\n/ K».\n\n \n\n \n\n1 M M\n_. hymn\n\n.,._m.,..\n\n \n\n \n    \n\n.«\n\n. . Wtwor an\n\n \n\nW Ml)» u/mo mu D9134 mm _-,‘;m‘,. V  ., ,. L4 .\n\npa\n\n         \n\n  \n   \n\n \n\nV  -  I-W‘ 1- 2 — M...“ M W. Eifﬁfﬁ“ mm\n_m - W . ‘HMWLJ . . Mwm Wm\n’”“1\"\"' 1 Ymnhmv |unn_lr§l\\9H ..A\n;*;;;=_v;k;~ 3 .5, h , ‘ N '\nN 5 ‘, , W , ,V «\n,.mf“~ 3 4w.” W Mn ,-KVHH\n\n«,5.\n\nRnunrwm  . exnzx .< hﬂqe\nRarmnm nu/MP? u wan) ,5 me.\nmm rmnixr o my .5 3V'J\\\\.\nRunﬂam  o amm .. hmv.\n,, rmzmr —':Fzpa;m nw5o:Hx r y5o mems > ampuler mgvimmvngwl  :anas r zssan\n\n11.:-I-.“In'7;uJnmDmplm. yDn(wm-n ., umpnwrFmqnamvmn Workspace\nvand_che(k m lo0|1_tesLm + \"i\"'° ‘ ‘/3'“\nfunction 1uap_test(m\ntotal = D;\nfor n = 1:N\nn\nn = 7| . 1;\ntoﬁal : tutal -r n:\n\n \n\nend\nfprmtf(‘Total: m\\n~,mau:\n\nxoastovuwbwwu‘\n\n \n\nCommand wmuow\n\n» rand check\n2 N = 5;\n\nRandom number 6.814724 is large.\nRandom number @.905792 is large.\nRandom number 0.126987 15 small.\nRandom number 0.913376 15 large.\nRandom number 6.632359 is large.\n» rnglﬂl\n;,_ »\nI 4 .3 rd 5-:”\"“j _ «U _ (_\"‘:_'«':~=/W ' ._ P ‘F. e.m_...n .-\n.. Q.“ ... » W“ w ~ 5 2 ~ Mm Mn N. L_7lAv]n[[ Mm\n. . ....w. _y... WW1; . . ....« u.\n- £1 a.  . W... , nu-rm. . W.,w.m\\ . KIVMDVnv>'Nﬁv.nnm\\r\\nww(hMAHAMv  . ‘rum-OI, ~ .\n . gm .,w.‘.,,,.w.. M(«}NH‘HHV'\\   . ,  .\n,__\"“1\"\"‘ 1 h,mV‘mv xmmmunu .4\n , W, _V\n_J;;;g;f;g 2 Var n , 1 N\n:>'._m..m.m 5 \" \\Y~L 2 '\n.\\W,,m_M I“: W lblil ; (OKAY \n’,,r;~;‘v‘-\"**\"m R wmuu rm ,M,u>:..n,\n\n \n\n».,.mm  . 511771 ., Lwvue\nmm. mm a unsm ,5 Large.\nmm rmmbcr a usual .5 sVh}\\\\.\nRunﬂum  emzzvs .. hum.\nmm mm . Mrs»; A W.\n,, mm\n\n., \\mw,uu4s>\n\n2\n’ J\n5\nmy 2»\n«. .. 4 * J  9 J ;’2:Ii';‘.'.1. :i;”fZ‘.TLi — \n;: ~.~ °-.~  \"zr.\" ..:.::.. dz........... ' \"N am\n\n» -M H z . m.m.m\nmu —v(nr. .;MnllHu W i ,. ,L . , » B, \"MM\n1 3. “I ,—=»«~~  <--~ » s ,- ..:M. II  Sm... \n. . . .,..‘... ,;... m.wv.__. . . ...... u...\n\n, , a 3 <,..,..,..mm.n...M..wnmmm...(mm.m.,..mm..m.m..m...‘.‘.....wus\n\n \n \n \n   \n  \n   \n  \n  \n\n  \n\n,;m;_,;~mu»v .. .  H H ( , H 7v~  H \n\nM W “U5? VIL H\n\nmm x. v WM\n\n  \n\n   \n\n    \n\nVVUI W _n no a\n:~..w- m» a‘\n\n;‘m,.m.‘.Vm _ W,\n\n“mug;-Mu~w V W H in\n\nr. ..W,‘.m Hm , rum) 4 Nu xn\n\n -VHV(4Vn .-\n\n>>u=|34H!!\n»_ mus\n\n \n   \n\n,. Var H — . m.,...m\num nun VVHHC ‘ funzuun v\nu 1 ~1ssca\\ar[rI) n .. ( 1 1| n .= mx Is.u.I.21\n:rror(‘n r-us! he I Msxuv: xnteser V 1‘-‘<75-'1\n\n \n\n \n\n’ w In,-u,-2,-51\n«mg; « nu-11:\nm I\nCummandwlndnw <9\n\n» u -.- IS 4 a 8 2!;\n\n» v (5 5 7 u an\n\nV: '\n\nu 1 n .5\n\n» for ) Ienqlhlui\n\nmm = um: — mm\n\nand\n\nw =\n\nn»11I4\np_» low. . ,V.... M...‘ 1 ,, ,.\n\n\" J u ,;m.-M. m..‘.‘,,.,;.  V B. WWW\" _,\n\n   \n \n\nM ...w.  .,..  Mum\n. .  ‘EH7 WWL4 . . W\n,..,.,m\n\n \n\nn—a\n\n  \n \n\nttmmm\nN... mm. “' 5 H 33:1“: .  (.:;|“‘ '' L1 V “*3 BI'*\"*““\" 3\n\n-.. a... .... J >“ ~' 3k V v .......,».,  ..... §:‘AlurK: lurur-4\n\n. . .:mu- W... w..um_, . . Alvuuq\n\n- » a 2 , ..,\\....,..._.».n...m..m.m.n.\\.(.m.,p,L.,..mm..‘.»mm.. \\’umvuh>|umnﬁG .\n\n;.m.mm. ~ xfkusm .,m,«.mm u,...»..MW . . .\\.m..‘.,\n hbum . W. \n‘3~-aw . vmun/mr:»muLvH _ cu s\n*r=v»~w-mm 2 .  »<, 7!‘ Fun 2» man\n:¢;;;;;;; 3, ' rrrnri MU U J M.“ -nmnnt ‘i, iv .;;|7V,:,n\ngr--M 5 HIV 1.\nytnnﬂlruxm ,, W, ,\n;W..,m , ,0,“ W\n,,3r;vj_gM 9 Hm rm—2v-mu.‘\nV. uuml may HY ,\n\n| \\w«m.u;\nMIN 7 mm » mu‘ m '«\n\ni§I1Ti:.‘;Z“m\"’\n\n .4 1.\n\n. <.,.._‘§ V4\n- m\"‘[llJ'_‘._‘\n\nmum.\n\nb”:\n\nE, M W.\n\n9\n\n \n\n \n\nKn» an ; mm;\n\n..,,._m,.\n\n/nr K V l.:u\\\n\nma\n\n \n \n\n(umvwr .vm<,:m\n,. M ; .. 4 x x n\n,, V 3 an\n\n0 1\n.. V:/r .. n u-rm»\n.4‘. nun — win\n,, A,n1n;L\\|6‘3‘H\n3\nin\n2\n:5\n\n \n\n«W ..m»\n\nmy\n1:\n\nm\n\nIn MATLAE R20l4b\n\n \n\np 1 mm: Q pg E . 2 J.\n?]GoTov Cnmmenl 3/3 3 B {R IE L‘3JR\"\"S\"\"°\" LL?\n\nIruknmnrs W\" \"‘“\"V\"\" Advante Run and\n‘HM v lndem  L‘, V Time\n\nmam eon nkuxmrnts mm\nzpajm » Dropbox > My Documents » Compuler Programming with MATLAB » Tutorials » Lesson as\n\n% Edllar - /Users/ﬂtzpajm/Drophox/My Documents/Computer Programrnln... Workspace\n\n \n\n \n\nf\\bu.m mu|.m + N‘\"“‘\n\n1 » [row col} 2 size(A); Q1 DA\n2 » for r = 1:row \"\" D\"\n3» forc:1:co1 F3?\n4- P(r,C| =A1I',Ci *A(I’,Ci; - '3”\n5 ~ and HIV\n6 — end taw\n7\n\nCommand \\N|VIdOV\\\n\\\\ 1: /1 n e 1! nhom . mulm / +\n\n \n\nA Itmﬁmi 4 s1zeUl):\n\n \n \n\n1\n2- “for r:\n\n3' 71 fnfc\n\no— 1 Elnc) — A(r.c) x A(r.c)Z\ns~ 1 end\n\n5- ‘end\n\n7\n\nCnmmand wmdcw\n» u [5 4 B B 2]:\nB17\n\n \n\nValue\n3x4 dm/his\n5\n\n3x4 doubli-\n[s.4.s.s.2l\n[s.s.7,s,aI\nI0,- ? J H    L; b  g,..n_...n 2\n\n \n\nu.. Itutrvm N. M. 3...“. ....,.\n. .,... . ,‘.... . Mw.__, . . ...... w-\n, . .1 a _  . mm.” . W...“ .  . fnmpmnVu)gummmqw\\lAMAVVAII m...,... . ....M¢ .\n\nn 3 V Ixbo/W mum ' L...“ IAN!’\n\n,~-W Hvw ml} : mm. :1 ~ \n\n‘,.\\unvn,mnr'\\ ,,, , , ,  :. A\n\n; nlpmhm ..,. z m‘ U.‘ 5\n\n,g:;g‘-;_1;;-“W mm YV,1\\VA\\v‘KY :; ‘ ‘\n\n«$.23. m 7% fl.” §\n\nL    ; . 54 « I21\n\n‘mu-Wm .5» sun:\n\nLrmm ,. u nu ev\n\n  \n\n(Aw vwwm, .\\ W. .\n,, M ; x. 4 x x 21\n., V 5 an\n\n \n\n,. Mr .. — . mam\n.m W.» —mn: [5 Editor — /VUsers/fltlpajm/Drophox/My Documents/Computer Prugrammin... (v) x\n\njvibum ~ mul.m 1+‘\n\n1 - [row ﬂit] = sizel/U:\n\n2 - for r = 1:row\n\n3 — for c = 1:cn1\n\n4- E(r,c) =A1r,c) =orMr,c);\n5 7 ‘ end\n\n6' end\n\n7\n\nCommand Wmdow\n\no -1 1 o\n» far 1: = 1:1ength(u)\nw(11') = ulii) — ms);\nend\n\n0 -1 1 o\n» A = randi(10.3.4)\nA =\n\n9 1e 3 10\n\n \n\n \n\nWorkspace\nName A 1- J in ‘-'L‘\"‘'‘‘_ ‘W (__‘;‘:;:j=\"»'A‘ .'_A v K, g,.m..... ‘J\n.... M ... ~- W-r v- - - n r .......n  Iunad 3...... .....\n. . .‘,,.,.. . ‘.1. |lﬂ~1KwH‘\\_. WT“ . ...... ~ V...\n\\( « 4.1 E: , v mm v Nlblxm r nmmm y >4vl)oLuu’:ul\\ r CmmiuluFwawmmuux;MHIMAH/kl - IuKuH]'> ~ Lu»lm0¢ ~ J\nL»;-3-‘~‘u-u « Am.  W.m,,,,m. Wm »..Wm. . . .\n7‘;-mm . W. ml) , §uukM. g »\nmm ,, W, L,“ . .\n ,, Hu< Iva! ‘\n,‘;m;;=~~~, : vAr.:\\ W.» . mud. — 5\nN. umnnrr , M  ,.\n.»;.:.‘;... 3'  :\n Eu Vuuxﬂ\n[mm _. H»/XIV\nV; ‘»;»;m»M M m IHI M\n\n \n \n\n-3 1 a\n,, Vor .‘ 3 ..mm\n«Am , mu) , mm:\n\na . 1 n 5\n>~A v.um(1n‘>,n,\n\n9 n 3 m\nto 1 D 2\n. . u In\n» .- ; A M\n\nM we -2 ma\n4 x mm m\n\n1; ma a mu\nm m :5 4 .5, ,1 A .\n\n1....” 1 ,1\n\n \n\n111.11,111.11.111,11,\n\n \n\n......,‘uu_,\n\n. 11111 . 11.1.1.1 1 1.1111. . 1111111111111. 1 11.11.11111111111111111111110111111. 111111.11 . 1.11111.\n#11. 1 11111 1111.11:1.,,111.. 11111_111.1111>11111. 111 11.11.1111.\n\n1 11,. 1.11, 1111111.\n1, 111 1 1.11.\n\n1, 111 1 1 .11\n\n1 1111\n\n17 \n\n \n\n1 1 1\n,, WW .1 1 1111111111\n.11111,11111,11111:\n’ 1 1 1 1\n>~A 111111111111\n’ 1 11 1 11\n11 1 1 1\n1 1 11 11\n“-11.1 1\n'11 111 1 111\n1 1 111 111\nM11\n'11 111 1 111\nm 11 11 1\n\n \n\ng, 1111.1... Wovksnace\nI Nam. vame\nT LEA 3x4 duuhle\n2 . ‘m\n3 . Hm:\n4 - (r,c): iii‘\n5 fprintfl (xv sum: .r.c>; W,”\ns - and :W'\n7 - and WW\n8 F3\"\nEHV\nLEW\nCommand Window 5)\ne -1 1 o -s\n» far 11 1 engmu)\nmm : u(ii) - vnm:\nend\n» w\nw :\n\n0 -1 1 0 -6\n» A : randi(10.3.4)\n\nA :\n9 10 3 10\n10 7 6 2\n2 1 10 10\n>> P : A.tA\n\n51 100 9 100 1, J U ;.W. \\( ‘H\\lY[mﬁ_  D 5 WWW\n.. M 5.. <--~- '   6 u v ..u...n.  M... W... W.\n. . . ,,....  ...,,‘,w . . M. ....\n . lrmumll   ~ ~\n;wv~«« . mm my.» my,  —  =\n,_«yv_=-“<ww~~ 3 mm ‘W \\‘.‘m.x 2* '- ‘\n- ;.‘:;:,...m »r  A ‘W 1\n; «; Lu \n, M ...\nL-V?“ N m \n\no—)1a\n\n   \n\n,, .9. .. 1 ..m»m\n-Am , mu) , mu:\n\n., . .‘.‘.mu,:.u\n\n’ 9 m 3 m\nto 1 D 2\nu run 9 ma\n4 ; nu ma\n\n.)\"\\U‘\n\n'u we 0 mu\nm 4'; 15 .\n\nr M) f . 1.. ma 931:‘:\n'‘.'‘’:'“‘T'\n\n \n\n-,11a\n\n- 11.11‘l§.:‘Jl\n:1 11.111  N\n1ar1d_<?m:k M\n\n .3, [1  ~ ;\n\nD\n\n  , , __:_m \n ...1ww . .\n\nI:\n\ng, 1.11.1.1\n\n \n\n \n\n, 11.1 . 1.11.111.‘ , 1.111». . 111.111.11.11. 1 111.111. m111.1.1.1m1.1111111A11 11.11.11 . 1.11.1.\n\n \n\n/.1111,”\n1 111. 1.11 11111\n1, 1.11 1 1.1.1.\n\n1 111 1 1 .11\n1 mm ,\n1 11111111\n17 .11\n\n111.11 .1111\n,1 1  1111».\n\n111.1 11,1. 1111.11-,».,.1~1111111-11111m,..111m111.1.m\n\n \n\n \n\n1 1 1\n,, .9. 11 1 1.1111111\n..1111,11.11,11111:\n'1 1 1 1 1\n.,1 .11.11111,:.11\n’ 9 .1 1 11\n11 1 1 1\n.1 111 -1 111\n4 1 111 111\nM11\n'11 111 1 111\n1» 11 11 1 ;;g,.w..w... W25, ~ v ~ a\n\n, . Q ;. ,,.,..m.W..m.n..v,.,,.M,.m.‘,m,..u..‘»‘.,,mWWW... \nWm, . JHMKWV u.M.,‘,,‘..L,‘m._ .  \n.  {ruvm UVMM . ~\nM.“  ,,, ‘A W,‘ a\nL‘W,,,.,,m 5W -5\"; . ».. mwm\n .(..; Mu} mm\nA mm W\nA-.,..»...m,..m .\nmuhw.\nW, ;\nWM 5\n12wn1(\\m(knv ..\n\n; Var: 1.<o\\\n. ﬁrm! «..n.m,u;\n$ rpnnm V4 U M».\n\n4 .\nmum. an Command wmdow\n\n \n   \n   \n\n \n\n1 . ‘ mu.m‘ + W‘ D 1 D 6\n—— _ V . ‘ 5A—AAA44444444444444444444441i »\n;_ figgwrcnll ;m<N~ _ ,,;.,r .1engmu>\n3 fprintf(‘Work1ng on row xa...\\n‘,r>;\\ \"2\" : “(m ' \"‘“\"\n4~ forc=1:col :2\n5- P(r,c)*At1r.c)*A(r,c): — J‘\n5 - fprintf('(\\d m\\n'.r.c>; \"' ‘ _1 1 9 _5\n3: ram 9\"“ ,, A ramua,:.4>\nA :\n9\nW 9 10 3 10\n'10 7 6 2\n2 1 10 10\n>> P : AAA\n\n51 103 9 100\n100 49 36 4\n4 1 100 100\n\nB1 100 9 100\nlea 49 :6 4\n4 1 100 100\n>> mul\n(1 1)\n(1 1)\n(13)\n(1 4)\n(1 ‘H —_.m...., .   B,\n* J *5 mm. W.  ~ P -~ a-Mu» 3\n.~ 0:40! W » — ....M,  ...,. :.,l¢uru .,...\n. . .5... W. mu.“ . VAIUIM1 M\n (1 1,\nH71\nNM!\n(11!\nM\nan\n.1»\nM\nan\n(3..\n/.,, ,_, ,, _, .\n.,,=.... Q...” 3; X _,\n\n‘7.\"\"..' \"'“,\"‘“\" \n\n.'_A r H. WW\n-IW) .1. ,,.,,.. ....\n\nzmm u.s..m,.m,. nmmu 1Vw'Hn\"u\\\\m7H..\nan}; -«\n\n,, u n\n‘avhvaxgqn M I u 2;\n‘_.,...m,m ; W M W 5; :1\n_.W'~*~~ ., “mm . V.\nI ....m.m.m t M 3 ;;\n“mm s rmm m‘h ,\n‘cuuﬂlvnk N ,, G :1\n“ (3 n\nu 2;\nHAILHQAHU1  u 1,\n.»\\..M u 1;\n,.m.. M ,. rm\\\nMud mm.\" Iuvhvm a.‘ N74 \\\n‘ .Mm.m u n\nu 2;\nu an\nn u\nvmr-um: an 713.! 2\n(2 n\n,2 n\n42 1:\n(2 .;\nVufkmq (/1 W. 1\nn n\n.3 2:\n(2 J;\n11 u\n\n»-,,x Iv-u\n(armor.-\nend\n\ntvrmzH'\\n‘H\n\n \n\n \n\n(1\n(2\n(2\n(2\n(2\n(3\n(2\n(3\n(3\n\n41\nn\n2)\n3:\n.21\nn\n2w\n3)\n41\nMIA\n\nwarkmg on row 1...\n\n(1\n(1\n(1\n(1\n\n17\n21\nav\n41\n\nwarm; on rm: 2...\n\n(2\n(2\n(z\n(2\n\n1:\n2r\n3:\n4|\n\nwumng on mu 3...\n\n(3\n(3\n(3\n(3\n\n11\n2:\n31\n4:\n\n» asuzrlsks Q Editor - /|_Js2Vrs(/ﬁlzprajm/Dmpbox/MyVDg(urnenKs/Cam...\nV’ asleriskxm\n\n   \n\nIE0-m\n\nfor min - 1:14\nfor nn - -\nfprxntfmn‘);\n\n \n\nfprintﬁ '\\n' );\n\n \n     \n\n» mul\n(1 1)\n(1 2)\n(1 3)\n(1 A)\n(Z 1)\n(2 2)\n(2 3)\n(2 4)\n(3 1)\n(3 2)\n(3 3)\n(3 4)\n» mul\nworking on raw 1...\n(1 1)\n\n(1 2)\n\n(1 3)\n\n(1 4)\n\nWorking on row 2...\n(2 1)\n\n(2 2)\n\n(Z 3)\n\n(2 4)\n\nworking on raw 3...\n\n(3 1)\n1: 7| - . :1 a _y...\\.,\\ . W.” . mm . Wm.‘ r m,.u..‘mmmmmm..m...‘... . ...\\.m.\n\n.4m.m rusemh'/‘uw«L)n:ahnKMvu ’nv'vm) \nr7|l\";\":7 /mﬂm avveruxvrv ml\num\num. -«\nVnrnn W U“\n\n3,\n\nu u\n., “mm . V.\n,,\n\n....m.m. m\n\nM, u n\n\n, M (1 1;\n¢..¢.,..k N M, ’°\"\"‘ ‘ ‘ ' (2 an\n NY A; .;\nmm (2 1)\nmm (3 1;\n  u U\n»-,..»,.m.m u 1;\n1-t<v1h( M ,, M\nW mm:-n wvhnu an W. x\nn 1)\nu 2;\nu 3)\nu .1\nHarlow H’! 71).! 2\n(1 n\na 2;\nu 3;\n(2 .,\n.m..‘, (/71 W. 2\n4, 1)\nr2 2;\n(2 1)\nu 4)\n\n1-))‘ Lead Vnstructor Mike Fitzpatrick\n\nCUWCLNUW design Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas VANDERBILTVUNIVERSITY\n\nVl  IFISIRSTITUTE\n\nDIGITAL\n\nLEAR_N|NG \nln[."}, {"path": "E:/Coursera/matlab/07_loops/01_lesson-6-loops/04_break-statements.mp4", "id": 5630, "text": " VANDERBILT  UNIVE RSITY INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB LOOPS\n\nBreak-Statement H .3.W.. m....@;. I ,5: WWW R\n\n,:.m. . .0mIu- =m...A . , M M\"\nWV: . __..... ....m_J . ....... “nu\n\ng a _ raw. , mm , w..»~.. . MvDAh4mu\\l\\ . KmdltullxI>ux4MmAmvV|4w\\'4\\MAVLABA MW» r .w,u.,\n\n \n\n \n\n     \n\n rank . .«.m.‘. mm. mW,m,m..\nmm H mm ....u...‘...‘...‘. t W»\n' ,.WM . \\‘» mp», .. M...“ ,...m.. .. .........., 1\nL  , V E,__,,,\nt :'“:;ximp:nm 5 .m\\e ‘n . Knrwmrcznxmjar M. rnd:rv§S‘|H V m\n,,j;;;W~~ 7 u.mm»\\.\\ e,\n\"(manilnvvlm :, \n7.. 17;‘;  N u  Exvnk 1\n:.'*‘~;\"” 12 -.7, ., m»m}.»mnI;u‘ \" '\nL '»3:;u;'Tm ,. ,,  mum > mu\n V‘ .5 max‘\n.; ‘ rcazmjsun , ‘\n7: :\nZ} omen-1 ‘\n15 'ar 1)‘ 1 \\cV4\\-yradmusr ‘\n:7 ., ‘.M,.M-.u > m\nZA D...“\n2;’ VWLI 14 Editor — /users/rixzpajm/Dropbmg/My nozumems/comguxer Programm.\n_\\ Dussumm\n\n[_i|3DroxAsurI.m J KrukExamn|es.m\n«Ia:-apt-s of sklpylng muxna-r of nemions\n\nVi Example 1\n\n95 Skmmng L5 accompllshed m me Mule common.\n\n'15\n\nMme 11 < Lengmrreanngsr as. reaaingsmr c moo\nr2ad.inas(ii) : o;\n\nii n+1:\n\n \n\nand\n\nsex Exunpl: 2\n’s Skxpplng 15 acmnpllshed mm a break statement.\nfor 11 = mengm(rean1ngs)\nif readingshi) > moo\nbreak:\nelse\nreeaingsim\nend\n\n \n\nend\n\nxx Exlmlei\nx Shows that for—1ooV index retaxns 15 last value\nx after the loop 15 exlted. lt‘5 sxmllar to Example 2\nx but om\\t5 the settxng of values to o and prints the\nx lndex of the flrst readlng above moo\n\n, for 11 : ]:leng(h(readings)\n\nif read1ngs(ii) > moo\n\nbreak:\nmm\n\n6)\n\nL,\n\n \n\n/,3 » H .3...4..... ......W;. I ,5. WWW .,.\n\n,:.m. . ,,..... =m...A . , M M\"\n.... . __..... ....m_J . ....... .....\n\n.. a _ W... . huwn. , 9...... . ............... . :..........>W..........m.-.mm.. W...» . ..........\n\n \n\n W... . 1......  -.,...... ~.,. V... W... \n» , M.” .. ......, .. ........ ......... .. ........., ..\n\n.  am... .\n- ...... .. M s\n\n:‘:v=-g;-W1»-m ...;. ., . .m............. M.  ., \n.  *‘”\"*‘” ....a........ a.\n\n \n\n \n\n   \n\n   \n\nV;.....\".. M M W‘\n:_ M;-mm ..  9...... .\n:.\"“‘;:\"~ .3  .. . .W.....»....;..‘ \"\nL V»;;;~;;;m .. .. W-—.m.... > ...\n —‘ .5 M...\n.; I ...m..... , ‘\n..\n2. .». 2......\n1.  .. . W.-..........\n1. W...\n29. .... .3.W.. m....@;. I ,5: WWW R\n\n,:.m. . .0mIu- =m...A . , M M\"\nWV: . __..... ....m_J . ....... “nu\n\ng a _ raw. , mm , w..»~.. . MvDAh4mu\\l\\ . KmdltullxI>ux4MmAmvV|4w\\'4\\MAVLABA MW» r .w,u.,\n\n \n\nkuwm ram . 1“. U. M ‘V/Pmvv ~.,,. WW, mw. \n’- N-7:‘  H wwwm. .,..u...‘...‘.».‘. t ‘,.»‘\n,._mM » z,..m., M M...“ r...m.. .. .,....m m\n\ns . 5...»...\n- Lmlnnm s\n\n.mL ‘n . m»;mm.mqu M. rndzrwsnn ., m\nrcmxww n a.\n\n   \n\nA ....m.m.,m\n\n \n\n    \n\n1-w.‘.«..m M ,\"“'‘='-*‘\n:. 11;“; N u  mm. .\nt.WHv\"” I3 am‘, um-:}.»m‘nI;3;‘ \" '\n_ V»;;;~;_~;m .. .,  m‘m>mi\n, ‘ V‘ .5 max‘\n W \nH ,mm..‘ , ‘\n.3 \ny.\n2. ‘—’_EI—4I|L-I\n15 ‘W n. 1\\U\"?\\'(rmn)m1sr I\nIV ., ‘..‘,.‘\\.w > m\nIA W.“\n2; NH] Q Ecnror — /Usersjﬁrzpajm/Dropbox/Mv Documenls/Computer Program x\n' I posxumm ‘Lapprox sqrl.m smaksxamplesm 1 +\n1 V4 sum.-s of skinning M-nindar at nnrnions I\n2\n3 v. éxapie '1\n4 Skipping is accomphsheﬂ m me wmle comnuon.\n5 » 1;\n6 - while 1 < length(read1ngs) as readingsﬁii <= mo\n7 - Leaﬂ.i.ngs(ii) - I —\na — 11 ii 0 1;\n9 - end\n1a\n11 an inept: 2\n12 as Sklpmng 15 Ecompllshed mm a break stamment.\n13 - far 11 : 1:‘.eng(I1(read1rIgs)\n14 - if readingsui) y mm\n15 - break:\n15 - else\n17 — read1ng5(11) -\n18 — end\n19 — end\n26\n21 xx Exanple 2\n22 x Shaw; that ror—1oap mdex ram\"; 15 Last value\n23 -x after me Loop 1; exned. It's smular to E>1auIDLe 2.\n24 1: mm omus the serum; at values re 1: arm prmts the\n25 \\ mdex of the fxrst reamng above 100.\n26 - for 11 = 1:\\ength(read1ngs)\n27 - if readingsuib > ma\n2a - break:\n>q . and 6- J :1 32”“ v“ t ‘\"\"'::/U‘ _ Ir *5 amm ‘?\n.... ﬁrm 3... » ‘ '*\" ~’ \" — - 7* ..~...n.. M M. > Mr-ml\n. . .  _‘F1nI' ....w,_4 . . M...\n' ,.,_ 1 . E....\\..\\ .4 ».......w Vkldlhﬂll .y ........w. . mmm\n. W\" 2 mm.-»...‘q»u\n.‘°*'‘\"‘““\" 3 »:,-.\\.x 35 9:: n no u n so gs m m 17\n. ‘“\"““\"' . ~=m.W . m=«»\\.,m UV W ,-h A. A:w1\\'mv. mm \\7 :'\\VauAJh 72\n s .. ., I m m 3, X: ,5 4; 9, 3,. \n_ :,..:;..m.,1.m. 5 -mxle ,, ( lernglnlrrzdkngﬂ .. ,...w4... ¢ ...  ‘.\n, ,j;;;W\"~~ 7 ,m...u..» »,\n1-  H! u  mm 2\n .3 ,; Hm.:m.W,‘ ‘ '\n .3 W:\n.7  ,\nZ) mm\n:5 ‘W n‘ 1 \\U\"?\\'»r(ad)N1sr V\n2: break‘ ‘\nIa MATLAB R20 14b\n\n \n\nPUBLISH VIEW\n\n£.=Eﬂ'\n\n   \n\nb g E Ruukseclion\n\nBreakpolnls Run Runand §Ady'a}.¢g Runand\n V ' Advance Time\n\n\"““'“’°‘“\"'5 E “N  \nDocuments > Computer Programming with MATLAB 0 Tutorials > Lesson 05 r\n\nCommand Window\n>> rng(0); readings\n\n   \n\n   \n\n  \n\n:prox_5qrt.m  BreakExamples.m \\ +\n\n; of skipping remainder of iterations Ii readings =\nColumns 1 through I\n1 86 96 14\n\nColumns 12 through\n102 101 51\n\nf>5>>\n\nis accomplished in the while condition.\n\nlength(readings) && readings(ii) <= 100\n;s(i1) = 0; -\nL + 1; J, J E. _]nm1m.. m...._¢;.#_ b ,5 WWW .?\n\n.... ﬁrm 3... 1“”*'* ‘ ~’“\"\" \"“”'\"\"—- - 7* M M... mm Mm.\n\n  \n\n \n\n \n\n          \n\n. Ma: _‘F1nI' .....m,__, . WM.\n. g a _  Du)QMummNw\\'4\\MAVLJWI‘uh/HIV» , ..\\..\"n.,\nLu  hrdm . m   ‘Vlhvlm  Wfm ‘. '14 HI’ n W\n W  ....n...‘..‘...‘. . >>f\\Y§VI\\ ....m\\;,.mn.,.m\n . 5......»‘,.‘......m.,.‘.m. .y . mam\n\n 3 ..z,..... 35 as n as H n m 52 m m 17\n\n.  - - m....m », )(('JV.»H3Vmﬂ  Um   mm .7 ‘Waugh 72\n\n,-mwm s  m m 3. :55 1; 4; 9/ X4 W)\n\n. :'“:ExI>v\\p::\\m 5 .m\\e .. < \\.mm,..m;» u. ,..mm.» 3, ,2. ..  .\n\nI I... XV/Vlyrb\\l1Y 7 ma....u..» o. rm-nrvai\n\n.f°_gH . X) ..... mm,.-Wm:\n\n vm . rnﬂ u ., u w . . a w m WA 1/\n\n_  .2 Enlumn :7  In\n\n,.\"““'“ n -,-,sx..nw 1.,» m ,. 35 1. 4, w x, m\n\n .2   “  ‘ . \\,._.,\n\n .3 ,. mm-m.a.n.m\n\nt .m,m.,m B Wk;\n\n W W\n\n.; ﬂ mmmn ,\n2. 2....“ ‘\n16   n(~:x-.r(.m.;s,\nu ., wml)m$‘w|l‘ > m\nZ3 W.“\n2-)’ NH] nos;-mm\n\n‘ BveakExamples.m 4-‘\nv.-. Exupus of skiwing runainder ov iteratiuns\n\naPDrox_Sar{.m\n\nV6 Exﬁh 1\nx Skwmng 15 accomplxshed m we whne mmuan.\n15 13\n\nwhile ii < lengzmreamngsl ea readings{ in 7 ma\nrmmnosm) = a;\n11 : ii \\ 1;\nand\nM Ex-nu z\n\nE Skinning 15 acovnplished with a break statement.\nfur ii = 1:leng(h(reaﬂ1ngs)\nxr reaumgsrm > we\nnreak:\ne\\se I\nreadingslii) =\nand\nend\n\n \n\nus Exaluple 3\nVa Shows that for—lL)L)p Index relams 15 last value\nv. aner the loan \\s exned. n's smular to Example 7,\na mu minus the senmg 91 venues m a and prms me\na max of me first readmg above me.\nvar u = 1:|ength(readmgs)\n\n1f l’Ead1VlE5‘ii) > we\n\nbreak:\nand\n\n \n\non »\nCommand Wlndnw\n\n» rngtm; reaamgs : rand1(1B5.1,2ﬂ)\n\nreaamgs =\nCalumns 1 through 11\nas 96 14 96\nCa\\umns 12 tnrnugh 2a\n1a: 101 51 as\n» readings\nreacnngs =\nColumns 1 through 11\no a a 9\nColumns 12 thmugh 2a\nm2 1m 51 as\n\n/5»\n\n67\n\n15\n\n15\n\n11\n45\n\n45\n\n39\n\n97\n\n97 at J u -4‘ v I _ t ‘\"\"'::/U _ r ‘E: Elunutwxm '7\n.... ﬁrm 3... » ‘”\"' W“ W\" — - * ......n.. M Iwuni ._.,.m..,. Um-mt\n. . . Wm: _‘F1nI' ....,u,__, . . ...,.. “nu\n. J a . .u>.‘.,‘m.m.,.,‘..w.,m..W...Wm.‘p...‘m,W-“mm..  . ..\\.M.. .»\nLu  W . M...“ .\n \\ W  ..n...‘..‘...‘. . >>rW§W\\ .m.ng\\;,.n.m.,.:m\n , :.......‘..‘.,,...w,._,n.. .. . Wm\n1:5;-;:j_;~;;~ x r...,.... 55 95 11 as u n so gs m m 17\n. \"*'\"*W‘*‘“' a mug ., . m.;um.a.n.m L‘ raid gsun ., m ,. ‘..w\n, gv-M~w~~~ 7 m...m.N. ‘ :a, ram;\n,. ‘W . ,, ; ,. .. mm, . 'nwM‘\\ u\n,_<~~-<-~m n Ind n ., u w . ., a w m WA 1/\n,   .. Enlumn .7 Hw\\Mh m\n,_WM‘ 11 -.»s.—.\\.z m m 31 35 1, 4, w 3, m\nL vvww 12 .s..»W. »..m.m..‘,.u..‘,‘..» ‘\\'eV)‘\\l /-.~~\n,,.'~“*;\"” 13 'DV ,. K . \\crmnmamnqs)\\\n,,   .. ., ,.m.;;...; > m\nV..W,m M B Wk‘\n.mm..» W W\n.7 ,m.~9m,y\n.3 Wm\nZ} 0....“\n16 ,, ,..»:»-.,(.am,\n)7 ., ‘.m.,~..‘ > N.\nZ3 break‘\nM— VH1]\nHr ‘KAVIWVHT ‘  W ‘..., .‘ Q, J E. .jIm44 .\n\ngm.\n\n  \n\n \n\n \n\n     \n   \n\n =,;;.\";:.“*,‘ - r *3 mm» >\nv ' 9 - .....n.. M Mum! 5%». mm.\n__n... ....,u,__, . . ....... V...\n,m.  Vvﬁnufm-ynw  . . sarm«m'\n W   .,..u.m..‘...‘. . us r A\n,  E.......‘ .4 xlunnﬂq VkK4)HﬂlA .y  , us ~ an\nx .:.-\".r . 1. . In\n5 ML ., . mu-m.a.~qg 5‘ mad gsun ., m 2.‘\nr vc-vamaw ‘ =~, . mm» \"way. : _mu,s -. /W\n:7 m“n:.>\\ K,‘\nH mm», madmq: r.mn.m.m\nu -.u Ex—¢\\e 2 wguwn\n,2 .;..W. SAL  ‘II_“vnq4D) ,...m.,r.muus,.,m\n.3  .. g . \\m..m.,..mm.;\n,. ., ,..mmu > m\n.5 Wk.\nVb ..,‘.\n17 ,.....»w..‘\n.3 W171\n2, s.....m\nIn ., um-,,(.m.;3, '\nu Hwbml-\\\\1‘HH\"“H\nZ3 W.»\n2-; NH]\n\n \n\nm\n\nm\n\n:02\n\nm\n\n17 ' J h .¢Iml4\\|e» , m..W;.4.. ' E EMWM .3\n\nM W W ,<.~.... . ,,m.. (wvmKnK7I .. ,4 M W  Mm\n. . . Pdmu _m. ..m.w__, . A0401! u.\n\n. . J a __ rum,m...mm..».,..wuwm.‘.mm.‘.,.m.Wmmu..m..‘.M..\\.m..1.,\n\n  \n\n \n\n \n\n     \n\n . ,«,rm W‘-m..,.\\.  W‘ ‘.‘.‘,»n \nn  U  . .u..._.‘...n . » mgm» ..Wg_ ,.n.,n...m\n» , , g....‘.) M ).....q. u..m.. .y  4 m,m\n,  2 mm. . Wm 11\n K gm... an 96 ,4 as A17 u 3» gs m m n\n A — W‘ 1 ‘ A H.‘ . , m.‘..m.m-mama\n.“‘'‘'‘*~ .7 VA 1, m m s. as 1'. 4, 97 E4 m\n. \"~***=\"vM 6 mm: ,. . .,m..,...,m .. ,..m,s«..‘ *7 ma .. 1rV\\l MD\n, 7\"-“~w‘~~~ 7 LL«Iﬂ)ﬂ||$‘ H 4, mmas,\n.. W . ,. : .. .. Erlhrum . VWHVJLVV u\n,_.'~“‘Mm g um n ., u E . . u w m m 1/\n  .. Knlmvn .7 ..W. 25\n,_.\"'\"‘~‘ 11 -.»s...\\.z m m ,. xs 1: 4, 9/ El m\nL  )2 .Wm. »M.,.M.¢..m.W» .~mqm Mm. ,.mnus,mm\n wwm .3  .. . . \\.»,wm.m.;,;  ;\n_ w-MM 1. H r:nm;m|I . m mm 1 xnrwqn n\n,'°\"°—Wr'm .5 hrcuk. .5 .5 u H m u m 5: m W7 .7\n m ..,. Knlmvs ,2 Kﬁmuqh In\n17 m..n,s4..‘ m .9. n as as .5 .7 u m\nm (ml ,. mm\n.9 M. ..W» :\n2. (ah/urs . mvuqn u\n2, -V-.:...,...= v o 3 a » 0 a a m .07 17\n11    “ “ ‘  mm .1 tnrnugnm ;\nn  “ ._‘ _ _  W-, m m 51 us )5 As 9: 3. m\n25 M“ um-.,...m.;.;\nIY ., ,..m,u..‘ , mu\n1. break.\n39' NH]\n2., s....mm .   WA xx example 1\nx Sklpplng 15 accompllshed In the whlle condltlon\nii: M\nwhile ii < lengthfreadings) as readings(ii> e: 100\n\nnanﬁngs(ii) = 0\n\nii i + n\nma\n\n \n\nx Examplt 2\nx Sklvbing is acomplished witn a break statement\nfor ii :1engtn(readings)\nif readings(ii) > 100\nbreak;\ne1se\nreadings(ii)\n\n \n\n \n\nend\nend\n\nxx Example 3\nx Shows that f0r~1ODD index retains 15 1ast value\n\nx after tne 1ddp is exited. It's similar to Example 2\nx but um\\f5 tne setting of values to 0 and prints tne\nx index of the first reading above 100\n\nrdr \" 1:1engtn(readings>\n\nif readings(ii> s 100\nbreak:\n\n \n\nad\nad\nfpr1ntf(‘F1rs( reading above 100 is at lndex xd.\\n', iin\n\nas 9s 14 9s\nCo\\umn5 12 tnrougn 20\n102 101 51 as\n>> readings\nreadings :\nEclumns 1 tnrdugn 11\n0 0 0 0\nCvlumns 12 tnrdugn 20\n102 101 51 as\n\n2 Eofumns T cﬁrdugﬁ 1‘!\n\n67 11\n15 45\n\n0 0\n15 45\n\n» rngr0>; readings : randi(10s,1,20>\n\nreadings :\nColumns 1 tnrdugn 11\nas as 14 as\ncetumns 12 tnrdugn 20\n102 101 51 as\n>> readings\nreadings :\ncoxumns 1 tnrougn 11\n0 0 0 0\nColumns 12 tnrougn 20\n102 101 51 as\n15))\n\n67 11\n15 45\n\n0 0\n15 45 (nmmznd wmarm\n\n   \n  \n\n   \n\n“-7- U pwn-Am.m x .Ww...... « a..ms......m...... ‘+7 » mgmn ruamgs = r.namns.n.2-1\n\n'“ I \\« an-um an mum r-um .: xm.u.., readhws -\n\n-W'\"\" 2 (all-ms 1 lruwwh n\n3 \\\\ aux. ; as as :4 96 n :1 3n 5: in ma\n. ‘ sxnxund 1; aczu-lahshad m the -«me mmxurm. uh-nus 12 mmugn 2.\n5 A 1-2 m 51 as 15 AS 97 an m\ns\n1\n\n     \n\n \n \n\n      \n  \n         \n       \n\n \n\n— mu: :1 < ummmam;s» ss ruau-aslm ; nu » reaumgs\n“\"»*\"'-W M’ - :m...q;«m . 2; 7 reading:\nW“ .. = .; . 1-, Lulmns 1 mm. 11\n=°\"'-M and 5 o - 0 n 1 a -mm\nvv--=M .. ‘ 7 mm :2 Inrvmr 2:\nM\"'- u »« nupuz m m 5: as 15 45 9: :4 ‘Au\nW==\"°\"-' :2 \\ swung 3: unwliarm um . nut mum. » mm mamas : \"mu-5.1.2»\n334\"-vm 13- h1rA nm..mm.ax».s) tunings\n°;m_ n — u m-nsmm . an m...“ ; znrmqh n\n“\"5 K M ur bruit; as as u 96 51 u an 55 m m\nW\"'W\"- 15 7 else ml:-ns n o..—ouw 2:\n11- rudlmsutl . -; m m 5: as 15 :5 97 u m\nend » maduvgs\n. and runny:\n_ Columns 1 through u\n~AEx—\\E3 - n - o - n a u m an\n\n\\ sruws um «wum um reams :5 us! vihwe\n\\ avtzr m. luau exnzd. n‘; sxlxlar n. Exinuk z.\n\\ but Huts me suunq nf vahazs 1. a and vnm; me\nu. mam: m um hrs! ma.» alum: ml.\nvar u - ulengmlreadiwssl\n\nu veadlnnslln > an\n\nmm\num\n\nmluuns :2 mmllyh 2:\nm2 m 51 as 15 as er :4 m\n,_» I\n\n=::.‘x.':=:-'\n\nem\n1pr£nlﬂ'F1rsx mm; above us B at man -a.\\..‘, nu; 1' J «:1 ~7‘(‘\":\"\"_ *W_ <_;”\":::\"~\" r '5‘ WWW 3\nNM .7... 5... » ' *\" V‘ — I ' M ..m. ._,...,.. Imam\n. . . M‘... __m.. ....w,4_, . ....... w...\n. J 2 , \n - /.m.. \\!«wv«‘V/HUM  .MW \nI   VV   . .n.m..‘.\\.n t » r/mm  5 ,mm..‘. :31\n> , A , , ,. 9...”, M ).....w ‘ED417169! ..  ‘. mmmu\n, mm X znmvmclrwawqhn\nA Sf£V\"?.I1‘J\" x . s....... as y. n an m u 3. as m m .7\niw-Mm ,1 ‘:’I\"  ’ wk“ m ‘{.“‘ X: 15 4‘. 9: 3». M\n’ :4uﬁx:n~p:nm 5 M. ., . m.,..nm.n.;,, LA.rL'i|1)nq§HH .7 m ., ‘.,‘..m\n,_ ,'” -WW 1 .m.n.m H 4, mm: ,\n_ W» . ,, ; ,, .. MW, .  u\n,_ 3-<:\\;kmm -,7 N16 » — — — — — — m M31 1/\n7g\"~‘_~“ n V s....\\.. m\nL  ,2 ‘WW  ,,.‘.,. \n,, r~~H~~1 .4  .. K . mm..m.m H ' “-\nL w; ,. M ..».n.mu . me our\nM M .3 max. . m H‘ .7\n-WNW Yb  ...\nn ....m,s4m . mgm WW : munn1—~ . 1“! m\n1» (ml C.‘\n*9 W \"man mm. r.muu.‘mm\n- H'Jan‘VAr\n2. 5...», m I07 .2\nU ‘ ‘ ‘ ‘  “  nualm ...mv. ..mu.s‘.,am\nI1 “ , . ‘ ‘ , , . r.m.9( m\n.-. ‘ ‘ ‘ rn,>>rwg}'m M1nmg;:raumw‘m:)1I\\\n\n \n\n:3 hrcuh‘ '\n:1 -.‘..mm . ..,w‘ W.‘ van .‘ mum VVYVY‘\n\n2‘ “ ‘ H   A ‘\n25  am..m.m.m l 5; J H _g..7.4.... , ....,._,,,.. A .\n\n \n\nD “S em“... )\n\n......m.. ..n M... L(“‘4.lIf aw.\n\n \n\n \n\n. . __..... mm. .....m__, . . .......\n5 g a _  7 ......... 7 W... .  . M... W... 7 ..\\..,..7 . .\n 7.... - -.r..7.. .., 1r.vy‘\\m’ 7... U. 7.. .—   .\nI mm 7   .,......,........ . .. 77.... 7........; 7.7...........\n . . 9...... 7. ......... .....n... .7  . 7........—\n,5-\"M . znhnmcl 7......\n,;5;:;_;g;~ . ......... .5 .5 .. .. .7 .. xa .. ... ... .7\n .  .. ... 3. .. .5 4. 57 .. W.\n, -mm-mum . ..... .. . ..7._,.7.7........ .. 7....7.5.... ., ... .. .......~\n7v--\"-wv‘~~ . 7.....7....,. «. 7....7..,\n,. W . .. 5 .. .. ......., . - W7. ..\n,_r«~¢-M . UM . . . . . . . . ... m .7\n_ W» .. .....7, .7 --.7...» ..\n,_w-‘M .. -,-,5...7..7 ... ... .. .5 .5 4. .7 .. ...\nL  .2  .. . . . . . .. ., V7VH‘6) 7...... , 7..............\n,»-vwm .. .. .........7.......... .....7..:\n,_ ».ry~<n. .. .. W-...,7.... . ... ....m . W...» ..\n7\"\"5‘\"\"'M .. brcak. .. as .. .. 77 .. .. .. ... m .7\n .. ..5. mm. .. ..7.... ..\n.7 7....;....., W71“ .. .. .5 .5 .7 .. ...\n.. .... ,, 7......\n2: ....775 . mm... ..\n.. .......... v 0 3 . » . . . ... ..7 .7\n.. 75.... .7. ..,7 Vow WAVEV  .. ....  ....77. .. ..7...7..\n.. ..... .......5........... ..5,.........m.., ... ... s. .5 .5 .5 57 .. ...\n.. \\DuAwuA)Vhe§(!»|m1v’!ahwm.)rn:y »77..... 7.......;.........5....\n..  .. . . ...-_.m,.......5. rnnmm . 7.7.... ..\n.7 ..7............m .. 9. .4 a. .7 .. 3a 5. ... .o. .7\n.. .7... .7...“ .. M. ya\n7., VNI .... .a. 51 .. .5 .. .7 .. ...\n.. .7. ~..,\n. -.7.....r   W ..  .,..., : 3 3 flflllfl .  Jm‘Ziff.f', ' f _~“5_ a‘a~~W _'-‘\n_ >,~ _ E,“ , Hm _ _,_ml_4  5»  \n. g a _  \n\n ram .\n\n- mm “  ..u...‘..‘...‘. t\n\nA ..‘..Ezx‘§nT.,m\n\n \n\n, tnrmvlr -\n\n \n\n“.3! . “ , .\n.m\\e .. . mgn.»m.nqs; M. m..m;m.‘ V m\nn..a.».,»m e,\num ’\n-.-,m..7m\n\n!ar .. 1 \\m.ma.m;\nmm’\nm.m;m.‘ ,\n\n \n\nV» mm. ;\n\nsum Hvu\\ W W ‘MK: rrV)‘m~ , W W,\nW”, m4 W lk LKUEII .. 5 »..‘..,, ,, mm. ,~.\n\nmu D1)l* W \\c'.vu1 .- M5 M7 Dv1wn*grm\n'ar 1) u 1 m.g«i.4mam.;sv\n\nH .m.Mm.. . ma\nmm.\n\nmm W. van , .‘ ‘, m.\n\n \n\n» nvgmr ...m\\ : ramlnlnmi 1m\nmmm\nrnnnmcl muqhn\n\n55 so u as u u\n\nmz m 3} xx: 15 4;\nraangnws ,\n\nKulwuv, . .»W.n u\nn 1: u . . e\nmm, .7 =.‘.W.m In\n\n.. mm ymm , ranmxiusmlm\nrrauxnac ;\nmm . \\nn:u-Va n\nLnhmrs x2 tnmuqn 1u\n1n7w\\ 3! us as -s\n,,m.m;\nwaumm:\n\n(alumni . uvmqn n\nu e e a » 0\nLnlmms H Vtrmlqh 1?\n\nIn M 51 as )5 AS\n» mm w..m ; ra/mun: . 1.‘\nmzdyvu)\n(nmvmc . .»...m u\nan 9c ,4 an m u\n1-12 m s. as 15 ..v.\n\nya\n\n9/\n\n97\n\nno\n07\n\n52\n\n2.\n\nix\n\nm\n\nm\n\nm\n\nm\n\nm\n\nm\n\nm\n\n.92\n\n \n\n17\n\nu\n\nn 4, Q E. .;:........ V“ ( .....:f._J. _, .3 WWW ?\n.. ... 5... 1 W\" - \" — -'  ... M. , .....,. M...\n- - - .;~..- ..~»«- ~-»...;.. - - ....... .....\n\\.V , g a _ \n >a.1« . .., M...\" —..«. .. Nu  rm   \n- mm  ..   . ...........»... . » W... mm... ;\n'  .  5...... .4 ».......... ._..n... ..  . rm...) —\n,, mm , .......... mg...\n, ;5;;:;_;~y x ..g...... s. an; .. as\n .  \" * ‘ * ‘ ‘* ‘ ... ... 3. x,\n. gm-:;.....,...m . .m... .. . ................s. .. m.....;..... ., ... ,. VIM] M7\n. ,3,-;‘;W\"~~ . ......»...., . :., m....... ,\n[WMM :7 W .. I ,. .. ..  .v. .. I\n_- ‘W; .. ....m. .. -W... 2.\n,_  .. Ex-ML-2 ... .... .. .5\nL  .2 .  \\ . . .. . .  \\VVnﬂ‘6) ,.......\n,_.\"°’~;\"~ .3 5.... ..m....»......... ........:\n.   .. .. ........,..... > ... ....m, . M... ..\n,  .3 brcuk. .. 9. .. as\n .. ..,. Knhmrs .. W...» 1.\n.. ......;....., ... ... 5. us\nvx—  ,, .....~..\n.9 M. ........., :\n.. (nhmrs . um... ..\nZ} M........ . 5 2 a\n.. 5..., Hunt .3. Mao  VFK) M , ..,  0...... .. W...» ..\n2.  W Arm) .,  v.  .M....... 2, ... m 2. as\n.. .... D‘V)A(  \\r\\.|/U1 .-   M    » nvgm) ........, ;\n2.  H7 .... W .e......  .. rm...)\n1. far .. . . .mw,......s. M...“ . mp...» ..\n2. .. ..,..w... .m s. 9. .4 a.\n.. Drank. ..,..m.. .7 W...» 1.\n1a— .... ... m. s. as\n2.. .........   W , ..   .,...,  ’ ’\n\n \n\n \n\n \n\n \n\n........s. max\n\n..\n\n.5\n\n.5\n\nav\n\n..\n\n4;\n\ne\n\n-5\n\n.5\n\n..\n\nno\n\na.\n\n97\n\nno\na.\n\n52\n\n.2.\n\nix\n\n.u. m\n... ...\n.a. m\n.u.\n... .92\nm\n\n \n\n.7\n\n..\n\n.. at-\n\nQ E. .;.W..\n\n,ga..\n\nK“ MW ». ﬂ¢V\n\n \n\nWM M\n\n _r, ;. A .\n\n \n\n.....,... M M.\n\n \n\n‘C: 1 . . ‘ ‘ , .\n.m\\e .. . uvrqmmznmqsx M.rni1!m;SHH V m\n._.a.».m. ‘ :?r\n\nW ,,...\n\nex-nu-2\nla; .. nm“.w.».m.m; ‘\n\nmm\n\nm.,;s4m ,\n\n \n\nV» mm. ;\nsum Hnﬂ ‘JV Vwo H(V(t W, M , M: «Hm\n\nVrl‘|\" ‘N Am» .1 muveu, » g \\nuKV' .M..m. 2.\nmu D'V)A~ 17vr\\r\\.|/H1 .-  “.5 la ¢ 174 7'7!  Vhr\nmm M W ‘..»- ‘Wm, «hm: .9\n\nM .. . , \\crav-tymdxn-151\n\n1! ‘.».Wu. . m\nmm.\ntnrmur -..w‘  Ml , .‘ W, H! Mm.\n\nr *5‘ amm ?\n....,,_,l_, - - W...» “\"“* ”‘u”.£.\"'\n\nrcmixrvu) — ‘ '\n\nrcan;ngs ,\n(nmmv, . VHH/A/1|?! u\nmm. .7 -mm ;a\nmnuvrxusmlm\nAnlmvu . wrvunh n\nlnlmwrs xz mm» 1:.\n,, mm;\n‘.aum, :\n(nhrurs . uvmqh u\n(nhmns H Vtrmlqh 1w\n(alum: . .»...m 11\n\nmm‘ Wm. Jkvlwr m V\\ I1‘  9\n\nno\n\n9/\n\n97\n\nno\n07\n\n52\n\n2.\n\nix\n\nm\n\nm\nm\n\nm\n\nm\n\nm\n\nm\n\n.92\n\n \n\n17\n\nu\n\nn at 3 Id ‘-7’'‘”‘‘‘‘\" ‘'’‘‘\"‘‘’’’J ' B ‘E ;a_,...«...... L‘\n\nr . ./..... _..... ....mL_, :\" \n\n5 , .. a A 7.>...7..........7.........m...m......................W...w.-..mm...........7..\\......7\n\n \n\n \n\n \n\n \n\n      \n- mm  ..............n . » VIVQVIV ........: 7......»-.1...\n' ,. .  ........ .. ........n., ...m... ..  .. ,........\n7....» . ...m... 7......\n,;;;;;;_;g;~ . ...-.... .. 9. .. .. .7 .. .. 5. ... ... .7\n .  .. ... .. .5 .5 .5 .7 .= \n, \"=*“*=“~v‘M . ..... .. . ..7....7........ .. .......5..... ., ... ,. W. ..\n . .....\".,»... 5 \n-WNW . .. ; .. .. ......., . .......... ..\n,_wu-mm .7 UM . . . . . . . . ... 7.. .7\n_ W  .. 7...... .7  ..\n,_.\"~‘~‘ .. -.-,......7 ... ... .. .5 .5 .. .7 .. ...\nL  .5  .    . . . .. .,m..... ~.....5,,..............\n,;.W~\"~ .. .. ..m..,......5. ........:\nMum .. ..  M54... . ... mm. . W... ..\n .. .7...‘ .. .. .. .. .. .. .. .. ... ... .7\nmm... .. M. .....r. .. W...» ..\n.7 ......;.4..., ... ... .. .. .5 .5 .. .. ...\n..  ,, 7......\n.. M. .7.......5 :\n.. ..s...... . . . . » 0 . . ... ..7 .2\n.. »5.....».. ., ..,.,,,, .5.  ...........7...»..\n.. ,.........., ..7 .e. 5. .5 .. .5 .7 .. ...\n.. .....,.,...7..- .. N”... ,.......;........5....\n.5 .  .7 ... ....- W...  ... ,.......\nzs  .. .. l'\\crgD-lmadmqﬂ ....... . W...» ..\n.. ................... .. 9. .. an .7 .. 3a 5. ... ... .7\n.. .7... .....,... .7 .......,n ..\nza— PHLI ‘ ... ... 5. .5 .5 4. .7 .. ...\n. ..7.....r   ...   .,.n, .... _r, ;. A .\n\nW\" In» as mm.” -2\nW. ....mU -:~  -an-:'\n\nat J H ._]nn4m..\n\nV , g a , ,uW,m...m,p‘...w.wm.m..‘...MW.‘.w.W.w-«MW..Wm,.w.n.,\n\n \n\n   \n\n ram . ,«.m. \\,,.m,n.,n ’)vr,u>m  ., \n- mm  W   . .u...‘..‘...n t » mm ..wg\\ ; ,.mm.,- 1.‘\n'  . .. Exuplu M m,...w NW. D’  w. mmm\nmm Z mm. muqh .1\n_ ;;;;:;_;~y x . g,.,.... as as 11 as H u nu\n . H .‘ ‘ ‘ \" ‘ m m 5, X: ,5 4; 9,\n. ;v<a:;x.n..,:M 5 .m\\e .. . Anrgnlmaamjal M.rniI1:n;SHH ., m ,. W. ‘V\n, ,'-‘ ‘WM Y vLuﬂArvm\\.\\ 0. rcanzrvys,\n.‘”°‘\" . ,. ; ,. .. Krllwuv, . mwm u\n,_<w-mm 3 rm! . e u . . e a\n_ ‘W;  .. mm .7  m\n 11 mm; m m ,. as 1. 4, W\nL  .2 ‘,  .  ..  . . ‘ V’ .,m.w N’J4LNV) r.mmnuS‘l‘1m\n,,_m=~‘;~~ .3 .. nm.ma.m; mm‘;\nL   14 .,  W.“ > mu mm . \\wcu-Va n\n .5 mm M 9. u as 57 u m\nn m..;;4m , ,\n.24  ,3 r M\n,, (W\nZ} Mx.....; ,\n11  L, W ,M:  .u\nn  ‘N U/m Wk  ., ..  MM... 7, _ mam veaUm‘!\\ ; W...» . 1m\n'14 run vuu   .- ..  W 0    (‘K\n2‘  H’ H! W mm  .5! m.,‘..‘ mm ,m,,,m‘2..\n16 .. r\\crI;u-tmaaxn-151 ‘__u.,_,.,\nN -' ‘=w-WM-W\" W.» M.“ mvul)Hh‘\\‘lH\n23 mm. ‘E;m,§ 4 -\nif ' W, ’\"“ nvmgn rmmnqs , ranunzusmm\nxx’ Inrmur   VM , .‘  M Hm,  rm», rmnxnds mmm» m\n\nm\n\nm\nm\n\nm\n\nm\n\nm\n\nm\n\n.92\n\n \n\n17\n\nu\n\nn 335..\n\nU. ‘MY may\n\n~.‘.:am M\n\n \n\n \n\n; w...m.\n\n, Inrmur -\n\n \n\n.mL 1, . Anrqxmmzaxmzax M raiuw;S\\u\\ ., m\nVLJHVVIZVM 1 x,\nml‘ ’ ‘\n\nV ”r:i1!A'W9SHH ,\n\n \n\nV. mm. ;\n,s..,., W W. W nun: W.» ., M)‘ W,\n\narzm W K:DI>\\>u(u'1IA -. 5 \\)Vh‘iY .. ...«.n. 1.\n~huz vu\\~ W. ,»:m. n- W75 ‘.7 o VH1 WV\\V’§ NV‘\n‘ W.“ M H» mm »‘.,.:.u.  m\naw ,. W . m,...m.a.n.;sy\n\n.y ‘.».»qmu »1ui\nmm.\n\nAUX”! W M! -,, n H m;\n\nreauxngs ,\n\nmm . .mm 11\n\n(am, .2 \\nr(.\\AIV1 zn\nw.‘.,m.\n\nlahnvvs . mm 11\n\nu 9 a . u o\n\nLnhmrvs .2 mmn n\n\nm m 51 :45 15 As\n» mm» runm4\\ ; ¢.mn.,.; m\nm.aw,.\n\n(alum: . vmmgh 11\n\nS5 96 ,4 an m n\n\n(nmvmc 11 -»m.‘.;» in\n\nm: m 51 x5 .5 .15\nm.m;\n\nrulmuv . - mm :1\n\na 1: u . u ..\n\nKulmun .1 -mm ya\n\nmu m 31 as 1'. 4,\n» mm») u.m..m = ummuus‘ w\nreanxugc ;\n\nmmm . \\nra\\u\\h u\n\nKnluvm) .2 :k\\r9~/IV! 1::\nhrs: WW abcvn mu .5 .. men 9\n., mu» MW : .m.u.. . w\nmm\n\n52 9. 1: ~22 54 us\n(ulmun 11 ..W.n 72\nas 9» 4-4 M 1. 4;\nrm. .m.m .W van .. .. mun 2».\n,._»\n\nav\n\nxa\n\n9/\n\nA3\n\n2.\n\n5x\n\n3.\n\n:5\n\nm m\nm\nm m\nm\nan 9,\n\n \n\nu\n\n1:\n\n1/ Boxsumm 1w.U.r..n , ....u..,..u.m\n‘A ExIU\\es of skiwirll rmlinoer of ilerntions\n\n-.a sx-nu 1\n\nv. smbmg Is accomplxshed m we mu cnmnnun.\n— n = 1;\n— -mu: u < tengmrreaamgsb as reaoxnqshx) c m\n— rgaaunﬂslh)\n— n . n . 1;\n— and\n\n \n\nsa. ax-cu 2\n-. Sklppmg .5 acumphshw mm 3 braak starevrznr.\n— for n lennmlreadxrwsb\n— n readvlqshll 1 m\n— brwk;\n— us:\n— reaumgslm\n— znd\n— gm\n\n\\n ax-cu 3\nx. Shams that fnr—|o-up: Sndex retams 15 last mm\n\\ um thz aw 15 exltzd. rm suvn\\ar tn Examine 2,\n\\ um nuts the settmg of values to a and prmts the\nx. Index uf mg hrs: reading mm m.\n- for 11 . .\\zI\\gth(readIngs)\n- 1: ma1..gsu1) ) we\n\n \n\n \n\n \n\n \n\nEumnlu aimpnma mm auurumnans \n\n0- -0 c 3 A Lacanon Comput:rxlwmgrammmgxzomlMCZOMAYLABIYule:\n\n:..4m«;m,; . .1;\nand\n\nawn. 2\n\nsammmmm mm mums mmm. -1: m. law xumu nuxmnmn Eumpll 2, m.7....n\nm. mm mm. In 0 mm mm: m. mu-xuvm um remlrw Abave mo\n\n \n\nm .. . ..gu.m..m.,»\n1: nndxr nun > me\nmm\n1...:\nm.m.uw.m mm. mm mm .. .. mm .. m‘, U).\n\n \n\num .1.......q mv. mu .~ .{ xudex 21\n\nmadlngs\n\nColumns 2 mmngh 11\n\nas as 14 as 57 11 an\n(olumns 12 (hmunh 2a\n\n  \n \n\n52 m1 m2 :7 nu I as w... M. ..m..:.u..m.4,m.m.m..,..‘.n.\n\nw....‘... _W...‘._...‘ [xmyvVe\\uV\\k»yryvmqnvnam4Aeva‘\\lIun-mx . ‘El [1 g\n\n’\"“\"\"‘\"‘ —~.......‘.‘ (941\nzm....m L\n\n-m. H-......... -m Xnw-n-Ia\n\n. . :; , A mm KDMDHVV1U!VV\"UamrmN]V/D-MM»/AIMAVKIK ulmw\n\nY ». J a _ VA/>u»rhl:uIHYrDwuul|mrMv[Vu(Iuueul\\A(mnuulewDu2qMnmuvu\\w\\'4\\MAVMIt Wm.\nkurewnrﬂx - /mm» ,mmm.,mv,L.m.wmW..m.m.m».m.‘.. .~,\n-mu  U VUIHA1. M”. ....u...‘...‘...‘. t ‘\n\n_ _*._m . 5...... M ......w ‘...m‘ .y |lA’V41\\HAlh\n\n:..-an 1\n\n: :;:;;;;¢;w~~ .‘m‘..J;. . A:r'9xMmanvu1x) K raid gsnn  mu\nWm \"M rramm1.HH »,\n   \n:_ “;~p“:‘M_‘ ., mu.)\nzw-~H~~~ am‘: am-u..W,“‘\n.,»;;,gg;;-_ M ,, ,;m.,m > WU\n\nmmgm.‘\n\n \n\n: ;L:'§.:r: :::“,.¢.:;':¥ KTLZ‘;2.J‘3”I.M’.i77F:‘t.f' :;_3;;;': «W = ~~w-W->\n.a;“::~.»; a:;:;;;;;:;‘;‘;~  W\"    5, ,,\n\" ’;f:;E““‘ ’ ‘\" Enlwvv) u tvrmuh zn\n ;,,3:'.t,.:?:q .;;  ..:‘m:2.\n\nMd\n. 1 r mm  W .‘ mm 7! u ”‘\"”‘”’ '°““‘\"“\"\"\"“\"\"\"’“‘\nvnrwl . . x. M W,\n\n52 3. .2 «:1 54 w\ncum v \\ma\\mh In\nan 91; 4‘! M 1: 4.\nrum .‘..».M mm m ,. .. )w:\\*x 10.\nA» MATLA\n\n \n\n    \n\nAPPS EDIT PUBLISH VIEW\n1: Bulleted List Preformaued Text\nQ Hyperlink ‘I U\nI Italic i; Numbered List 1__; Code\nSave Secllan Section V 2 ...u,., L.1-.x ‘ Publish\nv with Title M Monosplced 9, Image i Display LaT¢X v\nFILE INSERT SECTION : INSERT INLINE MARKUP INSERT ILOCK MARKUP PUBLISH\n\nuj\nxi ¢ ¥ E L4] » Users » fitzpajm > Dropbox > My Documents > Computer Programming with MAT1\nI Q Editor - /Users/fitzpajm/Dropbox/My Documents/Computer Pr\n\n. \"“\"\"*‘ I I possum.m I approx sqrtrm I BreakExamp|es.m I +\n3] BreakEXampIE5.I’\\lmI V’ \" _ '\n\n   \n\n1 9s’. Examples of skipping remainder of iterations\n2\n3 9%. Example I.\n4 9s Sklppmg is accompllshed 1n the while condxtion\nS - ii = 1:\n6 ~ while ii < 1ength(readings) && readings(ii) <: 10‘\n7 » J:ead.1'.ngs(ii) = 0:\n8 ~ ii = ii + 1:\n9 ~ end\n16\n\n11 vs Examnle Z a Wpemm\n\n-m..\n\n\" ‘ Enwvmya\n\n/frlhw\n\nE :3\" :3 N‘\n.  aw.“\ng a .\n\n.A:‘:::;::;:.M ;\n.3\n..\n:2\n:2\nE3\n\n-ml: ., . uvnummzamqax L‘ m..m;m.‘ H mu\n\nVLQHIVVDVM \\\nml‘ ’ ‘\n-, Ex:-m\\:2\nbrim\nn..mm.‘ ,\nV» mm. ;\n\na.\n\n1 wwr :m.a.m;\n\n \n\nvim» Hmt M» W HM: umxrw .,\n7$  .., m..«..‘. 1.\nQ “.5 We D1>1~rH’§mr\n\n'ar .. . . \\m..w,..ms; ‘\n.y ym.‘-gm” »1ui\n\n, Inrgnﬂl r\n\nK.\n\nVyl‘);\n\nr,.¢,n.; ,\nmm . Wm H\n(uh/vvv) .2 .m.m Zn\n,. rcmnrgs\nm,m .\n\nlahmrvs . mm 11\nv o a . u 4:\nmm .2 twvnuqn 1.:\n\nm m 51 X5 15 As\n» W.» mmg, ; ,.mu..,. m\n.m.m,,,\n(alum: . mug» 11\nSn 9«: ,4 an m n\n(nmvm: .7 ,»m.«.m 7a\nm m 3; x5 .5 .15\nm=am§‘\n\nn 1: u . u ..\nxmw .1 -mW 2a\n\nm m 3. :45 1'. 4,\nV) mm» 74>./(HUI!) = ummuus‘ w\nr:iu»nEi ;\n\ncum . Mn/UV! u\n\nsum, .2 nmmhlﬂ\n\nms. mm awvn mu )5 ... man 9.\n\n., mm.» v~mmiJ\\ ; mmxunn . 7m\nrcnixrvs\n5, 9. 13 a1 54 10\nmm, .1 ..W.n ya 2\nas 9» 4-4 M 1. 4;\n\nrm. VKWJUAX M“ Ma ,. .. mm 2».\n,_ »\n\nav\n\nxa\n\n9/\n\nA3\n\n52\n\n3.\n\n:5\n\n24:\n\nm\n\nas\n\nm\n\nm\n\n9,\n\n \n\nu\n\n1:\n\n1/ H ‘” 5” 1.“. °’“\"\"‘\"‘ ........‘m.\n. ....... n......... 3 \"‘ -.... Smwynva .\n,. a -  .  , 9...... .  . M...  . ..\\...,...\n. ,«,.....  ».,m.................,  \n. W ........,\n\n,  2 . E........ .4 ...,....g ._..m.. ..  Wm , Wm H\n\n::r:;::.::‘:\"‘ ¢  , . ., . , ,...\n\n. :‘~;;'W;~\" . .....e .. . .,............... .. m..,........ ., mu W,,W 3\n\n‘fnmdlrvvkm ' ﬂu“-*‘ . 0 . . . 0 ..\n\nr- W  ,3 '\" W... .2 Wu... ..\n\n- mm . m m s. .5 .5 u .2\n\n  ;; » ‘*~\"‘~ ‘ » VVVWI? ,.....q. = .........,. us.\n\n1- ».......m 1; aw; H<»vy~;ma;;gs= .....:............\n\n?;'‘g—;;;;;” x: mm.‘ ..7E....??...2i...§“ \" “ ‘\"\n;g ~'»-“mm .3. ... .. xs .5 .5 a.\n;g M  m....»«.; ‘\n;_ mg... .e.....M2.. .. I n B u\n2' “Ex-v'= ’ ......... . ....a......\n.. ...._,.......,..,...-W... ‘W N; ,, 735 ,5 0 ,,\n.3  .... .9...   .., .......... 1. V) W...»  = ........s. W\n\n. ... D'V)\\«  ,. .... . .  .. .   .  ,,,m.,\n\n1. u-1\\U-zkhlmadxmjsl ‘\";f‘*;,‘*\"~;:\"\"% 5, H M\n7' 1' '=w-L-mu > W ...D..., .. UWJQN ..\n29' ~w= ' ;.,lT’..,§?i...,3L.n3’.5..3‘..,.3B. “’\n\n5. 9. .. a1 .4 .4. .3\n......., u ........... ya\n9:! 9. 4-. .. .. 4. 9.\nmm. VKWJUAX M. ma .. .. mm 2...\nA»\n\n52\n\n.4\n\n.5\n\n24:\n\nw.\n\nas\n\nm\n\nm\n\n9.\n\n \n\nu\n\n..\n\n.. iwm ;..‘.......‘ _...w.-‘..,..‘\n\n...r.. n-......_ ’7\"'\"‘“’” .»»... Em...\n\n, E m.'i‘.. . mm 11\n .. xAnp\\u)uY»MuuM§v<ﬂ4xnﬂ:4uY ,, ” _ H , ¢\nr HAHN E__ | mm .7 rmnuahiﬂ\n .‘ .. I  m m u as .5 4;\n\n»;v~ — —» ~ ~ « NW.» ..m.,W‘m.u.s.~.‘\n,‘:w=;;m~v;~~~ .m\\e ., . mwm.m.;g M m..m;m.‘ ., mu ’°:§f§‘,i?,, .  ,,\nuJ£3m\"”\"\"\"' K-'°*\"'=~‘*‘ “v S» 96 .4 as u u\n-—4m.~.m \" '-“ mm.,.7v.w.m\n,. m m :1 A: 1. 4,\n-mm ,, .‘..u.m\\\n\ngm\". ./«H«‘U7‘W1 \"U/7I>ru Wm M ,.‘..».‘ \n\nml‘\n\n Enuvk 1\n\n.,».m.,. M\n\n .. 1 u»m‘m.a.n.m\nmmf ” >\nn..m;m.‘ ,\n\n\\\\ mm. ;\n\nam that M» W Wm: M. M , M3‘ vvhu\nDuKVh\\‘;1hr) m. A-’ ‘. ut> m‘;w  W’\n\n‘  M W mu .w.w  2»\n\n'07 u . . \\m,m,..mqs;\n.y ‘m.~;sm. . m\nmm.\nmmmr . mm W ...., V1 rux~d\n\nfnlmvw . ‘MN/Vt‘?! n\n[nhmru .2 mm. In\n.. wax‘ mm.,, r.mumu5‘t.2m\nu-«um/1:\nLawn»: 1 mm» n\n3;. ‘W .4 95 57 u\nLahmns .2 mm» m\nIn In 51 as is As\nFxrsx mm amvn we .5 .. mm 9.\n» mm» n.mu : ..m.uummm\nr:iu»nEi ,\nKn|mH\\|HwruUV1H\nEnlwuv) .2 ihrm/(V! 1::\nhrs! >r.vawq abvvz mu .5 .. man ze.\n., mm.» .: mmmna,s,av\nxx w m 15 55 75\nan 1. ‘J! 41 4 74\nn 55 as 91 as w\n31 9, 4-4 ,-.4 93 0.\nn3 9:; so as as n command dow\n7* Dussunuvl 1 aonro:,sqm.-m l_mak:xampIes.m ‘ BadKreak.m i 1- l '*§:{C§.:5'] mm \" H\n1 - rfor ii 5ize(A,'H W 0 9 3 0 0 0\nZ ' ‘°' 11 : \"‘i‘*(\" columns 12 through 20\n3 ' ‘' A‘‘?ij3? 102 101 51 55 15 45\n‘ \" I M11-JJ* - » rng(0>; readings : randil105,1,20>\n2 Z 9 ‘Eb k_ readings :\n7 end '9‘ ' columns 1 through 11\n' as 9s 14 9s s7 11\n5 ' d 9\"“ columns 12 through 10\n9 ' 9“ 102 101 51 55 15 45\n1“ >> readings\nreadings :\n\ncolumns 1 cnrougn 11\n0 0 0 0 0 0\ncolumns 12 through 20\n102 101 51 55 15 45 1\n>> rngr0>; readings : randi(105,1,20\nreadings :\ncolumns 1 cnrougn 11\nas 9s 14 9s s7 11\ncolumns 11 through 20\n102 101 51 55 15 45 1\nFirst reading abuve 100 is at index 9\n)) rng<0>; readings : randi(100,1,20>\nreadings :\ncolumns 1 through 11\n52 91 13 92 s4 10\ncolumns 12 cnrougn 20\n95 9s 49 51 15 43 S__ H __ 1.... ___ ’ ...5........ 5... MM\n. ..... n....,... 1 x........... .\nV , .. a , N755... ........7...»-...M.n..........V:5.........>.5................w mu... v......... . ..»....n5. .7\n .5... .  -..~...m.».-.5-  — .\nA    M. ......... .......... .\n. ,\" _ _, M .5.5..5...m.5...\n  WM ‘- . . . . . . . . ... .5. .7\n7 .5... 7 ’\" U ‘WW’ .5...“ .7  M...\n 3 v\"‘~H‘<'“' 5.. .e. 7. .5 .5 4. .7 .. ...\n. ,,,,“_m . 5...... 5.. ,.......  .5......5.7..\nA  w 5 W N5...»\n. ,m,_W,M § _ ‘max. .....5..5 .  ..\n.. _' “W 5. ..5 .. .5 5. .. .a 5. ... .5. .7\n._ r.m...,. M “ en 5...... .7 v 7.\n ,3 '\" ..z .5. 5. .5 .5 .5 97 .. ...\n..  ..5...5.,\n: .....5M .5...” . - .5... ..\n . .5 . . . . . . ... ..7 .7\n7. .....,5....m .5...” ..  7.\n , -P-mg». ......5. ........s....5.\n\n.5...“ . 5...... ..\n.5 u .. 55 5. .. .. .5 .5. ..7 .7\n.5...“ .5 M... ..\n..7 ... 5. 55 .5 .5 .7 5. ...\nrun 5...... .55.. ... .5 5. xrvﬂrx 5\n,5 W... ,........ , ,...........7..\n.55....»\n55...... . ....5.... ..\nLnkwr) .. ... 7.\nFun 5.5....  ...  ..  .5\n., M... .5 .5....5..5,..\n.. .. .. .. 55 .5 7. .7\n+ an AI 2/ u 4 V4 4 ay\n.3 s. 5. 5. .5 7. 7. .7\n.. .5 .5 ,5 5. 55 5 55\n5..5..555...... H g) g, ;l;::: ’_W_m ;lwVklrd|47 ,:1..w.,...‘ L\n\n   \n      \n\n   \n\n. umrn 3...... Z zu....m.. .\nV.gz_ VA/sup? .7\nI N-~~ ., mvvl/7  »...r.m ..;..M‘ .\n. V _ , M “ ‘ (alums . mm 11\n.,,,m r~;;r—”s~p“;m2, u . n a u e u a m m 17\n..m....W W _ _ Q mm .7 Y! mm\n»wm.m ’ \"“ ’? m m 3; xs )5 4: av x. m\n._,,,,,_m H AHA.yH «, — )>vhq\\H) .m.W=m.n.u.sx;«‘\nA n......«...‘..m rm“ mm;\n» .._u.W,m _ ‘ - n..m . um.» H\nmm am an we .4 us 57 n J0 ax m m 17\n- «,...«.... M ., *\" Kvlunm .7 Vwmwh ya\nr.W....m '\" m m 5. :45 1, 4, 97 an m\nr- \"$3.. rcamrvgs ,\na pm” ~ (mums . - H/HIV! n\nmum A . 1: a a . u a w m In) 17\n'-,wva_:»eo<m |:n\\wv: .2 vmmnzu\n‘“”\"‘“°\"' ‘ ..m.m‘v..m) r.mamus‘L2e\\\n\nlnhmrs . mm 11\nas u u as 5: n we SA m :07 17\nLnwvms .2 mm Al\nm m 51 as is As «: 5. m\nnrsx «um um: mu .5 .. xmuvx 9\n,, m.,w mm, , nnmriuumm\nreadings :\nKnhrmvx . ..‘...m. u\nmm .2 mm. 2a\n\nm. rcmanq um nu .; .. nan ze\n., mm .= .W.m,s.a»\n\nR\\ w \\n 16 55 75 7» R7\nan 1. 9/ 41 4 :4 4 .-.4\n:3 s: as 91 as 1% 72 :2\n91 9. 4»: ,~: 9; 5, . as\n53 96 au 95 M2 n 1» . H _,g as 3..., iwm ;........... #..w...........\n\n \n\n   \n\n \n \n\n \n\n. ....—. n-W...‘ \"‘ .m.. Xmas-mm .\n\\\\ .. a _ ..>.....W..,,W.............,..\\...................,...........W.... .................... .7\n.....,,.... . — .  .\n   .......... . \n. , nzmm, _ ..................\n I M” HAW, . . . . . . . . ... m .7\n X, W _ A ...m.............\nA.......... l .7 A;;g“\"_ _ m m an .5 .5 4; .2 .. ...\n._m_m V ___ ... V V)HWH”) .........-.............\n S M m...».. ‘ I W\n—........m N, W .......,...............\n ,_ ... ... .. .. .5 ., .. .. ...\n- VNHM ,, \nr-  ........\nL.7*U\\\\lN\\m ....... . W... ..\n;.“..‘5.§,fi.\"Q. M ....m. .2 -.......... za\n”\"“‘\"‘\"°'\" ..rr'Vm>.rmdmﬂ§ mnﬂ)(‘ll5.X.2M\n......»..\n....... . M... ..\n.. as .. .. .. .. .. .. ... .... ..\nLahruns .. W... ..\n... ... 5. .. .. .5 .. .. ...\nhrs: W...  ... .5 .. W. 9.\n,, W...» m....... V, ,............a.\n........:\nW... . W... ..\n......., .. '.l\\Vﬂ\\/IV! ..\nhrs: M...  ... .5 .. IVVDKX ...\n.. HY/1\",} .; .........,.,..\n.. .. .. .. .. .. m ..\n......».. ... 4..\n.. 55 as .. .5 .. .. .2\n.. ., .. ,. .. .. . ..\n.............. .\n. ,_» o ma/.u..,..\n\n \n\nnu.»-1». . rmalbox ; Myvxumum » .~........:..um...m.»¢wu>.»muu » nrmr-ah . mmas . -\n\n \n     \n   \n\n \n\nH----- ,..m. 7 . (mm V’! X...» 5,. >1 an ..n ~: '\"*“\"'1\"\n\nhim! \"\"‘ W H — ’°\"\"\"‘ r'\"\"— \"‘ I “\"‘ ’ mm; xxmmyu :1\n%'”'°*;\"'\"-\" \"é’«~-»n»e«- ‘::r*.:i‘\":r\"'; .5 .5 97 .2 \n\n'“‘” ‘ﬂ (mun-In - - v » mu!!!‘ ...ms . ..n¢.u-e.:,2.:\n1-..m.m .... hm «guns -1 “\n\nIzukbumvxm» M ., W9...\n1mm. ‘M as 96 u as 57 n 2. 5: m m n\nlfnundlnnm M Count; 22 tmwﬂvh 24\nlloounxxm ‘AI: III 51 55 I5 L5 91 M in\nW M...n,s\nlmnvumx m reanrwzs -\nWM 2..-, , W. ..\n)lIV¢IHnLm n a n l n a 0 I m m 17\n cm 12 (hmuuh 2.\n\nrudmvs m.¢.uos,:,zu\n\n \n\n(nhnns 2 mm,» 11\nas as n as m u 11511-2202 27\n(ah-ts 22 through 2.\nm m 52 As 15 as 21 :4 1-1\nhm ruﬂiﬂi ibcve us As at 2..:=x s.\n» mvtl) run;-W 5 umummu\nreadings-\n(alums 2 mmgn u\nu291n9zr>4xAza5s5s9715\n(ah-|x 22 u.m»«;>. 2.\n\nas as 42 u is 2: an n as\num rudmi ibvve m 2; 3! min In.\n., mm; A = v:mLl'13.5,IJ\n. .\n31 111 Is 15 :55 vs 7a m\nan 22 97 42 4 14 a as\n:3 55 55 91 as u 22 :2\n51 95 4; 19 53 as s as Command dow\n7* Dussumm 1 aonro5_sqn.m l_mak:xampIes.m ‘ Bal1Kreak.m i 1- l '*§:{C§.:5'] mm \" H\n1 - rfor ii size(A,'H W 0 0 3 0 0 0\n2 - for J] : 1'5ize(A.2) columns 12 (hrou n 20\n3 ' if A‘‘?iji? ‘: 9° 102 101 51g 55 15 45\n2: emﬂll-J1’ = - » rng(0>; readings : randi(105,1,20>\n5 _ brEEk_ readings :\n7 _ and ' columns 1 through 11\nas 9s 14 9s s7 11\n5 ' d 9\"“ columns 12 through 20\n9 ' 9“ I 102 101 51 55 15 45\n1“ >> readings\nreadings :\n\ncolumns 1 cnrougn 11\n0 0 0 0 0 0\ncolumns 12 lnrougn 20\n102 101 51 55 15 45 K\n,5 rngr0>; readings : randi(105,1,20\nreadings :\ncolumns 1 cnrougn 11\nas 9s 14 9s s7 11\ncolumns 12 through 20\n102 101 51 55 15 45 1\nFirst reading abuve 100 is at index 9\n,9 rng<0>; readings : randi(100,1,20>\nreadings :\ncolumns 1 through 11\n52 91 13 92 s4 10\ncolumns 12 cnrougn 20\n95 9s 49 51 15 43 u & 35 ff; ,z.5..55. *“:_‘:‘W\n- ..555.« H-......— E -55.. 2-m.5.5.5 -\n ; ;;;H>;‘m_2, V 5 5 5 5 5 5 5 5 5.5 555 55\n 3 - My-‘— V 555 555 55 55 55 55 55 55 555\nmm é M .55 ,.,555.« \n5555555555 5. “ *\" 5555.555, 57 5555.5... 55\n ,3 M 552 555 55 55 55 55 57 55 555\nWM 5555., 5  55\n 555.5 55555., 55  :5\n”\"“\"‘“°'\" ..mwn>5rmamq: ranﬂxV1|h55I.26\\ I '\n55.5555 5 55.5555 55\n55 55 5. 55 55 .5 55 5. 5.5 5.5 55\n555555 55  55\n555 555 55 55 55 .5 55 5. 555\n 55.5.55  5.5 55 55  5\n,5 5.5555  , 55555555555555\n55.5555 5  55\n55.5555 .5  55\n55,5. M555 .5555 5.5 5. 5.  55\n..  5 ; ,555.555,5,55\n55 5. 55 55 55 55 5.. 55\n555.555 555 555\n55 55 55 55 55 55 5. 55\n55 55 55 ,5 55 55 5 55\n55555555555555.\n5 5,. ’. J H.3........ .n..,.,,;.g_ _ V ,5 ammﬂ I\n\n.... am s... Q:-..... . W2‘... (wanna! 9 n - ........ ... M... 5...... .43.\n\n. g a _ WW,..........,9................n................,.m.......w.........,... ........,..\\.......\n\n   \n\n     \n\n \n\n W... . 5   ....;,  «— :~.~:~.v\"ms.» \nI mm M... AWIHIII  ....y............. ........m . WW «\n‘Anqnm ' \"‘\"—M-' .. o » . .. o . . ... m .7\nr ...... MAN!“ 1 ‘W H ‘ mm 2* ....... .7 mm... ..\n 3  ... ... .. .5 .5 .3 .. .. ...\n..,_m ﬂ  n... V y —  \nr........ M _ ﬂ *\" (ulvwv. .. ..m...». 2.\n ,3 '\" ... ... .. .. .. ., .. .. ...\n.,..,,m ...m .  ..\nr- 2l§.§,fi.\".‘. M ...m, .. -M... 2.\n\"\"“‘\"‘“°'\" ..mum».rma.nq: r..nu.r1u5.t.2m\n\nLahmrvs . W...» ..\nas W5 .. .5 5. .. .. s. ... v... .7\nLaluvvs .. M...» ..\nm m s. .s .s .5 .7 as ...\nms. rm... .3... .... .5 .. W. 9.\n» W...» m....... = ......mm..\n........ ;\nKnlmw. . W...» ..\n.2 .2. .. .. 5. .. .. 55 .. 9. ..\nc....n, .. -..,....... ..\nmg. mg... ...... ..... .5 .. man 2..\n.. W...» . : .,mu.rs9,s,nv\n.. no .. .5 .5 .5 m .7\n9......“ ... 4..\nn 55 as an as 19 2. .2\n.. ., 4. .-.1 a. .. 5 ..\ns39cua55an\\ox ,:.m. . ..7.7.. 77,77,777 . 7\n\n37, J H ._~,.774777.. V 77..7.@;_. ' ,€ WWW\n\n7.. .77 M... 7_.,.m...\n\n \n     \n\n.  ‘fmlv ....m__, . Attvu\n-mm  77777.7.77.7. -...77.7.7777.7. ...7.7...7.7 . an >0 w w w H I = m -W I\n — — 7 7 777 7.7 77 75 7; 7; 77 7». 777\n‘  7 77 77.77.77 ,,\n\n ;  7 7 7 7 7 7 7 7 777 .77 .7\n“””\"\"' _' am‘ 777 7.7 77 xs 7: 4; 77 7- 777\nG W77  7.777.777;7777775777777\n\nL ‘7L37”f.‘m“m‘\"‘ 7.777777 77 -77777777 777\n\n-7-27‘§;,f77\"Q.m 777;. «M77 777777 777 .7 .7. .77.», 7.\n\n77 97 77 72 77 77 22 57 an 77 77\n77777777 77 -777777777 77\nas 9. 777 77 77. 77 77 7- 77\n7,7,7 77.7.77. 777 777 .7 77 7.7.7 77\n» 7777.77 7 , 7.77.7-.77.,»\n77 77 77 7.7 7 77 4 77\n77 9: 47 77 7: 7; 2 as\n\n.. 77.777777 '\n7 7 7 7 7 7 7 7\n\n77 7 77 77 7 77 4 77\n\n7 7 as 77 as 77 7.7 72\n\n77 7,, 4-7 777 as .7 3 7.\n\n7 -77 so as 77 77 77 7 *w__ amt’? _ r is Elluniulhn 3\n\n\"‘ — 3 ‘ nu».-. M luruni um... I-«>4\n\n‘rm . mam“ J . . Aoanm B Wu\n--um   p.M.«. m....».n . -<» ~ 44 N v H = B H --N U\n\n> 1 W... mm.” ‘. ‘='~\"m”‘\"*M\"\" . t\n v m2 m1 5, as .4 .4 ,1 M ,9.\n,, I 1 Var ,,  2» ,, \n.I“\":‘:*.‘7; ‘\" 1 n ~«~v--v <— no \n.;;.;_;m . .m.w , .‘ —  .  .»\n“.xwumm¢‘um ' ‘N . 0 a u c 0 n w n m m n\n  m2 .... ,1 5, .5 .. 9, M m\n.  5  em ,. ,m.m,  = w.....os,»,za,\n W.” .  ..\n.  («A .2  Iv\n»:,”..mm. mm mm  m .\\  M. a.\n,m.m\n\nmm . mm 1!\nn2ax1392r.<xazxs59ou7xu\nmm .7 .W.‘. 70\n9.w.».gu..«yzm».\nrun .«...w. W, mu ., .‘ ‘W. In\n\n>. rnqkﬂ A , r.mm¢.m\n90 22 v7 .7 4 7. 4 m\n9; as 49 79 9: us 5 as\n\n, mm.\n\nA\no u . .3 0 . . n\ne :1 u .2 4 ,4 A .9\n0 u as = as 19 2a :2\nu ~13 A5 ,9 9‘ .3 5 a.\n. an xu as e« n in A e = u ~:;'.':;.   L w L   a\nas am 5.. ’ V‘ ' ‘ ' n.».«-u Cmrnnr 5» -‘5”‘°\" .......... . rm\n\n. . . ,,...‘.. . ,,.. . m..m,~_, . L....m .......,.\n.‘ A a _y. M... .  . W.“ , M. . m..‘w.A... r...m . LE>\\1)\\ﬂbV . H\n .    ,.w.m.‘.   .\n’ I ~~<- .-W.‘ H ‘m-‘.\\Y.:,-i‘; MW AV M...» . T mm, A = ranmwu .5‘\n\n,“-rm 1 . mu .,.;um M ,. ,5 1‘ in Is —,. >12\n\n.‘;:;;:*_“:;“\" ; H .m,.,» < 9» w 18 a1 42 4 74 A 59\n\n,,_ﬂ;_;m . m...,,;.. , n 55 95 =-. .. 1. 7. VI\n\n.,‘ _, W , . M 9. as 4? 73 9; as 5 25\n\n. R‘fj‘,;j‘mjff‘m‘ 5 man, 51 «s M as M n 1. .\n\n§m.M. . ml /. x».\n\n(V704 ..,.k N » W ~ ‘_ J u‘,;.m.. , m..‘.,a;._,. _ W, Q U... H\n\n \n\n \n\n \n\n»_ 0.\" 5.“ « ......... ...N. . QM\n. . .  “run »...m__, . ....,,..\n\n’- W‘ V! m_.7.‘.- =.‘.x.,‘.  .......»u. . yymglm, A: m..»a..m\n..;;;:::_:$;‘\" \\ .mm,m<9u 3» 13 91 12 4 /4 4 so\n..,,.,. ‘ ~u.m.« , n 56 as u as W 7.. W2\n:3‘ H »  9, as 4? #9 9, as 5 25\n.;:..::;:::; 5  .5, .5 5. as N .1 ,. .\n;:Cm>4  N 5 M W /- MATLAB RZ014b\n\nPIJBUSH VIEW\n\n15.: a v —\na w  tlsmpln Fuuclioncallstackz a\n\nSt 0 t _\nIraaloolnls Continue Step L‘ W \" ‘Baﬂﬂfgak v_\nqr.\n\n      \n \n\n   \n\n    \n \n\n \n\n\\/Documents > Computer Programming with MATLAB > Tutornals r Lesson 06 >\n\nilzpajm/Dropbox/My Documents/Cﬁputer Programm... K x Command Window\n_appru>g_sqn.m “ LBre§k§xample_s.m  BadBreak.m [-E ' >> rng(0); A = randj_(§\n\n \n\n \n\n:size(A,1) A -\nj = 1:5ize(A,2) 81 10 16\n.r A(ii,jj) <= 9o 90 23 97\nA(ii.jJ') ; 0 — 13 55 95\n:1se 91 95 49\nbreak; 63 96 80\nand >> Badﬁreak\n\nfgK>> * J H _‘Im(|V‘(V\n\n.gz\n\n \n\n« <m..,.k..\n\n. .u...u_,,__,\n\n \n\nm..3,,.¢. 1\n\nm...H.;.\n\ny‘m,.. V-Hlh\n.. nu ..:.,.m..n\n\n2 Wu l.suc(A27\n; .um.,.»< 9»\n4 Mu.m.a\n\n«-\n\nn\nI-«bum mu. Sm!\n\nq. W.\n4 mm.\n\nL-.».m.u\n\nnow»!\n\nI\n\nu..\n\n,, mm, A ; mama . m\nA\n\n99 la\nn 55\n9. as\nu 415\n\nw\n-as\n49\ns.\n\n:2\nr9\na$\n\nas\n\n/4\nN\nas\n\nix\n\n1.\n\nso\nas « au~::;:;.   ~ w v:;::“  4\n\nIn em 5.\" * \"' V “ ‘ yawn. (mm. 5:; 4 .......... ~ an\n\n' ' ' »_-Mm» “V-\" \"'“‘l1.1:._g - um»-wnu nu-our-1\n\n« , A B .4/VA/murl|AIMmxvDvuv‘b6xrMvDmumeMsrLAmlulrv7’vI/uummm:wKhH/l\\'L/nllV h.|uu4\\»vLe>»uunbr 7 . ,4’\n|“’“ L\\«\\>Amn —m»..).‘ B«\\\\[I«wnm LuII4a4k-n » »mgmr..\\ ranuxhlﬁ mu\n\n'.\\_, W .. M ..=.m,m,:» .. A\n\n_.~='-Wm . m. 9. as N 79 9; as 5 25\n\n.§jfj:§;j‘_:;fj‘_: 5 hm», u as .. as u 17 1. .\n\n,“w>»--=~w~ .. so 23 In :2 A 7: 1 M ‘a J H ‘_.m.,‘.. ,4 K.M,‘,,.% . _ V [ Lg... Mumm Q\n... Gun 5.\" »‘”‘\" ' ~'“\"' \"\"\"“ E I ‘ ....,..... W... 5.. J‘“‘‘’\" ....,N. . an\n\n- - - _.m.. . ..r.. - >»Q1\\1_4tus_1 - w....w... ..-...~~\n\n. , ,a a _/ r M... , ..;..w . .m,.»¢. . Wm“... r mm...m...mmw.W.:.AnV r...m . |£>\\1)“ﬂbr ~ : J\n\nI~-A  4rV\\>\\2\\)U aw.“ ........m . v; 3; ;_r 9'3 3; 3; ‘; 3\n'.\\_‘;M . Y/> .. .mm,n . A -= v\n ~ ‘AI1:‘¢If-2 7 :2 :2 2: as .2 2: ,: 2:\n\n‘\n ; «v~.s.4.......: 9, as All 79 9, us 5 95\n\n \n   \n \n\n  \n\n« (‘W-n“I.4mk ,\nrvW:‘JVfv:‘_:1>‘:|x ﬂ\\ » n n a 3 7» n :2\n xx 55 as at .2 an xx’ :2\nM as 1»; w 01 as 5 as\n5; an an as an 17 m ‘I\n\nW o a v uosmvnm\n\n94 M 97 .1 4 /4 . 5;\nu 55 -as m as in 2x :2\n6: an xv as as 17 1. A\n\n \n\n \n\nas w w .3 as w 7. 52\nno 2: 97 n A 7. . 6*?\n.2 ss 4. 9. as J‘! 1:; 3,\n‘H ‘vs .9 m a; sa 5 as\n\n30 In 97 .2 4 7. 4 no\n91 as n 19 as as s 95\n51 as u as as n 1. .\n\n9e 12 u .2 4 ,4 A .9\n\nu $5 95 = as an za :2\n\n4. ~13 4g ,9 9‘ .3 5 a.\n\n5! an xu as as n m A\nA /., K» ‘a J H 7_777.77.. ,7 u77»7.,_,.y_7 . _ V [ L7... Mumm Q\n.7. 7.7 7.7 »‘”‘\" ' ~'“\"' \"\"\"“ E I ‘ ...7,...7. 7.7,... 77. J‘“‘‘’\" ....,N. . 7..\n\n- - - .7777. . .77.. - 7.7777... - w.7..;77... 7.7.7.77\n\n. , 77 a -7 7 7.... 7 7777.777 . 77.77.77. 7 77777777777... 7 7.77.7.7777.777777.77.7777777777 777.7777» . 777777.. ~ : J\n\n7.777».7777.7 - M7777 77.77.7777 77. 7.-777777..,.7777777 .\n\nn~-A 7.777.777 7.777.777 . w w -r \"1 v: w = r>\n.7 77777777777777\n\n \n\n7.‘ 77 77 777777747 77\n\n1 “V73”->=x;I~1;n ‘ 7 7 7 77 77 7. 77 77\n213333;: 7. 777.777.. — T7‘ SE 31 35 7: 13 72 53\n.—;m,___WW ; «N 77 77 77 77 97 77 7 77\n\n \n \n\n~ 7.,..7m77..m 7 W\" 77 77 77 77 7.7 77 77 7\n\n777.77. M W 7\n« 777.7777.” , \" 7 7 7 7 77 77 77 77\n7» 7.77 7.77.7. , W’ 77 77 77 77 7 77 7 77\n«:7 77 77 77 77 77 77 77 77 77\n7. ﬁififm“;  77 77 77 77 77 77 77 7\n7.7 7”7'Z3,7;L‘7 77 7 7 7 7 7 77 77 77\n 77 77 77 77 77 77 77' 77\n77 77 77 77 77 77 7 77\n77 77 777 77 77 77 77 7\n\n \n\n \n\n77 7 7 7 77 7 77 77\n777 77 77 77 7 77 7 77\n77 77 7. 77 77 77 77 77\n77 77 77 77 77 77 7 77\n\nw 77 77 77 7 77 7 77\n77 77 77 77 77 77 7 7:\n77 77 77 77 77 77 77 7\n\n77 77 77 77 7 77 7 .7\n\n77 77 77 7 77 77 77 77\n\n77 77 77 77 77 .7 7 7.\n\n77 77 77 7s 77 77 77 7\nA 7., 77, ‘a J H ‘_.m.,‘.. ,4 K.M,‘,,.% . _ V L 1;‘... Mumm Q\n... Gun 5.\" »‘”‘\" ' ~'“\"' \"\"\"“ E is ‘ ....,..... am. 5.. J’“\"°“ .....N. V an\n\n- - - _.m.. . ..r.. - >»Q1\\1_4tus_1 - w~...m... ..-...~~\n. , ,a a _/ r M... , ..;..w . .m,.»¢. . .«.oM.‘... r mm...m...mmw.W.:.AnV r...m . |£>\\1)“ﬂbr ~ : J\nL.H<’H\\A1m - aw,  m mm.‘ m. L4:ww.\\w,-V\\4(\\u»« .\n\nI ~-~  H AVVWJI )«\\  MW .» H1 m....m . w w -r \"I '1: W = r>\n. ‘ .,, q. 3. 9-. m n in A\n\n \n\n .W.,.» . A\n Vern .sxm“~17 H q . . ., 7. 7. .,\nM -\"H N” no 23 M 12 4 7. 4 59\n\n‘V1\\ur\\|vm ‘\n\nam...” 1 V M. mmk — n 55 95 9. as w 2.. n\n-;.‘.,...W.,m ; ‘ ~~ 3. as 4» 79 9: us 5 as\n. W_,,_WM I 51 as .. as in 17 .. .\n\n       \n\n \n\nWm. M W‘ A\n\n« W....p.k, , t o a v u 0 We 7. R7\nu Wm)» ..»..‘. , W 4. A)! 97 .1 4 /4 . 5;\n‘Wm M u 55 -as m as at 2x :2\nr- 22311“;  6: an H as as 17 1. A\nr», ?lf$,?;£l m » n n c e a m :2\n\nxx 55 as at .2 sq 1x A:\nM as 1»; w 01 as 5 as\n5; an an as an 17 m ‘I\n\n \n\nas w w .3 as w w :42\n«. 73 97 n A 7. 1 5»\n.2 ss 4. 9. as J‘! as 3,\n‘H ‘vs .9 m a; sa 5 as\n\nno 1a a7 .2 4 7. 4 m\n91 as n 79 as as s 2;\nin as .. as as n 1. .\nA\n\n2 12 u .2 4 ,4 A .9\nu ss 95 = as an 2a :2\nu ~13 4g ,9 9‘ .3 5 a.\n6! as m as as n la 4\n\nA /., X» _‘, J H ._...... ,. .M,_,._. . ', L ._.... _mmm_ J\n___ M S“ ,..«... - ...w.- ........ . , ~. 4...... \"N V W\n- - - »_ m. . ..r— - m m g... .L....;.... .-.....~.\n\n   \n\n \n \n \n\n \n\n \n\n. , .. a _. . ..... ,  . Dmvbéx , ............ . .........m.........., ....... . ., T .7\n\n‘I W7 . ....,...- 2....-. .......... . N\" w -r '1 v: w = r>\n>,\\_‘ .. ... .. ...,.u,.. . A M ‘?= 3\" 9‘ \"4 \" \" A\n; ,Z‘,§ﬁ,\",T M 1 var u omu 2v w . . 0 . 7. 7. .2\n4 “ E ‘ ‘ “ ““\"\" ‘ 9” no 2x av 12 4 71 4 59\n. *_\";;;;;‘; . ........ - n — .. .. .. .. .. .. 7. ..\n.—,W__WW ; «Mn N .. as 4. 79 9. .5 5 as\n. k,,,_,W,W > ‘  .. .. .. .5 .. .. .. .\n\nWW. ; M « u .\n‘ <w...m.m . ‘ 0 a u u 0 a 7n R7\nline» A; W 4. .. .. .. 4 .4 . ..\n..,N.. .. 55 .5 .. .. .. 2. .2\nr. . 22511“;  6: an xv as 5. .7 .. .\nrs .\".'§S,7;lL .. » n . c e . . .2\n‘“‘\"‘\"‘“\"” u 55 as o. .; an z§ .2\n.. .5 .. .. o. .5 s as\n.. .. .. .5 5. .7 .. .\n. . . .. . . . .\n99 2. .. .. 4 .. . 5.\n.. 5: .. .. .. .. .. .,\n.. .. .. .. 9. .. 5 .5\n. 1. .. .. . 7. . .0\n9. .5 .. .9 .. .5 5 .;\n.. as .. .. .. .. .. .\n\n.\n. . . . . . . .\n. . .. .2 . .4 . ..\n.. S5 95 . .. .. 2. .2\n.. .. .. .. 9. .9 . ..\n.. .. .. .5 5. 17 .. .\n\nA /W, . ._.7.4.. ¢ 7.w,,._4. ,_\n1' J :1 MW W\" K. ‘ V _ Ir E. .-4......“ _/ .\nIn an 5.7- * \"' — 5‘ ‘ I-u>¢\\IMI Mm ma 7' um... mm\n. . . ,7..7.. V... 7.w_,h_, . . ...7.79 7....\n« 7 A R! -7 7 um. 7 :..;m.77. 7 nmbe. 7 MvDmume\\»|\\ 7 LA-mlulu7’vI/mmnm\\m:wm‘o1/IYLAIIV Fulmuh 7 u»..7ns 7 . I\n - a..7.7 747.7..777.......  .m7777.77.m7  .\n-WA  _77.7.\\.7-  ........77 . v; 3; ;_r B’; :3 3; ,3 3\n‘*‘f‘“\"” 2 «.777 ‘ 7 . . . . 7. 7. ..\n«7::::::.:°.;“\" »  .. . .7 .. . 7. 4 .7\n«...47...7.. ‘ ‘““vW'* — 7. 5. -77 .7 .. w 7. 3.\n-~.7.......7.....7 ; W“ 91 as 4. 7. or .5 5 as\nme»: .7 .. .. .5 .7 .7 .. .\n[7 M... A\n‘ , “ 0 a u u 0 a n 37\n ,; we .. .. .7 .. . 7. 4 ..\n«M7 1! 55 7. 7. .3 .. 2. 7.\nWpww\" ts! an xu as 5.! 17 in A\n7.»7.7.,_...... . . . . . . . ..\n .. 5. .5 .. .. .. z. ..\n.. .5 .. 7. .7 7.7 . .7\n.. .. .7 .. 5. .7 .. .\n. 7 . . . 7 . .\n.. .. .77 .7 4 7. . ..\n.. .. .. .. .. .. .. ..\n.4 .5 .. 77 .3 .. 5 7;\n. .. .7 .. . 7. 4 L4\n.. .5 4. 7. .. .5 S as\n.. .. .. .7 .7 .7 .. .\n.\n. . .7 .2 . 7. 4 .9\nu 7. .5 . .5 .. 7. 7.\n.. .7. .. 7. .. ., . ..\n.. .. .. 7; 5. 77 .. .\n7 A 7.» ,. J bl “.KmtlVkV V ‘mm at .\n\n_ II E; max...\" j\n\n.._. am 3.“ « ....,.... M M... L........ -.3:\n\n   \n\n \n\n \n\n \n\n. .  W. WWW . ......\n.‘ . A .2 _,/ r then r uumm V D-aybdx r MyDmum:HL r L4 r\\uu|:v7’vI1mAuuHm:wKh «An/nlr nnmm» v LAr>\\u\\ﬂ6 r « J\n.““\"‘\"* “W” 1 Nu .. . \\ k.,m.:» 4 , 4\n.;:,:;:;:: . nnux,Hl»§u ?i ii 31 SE .5 1. 7. 5?\n-:m...z.W-W ; ‘WM’ v an 95 4a 79 9: us 5 35\nWW _' A\nA:..,....m. ‘ 5 a . . . a 7. R7\n«.m..J..‘., ); M 4. n. 97 .1 4 /4 . .9\n»wVru7v_r/Hrr H ;;,m u 55 as m as at 2x :2\n,.::7:.:\";':: ;; M . n . . 3 B . K1\nr‘l?(;m‘.$'§m\"' n 55 as 9. .2 :9 2; n\n-3} an 3. as 64 .7 W ‘I\n3 E W ., 3 E W ..\ng. 7“ 97 ., A 7. . 5.\n.2 g ‘I: 9. .. J‘! 1)! 3,\n‘H ‘V5 .9 m 9, 55 5 as\n. 13 a7 .2 A 7, 4 m\n9, as N 19 9. as 5 9;\nA\ne (1 ‘U .2 ‘ y. A .g\nu 55 -as = as 3. 2a :2\n‘Al g, .g ,9 91 ., . 9.\n5: an El as .3. 17 .. . as J  « ‘~-~-w ~ _ w «:4 a...m ‘:-\n\n3... »\"”“* ' ~*“\"\" “’“\"\" * - * .......... M M... J”... mm:\n\n    \n\n \n\n \n\n. ..‘. . __.s.. . ..... m __, . ....,..\nV J a _ .u>.‘.,WW,pm..M,.s..sm.u...Wm.‘W.m.m,w.‘mm.V  .»\nW  rad, .   ‘.‘.p.m.».m. ..  .Wm,. m.W.s .\n-  x 2|  s. .,._»,.W..‘ m.‘.w Wu.“ .1 ;;  ;; ég Sr; 3; ‘; =3\n7“\"”\"”' I 1 mm“ . 19 a a . 76 re V\n. ‘”‘\"‘““\" x u —\\ .,«.,z‘ 4 , ,_ 1 »\n. {‘J;,';;f;;‘ . ,. /un.rH <, an 35 if 31 s? ..s ‘.1 1. 33\nA-.‘.....m‘..m * “H H‘ “v 3) ss 4s 7s v: as s as\n' lvnkFxvuyr\\e\\m S “S” v 5: W In 95 M H la 1\nr Vwham _' ;:;;;‘ \"M ‘ .\n' °\"\"““”' ~ mu 9: 12 J .1 3 ,3 73 25\nI  \"  n 5: 9K .. as 19 IR :7\nA W. ;; : gm s. s. N N ss 0, s s.\nU.n..mm B W W as 96 at as DE n 1. 4\n ;;  u 0 . B s s 0 27\nA l7.\"m§.‘Q.‘m‘\" :2 5: as 01 X5 )9 2: xx\ns. ax .. 7-; ss 65 3 -as\nw as as an as as H m 4\ns e u . s .. u a\n-3» as M 57 . 7. . 59\n.3 as -42 In as .s 23 31\ns. 95 M u 93 -as s as\nu 7. av .2 A 74 A M:\n9: ss 19 In ss ca 3 as\n. o 2 s . . a .\nn . W 41 4 M 4 ma\n)7 55 as 91 as 39 7, :7\n91 s, 4-4 ,s as s. s ss\n53 as so as as n .. s\n. . s_ ,, Lead Vnstructorz Mike Fitzpatrick\n\nCUWCLNUW d€S|gﬂ1 Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas VANDERBILTVUNIVERSITY\n\nVIDLW 0\nI6.”"}, {"path": "E:/Coursera/nlp/06 - Week 3 - Text Classification/6 - 3 - Formalizing the Naive Bayes Classifier (9_28).mp4", "id": 3759, "text": " Text Classification\nand Na'I've Bayes\n\nFormalizing the\nNaive Bayes\nClassiﬁer Lv.w..v.1mv\n\n/~ Bayes’ Rule Applied to Documents and\nClasses\n\n-For a document d and a class C mu mumy\n\nNa'I've Bayes Classiﬁer (IV)\n\ncMA,, = argmaxP(x,,x2,...,x\" |c)P(c)\nCEC 0.4- my\n\n/- Multinomial Naive Bayes Independence\nAssumptions\n\nP(x,,x2,...,x,, lc)\n\n- Bag of Words assumption: Assume position doesn't\nmatter\n\n0 Conditional Independence: Assume the feature\n\nprobabilities P(x,|cj) are independent given the class c.\n\nP(.\\']......\\‘\" IC) = P(xl |c)' P(_\\‘3 |(')'P(.\\‘3 |(')°...°P(_\\'“ I c) Multinomial Na'I've Bayes Classiﬁer\n\n(‘MAP = argmaxP(xI,x2,...,x\" |c)P(c)\n(‘EC\n\ncm, = argmaxP(c].)1_[ P(x I c)\n\n‘EC .\\'EX Applying Multinomial Naive Bayes\nClassiﬁers to Text Classiﬁcation\n\npositions <— all word positions in test document\n\ncw = argmax P(cj) H P(x, |c_/.)\n\nL'|E( iE]m.\\'iIirm_\\' Text Classification\nand Na'I've Bayes\n\nFormalizing the\nNaive Bayes\nClassiﬁer"}, {"path": "E:/Coursera/object-oriented-java/01_welcome-and-project-overview-visualizing-data/02_object-design-constructors-instance-variables-methods/04_core-defining-classes-and-creating-objects.mp4", "id": 3842, "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 Classes and Objects in\nJovo Visualizing\nGeospaﬂal\nData By the end of this video you will be able to...\n\n- Motivate the use of classes ond objects in\nprogramming\n\n- write classes in Java\n-Create objects and call methods on them\n\n-oescnbewnorona\n\nconstructors or . .~...‘L,5 «. .....~n~|(.-  : Computer Science is...\nThe science of using and processing\nlarge amounts of Information\nto automate useful tasks\nand learn about the world around us\n(using a computer) Easy to write‘\nEasy fé ‘mdintqlri\n\n‘Easy to debug Visualizing\nGeospatiol Real\nworld\nobjects Shape\n, 1 Location\n\nColor\n\n‘ Window\n\n‘  and plenty more ob;ec1s ‘ is on type of data E; A class is a type of data\n\nQ-‘An object is one such piece of dafa*\n* with associated functionality Concept of location\n\nLoiitude: 32.9\nLongitude: -1 17.2 Defining a Class\n\n‘C\nLL-L public class Simplenocation\n(\n\npublic double 1: Constructor:\nP“’°“° “°“”‘° “Method to create a new object\n\npublic Simp1eLocation(doub1e lat, double lon)\nI\n\n         \n \n\nthis latitude =\nthis.longitude =\n\nlat;\nloni Keyvov/ojrd:\n‘ this public class simplenocation\n. 1- In ﬂle\n\npublic double latitude; 5* Simp1¢Location.java\npublic double longitude;\n\npublic simp1eLocation(doub1e lat, double lon)\n(\nthis.1atitude = lat:\nthis.1ongitude = Ion;\n\n)\npublic double distance(SimplaLocation other)\n\n(\n// Body not shown\n\n) Creating and using objects\n\n41 public class LccationTester\n\n(\n\npublic static void Ina.i.n(St:ing[] args)\n\n(\nSiInp1eLocation ucsd = '§\\\n\nnew simp1eLo<:ation(32.9, —117.2);\nSiInplaLocation lima =\nnew SinIp1eLocation(-12.0, -77.0);\n\nSystem. out.pnnt1n (ucsd.distance(lima)): % javac *.java\n% java Location'I'ester\n6567.659"}, {"path": "E:/Coursera/object-oriented-java/01_welcome-and-project-overview-visualizing-data/02_object-design-constructors-instance-variables-methods/05_when-i-struggled-objects.mp4", "id": 3843, "text": " When I struggled\n\nChristine Alvarado, Mia Mirmes, Leo Porter\nUC San Diego"}, {"path": "E:/Coursera/object-oriented-java/01_welcome-and-project-overview-visualizing-data/02_object-design-constructors-instance-variables-methods/06_core-overloading-methods.mp4", "id": 3844, "text": " Core Content\n\nChristine Alvorcudo, Mia Minnes, Leo Porter\n\nUC San Diego Classes and Objects in\nJava\n\nMore details: Overloading methods public class Simp1eLocation\n\n(\n// Code omitted here\npublic double distance(SimpleLocation other)\n\n(\n// Body not shown\n\n)\n\npublic double distance(doub1e otherLat,\ndouble otherLon)\n(\n\n// Body not shown\n\n) Overloaded methods in pracﬁce\n\nsize(800, 600, OPENGL);\nmap = new Unfoldingnapuzhis, 50, 50, ‘I00, 500,\nnew Google .Goog1eMapProvider()) ; Over|<\n\nsize(80\nmap = n UnIoldingMap\n\np.‘.b1;c Dnfo1d1ng24ap[p:cce5s.\\r:g.c :e.p;.p_c1e: p,\nfloat x,\nflea: ;,\nflea: ~\nflea: qr ,\nI-Lk:s:rac:MapF:cvx:1e: prcvlderp\n\nCram: :1 new map \\\\ uh specxﬁc posmon and dnmensxon\n\nParameters:\n\np » The mam apple!\n\nx — The x posmon ofthns map\n\n-; » The y posmon ofthns map\n\nmm: — me mdth of thxs map\n\nnew‘ : -The henglu ohms map\n\np de: — The map nles pm\\ xder to use\n\nmm //unroxamgmaps avg/Juvodod public class Simp1eLocation\n\nI\n// Cod- -u\" ed here\npublic 1 distance (SimpleLocation other)\n\n(\n\n// Body not shown Parameters must\nbe different I‘"}, {"path": "E:/Coursera/object-oriented-java/01_welcome-and-project-overview-visualizing-data/02_object-design-constructors-instance-variables-methods/07_core-public-vs-private.mp4", "id": 3845, "text": " Core Content\n\nChristine Alvarado, Mic Minnes, Leo Porter\nUC San Diego Classes and Objects in\nJava\n\nMore details: Public vs. Privofe By ihe end of this video you will be able to...\n\n- Describe whai the keywords public and privaie mean and\ntheir effect on where variables can be accessed\n\n- Explain whai eﬁers and setters are and wriie ihem in your\n\nclasses double latitude;\ndouble longitude : public class Simp1eLocation I 1'\n\n(\np c double latitude;\np c double longitude;\n\npubllc means can access from any class double latitude;\ndouble longitude : public class Simp1eLocation 1C’\n(\n// \ndouble distance(Simp1eLocaI:ion other)\n(\n// Body not shown\n\n1 (\n\n \n\n// Body not shown public class SimpleLocaI:ion 1 ¢' 1\n(\nprivate double latitude;\nprivate double longitude;\n\nRule of thumb: Make member variables private\n(and methods eiiher public or private) Meinm\nPublic: for-world use\nPrivate: helper methods A\n\nx\\\\V public void setLatitude(double lat)\n{\n\n \n\nif (lat < -130 || lat > 130) (\nSystem.out.print1n(\"Illegal value for latitude\");\n\n)\n\nelse (\nthis.latitude = lat;\n\nI"}, {"path": "E:/Coursera/object-oriented-java/02_memory-models-scope-and-starting-the-project/03_memory-models/05_core-drawing-memory-models-with-objects.mp4", "id": 3854, "text": " Core Content\n\nChristine Alvorodo, Mic: Mirmes, Leo Porter\n\nUC San Diego Memory Models\n\nPan‘ 2: Objecfs By the end of this video you will be able to...\n\n- Draw memory models for reasoning about variable values\nfor object Type daia\n\n- Updaie memory models To trace The sioie of The variables\n\nin Java code i lo cal double, hur\nPrimitive i pes vs. Object types\n\n;LnL varl = 52;\ns1mpleLocation ucsd = new Simp1eLocation(32.9, —117.2); Primitive types vs. Object types —117.2): 4‘\nS1mpleLocation lima = new Simp1eLoca\\:ion(v12.0, ~77.0);\n1in\\a.latitude = ~12.04;\n\n \n\n“,1 52 This\n\n/\n\nucsd @34 ‘ Simplebocation‘ ‘\n@34 0“ , Q, 1nL varl = 52;\nS1mpleL0cat1on ucsd;\n\nucsd = new Si.IIIp1eLoCation(32.9, —117.2),'\n\nSimpleLocation lima = new Simp1eLocation(v12.0, —77,0);\n1ima.latitude = -12.04;\n\n“,1 52 This\nlatitude\n\n       \n   \n\nucsd\n\nlongitude\n\nlatitude\nii\n\nlongitude -710\n\nlima"}, {"path": "E:/Coursera/object-oriented-java/02_memory-models-scope-and-starting-the-project/03_memory-models/08_support-memory-model-drawing-example.mp4", "id": 3856, "text": " Additional Support\n\nChristine Alvorodo, Mic Minnes, Leo Porter\nUCS2111 Diego Memory Models\n\nSupport Vxdeo By the end of this video you will be able to...\n\n- Draw memory models for reasoning about variable values\nfor object and primilive lype data\n\n- Update memory models to trace the state of the variables\n\nin Java code sun 1eLccat1on ucsd new leLocat on(3 17 ),\nSxmp1eLocat1on kumamoto = new SiInp1eLocation(32.0, 130.0);\nucsd = kumamoto:\nkumamoto = ucsd;\n\n \n\nﬂu mgwac\n\nW‘ Sxm 1eLocat1on ucsd new\n\n   \n \n    \n\nIn lelacat an (3\n\n  \n\nlcvm/do 329 ‘B1 mmuac 320 4‘\n\nmguuao H77 Iongwce 1300\n\n1‘ ¢\n\\ kumamoto =\n\nlamudc\n\nmgnuao\n\nT\n\n   \n\nH77\n\nzomuctc\n\nlong use\n\n  \n\n3?D\n\n1300 new\n\n   \n\nLonguudo H77 Jongwcc V300\n\nT Sxm 1eLocatxon ucsd new\n\n    \n \n\nlnhh/dc 329  ‘omudc 320 Q‘\n\nLcngnucm H77 Jowgwcc I300\n\nT Sxmp1eLo<:ation ucsd = new Simp1aLacation(32.9, -117.2)?\nSxmplel nraéxon kumamoto = new Simp1eLocation(32.0, 130.0);\nucso kum oto\n\nlamudc 32 9 \n\nmgumo\n\n   \n\nxomumv\n\n   \n\nWong wee mm-uac ‘ammo\n\n‘ >cngm,ae mug mac\n\n \n\n. Sﬁvnkncuonwvn . nu.-mw.wu.,m... :1 -' :1\nru.:v| . mun \\oAa{vo'\\V¢-n'yYu:1r (\n\nmy ( \\Vul\\ w.- m. (K . M; . (\n3w¢A\\t.u4a\\|o:v A v.; V ... \\up§ela(n:Lmn(SI e. m 1;‘\n\nx.»ox.m.. .0. .,-.- . VOA M-:~lo1u<uemn(!] e,1)u u).\n\n \n\n \n\n     \n\nXy\\ . .».: :r\\nz!rs( HS; . .x‘ Y: ..-.. mm W.» - . M s....m.m.\nam... r:uI17I\\Hl\\r*( x...,—.m, » . . . \"V leuwao . . .wu.ue > . ..-. vv\n\nCoo-snmﬂ xx -\n\nhoax:-tcrx \\.l’IIV‘4Iu\n\nn..m.;w. an 70 sv .=ucw.~».»«(«.\n\n    \n\n-l.V\"1’.I'l'd- o<-vo~M.-nrwnvu.\nnun :1 a. .cvu\\L..rxe ua a\nlmwmm J! n. lanmvudn my a"}, {"path": "E:/Coursera/object-oriented-java/02_memory-models-scope-and-starting-the-project/04_scope/01_core-introduction-to-scope.mp4", "id": 3857, "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 Variable Scope :3: - v\n\n. \\\n.,‘ '/I\n\n‘ ‘ .’-ha By the end of this video you will be able to...\n\n- Describe the notion of variable scope\n\n- Explain the basic rules of scope for Java\n\n- Drow memory models that incorporate scope\n\n- Trace code using Java's rules for variable scope I,\n\n‘ publxc class sxnspxamcacxon ¢-\n1\npub“: down h There are 6 variables In Ihls\n\npublic mum, code. Can you llnd them?\n\n \n\npubuc ssmp1u.ocauon(doub1a\ndouble\n\n \n\n(\n\npumm class Lorzntxonf-star\ntnss.1a:x:uda - nun; (\n\n\"-MS-1°n9i=|=d= \" 1°n1n7 pumu: sumo voxd umnxsumqln\n) l\n// Mon cod. nan\n\n(12.0. -77.0): public class Location'l‘e:tez\n(\npublic suuzc void mnin(Sr.xi.ng[] ugs)\n\n«\n‘i1 Sunplelo anion mm. =\non(-12.0, -77.0): publxc clan nnplabocncton ¢-\n(\n\nH There are 6 variables In Ihls\n\nPublic “Mb” code. Can you ﬁnd them?\n\npubuc double\n\n \n\npubu: SSmpla!.ocat}.on (double\ndouble\n\n \n\n(\n\npublxc cla1I Lucalzonfcltur\nthxs.1a:x:uda - latxn; (\n\nthis-1°\"91=“d° ' 1°n1h-‘ pubuc uauc vmd nuAn(SLn.nq[]\n) l\n// Mon coda hnzn\n\n(-12.0. -77.0): I M"}, {"path": "E:/Coursera/object-oriented-java/04_inheritance/01_welcome/01_module-introduction-inheritance-and-polymorphism.mp4", "id": 3884, "text": " Object Oriented Programming\nin Java\n\nChristine Alvarado, Mia Minnes, Leo Porter\nUC San Diego Coda ht mu Inoduh:\n\nIcznon . java\n\nltudnnmjuvn"}, {"path": "E:/Coursera/object-oriented-java/04_inheritance/02_inheritance/02_core-extends.mp4", "id": 3887, "text": " Core Content\n\nChristine Alvorodo, Mic: Mirmes, Leo Porter\n\nUC San Diego Inheritance in Java public class Person Person\n\n( String name\nprivate String name:\n\npublic String get-_Name() ( return name; ) string getNa,.,e()\n\n \n\n} |\npublic class Student extends Person\n( Student Person\n\nString name\n\nStudent Faculty Person\n\nString name\n\nstring getuame ()\n\n/\\\n\nStudent Faculty\ndouble gpa double salary\n'E(6.}i§1'é' 'c}'e'€éi>'ziT) \"\" ' 'E{c§.3£,'1'é'}}é'€s' 2551-‘; T\" no Common Code\n\nString name\n\nstring gecuame 0 Diverging Code\n\n  \n  \n\nStudent\n\ndouble gpa\n\ndouble ge1:GPA() What did we want?\ni.Keep common behavior in one class\n\n2.Sp|it different behavior into separate\nclasses\n\n3.Keep all of the objects in a single data\nstructure Coming up!"}, {"path": "E:/Coursera/object-oriented-java/04_inheritance/02_inheritance/04_core-reference-vs-object-type.mp4", "id": 3889, "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 Inheritance in Java What did we want?\n1.Keep common behavior in one class\n\n2.Sp|it different behavior into separate\nclasses\n\n3.Keep all of the objects in a single data\nstructure Reference C . , -\ndoclslom:\nrelonncﬂypo\n\n(on\ndecisions:\nObi“? W90"}, {"path": "E:/Coursera/object-oriented-java/04_inheritance/02_inheritance/07_core-visibility-modifiers.mp4", "id": 3892, "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 Inheritance:\nVisibility Modifiers By the end of this video you will be oble to...\n\n- Use appropriate visibility modifiers when writing\nclasses Less Restrictive\n\nMore Restrictive Rule ot thumb: Make member varlables private\n(and methods either public or private) Less Restrictive\n\npublic\n\nprotected\n\npackage can access from same class\n\ncan access from same package\n. Lose access by\n\nprivate\n\nany subclass\nMore Restrictive 1\nr\ne\nh\nt\nO\n.\n\nSample\npublic u.-\ncc 27\n\nprotected x:\npriva Othezl\n\npzotecced x;\ny;\n_private 2: .\" sample 1  i\nE public H: l E ‘\n\nE pzotecced x; * ' ‘ E * T‘\n5 v: '\n\n5 _px-ivate z: Other2\n\ny;\n_private 2:\nSubl I\nE publxc w:\n\nE ‘protected 2:;\n5 N:\n\ng _px-ivate z;\n\n \n\n\"1 Sample\n\n \n\n/ Otherl “-, Othetz\n Sub2\n\n   \n\nn .,\n..d z 1\n\nm. x\n\nsue [a\nt e S\nCC C\nIn. B\n1... v\nbe .1\nU2}!\nPPYP & protected x:\n\nprivate 2 :\n\nQ\n\nSubl other2\nSub2\n\nOtherl\nFx__\n\npublic Hi\nprotected Xi\nSubl\n\n_private 2: public an;\nprotected x;\nY.\n\nprivate 2:\n\n/_\n\nSubl\n\n \n\nOthet2 : pxotected x;\nE Y-\n; _px-ivate z;\n\n{I Sample Othex.-1  [ Othet2\n public an  ‘ .' Sample\n5 public an;\n\nE protected at;\n5 v\n\ng _private 2: ‘protected 2:;\n‘private 2: te‘\n\npublic w;\nprotected 2:;\n.‘_ptiVa Rule of thumb: always use eithet\n\npublic or private\npubnc less Restrictive\nprotected\npackage\n\norivofe More Restrictive"}, {"path": "E:/Coursera/object-oriented-java/04_inheritance/02_inheritance/12_concept-challenge-inheritance-constructors-1.mp4", "id": 3897, "text": " Concept Challenge\n\nChristine Alvarado, Mic Minnes, Leo Porter\nUC San Diego public class Person { Student 5 new stuclento\n\nprivate String name;\n\npublic Person( String n ) ( ﬁ 1% 2\nl:his.nama = n;\n\nSystem.o\\n:.print(\"I1 \") I\n\n, .\nclass tudent ex: on\nis \"studa \") I\nSyst .out.p int(“I2 \"):\n\npublic Studenl:( String :1 ) (\nsuper (n) .'\nSyst¢m.ouI:.print(\"II3 ' :\nJ 1\n)\n\n \n \n  \n\n§\nf? iﬂ #3 4&2"}, {"path": "E:/Coursera/object-oriented-java/04_inheritance/03_polymorphism/01_core-introduction-to-polymorphism.mp4", "id": 3899, "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 Polymorphism  : \\#\n~\" ‘Tn\nMi By the end of ?his video you will be able to...\n\n- Explain the purpose of polymorphism Polymorphism\n\n-Supercloss reference To subclass object\n\nPerson 5 = new Student(“Cara”,1234); xxng ge\nS tzing tostring ()\n\nint studentm .§_t_r.:~.r1<.I_.e.'_“£z1.s>y_%:3.‘_‘_’..\nint getSID() Stxnng getEID(]\nstring tostringu Strxng zest:-mgm // assume appropriate ccors\nP[] = new Pezson[3];\nnew Pexson( \"Tim\" )7\nnew Student( \"Cara\", 1234 );\nnew Faculty( \"Mia\". “ABCD\" ): ,‘ nssiume appxopziate \\-nuns\n\n     \n\nPU new Pezso 1; Nexfm\n_ '— new ?er:on( “TA. )3 . .\np[l] — rne‘-4 Studentl data\", 1234 J Compﬂe “me and\np[2] — new Z-‘aruJ.ty( \"M13\", \"ABCD\" )5  \n\nfoxunt 1 = 0; 1 < p.length; 1+4»)\n(\n\n‘ Sys<:em.out.prxnt1n( p[i] ),\n)\n\n: Cara\n: Mia"}, {"path": "E:/Coursera/object-oriented-java/04_inheritance/03_polymorphism/02_when-i-struggled-polymorphism.mp4", "id": 3900, "text": " When I struggled\n\nChristine Alvarado, Mia Mirmes, Leo Porter\nUC San Diego"}, {"path": "E:/Coursera/object-oriented-java/04_inheritance/03_polymorphism/07_core-abstract-classes-and-interfaces.mp4", "id": 3904, "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 AbsTroctC|c1sses and\nInterfaces By the end of this video you will be able to...\n\n- Use the keyword abstract\n\n-Compare \"inheritance of imptementation“ and\n“inheritance of interface“\n\n- Decide between Abstract Classes and Interfaces Person — Campus Accounts\n\n-Add method \"monthlystatement\"\n- \"Person“ objects no longer make sense\n\nHow do we:\n\nN Force subclasses to have this method\n‘.3 Stop having actual Person objects\n\n'5 Keep having Person references\n\n4\nN\n\n \n\nThen use an Interface! Interfaces\n\n- lnlerfoces only define required methods\n-Classes con inheril from multiple lnlerfczces .ed 1.’)\n\n   \n\n7:«va.'.a.\n\n \n\n'h'm,\n\np mlxr .1n::t:'ar\" \"'r>.\"p'x:n'Tr>( F. o i; .: z'.paxa‘:3Lt:\n\n \n    \n\n   \n\naqe java. La /7\n\n     \n   \n   \n   \n \n\n< > means Generlcs\n\n \n\n/, fTr)mpa:c- cm\nW Rz—v‘:r:*. ~: 0, C, > F7 11\n// 1\n\np mlxr amt:\n\n \n\n  \n\n. 'h'm, c-qvza; rn, r’;xL,wH'0r r\n\n \n\n;nr \" \"_D'xIl'Tr>( F. O I,‘ H Dczixxcrl . . .: z'.paxabLr:\n\n_n»:x:-«me java. La /1;\n\n< > means Generlcs / / Dcilxcfl 1.’)\n\n   \n   \n   \n \n\npa:<ane\n\nxi IL\nrn, g-1-. H'l\"I’ r\n\n\"\"_D'nzl'fr>( E13 I,‘\n\n \n\nWhy have this lnterface?? 1:1\n\n   \n\nc-«me java. La,\n\n \n\nLrtterface\n/, 5Tf)mp.1:(- mm-\n\nW In-vv:\n\n     \n \n\nr,-1-. nor rhan n.\n\nD ;\n\n\"-0.\"_:1’xzn'Tr>( F. n 90 ':1d(:\n\npublic int compara'l‘o( Person 0 ) {\n\n\"~.qet2»'A.'ne H .::-nmpa: eTn[ 0 . ac-rhiame I) :4:-I5 . implements Compa:abJ.e<Person> :‘\n\nmm nam.;;\n\nMme details on Comparable later \n\n.1519\n\npublic int compareTo( Person 0 )\n\nMM .~omp:neTn( n. Abstract class or Interface?\n\n- If you just wont To define 0 required method:\nL lwieridce\n\n- If you want to define poieniiolly required methods\nAND common behavior:\n\nAbsiraci‘ class"}, {"path": "E:/Coursera/object-oriented-java/05_guis-responding-to-user-events/02_event-driven-programming/06_core-listener-hierarchy.mp4", "id": 3914, "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 Listener Hierarchy :xHI ex \n\nL‘!\n\nEON ‘H ' By the end of this video you will be able to \n\n- Describe inherilonce relotionships used in the\ncourse so for\n\n- Distinguish between interfaces and classes in this\nhierarchy <<1r‘.'L-:'.a::c>> e\nMousebistener Keylastener Keylastener <<1l’H,e.'i<:Cs .\nKeyldstener class <(:r.!L-:'.q:-c>*- </.rre-n\nMouseldstener Keyl. stener <‘1n5ti1dFL3\" <<;nte:iGce>>\n\nMousenistener KeyListener .. . public void mousePzessed () (\nMouselzxstener ) ‘ ‘ ‘\n\nJ < l\n5 publzc void mouseclxcked () (\n\nI\n\n‘ public vold mouseReleased 0 (\n\n)\n\nMagWLthButton <<51nV -:-:1,m=>>\nMouselixstener public void keyPressed () (\n\n)\n\npublic void keyTyped () {\n\n)\n\nfd;:>>\n\nKeylistener\n\n \n\n \n\npublic void keykeleased () (\n\n) <<;nror::-c»> void onnanipulacion (\n\nEventListane: MapEvent event) (\n\n4\nI\n\nUnfoldingnag"}, {"path": "E:/Coursera/object-oriented-java/06_searching-and-sorting-from-code-to-algorithms/03_basic-sorting/07_core-javas-built-in-sort.mp4", "id": 3929, "text": " Core Content\n\nChristine Alvorodo, Mic: Mirmes, Leo Porter\n\nUC San Diego Sorfinﬁ UQTQ\n\nSorting in Jcwa ul l_..I L~.| I.\n\nA By the end of 1his video you will be able to...\n\n- Use predefined Java method To sorr\n- Explain 1he properties of The bui|t—in sort importﬁiliiﬁub\n\npublic class MyBui1tInSortingTest (\n\npublic static void main (String[] args) (\nRandom random = new Random();\n\nList<Integex:> numsToSort = new Ax:x:ayList <Integer>():\n\nfor (int i=0; i < 5; i++) (\nnumsTosort add( random.nextInt(100) );\n\nSystem.out.print1n(\"New array after builtin sort: \" +\nnums'I‘oSox:t . toS1:ting()) ; O9 ized metge sort\n\n- Fast\n\n- inworstcase\n\n- on nearly sorted data\n- Stable\n\n \n\nhnpsz//docsmacbe Com/Javase/VUVonaV/cohecHon5/o\\g0H!hm3/ .I l..I I\n\nI Lan I\n\nL..« Ls)! 5% l. 3”’! L\n\n.I _.I I\n\n.l l_.J LA EN Lﬂ"}, {"path": "E:/Coursera/pgm/Lectures/Week 1 - 03 Template Models/04_Plate_Models_20-08.mp4", "id": 4027, "text": " Probabilistic Representation\nGraphical\nModels\n\ntLIawt_eL/I9,<1'§'3\n\n“$41; 2») “Ma. +5?‘\n\n \n\nTemplate Models 3\n\nModeling Repetition g\n\nm/r 5~¢1¢v:-I\n1' M :W{\\'/J\\ode|ing Repetition ;% Modeling Repetition -,\n\n:: «la , .1 \nPm, !+£!:;;::e <=~.3;~¢\n( c Pb) 914» M W{!\\ode|ing Repetition 3% Dnyhrvz mug. Nesfed U\nPlates\n\n(_ovJ (.\n\nffu ; r nnnnnnnnnn Ir Overlapping Plates Explicit Parameter‘ Sharing\n\n \n\nnnnnnnnnnn n Geo101\n\n\\.\"\\/Mwrnrmv In\n\nCollective Inference Collecfive Inference\n'35\n\n  \n\n|)u5>0v-x naug- Collective Inference\n\n9-El\n\n \n\nbumrw: KoHu easy / hard\n\nDamn: KoHu Collective Inference\n\\ A \\ F’\n\n \n\nown\"; mg. A\n\n \n\neasy / hard\n\nCollective Inference\nT\n\n‘Luv!\n%~’\n~~.3e,“_‘M-\n\n-Z mm x.,u.. Collective Inference\n\\ _ P\n\n   \n\neasy / hard Collective Inference\n\nZ\n\ngmnn D amt]\nim\n\n|'|||||[||| easy / hard\n\nCollective Inference\n\n1\n\nQ0 [3  D of [J 3 Dub\nIlllllvlllilll ea5V / hard\n\nnce\n- Infzre\ncouec*\"\"”\n\n’\n§ J\n43\n13/“?\nE7 J\n[j ’\n. P25’\n'56 J\n-’l«C7{/ j\nZ J\nin J\nQ\n13'‘? easy / hard\n\nCollective Inference\n\nUnhn\nI nce\n- Infzre\ncouec*\"\"”\n\n’\n§ J\n, § ,\n13/“?\nE7 J\n[j ’\n.: f\n‘VIZ? ;\nZ J\nE A J\n9 .\n1:1 J Collective Inference\n\n  \n  \n \n\nD T\n7 ‘S T\nCa‘-.IJ—\n|:) T\nE] T\n.\\:L! K}\n\nT\n\n-E‘ 1.,\nT\nT\nT\nT\nT\n\neasy / hard low / high easy / hard\n\n   \n\n3\n\nCollective Infere ce\n\n[]QnUnQ:UDFnnU\"‘n'Un\npro n\nIllllﬂllplllilll Collective Infere\n\n3\n\nC6\n\nnnqnhn\nnu\n\n      \n\ng’nnF\nIIIIMIIPIII\n\nq‘\n\np-..-..-.-\n\nUUDDD\nhf‘ Collective Infere\n\n3\n\nC6\n\nnnqnhn\nnu\n\n      \n\ng’nnF\nIIIIMIIPIII\n\nq‘\n\np-..-.--.-\n\nUUDDD\nhf‘ \n\neasy / hard low / high easy / hard\n\nCollective Inference\n\ngoof [J Bimbo\nIIIIIMIPIIIIIII Collective Infere\n\n3\n\nC6\n\nnnqnhn\nnu\n\n      \n\ngoof\nIIIIMIIPIII\n\nq‘\n\np-..-.--.-\n\nUUDDD\nhr .' easy / hard\n\n \n\n3\n\nCollective Infere ce\n\nIJIJIHJDDETIIEDFJDDUDIHCIU\nVllllullrlllilll Collective Inference\n\n   \n\nA\\ .1 j\nJ  j\n ‘*4-_.____ . ‘Q\"—\"-3-I\n‘-\".'_-. _ :1 j\nj D...“ ' :1 j\n\"'~_-. . (3 j I‘\n__ .3 & F\nj VJ-.'.'...  Z\n' :1 j\n D-\nI\nZ 1 j\neasy / hard low I high\n\n[mm KoHu easy / hard\n\nCollective Inference\n\\ ‘-:D\n\nj\n3 3 j\n y‘'-...m : j\n\"-\"W. Cj‘“——\n\n1:)\n\n[:1\n\n[:1 Collective Inference\n\n«:1\n\nin:\n\n  \n\nnu’nUn§ﬁ.DFnuD\"‘D’U\nEH7\" \\\n“II” I H II\nF\n\neasy / hard\n\n5\n\n\\\n3'\nW.\n3'\n\n[mm KoHu P/lcﬁi Dependency Model\n\n- For a Temglafe variable \n— Template parents ﬂ£):,’Bm(U,,,)\n\n(I.\nHi /ale) l:(<,.)‘%0 M 5 Y*-» _’__j\nCg LA 3’ ‘Hal Pvkﬁ\n\\_ \" H-»..r3(;)\n+w,I.+. '*as\"<a~#» cm\n\n3cPD P A | B1,..., B\n\nnnnnnnnnnn n Plate Dependency Model\n\nLe’r A(U1,...,Uk) with parents B1(U1),...,Bm(Um)\n\n- For each i, we mus? have Ui g U1,...,Uk\nL— No indices in parent that are not in child Summary\n\nnnnnnnnnnnn » 6l:\\)\\aGrgl:) Summary ”\"“”*\n- Templatelfor an infinite set of BN5, each\ninduced by a different set of domain objects\n\n- Parameters and structure are reused within\na BN and across different BN5\n\n' \n\n- Models encode correlations across multiple\n\nobjects, allowing collectiv i erence\n\n- Multiple \"languages\", each with different\ntradeoffs in expressive power\n\n \n\nDnvhn; Kc Izr"}, {"path": "E:/Coursera/pointers-arrays-recursion/01_pointers/02_pointers-conceptually/03_pointers.mp4", "id": 5643, "text": " Pointers\n\nC Programming intx=3;\nint *p:\np=&X;\n¥P=47\nint.y= _7\nint*q—&y7\n*cx=*p+1:\nQ=P7 pgsxi\n‘VP/A’ ..\nincv’ ’,\nint ‘G / kii\n,*p’’’\n*q\nqgp:"}, {"path": "E:/Coursera/programming-fundamentals/02_reading-code/01_variables-and-expressions/04_declaring-and-assigning-a-variable.mp4", "id": 5672, "text": " Declaring and Assigning a Variable\n\nC Programming x.v..\ntt\nnn\nLi in: x ;\n\nint y; x.v..\ntt\nnn\nLi int x ;\n\nm: y; mw\ncc\nnn\n‘.1 in: x;\nint y int Y ‘Pm X\n\nint y\n\nx+Z;\n\nintz y~X; z\nt\nn\ni ‘Pm X = .\n\nx+Z;\n\nint y\n\nintz y~X; intx= 4;\n\n‘Km Y\n\nint 2\n\nx+Z;\n\ny»x; int x ;\n\nint y\n\nn\n><\n+\n1*’ n\n+\nN"}, {"path": "E:/Coursera/programming-fundamentals/02_reading-code/04_conditional-statements/03_execution-of-if-else.mp4", "id": 5677, "text": " Execution of if / else\n\nC Programming int 5 (mt x, int y) 1\n1: (x < y) 1\npr1ntﬁ1“x < y\\n\")7\nreturn ,1 + X:\n1\nelse 1\npI1r(f1“x >: y\\n\"H\n1f (X > B) 1\nreturn y + 7.-\n\n1\n\nreturn >< — 2;\n\nlnt maln (voldl 1\nlnt a — f 13. 4):\ntnt b — t 15, 5):\n\n 0;"}, {"path": "E:/Coursera/programming-fundamentals/02_reading-code/05_loops/03_while-loops.mp4", "id": 5679, "text": " while Loops\n\nC Programming xnt. q(1nt a,1nt b) (\nint total = 0;\nmule ta < m {\nLocal += a:\nprxntE(”a=ld, Lw=id\\n\", a, 1.);\n.3\";\nn——:\n)\n\nreturn total.’\n\nJnt mam Lvoxdp (\nxnc x = (g2, 97;\npr1ntfl\"x=1d\\n\", xv:\nreturn 0;"}, {"path": "E:/Coursera/programming-fundamentals/02_reading-code/05_loops/06_equivalent-for-and-while-loops.mp4", "id": 5680, "text": " Equivalent for and while Loops\n\nC Programming int mumvoidy ( int mainwoid) (\n\n \n  \n\ninty=1; xnty=1:\nintn-3: intn-3:\nfor (int 1 ~ 1 < or L») ( (\ny - y - int 1 = 1.-\n) whale Ii < n) (\nratnrn 0; y = Y - 1;\np in;\n)\n}\nreturn 0;"}, {"path": "E:/Coursera/programming-fundamentals/02_reading-code/05_loops/09_execution-of-continue.mp4", "id": 5682, "text": " Execution of continue\n\nC Programming void printiemaxnders [;n: )0, xnt hx, xnt n;\nxnt 3 Jo;\nwrme (3 < mm\n1f [1 : o>(\npr1ntf[”Cannof dlvldr by n.\n\n1*‘;\n\n \n\n-1\"»;\n\ncont 1 mu-,;\n\n)\npx')nLl(“%d mod m = 1d\\n”, n. x. n 2 n:\n\n)“i\n\nAnt mam lvcxd} (\npunuzemamdersn-2. 4, 5»:\n\nreturn 0; Z\n|\n\n‘armm .1wu1n> *2» U\n5 ma v ya 0\n\nR ma 5 Yx ‘\n\n< ma 1 Y\\ /"}, {"path": "E:/Coursera/programming-languages/03_section-1-and-homework-1/02_video-lectures/02_rules-for-expressions.mp4", "id": 4266, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nML Rules for Expressions (Seen So Far)\n\nyx? Expressions\n\n- We have seen many kinds of expressions‘\n34 true false x el+e2 e1<e2\nif el then e2 else e3\n\n- Can get arbitrarily large since any subexpression can contain\nsubsubexpressions,e1c.\n\n- Even! kmd of expression has\n\n1. Syntax\n\n2. Type-checkmg ru\\es\n- Produces a type or farls (with a bad error message ®)\n- Types so far int bool unit\n\n3 Evaluation rules (used only on things that type-check)\n- Produces a value (or exception or Inﬁmte—\\oop)\n\n \n\n.V3n—\\lar 2013 Dan omsmu Progamunng Lmrguages 3 (‘~ This 1'5 a comment.\n\n    \n\nThis 1'5 our first program. “\"')\n\nval x =_34; _ _\n(\"‘ statwg enV'|r_‘DNl\\entZ x ' mt ¢)\n(‘ dynannc em/1ronment: x —v> 34 ’*)\n\n$31 y = 17; _ _\n* statu; em/'H_‘onment. x : mt, y : 1nt ‘~')\n(‘~ dynannc em/1ronmen(: x ——> 34, y ——> 17 =)\n\n1\\--- f1'rst.sm1 Top L8 (SML)\nva'| y = 17 '\nva1 z = 70 .\nval q = 71 '\n\n \n\nva1 abs_of i = 70 : int\nva1 abs_of_Ls1'mp1er : 70 : int\nva1 it 0 : unit\n\n \n\n— x <\nva1 it fake : boo1\n‘ €\"? x\n\n\\/an 1t = true : boo1\n\n1\\‘~‘*- *sm1* sot L21 (Inferior-SML: run Comp'Hat'ion) A slightly tougher one\n\nWhat are the syntax, typing rules, and evaluation rules for\n\nconditional expressions?\nD\n\nL€1YS write It OU1. ..\n\n \n\n.V3n—\\lar 2013 Dan omsmm Ymgmmnnng Lnnguages (Text) syntax:\nif e1 then e2 e1se e3\nwhere if, then, and e1se are keywords and\ne1, e2, and e3 are subexpressions\n\nType—check1'ng:\nfirst e1 must have type boo1\ne2 and e3 can have any type (1et's ca11 it t}, but they\nmust have the same type t\n\nthe type of the entire expression 1'5 a1so t\n\nEva1_uation ru1es: _\nf1rst eva1uate e1 to a va1ue ca11 1t v1\n\nif it's true, eva1uate e2 and that resu1t 1'5 the whcﬂe expressia\n«en's resu1t\n\ne1se, eva1uate e3 and that resu1t is the who1e express1'on's res:\niL|1tD\n\n1\\——- tmp.txt A11 L15 (Text)\nwrote c:/Users/coursera/Deskto/tm _txt Now you try one\n\nSyntax, type-checking rules, and evaluaiion rules for Jess-than\ncomparisons’)\n\n \n\nymacar zms Dan Gmsmmu Progmmunng Lnnguages x"}, {"path": "E:/Coursera/programming-languages/03_section-1-and-homework-1/02_video-lectures/10_let-expressions.mp4", "id": 4274, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nLet Expressions Let-expressions\n\n3 questions‘\n\n- Syntax. ‘ lfét -.111: 233. bin a 6336:\n— Eacnhi is anybindrng ande is any expression\n\n- Type—checking‘ Type—checkeachb.1'. and 2 II’! a static\nenvironment that inciudes the previous bindings\n\nType of whole iet-expression IS the type of e\n\n- Evaluation. Evaiuate each hi and e in a dynamic environment\nthat includes the previous bindings.\n\nResuit of whole |eI—expression is result of evaluating a\n\nI3n—Mar 2013 Dan omsmm Pmgmunnng Lmiguages 4 _ va'| x = 1\n1|’!\n\nd (‘let va'| x = 2 in x+1 end) + (\"let va'| y = x-2-2 in yvl end)\nen\n\nE\n\n \n\n   \n      \n       \n   \n       \n \n\n     \n\n1\\--- 1et_ex ressions.slI'l Bot L16 (SML)\nstandard ML 0 New_Jersey vll0.74 [bu1”|t: Tue Jan 31 16:19:10 2012]\n- use>\"1et_express1ons.sm'|\"'\n\n[o emn? 1ec_expresswns.smiJ\n\nva s1\"|y1 - fn:1'nt —>1'nt\n\nva'| sﬂ'|y2 — fn : unit ~>1'nt\n\nva'| it = 0 : unit\n\n- s1'11y2 ();\n\nva11't=7.1'nt\n\n  \n    \n     \n \n\nl\\““- *sm1* (Inferior-SML: run Comp1\"|at1'ovI) What’s new\n\n- Whats new is r where a binding is in the environment\n— In later bindings and body of the letexpressicn\n- (Unless a later or nested binding shadows it)\n— Only in later bindings and body of the let-expression\n\n \n\n- Nothing else is new‘\n— Can put any binding we want, even function bindings\n— Type—check and evaluate just like at “top-level\"\n\n \n\n.V3n—\\lar mt} Dan Gmssmau Yrogmiuuimg Lmtguages 6"}, {"path": "E:/Coursera/programming-languages/03_section-1-and-homework-1/02_video-lectures/11_nested-functions.mp4", "id": 4275, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nNested Functions Any binding\n\nAccording to our ruies for Jet-expressions, we can deﬁne functions\ninside any let-expression\n\n._le_t _‘.1.5:1;,-7-:i2...AJ’:Li1' ix; ,e ena\n\nThis is a natural idea, and aften good style\n\n!zn—\\lar 1012 Dan Gmnnmu Ymgmixxxxiiiig Languages 2 Stanar ML o New Jersey v11o.74\n- use’\"nested_Functior}s.sml\"'\n[oﬁzemng nested_Fur\\(t1uns.sm1]\n\nva count = Fn : int * int -> int ‘list\nva‘| countu _from1 = fn : int -> int ‘list\nva‘| it - (57 : unit\n\n- countup_ﬁ'om1 7;\n\nva‘|1‘t = [l.2.3.4.S.6.7] : int ‘list\n\n— x\n\nU1 t: Tue Jan 31 16:19:10 2012\n\nProcess sm‘| finished\n\nStandard ML of New Jersey vll0.74 [bui‘|t: Tue Jan 31 16:19:10 2012]\n— use>\"nested_Functions.sml\n\n[oﬁiemng nes(ed_FunCt1ons.sm1]\n\nva countu _From1 = fn : int -> int ‘list\n\nva‘| it = (S7 : unit\n\n— count;\n\n;gd_In:2.l~2.6 Error: unbound var1‘ab‘|e or constructor: count\n\n- countup_from1 7;\n\nva‘|1‘t = [l.2.3.4.$.6.7] : int ‘list\n\n   \n  \n   \n\n      \n\n     \n\n \n \n\n]_\\s_(<._\nSWIICH to b\n\n*sm1* A‘|‘| L21\n\n(Inferior-SML: run Comp1\"|at1'on)\nuffer (defau\n\n‘It nested_Fnnct1' ons A sm‘|):\n\n        \n     \n\nan ms: an fun ?ountup_ﬁ“oml(x : int) =\nCI\nfun count (from : int) =\nif from=x\nthen X: : [J\n_ e'|se from :: cour\\t(from+].)\n1n\ncount(l)\nend]\n\nnested_funct1' ons .sm1 A11 L10\n\n  \n\n     \n\n1\\--- (sm) New :_Iersey vl10,74\n- use’\"nested_Fun<:t1cvns.smT\"'\n[oﬁzemng nested_Funct1ons.sm1]\nva\n\nm t: Tue Jan 31\n\ncountu _ﬁ“om]_. = fn : ‘int -> int '|‘ist\nva'| It =( : un1t K\n— count; 1\nst ' 1-2.6 Error: unbound var1'ab'|e or constructor: count\n\n3 countufffroml 7: 4 _\nva'|1t = [l,2,3,4,S,6,7] :1nt'|1st\n— k\n\nProcess sm'| Finished\n\nStandard ML of New Jersey Vll0.74 [bu1\"|t: Tue Jan 31 16:19:10 2012]\n- use \"nested_Funct1'ons.sm1\"'\n\n[o ening nested_runcn’ous.sm1]\n\n\\/Eli] countu _from]_. = fn : int -> int '|ist\n\nva'| It =( : un1t\n\n- countup_from1 7;\n\nva'|1't = [1.2,3,4,s,6,7] : ‘int'|1'st\n\n— count;\n\ns_tdIn:3.1-3.6 Error: unbound var1'ab'|e or constructor: count\n\nl\\‘_“’- *sm1* Bot L33 (Inferior-SML: run Comp1\"|at1'on)\nSw1tch to buffer (defauk nested_Funct1ons‘sm1):\n,~ a -v :»\n\n5: m anzuag 5 Nested functions: style\n\n- Good style to deﬁne helper functlons Inside the functionsthey\nhelp If they are’\n— Unllkelyto be useful elsewhere\n— Llkely to be misused If available elsewhere\n— Llkely to be changed or removed later\n\n- Afundamental trade-off rn code design‘ reusmg code saves\neffort and avoids bugs. but makes the reused code harder to\nchange later\n\nl;;\n\n \n\n!3n—\\lar 2013 Dan omsmm Pmgmunnng languages 5"}, {"path": "E:/Coursera/programming-languages/04_section-2-and-homework-2/02_video-lectures/06_useful-datatypes.mp4", "id": 4287, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nUseful Datatypes Recursion\n\nNot surprising\nFunctions over recursive datatypes are usually recursive\n\n \n\n    \n \n\nfun\na ’e 1e of\nConstant ' > i\nI ljegab ' ~ (efwal e2‘)\n\n  \n\n_> (eval 21) + (eval 22)\n\nI Add\n=> (ev,.'a,1 e1) * (eval e2’)\n\nI M_u1t:L -.'Ly( 1,‘;\n\n \n\n>\n\nhr-—\\(ar son mu Gmnnmu Pzogmxmmng Languages mu.-u...a.a-u. Recursion\n\nNot surprising\nFunctions over recursive datatypes are usually recursive\n\nfun\n\n \n\ncé e ‘e of D\nConstant ' => 1’.\n' => ~ (ev'a1 e2l)'\n(eval 21) + (eval 22)\n—> ('£’~V.é:1 51). * (av-fa-1 e2’)\n\n \n\n      \n\nI Mu1t1p1y( 1 ,»\n\n.VarI—\\lar son mu Gmnnmu Pzogmxmmng Lzmguagcu _Qnr-1 Lucian\n\nan numer_o _as e \" exp —> mt =‘~\ncase e of _\n\nConstant 1 => 0\n\nNegate eZ rIumber_of_adds e2\n\nAd (e1.eZ) 1 + number_of_adds el + vIumber_of_adds e.\nMu'|t1'p'|y(e1,e2) => number_of_adds el + number_of_adds e2\n\nva‘l examp'|eAexp : exp = Add (Constant 19, Negate (Constant 4))\n\nva1 examp'|e_ans : int = eva'| examp1e_exp\n\nva1 examp'|e_addcEunt = number_of_adds (Mu'|tip'|y(examp1e_exp,examp'|e_exp))\n\n-\\—-- usefu'|_datatypes.sm'| Bot L34 (SML)"}, {"path": "E:/Coursera/programming-languages/04_section-2-and-homework-2/02_video-lectures/13_a-little-type-inference.mp4", "id": 4294, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nA Little Type Inference uncaught exception Error ,r\nraised at: .. coInp1'1er TopLeve1 interact eva1'Ioon.sm‘|:66‘19—66.27 ‘\n\n. /comp1\"|er TopLeve1/1nteract/eva'|\"|oop.srn1 244155\n\ncomp1'1er TopLeve1 interact eva11oop.sm1:296.l7—Z96.\n\n \n\nProcess sm'| finished ‘\nStandard ML of New Jerse¥ \\/110.75 [bu1'|t: Sat sep 29 12:51:13 2012]\n— usev\"type_1'nferen<:e.sm \";\n[0[lJen1ngttyp$_}-nfe1r;enceIsrrﬂ] ‘ t k _ t I t\nsum, r1p e n 21m:  1n 1n —> 1n\nva'l fu'|Lname1 _ fn : {ﬁrst:str1'ng, ‘lascstring, midd'|e:str1'ng} —> StI\"a\n\nva sum_tr1'p'le2 - fn : int int.‘ int —>1'nt‘ ‘ I\nva'| fu'|Lname2 = fn : {f1rst:str1ng, ‘lastzstrmg, m1dd'|e:str1ng} —> St!\"a\n\nVa partja'|_sum = fn 2 ‘int_* 'a “-“ jnt —>1'nt ‘ ‘ ‘\nva'| part1aLname = fn : {F1rst:str1ng, '|ast:str1ng, m1dd'|e:'a} —> St(“|I'h\n\nVa} it = O : unit\n\n     \n \n\n1\\“‘*— *snI'|* Bot L43 (Inferior—SML: run Comp1'\"|at1'un) (*-' these functions are po1ymorph1'c:\n(*-  )\nfun part1a _sum X, y, z =\n\nx+z\n\ntype of y can be anything ’~)\n\n    \n    \n\nfun part1'aLname {f‘irst=x, m1'dd1e=y, '|ast=z} =\nx /\\ \" \" A z\n\n   \n\n—\\~~» type,inference.sm1 Bot L47 (sML) uncaught exception Error\n\nraised at: . compi'Ier TopLeve1 interact eva1'loup.sm1:66‘19—66.27\n/comp1'|er TopLeve'|/interact evaT|oop.srn'| 24455 1\n. compi1er TopLeve1 interact evaTIoop.sm1:296.l7—296.\n\n \n\nProcess sm'| finished\nstandard ML of New Jerse¥ \\/110.75 [bui'|t: Sat sep 29 12:51:13 2012]\n— use \"type_1nference.srn “;\n[oglzening type_inference.sm'|]\nsum_trip'le]. = fn 2 int ‘-' int * int —> int\nva'| fuTLname1 = fn : {first:string, 1ast2string, midd'|e:string} —> stra\n\nVa sum_trip'le2 = fn 2 ‘int *' int‘-' int —> int‘ _ I\nva'| fu'|Lnamez = fn : {ﬁrst:str1ng, 1ast2str1ng, m1dd'|e:str1ng} —> stra\n\nVa partiaLsum = fn 2 intf 'a ~ int —> int ‘ ‘ ‘\nva'| part1aLname = fn : {F1rst:str1ng, f|ast2§ltr1ng, m1dd'|e:'a} —> strina\nva'| it = 0 2 unit\n\n1\\“‘*— *snI'|* Bot L43\nswitch to buffer (defaiflt t\n\n     \n  \n \n\nV (InFerior—SML: run Campi'|ation)\ne,1 nfe rence . sm1)2 (*-' these functions are po1ymorph1'c: type of y can be anything 9)\n\n(*1'nt ‘a K in: —>1'nt ‘)\nfun part1a1_sum (X, y, Z) =\nx + z\n\n         \n    \n         \n \n\n   \n\nfun parv:1'aLr\\ame {f‘irst=x, m1'dd1e=y, '|ast=z} =\nx /\\ \" \" A z\n\n   \n\n—\\——~ type,1'nference.sm1 Bot L48 (SML) o emng typegn erence sm ‘ ‘ _\nsum_tr1p1el fn mt * 1nt_* 1nt —> mt‘ _ I\nfu'JLnarne1 = fn : {f1rst:str1ng, ‘lastzstnng, m1dd'le:str1ng} ~>\n\n       \n   \n  \n\nsum_tr1'p1e2 = fn 2 ‘irgt 1'nt_ int —>1'nt‘ ‘ I\nfu'|Lname2 _ fn : {f1rst:str1ng, \"lastzstrmg, m1dd'|e:str1ng} —> SIP:\n\n. k . . .\npart1_a'|_sum = fn 2 ‘Intf a -1‘nt —> mt ‘ _ _\npart1a'|_name = fn : {f1rst:str1ng, ‘lastzstrmg, m1dd'|e:'a} —> Stl“|I'\\a\n\n1‘t_= O : unit\n— ﬁ)arfl:1aLsum_(3,4,5);\nva 1t 8 2 mt _\n— Yar\"t1aLsum‘(3,\"h1\",5);\nva 1t 8 2 mt\n— part1aLsum (3,5,\"h1\"');\nstdIn:4.l—4.23 Error: operator and operand don't aclree [tycon misrnatchl\noperator dornam: jnt *' jnt *' int‘\noperand: 1 mt ‘-' mt ‘-' strmg\n1n expressmn:\npart1'a'|_sum (3,5,\"h1'\")\n\n   \n    \n\n      \n   \n\n   \n\n1\\“‘** *snI'I* Bat L55 (Inferior—SML: run Comp1'\"|at1'on)\n\nSwitch to buffer (defalflt I e_1'nFerence.sm'l ('-‘-‘ these functions are po‘lymorph1'c: type of y can be anything ‘~‘)\n\n(*-'1'ntI _'a ~1'nt —>1'nt '-‘-')\nfun part1a1_sum (X, y, Z) =\nx + z]\n\n \n      \n\n    \n\n    \n        \n \n\nJame {f‘irst=x, m1'dd1e=y, '|ast=z} =\n\nfun partj\nx A ' A z\n\n \n\n—\\~~» type,inference.sm1 Bot L49 (sML) Unexpected polymorphism\n\n- Sometimes type-checkerxs “smarterthan you expect\"\n— Types of some parts might be less constramed than you think\n1- Example. If you do not use somethmg It can have any type\n\n(* int * ’a * int -> int *)\nfun partial_su|n (x, y, z) =\nx + z\n\n(*(first:strinq, last:strinq, middle: ‘a} -> string*)\n\nfun partial_name {first=x, middle=y, last=z} =\nX A .. .. A Z\n\n- Th|S is okayl\n— A more general type than you need rs always acceptable\n— Assummg your functron IS correct, ofcourse\n— More precise defimtion of “more general type\" next segment\n\nyanarar 2012 Dan Gmsmuu 17u)gmmmmg Languages 4"}, {"path": "E:/Coursera/programming-languages/04_section-2-and-homework-2/02_video-lectures/14_polymorphic-and-equality-types.mp4", "id": 4295, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nPolymorphic Types and Equality Types Equality types\n\n- You mlght also see type varlables wlth a second “quole\"\n— Example ‘'3 list * \"a —> bool\n\n- These are “equalily types\" that arise from using lhe = operator\n— The = operatorworks on lots of types‘ int, string, tuples\nconlalnlng all equalltytypes, \n— But not all types: funcllonlypes, real, \n\n- The rules for more general are exactly the same except you\nhave to replace an equality-type variable wllh a type lhat can be\nused with =\n\n— A “slrange“ feature of ML because = is speclal\n\n \n\nx.an—\\var zou Dan omsmm Pmgmmmmg languages 6 Example\n\n(* ”a * ”a -> string *)\nfun same_thing(x, y) =\n1: x=y then \"yes\" else \"no\"\n\n(* int -> string *)\nfun is_three x =\nif x=3 then \"yes\" else \"no\"\n\n(You can xgnore the warning about “calhng poIyEqua|”)\n\nxmxcar zmz Dan omsmau Ymgmmmmg Languages"}, {"path": "E:/Coursera/programming-languages/04_section-2-and-homework-2/02_video-lectures/19_exceptions.mp4", "id": 4300, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nExceptions va w 3,4,5 ,MyUn es1ra econ 1t1on\n\n\\/a'| X = maxlist ([3,4,5],M¥Unde5'irab'|eCondit1on) (\" S ’*)\nhand1e Myundesi rab econdition => 42]\n\n(‘val y : maxﬁst ([1,MyUndesirab1eCondit1on)*)\n\nva1 z = max11'st ([]Myundesirablecondition) (‘-' 42 ‘-)\nhamﬂe MyUndes1'rab1eCond1't1'on => 42\n\n-\\--- 3B_except1'ons.sm1 sot L27 (SML)\n[autzﬂoading done]\n\nva1hd = fn : 'a11'st -> ‘a\n\nexception Myundesirablecondition\n\nexception Myotherexception of in:  int\nva1myd1'v = fn:1'nt * int ->1'm:\nva1max11'st - fn : 1'nt11'st ‘A’ exn ->1'nt\nva1 w - 5 : 1m:\n\nva1 x 5 : 1'nt\n\nva1 Z 42 : int\n\nva1 ‘it = O : unit\n\n \n     \n \n\ni\\**— =snI1= Bot L16 (Infer1'or—SML: run Comp1\"|at'ion) Programming Languages\n\nDan Grossman\n2013\n\n \n\nExceptions Actually...\n\nExceptions are a lot Vike denatype constructors\n- Decrarlng an exception makes adds a ccnstructorfor type exn\n\n- Can pass values of exn anywhere (e g ,function arguments)\n— Not too common to do this but can be useful\n\n- Handle can have multiple branches with patterns for type exn\n\nymxcar zmz Dan omsmau Ymgrmunnng Lnnguages"}, {"path": "E:/Coursera/programming-languages/05_section-3-and-homework-3-and-course-motivation/02_video-lectures/03_polymorphic-types-and-functions-as-arguments.mp4", "id": 4306, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nPolymorphic Types and\nFunctions As Arguments (‘-‘ highersorder Functiuns are often po'|ym0rph1'C based on \"whatever\ntype of Function is passed\" but not a'|ways: <-)\n\ncs nogez a begter ‘1mp'|ementat1'un wmﬂd be ta‘1'|AreCurs1'\\/e -)\n\nFun t1mes_unt1'|_zero (ﬁx) =\n\nif x=0 then 0 e'|se 1 + t1'mes_unti'|_zero(f. 1‘ X)\n(“' F (F (F (F  ><))) \"),\n\n(fr (int —> mt) ‘rt int ~> Int *)\n\n \n    \n       \n       \n       \n   \n  \n \n \n\nR\n\n(-‘-'converse'|y, some o'|ymorptn‘c functions that are not h1'gher—order<-)\ncw 'a11's 4>1'nt \nfun Ten X5 =\ncase xs of\n= 0\nI _::xs' => 1 +1en ><s'\n\n_\\_._\n\n    \n\ntypes_and_functi ons.sm'| Bot L36 (SML)\n\nm l\"M_1\\'.1n|u*u|2 1"}, {"path": "E:/Coursera/programming-languages/05_section-3-and-homework-3-and-course-motivation/02_video-lectures/10_why-lexical-scope.mp4", "id": 4313, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nWhy Lexical Scope Why lexical scope ?\n\n3 Closures can easily store the data they need\n— Many more examples and Idwoms to come\n\nfun =fny=>y>x\n\n  \n\nfun (5\ncase xs of\n[J ‘> []\n1 :; => if f x\nthen x: : (fi1ter(f,xs))\nelse fi1ter(f,xs)\n\n \n\nfun 1\nfun ..—.\n\n  \n \n\nfilter (greatex:'.l'hanX ~1, xs)\n— filtex:(fn :: => x > n, xs)\n\n.Va1~—\\I(4r zon mu r,..m;.:«x; Pms\\'.m|u;m2 x.«;.g.;am Does dynamic scope exist?\n\n- Lexical scope for variables is deﬁnitely the right default\n— Very common across languages\n\n- Dynamic scope is occasionally convenient in some situations\n— So some languages (e.g i Racket) have special ways to do it\n— But most do not bother\n\n- If you squint some‘ exception handling is more like dynamic scope.\n— raise e transfers control to the current innermost handler\n\n— Does not have to be syntacticallyinside a handle expression\n(and usually is not)\n\n \n\n!3n—Mar zoiz Dan omsmm !7mgmmuimg Lmiguages 6"}, {"path": "E:/Coursera/programming-languages/05_section-3-and-homework-3-and-course-motivation/02_video-lectures/15_partial-application.mp4", "id": 4318, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nPartial Application Unnecessary function wrapping\n\n \n\n- Previously learned not to write fun ‘: .. = g x\nwhen we can wnte val : = g\n\n- Thxsislhesamethingwlm fold (in (z:,_) => x+y) 0 In\np\\aceofg L»\n\n!;m—\\lar zmz mu ommmu Progmmuung Languages => pre 1cate x ore se ex1sts pr Kate xs\nva'| no = exists (fr: x => x=7) [4,l1,Z3] (‘~ Fa'lse '4)\n\nva'| haszero = exists (Fn x => x=O) (\"‘ int ‘list —> boo‘! ’~')\n\n  \n\nva'|)incrementA'|'| = L1‘st‘rnap(fn x => x + 1) (“1'nt'|ist ~>1'nt ‘H5:\n:t \"I\n\n     \n\n(\" ‘library functions fo'|d1, L1'st.ﬁ'|ter, etc. a'|so curried: *)\n\nva'| removezeros = L1'st.ﬁ'|ter (fn x => x <> 0)]\n\nput hac in the actua1 y—neCessary wrappxng or an exp1i(it\n\n(* but if {nu get a strange message about ”ya1ue restriction“,\nnonApo'\\ ymorphic type \"-)\n\n0 doesn‘t w9rl< forlreasons we w9n't exp'!ain here (more Tater) :)\n(‘~' (on'|y an 1ssuE w1'|'| po'lymor‘ph1C Fun(t1ons) »~)\n\n(\" va1 pairwithone : List.map (Fn x => (x,1)) “~')\n_\\ﬁx_\n\n    \n\npar't1'a'|_app'|1'cat1'on.sm1 54% L54 (SML) The Value Restriction Appears @\n\nIf you use partial application to create a polymorphic function, it\nmay not work due to the xx: U’ ,u:“c‘.\n\n \n\n— This should surprise you: you did nothing wrong © but you\nstill must change your code\n\n— See the code for workarounds\n\n— Can discussa bit more when discussing type inference\n\n.V3n—\\lar 2013 Dan Grossruan Pmgmmimng Languages va remove-Zeros = LISE. 1 ter\n\n \n\n(‘X but if (mg get a strange message about “\\_/a'lue restriction\",\nput hac in the a(tua'| y—necessary wr‘app1ng or an exphnt\nnon—po1ymorph1c type ’~‘)\n\n(* doesn't work for reasons we w9n't exp'lain here (more 'later) *)\n(‘= (on'|y an issue wi'|'i pvﬂymorphic Functions) *‘~')\n\n  \n\n(\"va'| pairwithune : List.map (fn x :> (x,1)) (’~ 'a1ist A> (‘a ¢ 1':\nsnt) hst *)‘~')\n\n \n    \n      \n    \n    \n\n(* workarounds: 4*)\nFun pairwithone xs = List.map (fn x => (x,1)) xs\n\n  \n\nva‘l pairwithone : string ‘list -> (string * int) ‘list = Listimap (fa\n=n x => (x.1))\n\n(== this Function wqrks Fine because resu'|t is not 01 marphic v-v)\nva1 1n<:rementAndPa1rw1thone = L1st.map ﬁ\n\nwt L71\n\n  \n       \n \n\n   \n\n\"~ partia'|_app'|ication.sm'| (SML)"}, {"path": "E:/Coursera/programming-languages/05_section-3-and-homework-3-and-course-motivation/02_video-lectures/16_currying-wrapup.mp4", "id": 4319, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nCurrying Wrapup fun curry 1’ x y = f (><,y)\nk\nfun uncurry f (x,y) = f x y (’—' uucurry Foo *)\n\nrun other__curry r x y = r y x\n\n(\" examp'|e ‘~')\n\n(‘~' tup'|ed but we wish it were curried ’~)\n\nFun range (1',]') = if 1' > j then E] e1se 1 range(1'+1, j)\n\n \n\nva'| countup = curry range 1\n\nva'| X5 = countup 7 (\"‘~ [l,2.3.4.5,6,7] *')\n\n    \n\n—\\—-— curry1'ng_wrapup.sIn1 Bot L8 (SML) L)\n\nEfﬁciency\n\nSo Wh|Ch is faster’ lupling or curwlng multlple-arguments?\n\n- They are both constant-lime operations, so rt doesn't matter in\nmost cf your code — “plenty fasl\"\n\n— Dun’t program againstan implementation until ll matters!\n\n- For the small (zero?) part where efﬁciency matters:\n— It turns outSML/NJcomp|les1up|es more efﬁclently\n\n— Bm many otherfunctlonal-language Implementationsdo\nbetterwith currylng (OCaml, Flt‘ Haskell)\n\n- So currylng is the “normal thing” and programmers read\nt1 -> 122 -> t3 -> t4 asa3-argumemfunctlonthat\n\nalso allows pamal appllcatiun\n\nI3n—\\lar mu Dan Grossruan Pmgmmsumg Languages 3"}, {"path": "E:/Coursera/programming-languages/06_section-4-and-part-a-exam/02_video-lectures/02_what-is-type-inference.mp4", "id": 4333, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nWhat is Type Inference? Type inference\n\nr T)‘. .(C;~l. we problem Give every binding/expressiona type\nsuch thatlype-checking succeeds\n— Fall If and only lf no solutlon exlsts\n\n \n\n- In prlnciple. could be a pass before the type-checker\n— But often Implemented together\n\n- Type Inference can be easy, dlfﬁcult, or Impossible\n— Easy.Accepta|| programs\n— Easy: Rejectall programs\n— Subtle, elegant, and not mag/c: ML\n\n>\n\n \n\nymacar 2013 Dan omsmm Pmgmunnng languages 4"}, {"path": "E:/Coursera/programming-languages/06_section-4-and-part-a-exam/02_video-lectures/03_ml-type-inference.mp4", "id": 4334, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nML Type Inference Fun f (y, z, w) =\nif y (‘-‘ y must be boo'l *)\nthen z + x (’~ 2 must be int 4*)\ne'|se 0 (°~ both branches have same type *)\n(\" F must return an int\n1’ must take a boo1 *~ int \"~ ANVTHING\n\nso va'|f:booT‘~'1'nt ~ ‘a —>1'nt\n\n,~\n)\n—\\-~- m'l_type_inference.sm1 Bot L4 (SML)\n\nStﬁndard ML of New Jersey v1l0.75 [bu1\"|t: Sat Sep 29 12:51:13 20: -\n=12\n\n— use_\"m'|_type_inFerence.sm'|\n\n[0 emng m1_type_inference.sm1]\n\nva x = 42 : Int\n\nva'| f fn:boo'|\"1'm: * ‘a ->1‘nt\n\nva'| it = C) : unit\n\n1\\’”‘~ *sm'|* A11 L7 (InFer1'or~SML: run Comp1'1at1'on) Ve/y simple example\n\nNext segmenlswlll go much more step-by-step\n— Lwke the automated algorithm does\n\n \n     \n\n.=) =\n-znusi. be Jana; +-;«\n' E Ba »int -2-)\n\n.Vay~.\\K3r son ix\n\nRelation to Polymorphism\n\n- Central feature of ML type inference‘ it can infer types with type\nvanables\n\n— Great for code reuse and understandmgfunctxons\n\n- But remember there are two orthugonat concepts\n— Languages can have type Inference without type variables\n— Languages can have type variables without type Inference\n\n \n\nJmacar 2013 Dan Gmssmau Yrogmmmmg Lnnguages 5"}, {"path": "E:/Coursera/programming-languages/06_section-4-and-part-a-exam/02_video-lectures/06_optional-the-value-restriction-and-other-type-inference-challenges.mp4", "id": 4337, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nOptional: The Value Restriction and\nOther Type~|nference Challenges A local optimum\n\n- Despite the value restriction, ML type lnference is elegant and\nfairly easy to understand\n\n- More dlfﬁcult without polymorplsm\n— Whattype should length-of-list have’?\n\n- More dlfﬁcult with subtyping\n\n— Suppose palrs are superlypes ofwider tuples\n— Then val (y, z) = x constrainsx to have at least two\nﬁelds, not exactly two ﬁelds\n\n— Dependlng on details, languages can support this, but types\noften more difﬁcult to infer and understand\n\n— Will study subtyplng later, but not with type lnference\n\nI3n—Mar 2012 Dan omsmm Yrogmunung Lmtguages -"}, {"path": "E:/Coursera/programming-languages/06_section-4-and-part-a-exam/02_video-lectures/09_signatures-and-hiding-things.mp4", "id": 4340, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nSignatures and Hiding Things va'| pi = MyMathLib.ha'|f_p1' + MyMathLib.ha'|f_p1'\nva‘|Dtwenty_e1'ght = MyMathL1'b.doub'|er 14\n\n   \n\n        \n\nBot L2 5\n\n \n\n- signacures.sII'l\ns1gI_1atur'e MATHLIE =\n519\nva'| fact : int ->1'nt\nva'| ha'|f_p1' rea'|\nva'| doulﬂer int -> int\nand _\nscrucgure MyMathL1b : MATHLIB\nVi-11 p1 = 3.l4lS9265359 ' r'ea'|\nva'| twenty_e1'ght = 28 : ‘int\nva'| ‘it = () : unit\n\n(sML)\n\n \n\n1\\\"\"~ *sm'|‘ Bot L13 (IM’er1'or~SML: run Comp1\"|at1'on) Hiding with functions\n\nThese three functions are totally equivalent‘ no client can tell which\nwe are using (so we can change our choice later)‘\n\n’ x.*2:\n\nX+X*\n\n \n\n_= xxy.\n\nDeﬁning helper functions iocaliy is also powerful\n\n— Can change/removefunctions Iaterand know it affects no\nother code\n\nWould be convenient to have “private” top—|eve| functions too\n— So two functions couid easily share a helperfunction\n— ML does this via signafuresthatomif bindings ,\n\nymxiar zoiz Dan Gmssmau Pmgrmuniuig Lmiguages va'| pi = MyMathLib.ha1f_pi + MyMathL1'b.ha'|f_p1'\nva1|twenty_eight = MyMathLib.doub'|er 14\n\n~\\—-— s1'gnatures.sm'l Bot L25 (SML) strucgure MyMat L1 2 MATHLIB\nva'| p1 = 3.l4l59Z55359 ' rea'|\nva'| twenty_eight = 28 : int\nva'| it = () : unit\n\n    \n     \n     \n   \n\nProcess sm'| finished\n\nStandard_ML of New Jersey v1l0.75 [bu1\"|t: Sat Sep 29 12:51:13 2012]\n~ use \"s1gnatures‘sm'| \"'\n\n[opening signamresmij\n\n[auto'load1'ng]\n\n[Hbrary $sMLNJ—aAs1s/bas1‘s.cm is stalﬂe]\n[a_um1oaaing done] _\n§1qEa§ur'es.s 20- 37 Error: unbound var1ab'|e or constructor: >\nsdou ‘ler 1n gatﬁ Mymathﬁb doub'|er\n\n  \n\n \n  \n\nuncaught exception Error\nraised at‘ 129-59’Te:/I9Jgve1/intsrac:/§v§11901 sm1'66 19,-ﬁg\n/comp1\"ler/TopLev§'|/interact/evaTToop‘sm 4.55\n’ 92L [1 rLt_eLa_c,t1e,\\LaJJ,o9\n\n   \n \n\n  \n \n\nm1 : g5‘17—295_.=\n\n  \n\n. *snI'|* Bot L32 (Infer1'or—SML: run Comp1'1at1'on)\nSvntch to buffer (defau'|t s1 natures.sm'|): 9\n[Hbrary SsMLNJ—aAs1s/basis.cm is stalﬂe]\n[zguto1oad1‘ng done]\n§1gn -27120-2] 37 Error: unbound varialﬂe or constructor:\n:d?JuE'|er 1n ath M MathLTb doub'|er\n\n  \n\n  \n \n\nuncaught exception Error\n\nw’set%coz'|11’1e4r/To L‘?!/€1%EE9ﬂiC_\"~ §Ia11o9Lsvn1:\n‘ /arnpﬂer Top ev5T mteract eva co ‘\n\n comnje§['ropLeyg]/jggeract/egg]031551.296.17-226;»\n\n66.19—66i7\n\n          \n\n    \n\n17use_\"signatures.sm1 '\n\n[opemng 51 natures.sm1]\nsigvature E\n\n \n\n51g _\nva'| fact : int -> mt\nva'| ha'|f_p . rea'|\nend\n\nstrucgure MyMathL1'b : MATHLIB\nva'| p1 3.l4lS9Z6S3S9 : rea1\nva'| 1t 0 : urnt\n\n   \n\n1\\\"\"— *snI'|* Bot L34 (I«Ifer1'or~SML: run Comp1\"|at1'on) Example\n\nOutsldethe module, MyMathLib.doub1er ws simply unbound\n— 80 cannot be used [directly]\n— Fairly powerful‘ very simp\\e Idea\n\n  \n  \n\nstructure\nstruct\nfun- 7\nval\nfun\nend\n\n12,./xm zon z.4u.-u—.a.4....a. L;.\nExample\n\nOutsldethe module, MyMathLih . doubler ws simply unbound\n— 80 cannot be used [directly]\n— Fairly powerful‘ very simple Idea\n\nsignature '\n\n \n \n  \n\n \n\nstructure\nstruct\nfim \"\nval\n\n.VarI—\\I3r son Dan (xmnnum Pu)gmn\\um|g Languages 5"}, {"path": "E:/Coursera/programming-languages-part-b/02_section-5-and-homework-4-first-module-with-racket/02_video-lectures/17_defining-streams.mp4", "id": 4370, "text": " Programming Languages\n\n» Dan Grossman\n:: E...f'iE?£1.i?:§r?%s?S?3m 201 3\n\n \n\nDefining Streams Streams\n\nCoding up a stream in your program is easy\n— We w\\|\\ do functlonar streams using pairs and thunks\n\nLeta stream be a thunk that when cal/edreturnsa parr,\n' (next—answer . next—thunk)\n\nSaw how to use them, now how to make them...\n— Admmedly mind-bendmg. but uses what we know\n\n!nn—Mar 201; Dan Gmssnrauyvogmmmnng Lmrguages u am-9_.....m W mam —\n\n     \n\n     \n\n \n\n. . ammn-x, .r mg»: ».-.m;.....,.g,., mm) M\n#1ang racket\n\na... mu: hnguagtﬁmm .m.. an .MM.,. V’ Wgbbu ....<..:...,.,g,, rm) W,\n\n#1ang racket\n\nDuemn: mm: mm M.‘ n #1ang racket\n\n \n\nDuemn: mm: mm IDVVKQV Q) a.m.,_..».m m mm:\n\n  \n\n   \n   \n\n9. am mm ,\nwﬂ(VV(V Suva\n\n#1ang racket\n\n \n\nma/\\...mm«\n\n   \n\nDuemn: mm: mm um.‘ 9 a.m,_mm,.k- warm‘\n5“. gr Ma ‘mm 1... M\n\n.mm,m.m5..‘. mm... 3.‘. .n\n\n#1ang racket}\n\n \n\n.m:.»..,.' V “mun ».«.m.,,.,u',.\n\n;11lllll\n1\n\n(deﬁne ones (‘lambda 0 (cons 1 ones)))\n\n;(dehne ones—reaHv—bad (Cons 1 ones—reaHy—bad))\n(deﬁne ones-bad (‘lambda 0 (Cams 1 (ones—bad))))\n\n;1234s\n\nWelcome to V: version 5 2.1 [3m}.\n\nLanguage. rac el, m mory Vimll 128 MB\n> oneybad\n;‘<procedurezowes-bad>\n\n> (ones—barD\n\n   \n\nDuevnn: hrvguagtﬁmm mmzev m"}, {"path": "E:/Coursera/programming-languages-part-b/03_section-6-and-homework-5-second-module-with-racket/02_video-lectures/02_datatype-programming-in-racket-with-structs.mp4", "id": 4378, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nDatatype-Programming in Racket With Structs Attributes\n\n- it : transparent is an optionalattnbute on struct deﬁnitions\n\n— For us. prints structvalues in the REPL ratherthan hiding\n1hem. which is convenientfor debugging homework\n\n- it unutable is anotheroptionat attribute on structdeﬁnitions\n\n— Provides more functions, for example:\n‘ ' ran\n\n      \n \n\n   \n  \n\n— Can decide if each struct supports mulationwith usual\nadvantages and disadvantages\n\n- As expected, we will avoid this attribute\n— moons isiust a predeﬁned mutable struct\n\n \n\ny;.n—\\iar zoiz Dan omsnm Ymgmuuinig Lmiguages 5"}, {"path": "E:/Coursera/programming-languages-part-b/03_section-6-and-homework-5-second-module-with-racket/02_video-lectures/04_implementing-programming-languages.mp4", "id": 4380, "text": " Typical workﬂow\n\nPossible\n\nconcretesyn{ax(str/ng) @ errorsl\n\"(fn x => x + x) 4\" warnings\n\n \n\nabstract syntax (tree) 5311\n_ J3\nFuncuon constant Possible\n/\\ .\nX + 4 Le errors /\n/\\ @ warnings\nVar Var , ‘\nI I _ w ' *;\nx x\n\n \n\n.Van—\\lar zou Dan omsmm Pm;-mummg Lnnguages 2 So there is no such thing as a \"compiled ianguage\" or an\n“interpreted language“\n\n— Programs cannot “see” how the implementation works\n\nLe\n\nUnfortunatety, you often hear such phrases\n\n— “C is faster because it's compiled and LISP is Interpreted\"\n\n— This IS nunsense, politely correct people\n\n— (Admittedly, languages with “eval” must “ship with some\nimpiementation of the language\" in each program)\n\n!3n—Mar 2013 Dan Gmssmau Pmgmiuuiing Lnnguages 5 Already did an example!\n\n- Let the meta1anguageA = Rackei\n\n- Let the Wanguagermplemented B = “Arithmetic Language\"\n\n- Amhmetxc programs written with calls to Racket constructors\n- The Interpreter is eval-exp\n\n(struct const (mt) ihtransparentl\n(struct negate (e) vntxansparent)\n\n(struct add (e1 e2) uztranspazent) Ra.°“9“’a‘a Smlcmms\n(struct mu1I:1m‘Ly (e1 e2) #:I:ransparent) A”\"7’\"e\"9La”9“a9e\nprogram, which eval-\n(defme (eva1—exp e) exp runs\n(cond [(const? e) e]\n\nUnegate? e)\n(const (— (const~int\n(eval-exp (negate-e e) ) )J D]\n[(add7 e) ]\n[(multiply? e) . 1.\n\nJmacar 2013 Dan Gmsmmn Progmuuung Lnnguages x"}, {"path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/03_object-state.mp4", "id": 4399, "text": " \"‘ Programming Languages\n\n.a;up<m1{(I xs.v5)\n\nDan Grossman\n2013\n\n(r “V (_.,n,.; v\n\n \n\nObject State Aliasing\n\n- Creating an object returns a reference to a new object\n— Different state from every other object\n\n- Varrabte assignment (e.g., x=y) creates an alias\n— Aliasing means same object means same state\n\nL}-\n\nxmarar zmz Dan omsmau Ymgrmuumtg Lmtguages 3 # Progr_‘amm1ng La_nguages, Dan Grossrnan, Jan—Mar 2013\n# sectwon 7: object state\n\nc1ass A\ndef ml\n@foo = 0\nend\n\ndef M x\n@foo += x\nand\n\ndef foo\n\n(ﬁfoo\nend\n\nendﬂ\n\n-\\—-- object_state.rb TOE L17 (Ruby)\nI\n\nwrote c_: /Use rs/cou rsera/Des\n\nop/prog1ang-fﬂes/1ectu re_mater1' i\n6315/Ob ect_state . rb “L7b]e:t_State. rb\" # Progfammung Languages, Dan Grossman, Jan—Mar 2013\n# Sect1on 7: Object state\n\nc1ass A\ndef m1\n@foo = 0\nend\n\ndef m2 x\n@foo += x\nand\n\ndef foo\n\n@foo\nend\n\nendl\n\n-\\--- object_state.rb TOE L17 (Ruby)\n1:\n\nwrote c_ : /Use rs/cou rsera/Des\n\nop/pr‘ag1ang—f1'1es/1ectu re_mater1' .\na a1 s/ob ect_state . rb ob]e:t_State. m\n\n1 A.new\n= A.nEw\n\n-_-x # Progr_‘amm1ng La_nguages, Dan Grossman, Jan-Mar 2013\n# sect-Jon 7: Object state\n\nc1ass A\ndef ml\n@fao = 0\nend\n\ndef m2 x\n@fao +«= x\n\nand\n\ndef foo\n\nen\n\n-\\—-- object_state.rb Top L14 (Ruby) # Progr_‘amm1ng La_nguages, Dan Grossman, )an—Mar 2013\n‘ # sectwon 7: object state\n\n-\\—-- ohject_state.rb Top L10 (Ruby) o ]e:t_State. rb\n\nA.new\n\nwb(ma§n):ouz:a> y A.nEw\n—> ;:<A:uxsfasbs>\nx\n\n.fou\n\n> x.m2 3\nundeﬁned method u‘ for m'1:m'1c1ass\nublact sta(e.rb:]0:1n m2‘\n(vb)\n(:/Ruby)93/Inn/1rb:l2:w <ma1n>'\n1’rb(mavI):UD7:D> ><.m1\n\n>0 N # Progrjammng La_nguages, Dan Grossman, Jan—Mar 2013\n# Sect'Ion 7: Object State\n\nc1ass A\ndef m1\n\n2?\n\n-\\--- object_state.rb Top L6 (Ruby) > x.m2 3\nundeﬁned method ‘M for m‘ imass\nob}e(t_s(a(e.rb:]0:1n m2‘\n(1rb):&\nC:/Ruby193/bin/1rb:l2:1n <ma1n>'\n\\rb(ma'irI):DU7:0> x.m1\n—> o # Fr‘Ogr_‘amm1ng La_nguages, Dan Grossman, Jan-Mar 2013\n# secnon 7: object state\n\ndef 1'n1't1'a11'ze(F=0ﬂ\n@fao = f\nand\ndef ml\n@foo = 0\nend\n\ndef m2 x\n@foo += x\n@bar = 0\n\nend\n\ndef Foo\n@fao\nend\n\n-\\—-- object_state.rb TDEtL5 (Ruby)\n\nwrote c_ : /Use rs/can rsera/Des\n\nop/pr‘ag1ang—f1'1es/1ectu re_materi a\ne a1s/ob eCt_state . rb 7\n\n.fnn\n\nK\n\n, 7\nw'b(mavI):ﬂ19:ﬂ> load “ob]e:t_5I:ate.rb\"\nobJ'e<t_state.rb:46: warmnu: a'lready inuiahzed cunstam: Dans,Aqe\n\nnew\nLafoa_n>\nq . foo\n\no\n\\rb(mavI):o22:D>\nH<A 5 Dx29lad7E Class constants and methods\n\n- Class constants\n— Syntax: s\\artwi1h capital letter‘ e.g., Foo\n— Should not be mutated\n— V|S|b|e ouiside class C as c: :Foo (unllke class variables)\n\n- Class methods (of JavalC# static methods)\n— Syntax (in some class C).\n\n‘deif ’\n\n \n\nend:\n— Use (of class method In class C):\nC gnéthﬁiiﬁgame (arqs)~\n— Pan of \\he c|ass,no1a paﬂwcularlnstaooe of It\n\n.V3n—\\lar zmz Dan Gmssmau Ymgmmunng Languages def m2 x\n@foo += x\n@@bar += 1\n\nend\n\ndef foo\n(ﬁfoo\nend\n\ndef r\n@@ ar\nend\nend\n\n# exampie uses\n=begin\nA A.new\nA.new # different object than x\nx # alias to x\n.foo # get back nil because instance variabie not initialize:\n\n.mZ 3 4: error because try to add with nil object\n\n.m1 4! creates @foo in object X refers to\n\nfan itlremember, x and z are aliases\nobject_state.rb 45% L65 (Ruby) 1rb(mznn):O19: > land “ob)e:t_§I:ate.r\nobJ'e<t_sta(e.rb:46: warmnu: awready mmahzed cunstant Dans,A9e\n\nzs\n\\rb(ma1n):DZ6:0>\ni1<(:0x28Za(h8\n\\rb(ma1rI):U27:0>\n,> #<(:0x27ZEd30 >\nvrbgma1rI):02B:0> c.resez_bar\n—>\n\\rb(ma1r\\):U25:U>\nNzNethodEr'ro - undeﬁned method ml‘ Fur k<C:0x2E3;\\:b8 can ~ >\nfrnm (\\rb):29\nfrum (:/Rubyl93/inn/wrb:l2:1n <ma1n>'\nirb(mavu):o3o:o> c1.m2 7\n> 1\n.m2 5\n\n.bar\n\n2\nwbgmam) 923:1)’, # examp1e uses\n:beg1'n\n— A.new\nA.new # different object than x\n\n><#a11'astox_ _ _ _\n.foo # get back n11 because 1nstance var1ab1e not 1n1t1a11zez\n\n.m2 3 4! error because try to add with nil object\n\n.m1 4! creates @foo in object x refers to\n\nfoo # remember, x and z are aliases\nobject_state.rb 45% L58 (Ruby) xrb(mav\\) :02\n~> ;:<A:ox293a9ss we\n\n1 rb(ma1r\\):U2J.:0> q.foo\nA.new(l9)\n\n>\nC.reseI:J7ar\n\nml‘ Fur N<C:0x283;\\:bS @fm7— >\n\nfrom (1rbJ:25\n\nfrom C:/Rubyl93/bun/1rb:l2:1n <m:nn>'\nxrb(ma1n):u3o:u> c1.m2 7\n»> 1\n\n2\n1rb§ma1r|):033:0> c1.fou\n\n>\n1 rb(ma1 H) :U34:O> :2 . fen\n_> 9\n\n1rb(ma1r\\):U35:0>"}, {"path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/04_visibility.mp4", "id": 4400, "text": " Programming Languages\n\nDan Grossman\n\nr xr (mam, »\n\n3.; 5:: :a::1.i.::2:t:::1.:.,, 201 3\n\n \n\nVisibility Method visibility\n\n- Three vis/‘bi/inesfor methods ln Ruby‘\n— private only available to object itself\n— protected‘ available only to code in the class or subclasses\n— public available lo all code\n\n- Methods are public by default\n— Multiple ways to change a methods vlslblllly\n— Here IS one way...\n\n \n\nxmacar zmz Dan omsmau Ymgmmulmg languages 5 Method v/sibi/ities\n\n \n\ny..,.,\\m zen Dan (vm~~n|.'m Pmgmnumng Izmguagcx One detail\n\nlfm ws private, then you can only call it via 11: 0l'm(args)\n— As USL|aL1hlSIS shorthand for se1f_,m \n\n— But for pnva1e methods, only the shorthand IS allowed\n\n \n\n!zn—Vlar mu Dan Gmnnmn Pu)gmummg Languages 3"}, {"path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/07_class-definitions-are-dynamic.mp4", "id": 4403, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nClass Definitions are Dynamic Changing classes\n\n- Ruby programs (or the REPL) can add/change/replace methods\nwhile a program is running\n\n- Breaks abstractions and makes programs very difﬁcull to\nanalyze, but It does have plausible uses\n\n— Simple example: Add a useful helper method to a class you\ndid not deﬁne\n\n- Controversial in large programs, but may be useful\n\n- For us‘ Helps re—enforce “the rules of OOP”\n— Every object has a class\n— A class determines its instances’ behavior\n\n \n\nymxiar 2m 1 Dan Gmssmau Pvogmmnung languages _ 1rb(m.:nrI):ﬂD2:u> x\n\nVm—\\hr mm\n\nMyxanona1.neu(a.\n\nmu !‘vm~.m.«n mw\n\nvmmnin itunsmze Vm—\\hr Jun examu e.r\n\nX 1 Mmmm.m(e,s:\n\nx.tu_§\n\nvm—\\m Inn hm Gym»-.n\\.«n Pm V3n—\\(ar rm: hm (‘nu~-.n\\.«n Pm chss n xnum\ndef\n\nsew . se'|F\nend\nend\nmrmzo; Syntax errur, unexvezted , exuemng\n\nse'|F ~ se'\\F\nA\n\n(irb):22: syntax error, unexpeuea ><eywora,end, exeecunq Send\nfrom (:/Rubyl93/inn/1rb:l2:1n <m:nn>'\nwrb(ma'm):023:0> chss Fvxnum\ndef dame\nse1F ~ se'lF\nend\nend\n\n\\rb(ma1r\\)tU2R:D> 3.:1ass\nnxnum\n1rbgma1n):o29:o> 3.doub'!e\n\n42.doubIe\n\nVrb(ma'm):U34:0>\n> 0b)e:t\nxr17(ma1n):035:U>\n> 42\n\nmm Cvm~».n\\.m Pm: mm cs, :s1ng etan_met , :prutE:te met as, 'prI\\/ate_met os, :pu 1: met ads,\n\n:ms:ance_vanames. ns(ance_var1ab'\\eJe\\'.. msunce_vanab1e_sez. - nstance\nvar1aIﬂ2_defmed’, :1ns(anc2_aF\"‘. 1nd_nF’. ns_a‘, av» :send, :mmh:_send.\nrespond/tam :respana_:o_nnssmq?. extend‘ zuwspway. memos, :vubh':Juechod.\ndef1ne_smg1etorv_method, :ob]e:t_1d, u_enum, :enum_for, :Eq\\m17,\ns:ance_eva'I, :1nstance,exe:, :_send_ _1d/J\n1rb(ma1n . 3a.u> nﬂmethuds\n.> [:taJ. :to r ':o,s, :m a. zinsuezc. :5. -1, M. :m1m ::o,r.\n- . , : . :‘ , eqv, mash, :<~>, mass, :svvgTetcn_:1ass,\n:-mmahze,dup. :1rut1a11ze_<'!one. tamt. :tavnted?, untainn\numzrustad’. :trust. maze, :fraz2r17. emms, 1ngTeton_methads,\n:pn'va:e_me:hods, :Phbh':_methods. 'instan<e_vgr1ab1es, zmscance\nv1stan(e_v:1r1alﬂe_set, ns(a.n(e_v2r1abTe_def1ned7, :1nSI:.1n:e_oF\"\n, zcap, :sen .ub'l1c_send, resuonzuuv, ;respona_:o_nnssm\n.d1sPTay, method pub11:_methnd def1ne_sIngIeton_methL7d, .ob]e:\n::o_er-um, :§nuTjur, .enu¢17‘ z‘. : :'mst.ance_eva'\\. :ms:ance_exe:\n._, _\n\n. chss Object\n0 def m\n43\nend\nend\n\nm\n\ncuss Fxxnum E\ndef ¢ x\n\n13\n\nend\n\nvn-—\\m zrm » . m*in2 x :u\\9\\nw. The moral\n\n- Dynamic features cause interesting semantic questions\n\n- Example.\n— First create an instance of class C, e.g., x = c.new\n\n— Now replace method methodm in C\n— Now call x.m\nOid method or new method? In Ruby, new method\nA\nThe point is Java/C#/C++ do not have to ask the question\n\n— May aliow more optimized method—caiI implementations as a\nresult\n\n.Van—\\lar ml 1 Dan omsmau Piogmmunng Lmtguages 4"}, {"path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/09_arrays.mp4", "id": 4405, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nArrays Ruby Arrays\n\n- Lots of special syntax and many provided methods for the\nArray ciass\n\n- Can hold any number of other objects, indexed by number\n— Ge1 via a[i]\n— Setvia a[‘1] = a\n\nLie\n\n- Compared to arrays In many other languages\n— More ﬂexible and dynamic\n— Fewer operations are errors\n— Less efﬁclent\n\n- “The standard collection\" (like ilsts were In ML and Racket)\n\n \n\n.V3n—\\lar zmz Dan omsmau Pm;-rmuunng Lnnguages 2 m ‘  , ., ,\n1rD(mam):001:D> 0> d[0]\n\n1rb(mam):053:0> a[0] = 6\n\n=> 5\n\n1rb(mam):054:0> d[0]\n\n=> 5\n\n1rb(ma1n):0S5:O> a[U]\n\n=> 6\n\n1rb(ma1n):D56:0> e[0]\n\n=> 7\n\n1rb(mam):057:0> f = [2.4.6.8.lD.12.14]\n.> [2, 4. 6. 8. 10. 12. 14]\n1rD(ma1r1):058:0> F[2.4]\n\n—> [5. 8. 10. 12]\n\n1'rb(mam):059:0> f[2.4] = [L1]\n\n> [1. 1]\n\n1rD(ma1n):D60:0> F\n\n—> [2, 4. 1. 1.14]\n\n1rb(ma1n):061:O> [1.3.4.12].each {\\1\\ puts (1‘1)}\n\n \n   \n\n:09:\n\n  \n\n  \n\n    \n\n \n   \n\n3. 4. 18\n1rD(main):06Z:0> F.ea:h {\\1\\ puts (1=x)}\n\nk\n\n1r!J(mam):"}, {"path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/14_subclassing.mp4", "id": 4410, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nSubclassing \"‘ Programming Languages\n\n....,mru xs.v5)\n\nW (_W» Dan Grossman\n . z 3.; 82$’.;..:1.i?:2:f§s?§?:m 2013\n\n \n\nSubclassing Programming Languages\n\nDan Grossman\n2013\n\n \n\nSubclassing c ass Pom: _\nattr_accessor :x, :y It defmes methods x, y, x=, y:\n\ndef 'im't1'a11'2e(a,b)\n(ﬁx 3\n(‘Y\n\nend\n\ndef d1'stFromorw'g'in\n\n:ath.5qr‘t(@x “~‘ @x + @y * @y) # uses instance var1'ab'|es\nEll\n\ndef d1'stFromor1'g1'n2\n\nh‘;|ath.5qr‘t(X * x + y *1 y) # uses getter methods\nEl’!\n\nand\n\nc1ass co1orPo1'nt < Point\nattr_accessor :co1or J! ccflor color:\n\ndef 1n'itiaTize(x,y,c=\"c1ear\")\nsupeE(x,y) Jlkeyword super ca115 same method in superclass\n@co1or = c\nend\nend\n-\\—-- subc1assing.rb 8% L24 (Ruby)\n\nwrote c: /Use rs/cou rsera/Desktop/prog1ang-fﬂes/1ectu re_mater1' a\nea‘! s/subc1ass1'n - _ rb re\n1rb(mu1n):0O7:0> p.(o10r\n\nuMethudErru . undefxned methud ca1or' For #<Pu1nt:0x26792d0 @x=0. @y=0>\n\nFrum (irb):7\nFrnm C:/Ruby193/b1n/1rb:12:1n <m:1n>\n\n1rb(ma1n):008:D> p.:1ass\n\n> Pn1nt\n\n1rb(ma1n):009:0> cp.c1as5\n\n> CDTDFPDIHC\n\n1rb(ma»n):n1o:o> :p.:1a5s.super:1as5\n\n_> Pu1nt\n\n1rb(ma1n):011:0> cp.c1a5s.super:1as§ksuperc1:ss\n\n> Object\n\n1rb(ma1n):D12:0> cp.:1a5s.5uperc1as5.superc1as5.superc1a55\n\n> aasxcongect\n\n1rb(ma1n): :c> cp.c1a5s.5uperc1as5.superc1a55.super:1as5.superc1a5s\n-> n11\n\n1rb(ma1n):014:0> p.xs_a7 Pu1nt\n\n> true\n\n1rb(ma1n):015:0> cp.1s_a7 Po1nt\n\n> true\n\n1rb(ma1n):O15:O> cp.1s_a? Ca1arPu1nt\n\ntrue\n1rb(ma1n):017:0> cp.1s_a7 Pownt\ntrue\n1rb(ma1n):018:0> :p.1s_a7 Object\n\n:o19:o> cp.1nstance_uf7 Pa1nt\n:o2o:o> cp.1nstan:e_uF7 Cu1orPuint\n\n:021:o> An objecthas a class\n\np = Point.new(0.,0)\n\ncp = Co1orPoint.new(0,0,\"red\")\np.é1ass\n\np . class . superclass\n\ncp.c1ass\n\ncp . class . superclass\n\ncp ..c_1ass . superclass . superclass\n<:p.is_a? Point\ncp.insktance_of? Point\ncp.is_a? ccs1o;:pc3'm:\n\ncp. nstance_of? ColorPoint\n\n \n\n- Usmg these methods IS usually non-OOP style\n— DISBHOWS other Ihmgs that \"act hke a duck\"\n\n— Nonetheless semantics Is that an Instance of ColorPoint\n“Is a\" Point but Is not an “mstance of’ Point\n\n— [Java note instanceof is hke Ruby's is_a?]\nJay-—\\Iar :on Dan :,m,»n..r... rmg-.,.....,,..,"}, {"path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/17_method-lookup-rules-precisely.mp4", "id": 4413, "text": " \"‘ Programming Languages\n\nnwendrzl .»,.v;:\n\nDan Grossman\n2013\n\n«r xr (mam, »\n\n \n\nMethod-Lookup Rules, Precisely - Look up instancevariable @x using object bound to self\n\nUsing self\n\n- self maps to some “current\" object\n\n- Look up class variables @@x usmg object bound to se1f.x:1ass\n\n- Look up methods...\n\nmnacar zmz Dan omsmau Pm;-mummg Languages 4 Optional: static overloading\n\nIn Java/C#/C++, method-Iookup rules are similar, but more\ncomplicated because > 1 methods in a ciass can have same name\n\n— Java/C/C++. overriding only when number/types of\narguments the same 1}\n\n— Ruby same-methodvnamealways overriding\n\nPxck the “best one” using the (static) types ofthe arguments\n— Complicated rules for “best\"\n— Typecnecking error If there is no “best”\n\nRelies fundamentally on type-checking rules\n— Ruby has none\n\n.V3n—\\lar zmz Dan Gmssmau Pm;-mmunng Lnnguages x"}, {"path": "E:/Coursera/programming-languages-part-c/03_section-9-and-homework-7-second-module-with-ruby/02_video-lectures/08_interfaces.mp4", "id": 4423, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nI nterfaces Multiple interfaces\n\n- Interfaces provide no methods or ﬁelds\n\n— So no questions of method/ﬁeld duplication when\nimplementing multiple interfaces, unlike multiple inheritance\n\n- Whatiriterfaces are for:\n— “Caller can give any instance ofany class implementing I\"\n\n- So callee can call methods in I regardless of class\n— So much more ﬂexible type system b\n- Interfaces have little use in a dynamically typed language\n\n— Dynamic typing already much more flexible‘ with lradecffs\nwe studied\n\n \n\nymxiar ml 1 Dan Grmsniau Yrbgmlmlhltg Lnilguages s"}, {"path": "E:/Coursera/programming-languages-part-c/03_section-9-and-homework-7-second-module-with-ruby/02_video-lectures/09_optional-abstract-methods.mp4", "id": 4424, "text": " Programming Languages\n\n» Dan Grossman\n‘ gm E;.,f\":ETZ1.E:§1?%i?S?3u> 2013\n\n \n\nOptional.‘ Abstract Methods No interfaces in C++\n\n- If you have mu|tip\\e mhentance and abstract methods, you do\nnot also need interfaces\n\n- Replace each interface with a class with all abstract methods\n\n- Replace each “Implements mterface\"wnh ancthersuperclass\n\n80. Expect to see Imerfaces only in staticalfytyped OOP without\nmumple Inheritance L}\n\n— Not Ruby\n— Not C++\n\nmm»: 201 z Dan Gmssn\\nu.!7rogmmxm|\\g Languages"}, {"path": "E:/Coursera/programming-languages-part-c/04_section-10-final-exam-and-course-wrap-up/02_video-lectures/06_subtyping-for-oop.mp4", "id": 4430, "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nSubtyping for OOP .'self/ this is special\n\n- Recall our Racket encoding of OOP-style\n\n— “ObJects\" have a list ofﬁelds and a list of funcllons that take\nself as an explicit exlra argument\n\nso If self/ this Is a function argument, ls It contravanant?\n\n— No‘ It Is covenant: a method In a subclass can use ﬁelds and\nmethods only avallable ln the subclass‘ essentlal for OOP\n\nclass A (\nint m(){ return 0; )\n}\n\nclass B extends A {\n\nint x;\n\nint m(){ return x; l\nl\n\n— Sound because calls always use the “whole object” for self\n\n— Thrs us why codlng up yoﬁr own objects manually works\nmuch less well In a statlcallytyped languages\n\n.V3n—\\lar zou Dan Gmssnmn Yrogmmmulg Lmlguagcs -"}, {"path": "E:/Coursera/programming-languages-part-c/04_section-10-final-exam-and-course-wrap-up/04_course-wrap-up/01_summarizing-all-we-have-learned.mp4", "id": 4433, "text": " Programming Languages\n\nDan Grossman\nUniversity of Washington\n\n \n\nWrap-Up: What We Have Learned What now?\n\nI hope to have provided a frameworkthat will remain accurate\nas you contmueto learn about programming Vanguages\n\n— Terminology and details may change, butthese concepts\nhave all stood the test oftime [so far?’?]\n\nDan r.m,-ma... Flogmrmmug Language)"}, {"path": "E:/Coursera/python/07_chapter-five-loops-and-iteration/01_lecture-materials/01_5-1-loops-and-iteration.mp4", "id": 4465, "text": " . P'\\’l‘HONFO|l\nLeaps and Iteration - Pan 1 m,Em,m,y\n\nRepeated Steps\n\n  \n\n \n \n  \n    \n\nOutput:\nP 2 \"E\nNo r0Qram/ﬁxﬁi 5\n// 4\n° ' 3\nprxnt:(n) 2\nn = n - 1/'\nprint:( 'B1a5toff! ') 1\nprint: (n) Blastoffl\nO\n\nLoops (repeated steps) have iteration variabies that\nchange each time through a loop. Often these iteration\nvarignles go through a sequence of numbers.\n\n   \n\nprint(‘Blastoff')\n\n \n\n4-/--t . PYEHONFOR\nLoops and Iteration — Pan 1 EVERYBODY\n\nBreaking Out of a Loop\n\n' The break statement ends the current loop and jumps to the\nstatement immediately following the loop\n\n' It is like a loop test that can happen anywhere in the body of the\nloo\n\n  \n \n      \n    \n\n  \n\n  \n\nwhile True: > hello there\n\nline = input('> ') hello there\n\nif line == 'done‘ >finished\nbreak finished\n\nprint (line) > done\n\n°“9' ' ) Done!\n\n6/--O Loops and Iteration — Pan 1\n\nwhile True:\nline = input(‘> ')\nif line = ‘done’\n\nbreak\nﬂint (line)\n\nprint( 'Done! ')\n\n \n\nNo\n\nprint('Done')\n\nPYFHON FOR\nnvsnmaonv Leaps and Iteration — Pan 1\n\nwhile True:\n/ line = raw_input('> ‘)\n\nv\\if 1ine[O] = ‘#‘\ncontinue\nif line = ‘done’\nbreak\nprint(1ine)\nprint( 'Done! ')\n\nt/-w\n\nprint('Done')\n\nPYTHON FOR\nuvmumonv"}, {"path": "E:/Coursera/python-programming/02_functions/01_core-materials-functions/04_local-variables.mp4", "id": 5704, "text": " 5  V51! 5 ' Wu\nScott Rixner offset: = 22\nnmlcxyliez = 5 / 9\n\ncelsxua - ltahrenhexc — omen « mumpnez\nStun’. nude gunman. , fahxenhexc,\n\nomen, mumpxm, cums»\nxecuzn celsxus\n\nullperatuxe = 95\nconverted fahzenheit tcicelsiusuemperacuxeb\n\npz)nC1\"Fahren.be1l: temp  tazpexatuze)\nDuntﬂcelsxus temp. , com/erced)\n\no Vanables aenmu inside a funcnon are local to\n0 that functiwn\n\nfahrenhext - 27\n\noffset 2\n\nmultivhex = 19\n\nCelsius = 77\n\nnnnwnem: , fahrenhext, offset.\n\nmuluplxex, celsxusv\nnewtanp = :anzenr.eu_m_ce1s:usu2>\npr1nC1“a§:ex:“, fahxenhext, offset.\nmulcxplxer, eelnus)\n\nDx1r:c1\"xesul\\'.:\", newcesnm\n\n \n\nmsme\n\nfunct m\n\n95 32 mssssssssssss 25.0\n\nFabxenhen: camp: 95\ncexsms cam: 35.0\n\nbefore:\n:nsxae\nafter.\n\nzesulcz\n\n27 2 19 7\nfunctzon:\n27 2 19 77\na.o\n\n7\n:2 :2 :2 55555555555: o.u Hx $99‘ f\nH us‘-xg.:.xc= : s .- u\n-H =nu; - ._<._p_u=‘ra.| — -Ilia}! - =IlL -dgxeg\n>6] .:a?:I--new ‘=..L- . _'ll‘.su:\\v\nH «tin-.. =:m;m=. n=2I\nH mm .4353 u\n\\\nwlxralncxsmuu - -.3\nW;'m.~— -H -'51:\nFl‘«-~-1‘1'ﬂ'|'.4-VVIu»4 1?!\n\n:3 p:1nt4-:t_.u-_-A :~_—»,.:v. :4 -uaun\n\nml.--uh‘:i‘=,;.--gray: ..=..~; - -‘rm T Hu\n\n:4 u r 1\nJ‘ _~£:_q=E:-J3\nSn: v -\n:: :.|;x-..q<xxu - 1|\n-H;—~..uLs .' r-I\ni'P*~;1v:“| hmwmuu. aeﬂnr.\n‘uuzumq; :-Jsuml\n' ‘.=res‘:.| 544:-\n\nmm:\n\n \n\n‘M? 11 : L1 1\"\n-:-=:u,u my\n\n:_1 as n.:n:u_ —_«.u"}, {"path": "E:/Coursera/python-programming/03_logic-and-conditionals/01_core-materials-logic/02_logical-expressions.mp4", "id": 5708, "text": " / pnm: lvaluel\n\nmmc<\"\":\n\n0 Ioqxcal mm\npz.\\.r,\\2(\"L091ca1 mm\")\nnnncu \"J\nDnnclvaluel and vnuen\nPnr::(valueX and va1ue2>\npz)n:(Value2 am valu22)\n\nPxmc1\"\"}\n\n9 lngxcal on\n,bunt(\"L0§1c.31 0R\")\nDxx.-.L(\" >\nvaxuu»\nvaJue2)\nve1ue2)\n\n \n\npun: Avaluai\npun: (value:\n\nDnrzct\"\n\n. value: . True\n\nvalue: = True\n\npm,uv.~.1..a2 at Hvalual and \\IE}uE47 ax va1ueJ))\n\n‘nus False\n\nmqxcal N01‘\n\nFalse\nTrue\n\nmqical mm"}, {"path": "E:/Coursera/python-programming-introduction/01_beginning-to-program-in-python/07_lesson-7-introduction-to-loops-the-while-loop/01_introduction-to-loops-the-while-loop.mp4", "id": 5727, "text": " Introduction to\nLoops - the \"While\"\nLoop a ma.» >.\"~ »o- x-.\n- W.‘...\\_...,.,........_......._... .. .-.=.._\n\nnet m...n_.._...m.,.u‘..;,\n«. §.m.,,m\nem._m.. mm x 11\n\na».num.x. 7: rm,..u.»a..m._mm. 'n('V\\1lV‘u\n\nAH 15;; I1e'(HEl7(r\nV Yr-mu 2 4 s . Mu ta .. xnvrecule 4\". in K e/nrﬁrung )7!\n.. v1h.]l}b1V\" mm 4 m. «...» linens’ —m.»..n , .»..m~\nKm: mz. . m. M. W\n. -n ,\nK‘/I’ W .. .. .wm.(.) ,\n\n -19%: .p........ . >v!V‘,\\'h'.rv[)rv »\"\"’\\'<W““* >\n\n... um)-lc-7171: mm ~ .  1,. .0: m. «M\n.)'w 'vl-§M)'IK>In71.Ill>9F\n~~x-;F;;(;:[-m_ '71 my (Mud)\n\nmo \n\nmm <§/Assn. w J M w)r’A(=mn:.\n, M. .... .. .. W. .\nr-A»-x :m.~,.. ,\n\n. :;._.“n\nv I‘. ‘M ~.v.— «~ V\\\\M‘ ».x 4-; cm’: »..‘ t.\\u _, my :14.-u _=.;m\nVIVA 4-r\"\\*-mmmf-).\\lll'5X .~» 2.: m  uxu..;.\n\nANY mmgoaur)\nR . ..‘ ' ’\nM. (2 ,»\n\n:r:n'|:¢4m'\nn . (I V .\n‘ .1-(U)\nrv.~..-mmg.‘-;\n\n. .. mhﬂlu‘"}, {"path": "E:/Coursera/rails-with-active-record/01_introduction-to-active-record/03_metaprogramming-in-ruby/03_ghost-methods.mp4", "id": 4610, "text": " am. John Nanlxlru lbnhnvlivi ms .u «g». mm: mm: mm.\n-,,...c.~m.~a :,'n:m- ‘ Lermv, 7\n\nGho\n\nFmhvwth eRevvtJaIvnA:m)uPr(< Ghost Methods In this lecture, we will discuss...\n\n<> Ghost methods Nonexistent (Ghost) Methods\n\n<> Question: lfa method is l and it's , l ‘, was\nit really called at all?\n\nirbCrna1n):001:0> class\nnil\n1 b(main):002:0> some_c1uss SovneC1a5s.new\n#<SomeC1ass :0x007Fb5S2ae1<:80>\n1rb(main):003:0> some_c1uss.i_don\nNoMethodEr‘r‘or: undefined method ‘\n\nfrom (irb):3\nFrom /Users/kalmanhazins/.rbenv/versions/Z.1.Z/bin/1rb:11:1n \\1m1n>' method_missing... method\n\n<> Ruby looks for the method Invoked in the class to which\nit belongs\n\n<> Then it goes up the ancestors tree (classes and\nmodules)\n\n<> If it still doesn‘tﬁnd the method, it calls\nrvi i’;:>»i :41 :;1 '7: method\n\n<> The default : ~.~im—1 :-»;~:,:—; ;1:g implementation throws\nti   rim’? ‘i Overriding method_missing\n\nclass Myszaz,\n\nan men. Um. ')n:: mesraa. ’A1gsW\n.,u;.— \"Leaking Eox. ~\nputs “\\\"H'ne:ho:H\\\" um-. plrlms (Narqs.jo1.'v('.') H 7\"\n\npurs \"Sorry , In u on vzenzmn, \nyum \"Ended up in me:hod_lnissing\" if clccgqnv/en?\nand\nand\n\n \n\nbc\", 1 N do Wzuawez\n\nm.<uJv » '\nMm he answer ir Hars».nr)\"\nand\n\nLookxng {G1\n_> \"solvei/v~yst:-ry\" um. paiams‘ (abc,I2312J7 v\nSorry He u on vaczzlnn\n\n— :> And the answer 15 Ended up m method nussAng . .We Can Do This!\n\nrequi:e_re1a:u/e 'store‘\n\nclass Reportlngsystem\n\n    \n\ndef xnitialize\n@sto:e : storemew\n\nWhy do we care to use\n\nand .. .. 7\n\ndef me:noa1_m;ssmg(name, ‘args7 Super here’\nsuper unless @s:ore.respond7c;~2 (name)\nestaresendtname)\n\nand\n\n  \n\nend\nrs : Repoztinqsystem. new\n\nputs \"Hxs.geL_piano_desc) costs #4(rsAjetipxanoiprice.to7s.l]usL(7, 'n'))\"\n: => Excellent piano casts 120.00 Summary\n\n<> Ghost methods allow you to call methods as if they are\nthere even though they are not\n\n<> Method behavior can be defined at runtime, for example\nbased on database columns existing or not!\n\nWhat’s Next?\n<> Introduction to Active Record © The Johns Hopkins University 201 5, all ragms reserved"}, {"path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/02_collections-and-string-apis/02_arrays.mp4", "id": 4714, "text": " am John: Huphrll unwsw ms. nu mam. rluwud Mm mu 7 lrwluuvl\n\nArrays\n\n\\H'vndm'mr1 In ‘M\n\n \n\n|l)>N\\ H(wkN\\‘ het_arr : [1, , .1 . “] # heterogeneous types\nputs het_arr[f.] # => array lndlces start at 0)\n\narr_words  ’\nputs arr_wnrd5[-'2] # => day\n\nputs = :3 => what - today!\n\np arr_w$rds[—?, 3:] tt :> [\"great'-V H/ay\"] (go back 3 and take 2)\n\n# (Range type covered Later...)\n\np arr_words[2../'1 it => [\"great\", \"day\", \"today\"]\n\n# Make a String out of array elements separated by ','\nputs arr_words.join( ‘) It => v a,great,day,today! Arrays\n\n<> Randomly pull e|ement(s) out with sample\n<> Sort or reverse with sort! and revers‘ # You want a stack (LIFO)? Sure\nstack —— []; stack . ; stack.push (\nputs stack.pap # => two\n\nat You need a queue (FIFO)? we have those too...\nqueue []; queue.push ; queue.push ‘ ,\n\nputs queue.shift # :> one\n1;] .sort ! . reverse!\n\na # —> [5,4.3.2] (actually modifies the array)\na.samp1.e(7,) # => 2 random elements\n\n2, nil, nil, Arrays\n\n<> Lots of useful array methods\n- each — Ioop through array\n\n- select — ﬁlter array by selecting\n- reject — ﬁlter array by rejecting\n- map — modify each element in the array\n\nMany, many others... Another Important API\n\nhttp :IIruby-doc.org/core-2.2.0IArray.html Array Proce sing\n\n3’: -:4“. : qr\na.each { |num| print num } :2 => 1347310 (no new line)\nputs # => (print new une)\n\nnew_arr 7 a.select { |num| num > 1‘ }\np new_arr :: => [7, 8, 10]\nnew_arr a.se1ect { |num| num ' T’} }\n\n.reject( |num| num.even?}\np new_arr at :> [1, 3, 7]\n\n# Multiply each element by 3 producing new array\nnew_arr a.map {|x| x ' :1}\np new_arr # => [3, 9, 21, 24, 30] Summary\n\n<> Arrays API is very flexibie and powerful\n<> Lots of ways to process elements inside the array\n\nWhat’s next?\n<> Ranges 6 The Johns Hopkins University 2015, all rights nasewad"}, {"path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/03_object-oriented-programming-in-ruby/01_classes.mp4", "id": 4717, "text": " am. John: Nanlxlru lbnhnvlivi mu: m «,1». mm: 7 Lr-mw 10\n\nClasses\n\n\\H‘vm1n.‘m:v In 7.‘.\n\n \n\n%'\n\n|<m\\.~ Homxw\n\nmm H» n»Uu ‘.m,:n13.m self\n\n<> At other times, using self is required\nEx. - When it could mean a local variable assignment\n\n<> Outside instance method deﬁnition, self refers to the\nclass itself . \\( m.:\n\n (name, agevar) 1: CONSTRUCTOR\n@name — name Why do we need\n\nse1f.age agevar 2: call (he age: method self here?\nguts age\n\n(new_age)\ngage ' new_age m ; newjge .\n\npersonl , Person. -\\ 4 ‘ ‘, 11) x: :> 13\n\nputs ‘ , t: :> My age is 13\npersan1.age — I7 3: Try to change the age\n\nputs person’ ‘ :t :> 13 (The setter d1dn‘t allow the change) Summary\n\n<> Objects are created with new\n<> Use the short form for setting/getting data (atti_)\n<> Don't forget self when required\n\nWhat's next?\n\n<> Class inheritance and class methods © The Johns Hopkins University 2015, nu ragms reserved"}, {"path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/03_object-oriented-programming-in-ruby/02_class-inheritance.mp4", "id": 4718, "text": " am. John: Nanlxlru lbnhnvlivi mu: m «,1». mm: inn H» H\n\n\\H‘vmiu.'m:v m\n\n \n\n5}‘\n|<»N~ Homvs\n\nYvmjahvxxHuomn<Umwm\\y1UM .1Hngvvl<rnuw«u Cmss\n\nlnhernance\n\n \n\n|: wms H: M N5 In this lecture, we will discuss...\n\n<> The “||” operator\n<> Class methods and class variables\n\n<> var = var || something\n\nclass\natt r_reader :age\natt r_accessor : name\n\ndef (name. age) If CONSTRUCTOR\n@name _ name\nse1f.age = age It can the age: method\n\n9”“ O I H t\ndef (new_age) nyse rrmifhe rs\n\n@age I 5 it default\n(gage = new_age unless nevgagf 0\nand _ \"\n.¢\n\nend\n\nperson1 = sun.new1\"Km\". 130)\n\nputs person1.age v 5 nuefaulttw\nperson1.age = 10 2: change to 10\n\nputs person1.age 1: :~ 10\n\nperson1.age = 200 # Try to change to 263\nputs person1.age tr => 19 (sum) Class Methods and Variables\n\n<> Three ways to define class methods in Ruby\n<> Class variables begin with @% Class Methods and Variables\n\nclass\ndef (var) It 1. Usmg self\nt1'mes__ca11ed; var It 2;\nend\nclass st 2. Using << self\ndef\n@\\_itimes_ca'L1ed ||= 0; @§times_ca1.1ed += 1\nend\nend\nend\ndef (var) at 3. Outsme of class\ntimes_cal1ed; var an 3\nend\n\n# No instance created.‘\n\nputs MathFunct1ons.doub'Le 5 # => 10\nputs MathFunct1ons.trip1e(3) tr :> 9\nputs MathFunct1ons.times_ca11ed 3‘ => 3\n\nself outside of\nmefhod refers ‘to\nClass object Class Inheritance\n\n<> Every class implicitly inherits from Object\n- Object itself inherits from Basicobject\n\n<> No multiple inheritance\n- Mixins are used instead Summary\n\nx’> Glass inheritance lets you override parenfs behavior\n<> Class methods do not need an instance of object in\n\norder to be called\n<> Class variables begin with M\n\nWhat's next?\n4‘ Modules © The Johns Hopkins University 2015, all rights reserved"}, {"path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/03_object-oriented-programming-in-ruby/04_scope.mp4", "id": 4720, "text": " am. John: Nanlxlru lbnhnvlivi mu: m «,1». mm: . m »».m, nu um\n\n \n\n‘$\n\nk )uNs }»l<wKN\\\n\n \n\n. TmuumuHnoxm«Um.um,7n¥5 .m ugnlwvunvv.-M Scope\n\n\\n'vm1a.‘mnhw\n\n \n\n®\n\nk )tN_~ Hnwkwx ®\n\nk )tN_~ Hnwkwx Scope\n\n<> Methods and classes begin new scope for variables\n<> Outer scope variables do not get carried over to the\ninner scope\n\n<> Use local_variables method to see which\nvariables are in (and which are not in) the current\nscope \"at p V1 EXCEPTION THROWN — no such variable ex1sts\nv1 * ‘\n[1 V1\np 1oca1_variab1es\n\np v1 if => o\"*<ide\n\nobj r MyC1\n\nobj.my_met: ~ => inside\n\n8) => [:\\/1]\n\np 1oca1_variab1es # => [:v1, IDDJ]\np self at :> main Scope — Constant\n\nMy/Constant '\n“nuns Myconstant it => Outer Constant\nMytanstant : *\n\nPuts ’ ’ puts Myconstant if => Inner Constant\n\npulfs Myconstant # => Outer Constant\n\nTest::Test2. .what_is_pi :3 => 3.14 ‘S: p V1 EXU I THROWN — no 5UCh variable exlsts\nV1 . ,\n\n[.1 V1\n\np 1aca1_variab1es\n\np v1 #3 => outside\n\nobj — Myclass.‘ .‘\nobj.my_method :: => insme\n\n8) => [:v1]\n\np 1oca1_variab1es :2 => [:v1.\np self it :> mam Scope — Constant\n\nMy/Constant '\n\n: puts Myconstant # => Outer Constant\nputs PI Mytanstant ; *\n\nputs Myconstant :: => Inner Constant\nputs Myconstant It => outer Constant\n\n+e$t::Test2. .what_is_pi :: => 3.14\n\nIt you see some unusual\nbehavior‘ CHECK your variable\n\nnames for upper or lower case Scope: Block\n\n<> Blocks inherit outer scope\n\n<> Block is a closure\n- B_eg_r_1embers the context in which it was deﬁned and uses that\n\ncontext whehever it is gqﬂgj Scope - Block\n\nclass Banmccount\nattr_accessor :id, :amount\ndef iniuaL1ze(id, amount)\n@id id\n@mount = amount\nend\nend\n\naccu uanw 1mt.nevl(123,203)\nacctz Ban mmt.new(321.100)\n\nacct3 aanmczoun .new(421, «1ee)\naccts lacctl. acct2. acct3]\n\ntotal_sum = a\naccts.each do |eachAcct|\n\ntota1_sum += eachkccnamount\nend\n\nputs tota1_sum # Block: Local Scope\n\narr = [5, 4 1]\ncur_number 10\narneach do |cur_number|\n5ome_var = 10 # NOT available outslde the block\nprint cur_number.to_s + \" \" at => 5 4 1\nend\nputs # print a blank line\nputs cur_number # => 10\n\nadjustment\narr.each d number;adjustment|\nadjustmen\nprint \"it mber + adjustment) \" # => 15 14 11\nend\nputs\nputs adjustment :7 => 5 (No? affected by thc blotk) Summary\n\n<> Methods and classes start a new scope\n<> Constants malntaln scope\n\n<> Blocks Inherit outer scope\n- Coutd be overridden’\n\nWhat’s next?\n<> Access Control © The Johns Hopkins University 2015, all rights reserved"}, {"path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/03_object-oriented-programming-in-ruby/05_access-control.mp4", "id": 4721, "text": " am. John: Nanlxlru lbnhnvlivi mu: m «,1». mm: 7 L;-mmm\n\nAcces\n\n   \n\nW\n\nIHHNN )«kwm\\\\\n\n \n\nm. m,‘m,H, W \\\\W m. .m /~vl»hV W (- ‘1rm..=7 L:-m.,«‘M\n\nAccess Con\n\n\\H'vn.‘H.'m'v\n\nii?\n\nIHHNN )«kwm\\\\ ii?\n\numm Huvm» Access Control\n\nii?\n\numm Huvm» Access Control\n\n<> When designing your class — important to think about\nhow much of it you will be exposing to the world\n\n<> Encapsulation: try to hide the internal representation\nof the object so you can change it later\n\n4} Three levels: public, protected and private Encapsulation\n\n— (speed, comfort)\n@rating speed comfort\n\n# Can't SET rating from outside\n\n@rating\n\nputs Car. ( , .).rating # => 20 Specifying Access Control Access Control\n\n<> public methods — no access control is enforced\n- Anybody can call these methods\n\n<> protected methods — can be invoked by the\nobjects of the defining class or its subclasses\n\n<> private methods — cannot be invoked with an\nexplicit receiver\n\n- Exception: Setting an attribute can be invoked with an explicit\nreceiver Private Access\n\n‘ (age)\nse1f.age ‘ age # LEGAL * EXCEPTION\nputs my_age\n3 puts self.my_age # ILLEGAL\nif CANNOT USE self or any other recelver\n\nPersomn ‘.( 1:) it :> 25 Summary\n\n<> public and private access controls used the most\n<> private methods are not callable from outside or\n\ninside the class with an explicit receiver\n\nWhat’s next?\n- Introduction to Unit Testing © The Johns Hopkins Univursity 2015, all rights reserved"}, {"path": "E:/Coursera/technical-support-fundamentals/06_troubleshooting/04_course-wrap-up/03_congratulations.mp4", "id": 5840, "text": ""}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/aiplan/01_Week_1_-_Introduction_and_Planning_in_Context/10_1.7_Context_-_Example_Planners_7-14_.mp4", "id": 156, "text": " nS THE UNIVERSITY of EDINBURGH Overview\n\n* Context of Practical Systems\n\n* Context of Task Assignment & Execution\n* Context of Multiple Agents\n\n* Context of Plan Representation & Use\n\n»® Example Practical Planners\n\n¢ Planning++ Practical Al Planners\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nPlanner Reference Applications\nSTRIPS Fikes & Nilsson 1971 Mobile Robot Control, ete.\n\nHACKER ‘Sussman 1973 Simple Program Generation\n\nNOAH Sacerdoti 1977 Mechanical Engineers Apprentice Supervision\nNONLIN Tate 1977 Electricity Turbine Overhaul, etc.\n\nNASL McDermott 1978 Electronic Circuit Design\n\nOPM Hayes-Roth & Hayes-Roth 1979 | Journey Planning\n\nIsIs-ll Fox et. al. 1981 Job Shop Scheduling (Turbine Production)\nMOLGEN Stefik 1981 Experiment Planning in Molecular Genetics\nDEVISER Vere 1983 Spacecraft Mission Planning\n\nFORBIN Miller et al. 1985 Factory Control\n\nSIPE/SIPE-2 _| Wilkins 1988, Crisis Action Planning, Oil Spill Management, etc\nSHOP/SHOP-2 | Nau et al. 1999 Evacuation Planning, Forest Fires, Bridge Baron, etc.\n1X/-Plan Tate et al. 2000 Emergency Response, etc. Nonlin (1974-1977)\n\nHierarchical Task Network Planning\nPartial Order Planner\nPlan Space Planner\n\nGoal structure-based plan development — only considers alternative\n“approaches” based on plan rationale\n\nQA/“Modal Truth Criterion” condition achievement\n\nCondition “types” to limit search\n\nAllows for multiple “contributors” to achieve facts for plan robustness\n“Compute Conditions” for links to external data bases and systems\n(attached procedures)\n\nOperations Research algorithms for time and resource constraints\n\n+ Nonlin core is a basis for text book descriptions of HTN Planning O-Plan (1983-1999) Features\n\nDomain knowledge elicitation and modelling tools\nRich plan representation and use\n\nHierarchical Task Network Planning\n\nDetailed constraint management\n\nGoal structure-based plan monitoring\n\nDynamic issue handling\n\nPlan repair in low and high tempo situations\nInterfaces for users with different roles\nManagement of planning and execution workflow O-Plan Unix Sys Admin Aid O-Plan MOUT Task Description,\nPlanning and Workflow Aids esa Optimum-AlV (1992-4) Features\n\nBased on O-Plan design\n\nRich plan representation and use\n\nHierarchical Task Network (HTN) Planning\n\nDetailed constraint management\n\nPlan and User rationale recorded\n\nDynamic issue handling\n\nPlan repair using test failure recovery plans\n\nIntegration with ESA’s Artemis Project Management System Typical Features of Practical Al Planners\n\n* Hierarchical Task Network (HTN) Planning\n\n+ Partial Order Planning (POP)\n\n* Rich domain model\n\n* Detailed constraint management, simulations and analyses\n\n* Integration with other systems (user interfaces, databases,\nspreadsheets, project management systems, etc). e752 esa"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/algorithms-part1/02_union-find/01_union-find/05_quick-union.mp4", "id": 5117, "text": " 1.5 UNION-FIND\n\n» quick union\n\nAlgorithms\n\nSO Soares | Kivi Ware\n\nhitp://algs4.cs.princeton.edu Se Quick-union [lazy approach]\n\n \n\nData structure.\n+ Integer array id{) of size N.\n+ Interpretation: id(i) is parent of i.\n+ Root of i is idfidtidt...idfi}...1).\n\n  \n\n0 1G) 0)/9) 4 |9 |6 |6 (7/8 |9\n\neen t.*\n®@OO:\n\nFind. Check if p and q have the same root. ce\n3 and $ are not connected\nUnion. To merge components containing p and q,\n\nset the id of p's root to the id of q's root. @®@ ®®@®®\n\nil 019 49667 8 6\nI ® @\n\nonly one value changes Quick-union demo\n\n \n\nconnected(8,9) AW\n\n>) CG) 6) a @)\n© T @) @ y\n@) () @) Y%)\n@ ) ow s\n(4)\nG\nes\n\ntan Fol/a) pta ss SiS) feiis °\n€\no\n7\nc\n2\n=\n7\n=\ng\nS\na\n\n \n\nVv\n\nconnected(8, 9)\n\n1) ht\n\n°\n\niat) Quick-union demo\n\n \n\nunion(7, 3)\n\n \n\n(6) ian 793) 8y | 8s) S| 0) 5) /9 |'s fs\nMe °\n&\n©\n7\nc\n2\n=\n2\n=\n2\n5\na\n\n \n\n \n\n \n\nunion(7, 3)\n\n \n\n8\n\n1\n\niat) Quick-union demo\n\n \n\nunion(7, 3)\n\n \n\na\nCL I\n° 2) 7\neo © ©\n(s)\n@)\n\n) i ea | Oe: | OSs 1\n) °\n&\n©\n\n7\nc\n\n2\n=\n2\n\n=\n\nzg\nS\na\n\n \n\n \n\n \n\n \n\nO38\n\nes Soot\n\n(Ss)\n\nJ.\naac\n\n8\n\n1\n\niat) Eee) ite ee\n\n     \n    \n \n   \n     \n   \n  \n\nquick-find\n\nUNION-FIND\n\nquick-union = worseesse\n\nf includes cost of finding roots\n\nBk\n\n» quitk union\nind defedt] corithms q\n\nlion too expensive (N array accesses).\n\nes are flat, but too expensive to keep them flat.\n\n  \n\ninion defect.\nes can get tall.\nd too expensive (could be N array accesses). 1.5 UNION-FIND\nAlgorithms Baud uaion\n\nRomar Sencawicx | Kesiy Wa\n\nhitp://algs4.cs.princeton.edu Copyright © 2012 Robert Sedgewick and Kevin Wayne"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/algorithms-part1/06_mergesort/01_mergesort/06_comparators.mp4", "id": 5141, "text": " 2.2 MERGESORT\n\nAlgorithms\n\n» comparators\n\nReser Sencewes | Keon Ware\n\nhitp://algs4.cs.princeton.edu Sort music library by song name Comparator interface: polar order\n\npublic class Point2D\nt\npublic final Comparator<Point2D> POLAR ORDER = new PolarOrder();\nprivate final double x,\n\n  \n\nA\n\nprivate static int-€ew(Point2D a, Point2D b, Point2D c)\n{ n ppetiou ! }\nprivate class PolarOrder implements Comparator<Point20>\n(\n\npublic int compare(Point2D ql, Point2D q2)\n\n{\ndouble dyl = al.y - yi\ndouble dy2 = q2.y - y:\nif (dyl == 0 && dy2 == 0) { , a :\nelse if (dyl >= 0 && dy2 < 0) return -1; ,\nelse if (dy2 >= 0 && dyl < 0) return +1; '\nelse return -cew(Point20.this, ql, a2):\n} \\ 2.2 MERGESORT\n\nAlgorithms\n\n» comparators\n\nRomar Seocascick | Kevin Ware\n\nhttp://algs4.cs.princeton.edy Copyright © 2012 Robert Sedgewick and Kevin Wayne"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/algorithms-part1/11_geometric-applications-of-bsts/01_geometric-applications-of-bsts/03_line-segment-intersection.mp4", "id": 5161, "text": " Orthogonal line segment intersection search: sweeptine analysis\n\n \n\nProposition. The sweep-line algorithm takes time proportional to N log N+\nto find all & intersections among N orthogonal line segments.\n\nPr.\n+ Put x-coordinates on a PQ (or sort). <— Noo\n+ Insert y-coordinates into BST. Nog\n+ Delete »-coordinates from BST. Nog 6\n+ Range searches in BST. Noo N+\n\nBottom line. Sweep line reduces 2d orthogonal line segment intersection\nsearch to Id range search. GEOMETRIC APPLICATIONS OF BSTS\n» line segment intersection\nAlgorithms\n\nRontar Seociwick | Kevin Wart\n\nhitp://algs4.cs.princeton.edu Copyright © 2012 Robert Sedgewick and Kevin Wayne"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/algorithms-part1/12_hash-tables/01_hash-tables/04_separate-chaining.mp4", "id": 5166, "text": " 3.4 HASH TABLES\n\n» separate chaining\n\nAlgorithms\n\nRomert Senokwace | Regn Warne\n\nhitp://algs4.cs.princeton.edy ST implementations: summary\n\n \n\nworst-case cost\ncan naeenos\n\nsequential search yy\n(unordered list)\n\nbinary search\n(ordered array)\n\nBST\n\nred-black tree 21g N\n\nseparate chaining Ig N\n\nN N Ne\nN N Ign\nN N 1.38 1gN\n\n2IgN 2IgN 1.001gN\n\nWgN* Ig 35\n\nProce\n\nNf\n\n1.38 IgN\n\n1,00 Ig N\n\n35\n\nrica eure cio)\n\n1.00 Ig N\n\n35\n\nordered\niret\n\nyes\n\nyes\n\nyes\n\n \n\nequals)\n\ncompareTo()\n\ncompareTo()\n\n‘compareTo()\n\nequals)\n\n \n\norm hashin 3.4 HASH TABLES\n\n» separate chaining\n\nAlgorithms\n\nRomer Srocawick | Kevin War\n\n \n\nhitp://algs4.cs.princeton.edu Copyright © 2012 Robert Sedgewick and Kevin Wayne"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/algorithms-part1/13_symbol-table-applications/01_symbol-table-applications/04_symbol-table-applications-indexing-clients-optional.mp4", "id": 5171, "text": " 2\ni\n} File indexing\n\nimport java.io.File:\npublic class FileIndex\ni\npublic static void main(Stringl} args)\n{\nST<String, SET<File>> st - new ST<String, SET<File>>(; *\n\nfor (String filename : args) {\nFile File = new File(fitename);\nIn in = new Incfile);\nwhile (!in.isEmpty())\n\n{ f f\nString key - in.readString(): a fet\nif (1st.contains(key)) .\nst.put(key, new SET<File>()); :\nSET<File> set - st.get(key);\nset.add(file);\n+\n\nj\n\nwhile (/Stdin. isemptyO)\n\nt\nString query - Stdin.readStringQ; 4 cess\nStdOut.printIn(st.get(query)); Book index\n\n \n\nGoal. Index for an e-book.\n\nIndex paar Concordance\n\n \n\npublic class Concordance\nif\npublic static void main(st\nt\nIn in = new In(argst0])\nString] words = StdIn.readal1()split(\"\\\\s+\");\nST<String, SET<Integer>> st = new ST<String, SET<Integer>>();\nfor int i = 0; i < words-length; i++)\n\n \n\nng{] args)\n\n \n\nt read text and\nString s = words{i]; build index\nif Cist.contains(s))\n\nt(s, new SET<Integer>()\nSeT<Integersipages = st,cetts)\n\nwhite (Stu\n\n0 kis 3.5 SYMBOL TABLE APPLICATIONS\nAlgorithms » indexing clients\n\nRomar Sencwiex | Kevin Warne\n\nhitp://algs4.cs.princeton.edu Copyright © 2012 Robert Sedgewick and Kevin Wayne"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/algorithms-part2/03_directed-graphs/01_directed-graphs/03_digraph-api.mp4", "id": 5180, "text": " 4.2 DIRECTED GRAPHS\n\n» digraph API\n\nAlgorithms\n\nhitp://alas4.cs.princeton.edu Digraph API\n\njava Digraph tinyDG.txt\n\n \n\nIn in = new In(args(0]);\nDigraph G = new DigraphCin); | a\n\nfor Cint v = 0; v < G.VQ} v++) |\nfor Cint w : G.adj(v)) a —\nStdOut.printin(y + \"->\" + w); Adjacency-lists digraph representation\n\n \n\nMaintain vertex-indexed array of lists.\n\na\n\non\n\nbc Digraph representations\n\n \n\nIn practice. Use adjacency-lists representation.\n+ Algorithms based on iterating over vertices pointing from v.\n+ Real-world digraphs tend to be sparse.\n\n%\n\nee iel aa Ce vicly Nic\nead ino Pointing from v?\n\n \n\nlist of edges E E\nadjacency matrix ve 1 v\nadjacency lists E+v 1 outdegree(v) outdegree(v) 4.2 DIRECTED GRAPHS\n» digraph API\nAlgorithms\n\nhitp://algs4.cs.princeton.edu Copyright © 2012 Robert Sedgewick & Kevin Wayne"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/algorithms-part2/04_minimum-spanning-trees/01_minimum-spanning-trees/03_introduction-to-msts.mp4", "id": 5184, "text": " 4.3 MINIMUM SPANNING TREES\n\n» introduction\n\nAlgorithms\n\nhitp://algs4.cs.princetonedu Minimum spanning tree\n\nen. Undirected graph G with positive edge weights (connected).\nDef. A spanning tree of Gis a subgraph 7 that is both a tree\n(connected and acyclic) and spanning (includes all of the vertices).\nGoal. Find a min weight spanning tree.\n\noie\n\n \n\nspanning tree T: cost =50=4+6+8+5+11+9+7\n\n \n\nTry all spanning trees? Network design\n\n[MST of bicycle routes in North Seattle THON CIE\nPe |\n\nxX\n>» Zoiatag\n\nset Me, .\ni * nis Te\n| PRS\n\n   \n\nModels of nature z\ns\ni\n2\ni\ni\n§\n\nMedical image processing Medical image processing\n\nMST describes arrangement of nuclei in the epithelium for cancer research Medical image processing\n\n   \n\nMST dithering Applications\n\n \n\nMST is fundamental problem with diverse applications.\n\n \n\n+ Dithering.\n\n+ Cluster analysis.\n\n+ Max bottleneck paths.\n\n+ Real-time face verification.\n\n+ LDPC codes for error correction.\n\n+ Image registration with Renyi entropy.\n\n+ Find road networks in satellite and aerial imagery.\n\n+ Reducing data storage in sequencing amino acids in a protein.\n\n+ Model locality of particle interactions in turbulent fluid flows.\n\n+ Autoconfig protocol for Ethernet bridging to avoid cycles in a network.\n+ Approximation algorithms for NP-hard problems (e.g., TSP, Steiner tree).\n+ Network design (communication, electrical, hydraulic, computer, road). 4.3 MINIMUM SPANNING TREES\n» introduction\nAlgorithms\n\nhttp://algs4.cs.princetonedu Copyright © 2012 Robert Sedgewick & Kevin Wayne"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/algorithms-part2/06_maximum-flow-and-minimum-cut/01_maximum-flow-and-minimum-cut/04_ford-fulkerson-algorithm.mp4", "id": 5195, "text": " Ford-Fulkerson algorithm\n\n \n\nInitialization. Start with 0 flow.\n\ninitialization VS\n0/9\n© ova ° ovis\n3 ts\noss o/s\n\n \n\novis\n\n \n\n0/16\n\n0/10\n\n2 Ford-Fulkerson algorithm\n\nFord-Fulkerson algorithm\n\nStart with 0 flow.\nWhile there exists an augmenting path:\n\n- find an augmenting path\n\n- compute bottleneck capacity\n\n- increase flow on that path by bottleneck capacity\n\nQuestions.\n+ How to compute a mincut?\n+ How to find an augmenting path?\n+ If FF terminates, does it always compute a maxflow?\n+ Does FF always terminate? If so, after how many augmentations? 6.4 MAXIMUM FLOW\nAlgorithms » maxflow-mincut theorem\n\nhitp://algs4.cs.princeton.edu Copyright © 2012 Robert Sedgewick & Kevin Wayne"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/algorithms-part2/07_radix-sorts/01_radix-sorts/06_3-way-radix-quicksort.mp4", "id": 5202, "text": " 5.1 STRING Sorts\n\nAlgorithms\n\n» 3-way radix quicksort\n\nhitp://algs4.cs.princetonedu 3-way string quicksort: trace of recursive calls\n\n \n\n \n\nTrace of first few recursive calls for 3-way string quicksort (subarrays of size 1 not shown) Summary of the performance of sorting algorithms\n\n \n\nFrequency of operations.\n\ninsertion sort Ne/2 nea compareTo()\nmergesort NIgN NIgN N yes compareTo()\nquicksort 139NIgN°  139NIQN — CIgN no. compareTo()\nheapsort 2NIgN 2NIgN 1 no compareTo()\nisd 2NW 2NW N4R yes charAtO\nMSD 2NWw N log a N N+DR yes charAtO\n\n3-way string\n\nsuiioart 139WNIgN’ 1.39NIgN  logN+W no charatQ, 5.1 STRING SorTS\n\nAlgorithms\n\n» 3-way radix quicksort\n\nhitp://algs4.cs.princeton.edu Copyright © 2012 Robert Sedgewick & Kevin Wayne"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/algorithms-part2/09_substring-search/01_substring-search/02_introduction-to-substring-search.mp4", "id": 5207, "text": " ROBERT SEDGEWICK | KEVIN WAYNE\n\n5.3 SUBSTRING SEARCH\n\n» introduction\n» brute force\n> Knuth-Morris-Pratt\n\n» Boyer-Moore\n» Rabin-Karp 5.3 SUBSTRING SEARCH\n» introduction\nAlgorithms\n\nhttp://algs4.cs.princetonedy Screen scraping: Java implementation\n\n \n\nJava library. The indexof© method in Java's string library returns the index\nof the first occurrence of a given string, starting at a given offset.\n\npublic class StockQuote\n\n{\npublic static void main(String[] args)\n{\nString name = \"http: //finance. yahoo.com/q?s=\";\nIn in = new In(name + args[0]);\nString text = in.readAllQ;\nint start = text. indexOf(\"Last Trade:\", 0);\nint from = text. indexOf(\"<b>\", start);\nint_to = text. indexOF(\"</b>\", from) ;\nString price = text.substring(from + 3, to);\nStdOut.printIn(price);\n}\n} '\n\njava StockQuote goog\n\n% java StockQuote msft 5.3 SUBSTRING SEARCH\n» introduction\nAlgorithms\n\nhttp://algs4.cs.princeton.edu Copyright © 2012 Robert Sedgewick & Kevin Wayne"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/algorithms-part2/11_data-compression/01_data-compression/03_run-length-coding.mp4", "id": 5217, "text": " 5.5 DATA COMPRESSION\n\n» run-length coding\nAlgorithms An application: compress + bitmap\n\n \n\nTypical black-and-white-scann.\n+ 300 pixels/inch\n+ 8.5-by-11 inches.\n\n+ 300 x85 300 x11 = 8.415 million bits, sex\n\nObservation. Bits are mostly white.\n\nTypir\n40 lines x 75)char ba\n\n    \n\n \n\n329000008\n\n \n\nmy\nX Jana inarourp 2 « te 815 5.5 DATA COMPRESSION\n\n \n\n» run-length coding\n\nAlgorithms\n\nhitp://alas4.cs.princeton.edu Copyright © 2012 Robert Sedgewick & Kevin Wayne"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/arduino-platform/01_arduino-environment/04_lesson-2/02_lecture-2-2-arduino-ide.mp4", "id": 411, "text": " UCI University of\nCalifornia, Irvine U Unv sit Or\n1] a ria | Vie\n\nn Internet of Things\n\nProfessor lan G. Harris, Ph.D. Module {, Lesson 2\n\nLecture 2.2 Arduino IDE ippscemte Votecemeaa) x i low speed, low memory, low cost\n(peut Nokegetrecormmnences) (7=42V. t ~ $1.50 for the microcontroller\nInput Voltage (limits) 6-20V i - $40 for the board\nDigital /O Pins 14 Eee\n\n(of which 6 provide PWM output)\nAnalog Input Pins 6\n\nDC Current per /O Pin 40 mA\nDC Current for 3.3V Pin 50 mA\n\nFlash Memory 32 KB (ATmega328)\n\nof which 0.5 KB used by bootloader «\nSRAM 2 KB (ATmega328)\nEEPROM 41 KB (ATmega328)\n\nClock Speed 46 MHz Arduino Integrated Development Environment (IDE)\n\nMenus with all commands\n\n   \n\nButtons for common commands\n\nText editor for writing code B® Verify: Compiles code, checks for errors\n\nBB Unload: Compiles code, checks for errors, uploads to board\nB New: Creates a new sketch\n\nBo Open: Opens an existing sketch\n\nBB Save: Saves your sketch to a file\n\n[By Serial Monitor: Opens a window to communicate with the board WTITV\nCalitc UC University of\nCalifornia, Irvine"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/arduino-platform/01_arduino-environment/04_lesson-2/03_lecture-2-3-compiling-code.mp4", "id": 412, "text": " U Cl University of\nCalifornia, Irvine f\nr\n\nInt? n to, |\n9 |\n\nc i c\n©\nn\n7)\noO\nfe)\n\na\n“a0\ni\nFo\nwet\n°\ned\no\n[=\n=\no\n—\nc\n= Internet of Things\nProfessor lan G. Harris, Ph.D.\n\n \n\n@\n2a) O.\n\n \n\n \n\n \n\nES\nNY\nSH\n\nx\n|\n3 Ta TM A ess\n\nLecture 2.3: Compiling Code Module |, Lesson 2\n\neTtye aR Tuy Le A Serial Monitor\n\n8\n\n+ Displays serial data sent from the Arduino\n\n+ Allows serial data to be sent to the Arduino\nfrom the keyboard\n\n* Library functions in the serial library UC University of\nCalifornia, Irvine"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/arduino-platform/01_arduino-environment/05_lesson-3/01_lecture-3-1-arduino-shields-and-libraries.mp4", "id": 413, "text": " U Cl University of\nCalifornia, Irvine f\nr\n\nInt? n to, |\n9 |\n\nc i c\n©\nn\n7)\noO\nfe)\n\na\n“a0\ni\nFo\nwet\n°\ned\no\n[=\n=\no\n—\nc\n= Internet of Things\nProfessor lan G. Harris, Ph.D.\n\n \n\n@\n2a) O.\n\n \n\n \n\n \n\nES\nNY\nSH\n\nx\n|\n3 feu eM Meas\nICTR AB DML Ta CSET AEDES Ethernet Shield Library Example\n\nconnect(ipaddress, portnum)\n* Used by a client to establish a connection with a\n\n \n\nint EthernetClient: :connect (IPAddres: port) {\nif (sock != MAX_SOCK_NOM)\nreturn 0;\n\nfor (int i =\n\n \n\n2) 4 < MAX _SOCK NUM; i++) {\n\nuint8_t s = socketStatus(i);\nAf (s == SnSR::CLOSED || s == SnSR::FIN_WAIT || s ==\nSnSR: :CLOSE WAIT) (\nsock = 4;\nBreak;\n\n)\n}\n\n* Call the function, ignore the detail UC University of\nCalifornia, Irvine"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/big-data-cloud-computing-cdn/02_big-data/01_big-data/03_hadoop.mp4", "id": 658, "text": " Big Data\n\nHADOOP © HDFS: Hadoop Distributed FileSystem\n\n \n\nHDFS was designed to be optimal in\nperformance for a (\n\n) pattern, which is a very\nefficient data processing pattern\n\nHDFS was designed considering the\n\nto be more\nimportant than the time required to read\nthe first record © HDFS\n\n   \n\n« HDFS clusters use\n(master node)\n\n(worker node) MapReduce\n\nMapReduce gains performance\nenhancement through optimal balancing\nof Seeking and Transfer operations\noperations\noperations\n\nIn the next lecture, we will compare\nMapReduce with a traditional REFERENCES eV KATIE)\n\n \n\n« |. Palit and C.K. Reddy, “Scalable and Parallel Boosting with MapReduce,” /EEE\nTransactions on Knowledge and Data Engineering, vol. 24, no. 10, pp. 1904-1916,\n2012.\n\n° M.-Y Choi, E.-A. Cho, D.-H. Park, C.-J Moon, and D.-K. Baik, “A Database\nSynchronization Algorithm for Mobile Devices,” EEE Transactions on Consumer\nElectronics, vol. 56, no. 2, pp. 392-398, May 2010.\n\n* IBM, Whatis big data?, http://www.ibm.com/software/data/bigdata/what-is-big-\ndata.html [Accessed June 1, 2015]\n\n» Hadoop Apache, http://hadoop.apache.org\n\n+» Wikipedia, http://www.wikipedia.org\n\nImage sources\n\n* Walmart Logo, By Walmart [Public domain], via Wikimedia Commons\n\n» Amazon Logo, By Balajimuthazhagan (Own work) [CC BY-SA 3.0\n(http://creativecommons.org/licenses/by-sa/3.0)], via Wikimedia Commons my YONSEI\n\nUNIVERSITY"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/big-data-cloud-computing-cdn/02_big-data/01_big-data/04_mapreduce-vs-rdbms.mp4", "id": 659, "text": " Big Data\nMapReduce vs.\nRDBMS Hadoop RC)\n\n \n\nMapReduce vs. RDBMS\n\nGigabytes (109) Petabytes (1012)\nInteractive & Batch Batch\n.. . WORM (Write Once,\nRead & Write Many Times Read Many Times)\nStatic Schema Dynamic Schema\nHigh Low\n\nNonlinear Linear MapReduce vs. RDBMS:\n\nMapReduce has a programming model\nthat is linearly scalable\n\nMapReduce Functions: 2 types\nMap function\nReduce function\n\nBoth of these functions define a\nrelation\n(e.g., Key-Value pair 1 > Key-Value pair 2) © Hadoop Release Series\n\n  \n\n. partitions the HDFS\nnamespace across multiple namenodes\n* Enables improved support for clusters\nwith very large numbers of files\n\n. feature uses\nfor backup, and\ntherefore, the namenode is no longer a\npotential SPOF (Single Point of Failure) REFERENCES eV KATIE)\n\n \n\n* |. Palit and C.K. Reddy, “Scalable and Parallel Boosting with MapReduce,” /EEE\nTransactions on Knowledge and Data Engineering, vol. 24, no. 10, pp. 1904-1916,\n2012.\n\n° M.-Y Choi, E.-A. Cho, D.-H. Park, C.-J Moon, and D.-K. Baik, “A Database\nSynchronization Algorithm for Mobile Devices,” EEE Transactions on Consumer\nElectronics, vol. 56, no. 2, pp. 392-398, May 2010.\n\n* IBM, Whatis big data?, http://www.ibm.com/software/data/bigdata/what-is-big-\ndata.html [Accessed June 1, 2015]\n\n» Hadoop Apache, http://hadoop.apache.org\n\n» Wikipedia, http://www.wikipedia.org\n\nImage sources\n\n» Walmart Logo, By Walmart [Public domain], via Wikimedia Commons\n\n» Amazon Logo, By Balajimuthazhagan (Own work) [CC BY-SA 3.0\n(http://creativecommons.org/licenses/by-sa/3.0)], via Wikimedia Commons"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/c-plus-plus-a/01_module-1/01_c-as-a-better-c/03_1-2-getting-started.mp4", "id": 716, "text": " jor C Programmers\n\nModule 1.2\netting Started c\n\n++ for C Programm\n\nIra Pohl\n\nASC ueeO keg sulci)\n\nUniversity of California Santa Cruz = If you don’t know Java or OO\n\n* Java is not critical to this class — but many\nof you have this background so | will be\nmaking some comparisons\n\n* Object-Orientation knowledge is a\n“prerequisite” — so if you need review read\nthe wikipedia article on OO.\n\nSANTA CU = 7 = |S = | 7 i = Cr+ for C P\n\n \n\nrocrammers f~ a :\nme *\n\nGetting Started ve 3 i 7 si “CH for C Programm\n\n  \n\n \n\nsi = a” for C Px\n\n \n\nogrami = (oe ' = If you don’t know Java or OO\n\n* Java is not critical to this class — but many\nof you have this background so | will be\nmaking some comparisons\n\n* Object-Orientation knowledge is a\n“prerequisite” — so if you need review read\nthe wikipedia article on OO.\n\nSANTA CU si “C++ for C Programm\n\nGetting Started\n\n \n\na = “C++ for C Programm\n\nGetting Started\n\n \n\n= = ™ | C++ for C Program\n\n  \n\n \n\n™ Quiz - Object\n* Which of these ideas best fit 00?\n\na) Control flow should use recursion.\n\nb) Data and operations are bound\ntogether.\n\nc) Type safety is critical.\nd) Automatic GC is available.\n\nSANTA ERUL c\n\n++ for C Programm ,\n\nCc Answers\n\n* Object Orientation is not about flow of control-but you should be comfortable\nwith recursion.\n\n+ Best answer: An object is a data type and its operations that can be either\nnative or user defined. ————\n\n+ Type safety is usually a property of a good OO language.\n+ Garbage Collection can be built-in to an OO language or provided for a\n\nuser-defined object.\n\\ at + *\n\n \n\nCom\n\nSANTA GAUL = ™ c\n\n++ for C Pi\n\n \n\nogranmlmner, ¥\nae +\nVv I\n\nGetting Started\n\n \n\na = c\n\n++ for C Programm\n\n \n\nae ©\n\n(ss\na\n\nGetting Started\n\n   \n\na = | ’ | C+ for C Px\n\nTrogramimers (fr. ™\n\n(ge &\n\n \n\nGetting Started fe 7 = i = “C++ for C]\n\nGet 1g Started\n\n \n\n45 '\n\nprogrammers\ngo = “C++ for C Programm\n\n   \n \n\n= = i | = ™ 7 ‘eo,\n\n   \n\ni “C++ for C Programm\n\n \n\ni = Getting Started : >\n\n \n \n   \n\nHS = 3 | C++ for C Programm\n\n \n\n= si Getting Started = I “C++ for C Programm +>\n¥\n¥\n\n3 sy i “C++ for C Prog: ammers fl ~ ~\n‘ae :\noe\n\nifs\n\n      \n\n™ = ™ = S = . C++ for C Programmers Sa\n\n \n\ni\nGetting Started x\n\n  \n\n= = \"C44 for C Px\n\n \n\n+\n\n~_\n\nogranmmen\n\nGetting Started\n\n \n\n' Answers\n\n* Object Orientation is not about flow of control-but you should be comfortable\nwith recursion.\n\n+ Best answer: An object is a data type and its operations that can be either\nnative or user defined. ee\n\n+ Type safety is usually a property of a good OO language.\n* Garbage Collection can be built-in to an OO language or provided for a\n\nuser-defined object.\nint + x\nCom Yum ber .. UNIVERSITY OF CALIFORNIA\n\n   \n\n©2013 Regents of the University of California"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/c-plus-plus-a/01_module-1/01_c-as-a-better-c/04_1-3-converting-a-c-program-to-c.mp4", "id": 717, "text": " lra Po\nProfessor, Baskin School of Engine ry\nUniversity of California Sant: i lra Ron\naceon pog b\nLUT UN mea] C ,.\n\nCc c y.\n\nCc C Program: Dice probability\n\n¢ #include <stdio.h>\n\n¢ #include <stdlib.h>\n\n¢ #include <time.h>\n\n* #define SIDES 6\n\n¢ #define R_SIDE (rand() % SIDES + 1)\n\nSANTA GRIT “C++ for C Programm\n\n \n\nComerting a C program as\nee C++ ~\n\n  \n\n| Zo C++\n\n= \"C44 for C Px ogralm mers fle *\n(ae\n\nCowerting a C progrant &\nZo C++ eur Zo C++\n\n= “C++ for C Progran\n\n \n\neae\n\nne ‘ q\n\nBewerting 2 C program Va\neo C++ ,\n\n  \n\n= C Program: Dice probability\n\n¢ #include <stdio.h>\n+ #include <stdlib.h> Stund oJ\n\n* #include <time.h> {ben i2s '\n\n* #define SIDES 6\n¢ #define R_SIDE (rand() % SIDES + 1)\n\nSANTA ERI Zo C++\n\n| \"C++ forc Programm\n\n \n\nive |\n\nCowerting aC progrant’ =\nee C++ A]\n\n  \n\n= Zo C++\n\n \n\n= nit of ‘ ~\n1 a ~~ i\n\nConverting aC pr —et Ce\nfo C++ wo\n\n  \n\n| C Program: Dice probability\n\n* #include <stdio.h>\n+ #include <stdlib.h> Stand J\n+ #include <time.h> \\ bran 2s\n\n¢ #define SIDES 6\n¢ #define R_SIDE (rand() % SIDES + 1)\n\n&\n‘i. OSE 4\nFee (2a acess ics. for C Programm\n\n  \n \n \n\nComerting a C progrant (=\nZo C++ ai\n\na C Program\n\n. srand(clock());\n. printf (\"\\nEnter number of trials: \");\nscanf(\"%d\", &trials);\nfor (j = 0; j < trials; ++))\n. outcomes[(d1 = R_SIDE) +( d2 = R_SIDE)]++;\n. printf( \"probability\\n\");\n+ for (j = 2; j < n_dice * SIDES + 1; ++j)\nD printf( \"j= %d p= %lfin\",j,\n. (double)(outcomes{j])/trials);\n\n, WM onk Cals Cialis MMers\n\n\"\n(2\n\n“C++ for C Program\n\n \n\nConverting aC pr pene ro\nmo C++ A\n\n  \n\nMarengo\n“eee ily Zo C++ TC.+ for C Px\n\n \n\nae:\n\nCowertirg ac progrart me\nZo C++ oe\n\n  \n\n| Zo C++\n\ni Mummers y\n\ne (at ay a\nConverting ac preyrart -\nZo C++ '\n\nC+ for C Px opr\n\n \n\n  \n\ni Zo C++\n\ni C++ for C Px orran\n\nCowertirg Qa C progrant es\nZo C++ a\n\nUNers\n\n \n\noF\na wm Zo C++\n\nsi “C++ for C Programm\n\n \n\nie?\n\nConverting rs proeyrart =\nZo C++ i\n\n  \n\n= Zo C++\n\na C+ for C Px ograimm\n\nee\n=\n>,\n\nConverting ac Proyart\nZo C++\n\n= C Program\n\n+ srand(clock()); <= seeds |\n. printf (\"\\nEnter number of trials: \");\nscanf(\"%d\", &trials);\nfor (j = 0; j < trials; ++j)\n. outcomes[(d1 = R_SIDE) +( d2 = R_SIDE)]++;\n. printf( \"probability\\n\");\n+ for (j = 2; | < n_dice * SIDES + 1; ++j)\nis printf( \"j= %d p= %lfin\",j,\n. (double)(outcomes{j])/trials);\n\n, WM onk Cas Cir lin “C++ for C Programm\n\nConverting ac progran =\nZo C++ is\n\n= Zo C++\n\n= “C++ for C Programm\n\n   \n\nCowerting aC prograot &\n> C++ *\n\na Zo C++\n\n7 C Program\nsanded) <—_ Seeds\n\nprintf (\"\\nEnter number of trials: \");\nscanf(\"%d\", &trials); S G\nfor (j = 0; j < trials; ++j) ae\n\nQl = +(d2=R_SIDE)}++;\nprintf( \"probability\\n\");\nfor (j = 2; | < n_dice * SIDES + 1; ++j)\n\nprintf( \"j= %d p= %lf\\n\",j,\n\n(double)(outcomes{j])/trials);\n\na WM onk Cals Cie fk c\n\n++ for C Programm\n\n \n\nCowertirg ac progra® =\nfo C-+-+ oe Zo C++\n\n= ~\\ 7\n\nig=\n\n \n\n| “C++ for C Programm\n\n \n\n“ N\n\nCowertirg ac Proyanm fe\nto C++ :\n\n  \n\n= C Program\n\nages <— seeds\nprintf (\"\\nEnter number of trials: \");\nscanf(\"%d\", &trials); c G\nfor (j = 0; j < trials; ++j) et\nQl = +(d2 =R_SIDE)]++;\nprintf( \"probability\\n\");\nfor (j = 2; | < n_dice * SIDES + 1; ++j)\nprintf( \"j= %d p= %lfin\",j,\n(double)(outcomes[j])/trials); <,.—\n\n™ WM onk Cale Cina lhin C Program\n\n+ libraries\n+ #define macros\n\n* main() \\ Zo C++\n\n™ \"C++ for C Px\n\n \n\nig i\n\nConverting aC progrart ea\nZo C++ or\n\n  \n\n= Zo C++\n\ni FC.+ for C Px ogranim\n\n \n\nConverting a prograr Ng NS\n\nZo C++\n\n  \n\n= C Program\n* libraries stn LX\n\n+ #define macros #)\n* main() IN\nI nt\n\na\n\nJ UNIVERSITY OF CALIFORNIA\n\n   \n\n©2013 Regents of the University of California"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/c-plus-plus-a/01_module-1/01_c-as-a-better-c/05_1-4-using-c-code.mp4", "id": 718, "text": " C++ forC Programmers , x\n\nModule 1.4\nUsing C++ Code 7 .\n\nCc\n\nIra Pohl\n\neMC eeo kes suelo)\n\nUniversity of California Santa Cruz a = Je aw ult Nines\n«/\n\ne following program computes /| wt\ne probability for dice possibilities\n\n#include <iostream> //drops .h still available\n#include <cstdlib>\n\n#include <ctime>\n\nusing namespace std;\n\nconst int sides = 6; //replaces many sharp\ndefines\n\ninline int r_sides(){ return (rand() % sides + 1); } C\n\n++ for C Px\n\nogrammers f Fat \"\n\n(ae 5\n\n \n\nUsing C++ Code\n\n \n\n“= So an ult, lone\n«/\n\ne following program computes /| we\ne probability for dice possibilities zs\n\n#include <iostream> //drops .h still available\n#include <cstdlib>\n\n#include <ctime>\n\nusing namespace std;\n\nconst int sides = 6; //replaces many sharp\ndefines\n\ninline int r_sides(){ return (rand() % sides + 1); } c\n\n++ for C Programm\n\nUsing C++ Code Je am ult, lone\n«/\n\ne following program computes /| n\ne probability for dice possibilities\n\n=e,\n\nz\n\nv\n\nel\n\n* #include <iostream> //drops -h still available\n¢ #include <cstdlib>\n\n¢ #include <ctime>\n\n* using namespace std;\n\n* const int sides = 6; //replaces many sharp\ndefines\n\n* inline int r_sides(){ return (rand() % sides + 1); } A\n\nC++ for C Programm i\n\nCc = a = Te amul4y lar\n\n«/\ne following program computes // wt\ne probability for dice possibilities\n7\n* #include <iostream>/(//drops -h still available\n* #include <cstdlib>\n* #include <ctime>\n\n* using namespace std;\n\n* const int sides = 6; //replaces many sharp\ndefines\n\n+ inline int r_sides(){ return (rand() % sides + 1); } ' = -’ = 7 Je am ult. eagee\n\n«/\n\ne following program computes mH (ine\ne probability for dice possibilities\n\n1 LO em\n\n \n\n* const int sides = 6; /lreplaces many sharp\ndefines\n\n+ inline int r_sides(){ return (rand() % sides + 1); } 7 ™ -\n\nCc = ,\n\nCc Ie am wuld Ungez\n\n«/\n\ne following program computes mh (ime\ne probability for dice possibilities\n\n1 LO C.\n\n \n\nGott ides = 6; /ireplaces many sharp\n” Getnes— = f #4\n\n+ inline int r_sides(){ return (rand() % sides + 1); } = 3 = 7 = 7 ™’ 7 = ™ = ™ = Je am ult, oor\nay ™\ne following program computes / / sr\n\nle probability for dice possibilities\nme\n\n  \n\n \n\nst int ides = 6; /ireplaces many sharp / #\nao\n* {nline int r. — return (rand() % sides + 1); }\n\nrn line\n\n‘a Cam Wp voctive ' s = > = i 3 Je an ult A age\n“>\ne following program computes / / se\n\ne probability for dice possibilities\nSe\n\n  \n\n \n\n* sonst int sides = 6; /ireplaces many sharp / #\ndefine\n\n* jnline int r — return (rand() % sides + 1); }\n\\nline\n\n‘a Cam Tp voctive UNIVERSITY OF CALIFORNIA\n\nNTH CHUL\n\n©2013 Regents of the University of California\n\na)"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/c-plus-plus-a/01_module-1/01_c-as-a-better-c/06_1-5-c-improvements.mp4", "id": 719, "text": " -\n\nModule 1.5\n\nC++ Improvements\n™ K\n\n| Module 1.5\nC++ Improvements 7 C++ Drproverterits\n\na for C Programmers r~ ;\n(ae > Programmers ™. ~\n\n( ae \\e\nC++ Doproemeris “Gl C++ Improvements\n\n— NB some of these are adopted in modern C\n\n— Different libraries most old C libraries still\navailable — usually as c....\n\n— Inline - replaces code macro — benefit?\n\n— Rest of line comments //\n\noy ata @Qenz\n\nSANTA CHU? \"C44 for C Px\n\n \n\nogramm; fe x\n(se\n\nC++ Drprovements ' ps C++ Improvements\n\n— NB some of these are adopted in modern C\n\n— Different libraries most old C libraries still\n\navailable — usually as c....\n— Inline - replaces code macro — benefit?\n— Rest of line comments //\n\nNn ata Bene\n\nSANTA GR Crt for C Pr\n\n \n\nC++ Drprovertents C++ Program\n\nsint main(void)\n\n* constint n_dice = 2;\n\n+ int d1, d2; | oll\n+ srand(clock()); //why?_————_| Vw 4 \\G ‘# S\n\ncout << \"\\nEnter number of trials: \";\n+ int trials;\n* cin >> trials; //compare to scanf\n\n* int* outcomes = new int[n_dice * sides +1];\n\nstd x3 cout”\nSeems Se forc Programm\n\n  \n \n \n\nC++ Drprovements C++ Program —. =\nint main(void) C — = OVA (o«d)\n\n*\n\n: Sine ea h OS 4 rr “eed\n\n+ srand(clock()); //why?__———— inci Vals ‘#\n\ncout << \"\\nEnter number of trials: \";\n+ int trials; Xa \\t eo\nll —\n\n* cin >> trials; //compare to scanf\n+ int* outcomes = new int[n_dice * sides +1];\n\ndese cout\nostream SE a aeene “C++ for C Programm\n\n \n\nners ‘ ™\n(ae ;\na\n\nC++ LDyprnements / “T x ve\nC++ Program a\n\n. main(void) C <s OVA (aed\n\n* const int n_dice = 2; h OS 4 Vw AaB =\n+ int d1, d2; I. Q\nsrand(clock()); _//why?__———— ins \\G # S$\n\nCoot <h jinEnter number of trials: \", number of trials: \"\nam SS\n\n* cin>> trials: //compare to scanf\n+ int* outcomes = new int[n_dice * sides +1];\n\ndese cout\nostream SE rea Tess te\n\n \n\n| NA [* bot\nC++ Program L shag\n: main(void) C FE me loa)\n\n* const int n_dice = 2; h aS i RV\n+ int d1, d2;\n\n \n\n* cin >> ttialey J/compareto'scant //compare to scanf\n\n° = it outcome’ = new int[n_dice * sides +1]; i iy al\nostream of td; +2,cOU of C++ for C Progran\n\n \n\n2 mers \"\n(oe:\n\nC++ Doyprovemeris “Yi C++ Program a\nsint main(void) C lH (oad\n( =>\n* const int n_dice = 2; Gi ni ate\n+ int d1, d2; A s * i\n+ _srand(clock()); _//why?__———— ins \\G ‘# cea\n\nC cout <fynenter number of tae\") i:\n——— At ye\n\nint trials;\n+ cin >> tials; /compare:to'scant //compare to scanf —_ —\n\n~ i outcomes = new int[n_dice * sides +1], (nb basoh\nortran Std 33. cout\n“eee Quiz\n* srand(clock()); //why?\n\n> SANT CH Answer\n\n* srand() —initializes the random number\nsequence\n\n¢ Don’t want the same results each time in a\nsimulation\n\n* clock() Returns the processor time\nconsumed by the program. The value\nreturned is expressed in clock ticks .\n\n* Fine grained and different when main()\nstarts running\n\nSANTH CRU \"C44 for C Programm\n\n \n\n@-\n\nC++ Drprovements ~~\n\n,\nfrog \\ TCi4 for C Px ogrannmn\n\n \n\nners Yt 7\n\nC++ Drproverterits\n\n   \n\ns | Answer\n\n* srand() —initializes the random number\nsequence\n\n* Don’t want the same results each time in a\nsimulation\n\n* clock() Returns the processor time\nconsumed by the program. The value\nreturned is expressed in clock ticks .\n\n* Fine grained and different when main()\nstarts running\n\nSHNTH CHU UNIVERSITY OF CALIFORNIA\n\n   \n\n©2013 Regents of the University of California"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/c-plus-plus-a/02_module-2/01_basics-of-generics-and-classes/07_2-6-c-creating-types.mp4", "id": 730, "text": " -\n\nCc Ira Pohl\n\netoile kee ecu)\nAUN orl OME RSet einen\n\nOAs -ueoeo kos saelicci)\nUSN kel RSC er C44 for C Prog\n\n \n\nC++ Creating Types\n\nBR\n\nTan\n\nOS Asoo messi)\nAUN oll RSI er elon\n\nOasis eO keane)\nAUN mold RS UIC er TC. + for ic Procrarnnim\n\nC++ Creating Types \" ag’ = PO44 for C Progranum\n\nC++ Creating Types “af -\n\nCc Cc C++ Creating Types -\n\nCc row) S (oe\nS\nraul\nel\nine\nner,\nwld\n\n.\ntf\n+\nCreat\naj Ing\nTy\nype\n=) = Answers:\n\ne Any of short, int , double, char, long, long\ndouble, int* ...\n\n© 3/4 both int literals answer 0\ne 3.0/4 double/ int — double division 0.75\n\ne Conclusion type matters a lot\n\nSHNTH CHUL > &\n\nett Creat\nA iia | Types .\n\n— Answers:\n\ne Any of short, int , double, char, long, long\ndouble, int* ...\n\n© 3/4 both int literals answer 0\ne 3.0/4 double/ int — double division 0.75\n\ne Conclusion type matters a lot\n\nSHNTH CHUL Programm oN\nY 2 os\n\nC++ Creating Types\n\n* Answers:\n\ne Any of short, int’, double, char, long, long\ndouble, int*...\n\n03/4 both int literals answer 0\ne 3.0/4 double / int — double division- 0.75\n\ne Conclusion type matters. a lot .. UNIVERSITY OF CALIFORNIA\n\n   \n\n©2013 Regents of the University of California"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/c-plus-plus-a/02_module-2/01_basics-of-generics-and-classes/08_2-7-enum-operator-overloading.mp4", "id": 731, "text": " Module 2.7\nEnum and\nOperator Overloading °c\n\n++ for C Programm\n\n  \n\niskin School of En.\n\n, y of California Sa Crt for C Prog\n\n \n\nErion ard | om\nOperator Overloading ee\n\n  \n\nre me) A\n\nOm iesoleo kes suelo}\nUso elon Neer\n\n= Be a « a\n\n \n\n= Cnting Crd\n\nOperat. or Over/. odding 7 aed a\nhe Cntinn and A\n\nC++ for C Programm\n\nGriirn ard =\nOperator Overloading 3\n\na Cntinn and C++ for C Programm\n\n \n\nCntira and\nOperator Over/ecding\n\n  \n\n| Cntira Grd\n\n \n\n7 enum & operator overloading\nexample\n\ne enum is a simple int type\n\ne typedef enum color{RED, WHITE,GREEN} color;\n— —=\n\ne RED is defaulted to 0. WHITE is 1 and GREEN is 2\n\n“\\epencmiarca la\npd wma Carrer him\n\n> SHNTH CRU C++ for C Programmers (er.\nCi:\nyt *\n\nCnit™ and\n\nOpera. or Over/ odding enum & operator overloading\nexample\n\ne enum is a simple int type\n\ne typedef enum color{RED, WHITE,GREEN} color;\n— =<\n\ne RED is defaulted to 0. WHITE is 1 and GREEN is 2\nVN\nCUM a Lr\ncopa We aA Cry hum\nwn itt =3 si\n\n“SANTA CRUE c\n\n++ for C Programm\n\n  \n\nCntinn ard\nOperator Overloading Quiz: Should you use enum?\n\nA) Can use a named integer — so it is\nredundant?\n\nB) Can use a #define - keep old C style?\nC) Small related set of constants?\n\nPick best answer SANTA CANT ,.\n\nC++ for C Programm\n\nCntir7 and\nOperator Overloading Answers:\n\nA) Can use a named const integer —so it is\nredundant? Okay\ne const int TRUE = 1, FALSE = 0;\n\nB) Can use a #define- keep old C style?- safety\nissues\n\ne #define TRUE 1\n\ne #define FALSE 0\n\nC) Small related set of constants? — yes best\nanswer “C++ for C Programm\n\n  \n\nCntirg Grd Wa\nOperator Overloading 7. Cntir7 and . r\n\nC++ for C Programm\n\nCntir7 and\nOperator Overloading Cntir7 and Answers:\n\nA) Can use a named const integer —so it is\nredundant? Okay\ne const int TRUE = 1, FALSE = 0;\n\nB) Can use a #define- keep old C style?- safety\nissues\n\ne #define TRUE 1\n\ne #define FALSE 0\n\nC) Small related set of constants? — yes best\nanswer UNIVERSITY OF CALIFORNIA\n\n   \n\n©2013 Regents of the University of California"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/c-plus-plus-a/03_module-3/01_c-and-oo-lists/07_3-6-complex-aggregates-lists.mp4", "id": 739, "text": " Coryplex Aggregates, | i\nhist elertert Po\n\n  \n\n_. Ast element\n\nCc Coryplex Aagreqales/ tan) |\nMist element ,\n\n  \n\n—T Ast element\n\nCS F\nC++ for C Progrs\n\n \n\nCoryplex Aagreqales/ | %\nMWst element\n\n  \n\nCl Ast element\n\nCT. Coryplex Ae qgregiles/ 7\n\n  \n\nhist element\n\nF CALIFORNIA\n\nCc... hist element\n\n— wig reroll ™\n\nC lox He \"7 A\n? ex Aggrega tes / a,\nhist element ome\n\n \n\n  \n\n— — hist element\n\n——_._ Coryplex Aggregates / / aN\nWst element '\n\n  \n\n— hist element\n\n—__ Coryplex Aggregates / | Avy\n\n  \n\nhist element\n\n— hist element\n\nCT. F -\nC++ for C Progra\n\n \n\nFt\n\nCoryplex Ae (qqregales, y im\n\n  \n\nAst element\n\nCc. Ast element\n\nCc. nie 2 i =\nrogram ers fie ‘\n\na ze i\nCorpplex Aggregates / ps\n\nAst element\n\n \n\n  \n\nCT hist elemert Coryplex A (qgregat es, ys eo\n\n  \n\nhist element\n\nCc. Ast element\n\n— Coryplex Aggregates / = )\na/b\n\nAst elemert\n\nCl ee\n\n   \n \n\nNAO NTLN Ast elemert\n\n.|.Cl(— ee y 7\nC++ for C Pr\n\nogramm eraf ‘\n\n) ae\n\n \n\nCoryplex Aggregates / -—\nhist elerzert\n\n.C—( lhl Ast element\n\n|.—=C(_— ee Coryplex Ae qgregales, y\n\nAst element\n\n.|.C lc el Ast element\n\n.|.C=C FF Coryplex Ae (qgregales, y |\n\nAst element\n\n.—( lh Ast element\n\n9 Me e orplex A qgregiles/\n\nAst element\n\n9 Me Ast element\n\n9 Coryplex Aagreqales/ :\n\nAst element\n\n.C—( kh Ast element\n\n|.—=CF ee. Coryplex Aagregates/ = :\nWst elemerC hal\n\n|.—=C Fe. Ast element\n\n|.—CF , -\nC++ for C P\n\n \n\nrogral WR ers \\\n) ae. ‘)\n\nCoryplex Ae (qgregales/\n\nAst element |\n\n   \n\n|. —d6r xk... Ast element\n\n|. d6>6v xe. Coryplex Ae (qgregales, P\n\nAst element\n\n| © i=@z>-... omens\n\n* =\nie\n\nCorpplex Aggregates / Aa\n\nyo cae\nC++ for C Progra\n\n \n\nAst element\n\n.|.—=C FO e... _ hist element\n\n|.—CF e... _ -\n\nC++ for C Programm\n\n \n\n| ae ¢\n\nCoryplex Ae (qqregales/ a\n\nIist element b\n\n  \n\nee Ast element\n\nCl ee /\nC++ for C Programm\n\n \n\n& ~ ae\nCoryplex Aggreqales/ a\nMWst elemert A\n\nL—C(l ke Ast element\n\nLC—(l hl /\nC++ for C Programm\n\n \n\nCoryplex He (qgregales, ee\n\nAst element\n\n9 Me Ast element\n\nL—C(l ke yo -\nC++ for Cc P\n\neo 0 e HEP , Y\nroc ranimer,\n\nae\n\n \n\nCoryplex Aggreqales/ ~—\nWst elerrert ‘ve |\n\nMe Ast element\n\n9 me y P\nC++ for C Programm\n\n \n\nCoryplex Fl (qqregales/\n\nAst element\n\n|.—sMr Ke. List element\n\ne struct list_element{\n\nlist_element(int n = 0, list_element* ptr = 0):\n\ndin), next(ptr){}\nint d;\nlist_element* next;\n\nOr equivalently\nist_element{\n\n  \n\n*  list_element(int n = 0, list_element* ptr = 0):\n\n. ain), next(ptr){}\n\nint d;\nlist_element* next;\n\nIVERSITY OF CALIFORNY\n\nSHNTH CHUL r.\n\nC++ for C Programm\n\n \n\nCoryplex Aggregates / ‘ 3\nhist elertert\n\n     \n\nin Ast element\n\nin Coryplex Aagreqales/\n\n  \n\nAst element\n\nin Ast element\n\nin ,\nC++ for C Progie HIRE\n\nCoryplex Aagreqales/ es :\n\nin List element\n\n© struct list_element{ pr lag\n\nlist_element(int n = 0, list_element* ptr = 0):\n. a(n), next(ptr){}\n\nint d:\n\nlists element* next;\n\nOr equivalently\nclass list_element{\npublic: —_—————_\n° list chirientint a 0, list_element* ptr = 0):\nae next(ptr){}\n\n“lst element* next;\n\nSANTA CAL Coryplex Aggreqales/\n\n  \n\nhist element\n\nee og List element\n\n© struct list_element{ pr las\n\nlist_element(int n = 0, list_element” ptr = 0):\n. an), next(ptr){}\n\nin\n\nBs ‘lement* next;\n\nOr equivalently\nclass list_element{\npublic: —_——_————_\n\n. ane = \\ 0, list_element’ gtr= 0): aull yt\n\nBL Giement* next;\n\nNila SiN Quiz:\n\ne In the previous list_element constructor, what\nis O used for?\n\nSANTH GAUL Answer: Null pointer\n\ne The zero value is the null pointer value.\n\ne Recall it is important in lists to test for null;\nthey are used as sentinel values.\n\ne C+#11 - list_element* ptr =nullptr ;\ne new keyword - type safe\n\nSANTA GAUL ,\n\nC++ for C Px\n\n \n\nogrammers rt\n\naS |\n\nCorplex Aagreqales/\nAst element\n\n  \n\nTaos Answer: Null pointer\n\ne The zero value is the null pointer value.\n\ne Recall it is important in lists to test for null;\nthey are used as sentinel values.\n\ne C++11 -list_element* ptr =nullptr ;\ne new keyword - type safe .. UNIVERSITY OF CALIFORNIA\n\n   \n\n©2013 Regents of the University of California"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/c-plus-plus-a/03_module-3/01_c-and-oo-lists/12_3-11-destructor.mp4", "id": 744, "text": " Module 3.11\nDestructor C++ forC Programmers ~\nModule 3.11 a“ N ,\nDestructor 4 ee Destructor SE forc Pro\n\n  \n\nDestructor\n\nIra Pohl\n\nOs Simcoe keane)\nUne Sele Clue RSC Retr Destructor P44 for C Programm\n\nDestriictor Destructor tye - 1) th hep\n° silat) oh Ba [| pel\n\nfor( cursor = head; cursor != 0; )\n\ncursor = head->next;\ndelete head;\nhead = cursor;\n}\n}\n\nHere the destructor chains through the list\nreturning each list_element created by a\ncorresponding new.\n\nUNIVERSITY OF CALIFORNIA\n\n> SANTA CHUL / ‘\nC++ for C Progra\n\n \n\n  \n\nDestructor a Destructor fe -n) th hey\n° isk) hk Bie [| rei\n\n \n\nfor( cursor = head; cursor != 0; )\n{\ncursor = head->next; Ae le te\ndelete head; Tt\nhead = cursor; mM ew c\n; yur) 7 E 4\n\nHere the destructor chains through the list bx le te Pr\nreturning each list_element created by a\n\ncorresponding new. Qe (a4\nan allt ae\n\na SANTA CRI ,\nC++ for C Programm\n\n   \n\nDestructor\n\nCl Destructor ~ fw. —y he her\n° Isto ok Mag dt 26 Il re he\n\n \n\nfor( cursor = head; cursor != 0; )\n{\ncursor = head->next; — Aelete” Ie te\ndelete head; mot\nhead = cursor; wm hued T\n> CI\n\nHere the destructor chains through the list . le i\nreturning each list_element created by a\ncorresponding new. Qe Wig D\n\npt lgnD iC .+ for C Prog\n\n \n\nDestructor ~~. Destriictor\n\n.|=CS \"C44 for C Progra\n\n \n\nDestructor Destructor C4 for C Progra\n\n \n\nDestructor\n\n \n\n> 2\nA\n\nTG\na A\n\nDestructor r\n\nC++ for C Programm\n\nDestrtictor Use this list\n\ne for (int i = 0; i < 40; ++i)\nb.prepend(i*i);\ncout <<\" list b \" << endl;\nb.print();\nlist c(b);\nc.print();\nd.print();\ne.print();\n}\n\nMake sure you know where each constructor and\ndestructor is invoked. Also what is printed? .. UNIVERSITY OF CALIFORNIA\n\n   \n\n©2013 Regents of the University of California"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/c-plus-plus-a/04_module-4/01_minimum-spanning-tree-standard-template-library/08_4-7-stl-example.mp4", "id": 751, "text": " Module 4.7\nSTL Example C++ for C Programm\n\n77. Exar. 2 im ite?)\n\nSf Sie Engineering\neu RS Ue Leg ‘Ira Pohl\n\neke ssa)\nFNL RS Uc Retr Example using STL:\n\ne // Simple STL vector program\n\ne #include <iostream>\n#include <vector>\nusing namespace std;\n\nint main ()\nvector<int> v(100); //allocate space\n\n**vector is a template and is a random access\ncontainer — replace array in C++\n\nSANTA GAUL \\ Example using STL:\n\ne // Simple STL vector program\n\ne #include <iostream>\n#include <vector>\nusing namespace std;\n\nint main ()\nvector<int> v(100); //allocate space\n\n**vector is a template and is a random access\ncontainer — replace array in C++\n\nSANTA GAUL “C++ for C Programm ' ™\n\n7 Exar. e Example code\ne\n\ne for (inti = 0; i < 100; ++i) +\nV(i) = i:vfindex thtu like an array Viren\n\n     \n     \n\nfor (vector<int>::it = v.begin();\np !=G.end();}++p) Oars\ncout << *p << '‘\\t'; ‘\ncout << endl;\n} qulg (? ink\n\nCUNser\n\n**second for used iterators —note the declaration,\nand it is “safer” —no off by 1 errors.\n\nendl) 2 Ue Es 7/7 Exarqpl 2\n\n  \n\n7 Example code ae\nVEr ag ated eS\n\ne for (int i = 0; i < 100; ++i) x\nv[i] = i;//index thru like an array \\ Rirn\n\n| for (vector<int>::ite\n\nator p = v.begin(); oe\np l= V.end ();)} +0 © .\ncout << *p << ‘\\t'; \\ | 4 dur\n' cout << endl; q pe ale\n\nCUNser\n\n“second for used iterators —note the declaration,\nand it is “safer” —no off by 1 errors.\n\nTe? Lara\n\n————— C++ for C Programm\n\n  \n\n77. Exar. 2\n\n \n\nSS 77. Exar. 2\n\n swjSae C++ for C Programm\n7 Exarpple\n\nSp Se C++ for C Programm\n7 Exarpple\n\n \n\nSp begin() end() methods\n\ne Here we use a vector and its associated\niterator.\nThink of p as conceptually a pointer. It has\ntwo endpoints that define its range:\n(v.begin(), v.end())\nwhere v.begin() stores a value, but v.end()\ndoes not.\n\nSHNTH CHUL 4\n\n' C++ for C Programm\n\n ~aanee. | 77 Exar. 2\n\nSS UNIVERSITY OF CALIFORNIA\n\n   \n\n©2013 Regents of the University of California"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/02_functions-and-limits/02_functions-whats-a-function/02_when-are-two-functions-the-same.mp4", "id": 879, "text": " When are two functions the\nsame? \\¥, g(x) = 2? +20 +1\n\nIs f the same as g? vy qx) = x +2¢+1\n\nIs f the same as g!\n\n(4) + = 3 =Q\n\n1), 2° 42-241 ~ Ys4s] 2Q 2-291 + Ys4e9 4 g(x) = ae +20 +1\n\na same as g?\n1 ») : t = . 2a x Yys4 +p\n\nwaa d g(x) = x +2r7+1\n\nLp)?\n\nIs f the same as g! 32-29] : ys4e] 7G ‘yP g(x) =\"? +22 +1\n\nIs f the same as g?\n\nny «de\ne42-29] = 4244] 7Q 42-291 = YA44d 49 a? +2¢4+1\ng(c) eae\n\nL a@)*\n\nIs f the same as g!\nSa\n\nee ~ Yay sy gte2-2ed s 444s 4 )\n1\n\nee « Ys4ey* 9 f(x) =(14 v) g(a) = 2? + 2a +1\n\nIs f the same as g?\n\n£02): (02)\ngay 2s22el - 4s4ey+9\n\netx) = Ce\n=\\ a ae ~ 4444\n\n(l4xll+x) (1 +2)? g(x) = a? +2r+1\n\nIs f the same as g?\n£(2)= Cl4 xy : a =\n9) ~Qe22zed = YAdtT 7\n\ncle) C4 x C14)\na\\t xX tXtXe -(lax)Ll42)\n« 14568 Kx X 2-24] = 4y+4ti *q\n\n(lax 04 x)\n\nexexXtx X f(a) at a)? g(x) = a?+2e4+1\n\nIs f the same as g?\n\n£(2)= ( lay 3 79\n9 (2)> 2 + tae 4y+4 +15\n\nEle) C4 x lx)\n2X |x tXtXy\n« :\\| +e ix + 77 ~ 4444?\n\nlex exexX\nz\ni\\e yx +X gz) = x? +2041\n\nIs f the same as g?\n\nsy +3 *49\n(2-241 =» Ys44T*49\n\n-(\\4 x (1+ <)\nol) -29] ~ Yay ey 9\n\n-(l4x)Cl+x)\n~ |e xtxXtxX\n:\\ +l oe ot) g(x) =a? +2041\n\n¢ /\nhe same as g? Mé@s-\n\n2-291 + ysdspe\n\nlax) (I x)\n\nrx eX tx X\nled “Xe Ss atx)\n\n=\\ 1+ 2)? gia) a2 +2041\n\n: ,\nIs f the sang asage Wes. g(a) = +20 +1\n\n. ' 4\nIs f the same as g? Wé@s-\n\n:) C (+ x)\n\nrx extex xX\n4 x? bad 9%)\n\n-Yx* =\nx) J\ng(x Is f the same as g? Is f the same as g?\n<an\n‘ scm\n>» f(s) = <a z g(x) = &\n\nIs f the same as g?\n\n2 s i\nts): ss *\n\nE(x): xe > same as g?\n\n23% ¥, 5)\n+S 26 f(a : oa\n\ns7u the same as |\n\n-5=95)\n\n      \n     \n     \n\nA aa\n\ny atoll\n\nO's f(a a g(x) ==\n\ney the same as gJNO'}]\n\n-5:905)\n—-\n- £*.x-9@)\n\ny of0):0\n\nPo x. oa) —\n\nisa the same as gNO']\n\n23.5 +395)\n\nbz\n(x) g(a nol\n\nIS\n\noe ae\n\nBX» ole)\n” xX = GF\n\n9 (0):O mooculus.osu.edu OHIO Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/02_functions-and-limits/03_functions-in-the-real-world/01_what-are-some-real-world-examples-of-functions.mp4", "id": 881, "text": " What are some real-world\nexamples of functions? (x) on\n\n4 Ist” : Oe +x) See “(hs x)\noe nex t+ loy los xe oy Celsius +o Fabvenhed\n} 1\nBO 60): a2\n\n, _ c a\nL(x) a * a\nif enhe: 4\n\nb £0): 1-0\na\n\nJ Celsius tp Falrenhe: 4\n4 = WE\n| Tee €\nels\nrus\n+o F-\n‘aby\nenbe:\n1\n\n‘nD\nL{&\n\\: pe\n432%\n\neo a\noO\naad: 32\n\n‘i G aN sius +o Fabvenhe: 4\n)\n\n4 . Cea\n{Q@): =\n; £ (0) z TO 3 =e\n\n} OCc:% G\nels\nsus\n+o F-\nohy\neohe:\n1\n\n4\n{@)- B\nave\n\npe a\noO\n7 oe Celsius to Fabvenhe 4\n\nLG): B32 =\n. = =\n£097) ==\n32\n= #3t\n\nF (0) : “12.3\n© C.: 32mg\n+ 66.643?\n: M6\n39°C: W9.6°F «\n2\na\n\n\"Ohkeeg Clock cycles to discharge LED\n\nle+06\n\n \n\n100000\n\n10000\n43000\n\nSunrise on June 6, 2012\n\nred\ngreen\n\n \n\n43500 44000 44500 45000 45500 46000\nSeconds relative to June 5, 2012 6:03pm EDT\n\n46500 ‘Atteio Tate Read Edt View history\n\nMopulation growth\nrn Wied ee encyeopeda\n\n>pUintion growth is ne\n90:2 9 population\n+1 gi a can be\n”  ieeeed\nrot\nHany species,\npa using \"per\n\nPON ely to eter to\nny brawn organism, but ee SCE\nfas ance oats moony Essnated Soa othran soputon tam 10.009 8CE-atoo Ge a Population growth ige ina\n\ne\nnumber ©\n\na\n\n‘for i 7\n\n[rm 2\"\n\nfer to any : 5\n\n» deals a\n\ne term to 3 ;\n\niphy. 1\n\nwth is o\n\necific 10,900 BC 8000 00 4000 2000 AD1 100 2000\n\nsee Estimated size of human population from 10,000 BCE-2000 CE. js a\n\n/ Fy: 5 cw te\n_\n\n| PT a WA +Jim Search Images Maps Play YouTube News Gmail Drive Calendar More\n\nSifower | 6 | + Shae |\n\n. Google\n\nGoogle Search mF\n\n \n\ning Lucky\n\n‘Advertising Programs Business Solutions Privacy & Terms +Google About Google MO\n\nGoogle 18 § EB vrower| 0 | + -\n\ney rd\n\n \n\n \n\nGoogle 18 HEE rower 0\n\n \n\n \n\nWeb Images Maps Shopping Videos.» More —Search tools\n\nAbout 1,080,000,000 resus\n\n \n\nen.wikipedia orgiwiki/t88_(number)\n\n188 is the natural number following 187 and preceding 189. Contents. 1 In mathematics; 2\nIn astronomy; 3 In geography; 4 In the military; 5 In movies; 6 In music...\n\nIn mathematics - In astronomy - In geography - In the military\n\n- Wikiped fi\nen.wikipedia orgiwiki/t@8\nYear 188 (CLXXXVII!) was a leap year starting on Monday (link will display the full\ncalendar) of the Julian calendar. At the time, it was known as the Year of the ..\n\n \n\n5 % “guaee Dees, hi r\n‘www youtube.comMwatch?v=mfJ-YEWiLs\n\nMar 16, 2012 - Uploaded by elnine11\n\nMAJOR DISCOVERY of LEY LINES from the 188 DAY QUAKE\nPATTERN... PART 3 RELEASED & OUT NOW...\n\n   \n\nMore videos for 188 »\n\n(PFI To West New York - New Jersey Transit\n\nwww ntransitcom/patfous/TO188 pat rs\n\na nr Eile Pe EE yg )\n(en 4\nee\n\nNS rd\n\n \n\n \n\nGoogle [7 | EM ivrower 0 + B-\n\n \n\n   \n\n \n\n \n\nWeb Images Maps Shopping Videos. «= More ~—Seearch tools, ® o\n0,000 results (0.92 seconds)\n\n- Wikipedia, th\nen.wikipedia.org/wiki/188_(number)\n188 is the natural number following 187 and preceding 189. Contents. 1 in mathematics; 2\nIn astronomy; 3 In geography; 4 In the military; 5 In movies; 6 in music .\nin mathematics -n astronomy - In geography - In the military\n188 -\nen.wikipedia orghwiki@\nYear 188 (CLXXXVIII) was a leap year starting on Monday (link will display the full\ncalendar) of the Julian calendar. At the time, it was known as the Year of the ...\n\nJn i - Major Di y :\nee yi youtube. comMvatch?v=mfl-YEw Ls\nee B Mar 16, 2012 - Uploaded by elninett\n=F =_ MAJOR DISCOVERY of LEY LINES from the 188 DAY QUAKE\n\n— oa PATTERN... PART 3 RELEASED & OUT NOW...\nMore videos for 188 »\n(POF To West New York - New Jersey Transit\nwww njtransit com/pdtfous/T0188 pdf i\n\na rE nn Bn EEE Oa\n\nGoogle | 752 {| HE ivrowero | + rd\n\n \n\nGoogle 752 8 EB vrower|o | + -\n\nWeb Images Maps. Shopping More Search tools\n\n20 personal results. 808,000,000/othiennesulis\n\n \n\n \n\n@\n°\n\n= Wika ft\nen.wikipedia orghviki/?52\n\nYear 752 (OCCLI!) was a leap year starting on Saturday (link will display the full calendar)\nof the Julian calendar. The denomination 752 for this year has been ...\n\n182 Area Code 752\n\nareacode org/752\n\nEASY TO REMEMBER URL: ‘AreaCode org/752' provides info on 752 Area Code 752\nand other US area codes, including area code maps, and cities within 752 ...\n\nriginally Continental) - Seat‘\nwww.seatguru.conv../United_Airlines_Boeing_757-200 Flat.\nFor your next United fight, use this seating chart to get the most comfortable seats,\nlegroom, and recline on Boeing 757-200 Flat Bed (752) (Originally .\n\n752 - Legal Informatis tute ~ IL\nwww law.comell.eduluscodeftex’26/752\n‘Any increase in a partners share of the liabilities of a partnership, or any increase ina\npartners individual liabilities by reason of the assumption by such partner... 6\n\n© Google hits for integers\n\n€ = — ail mooculus.osu.edu ore OHIO"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/02_functions-and-limits/04_limits-whats-a-limit/01_morally-what-is-the-limit-of-a-sum.mp4", "id": 883, "text": " Morally, what is the limit of a\nsum? / — = me a\n: for! Se ware\n4 7 cs a\n\n~ I\n\n2\n\nan\n\nf i\nfe oe da 2: ne 3\n\n49°79\n1902\na, _ ee oe BI\nof a hum bey ¢\nPn avy Sum ae\n\na ae ae IR a\n. 3 a a ST Se\n\n \n\nVol ane att\n| of me vas ;\nfreee <\n\ncia lls ie aa\n\nRanches an\n: 2 ea a | -\n\nPi wear th sum |\na Bea oa <\nre +o aU ON me\n\na aa Nine et (alt\n\na | er s\nLS :\n\n.\n\n   \n\n)\n=e ee ah\n\na\n\nae Was ee Sy es)\nBNA aee a7 uA\nma z eC aa\n145 aw av Vo\nE ay ae E a Mili: Sal ach aie!\niui ; rats Dov acta yan aya) Wie\nsola aces\nace ©\n\ntc. a ]\nZ\n\nUae\n; lin aa aals a\npee\n\nm\n7\nLd . Sngaowee a\n=\\m Sao aan\n\nar) wm : |\n\nay Fay Zs a)\n\n=\\ ss ayal &\napatite (toa)\nPs Vig gh <i Or ae\nai ‘oie waa\nLie]\n‘|\n\nY con a)\nSam iene ds\n’ se\n\noa\nfi - pai zee See = AO\nae\n‘- ee - me\n\nOe\n3 pring Ce\nBie, a\ncee Dngaon oy\nNeko al -\naoe ana Ce Ora)\nB aa DCD\n\n\" « Sojigh))\ntlie tral rn\nare\n\n* “eh Se)\ns <i\n\nAcro)\nVane\n\n \n\n—\na anes alge\n=lhm sar. =\n\n~ aincron 2) oy\n\ndf pe i na\n\n \n\nis Ting FO) ge\nue 5 Waals ;\nWee eV Ol ates a)\neae\n\n=\ny\n| ie\nan\n\nyea\nanes = a \"7 a —- —_—_- P| 7\nto\n\n<¢\n, e\no V —~\n\nif =o\n\na, Pe oon Ps a a\n- fe ‘ty —_—\n\\\\ v ——\n\n——-\n\nv ates Oe kA\n\nene oh cae Renee\nabe eve. oe dah ;\n\nOrxst | bins\nee ata hea Ror Tha\neas the\n\nen aot ay\na a :\ntea A ahaha ee Tae ’\nee sap aes\n\nSV ua *\nae late @\n\n \n  \n\n  \n  \n\na aha ; Sea eae oma Sp,\noe se Vp\n\nes ao\nim ake oll eat peers\nreat val\naun aa on a\n\ni pr ded the ee\n\n1S ¢ _ ed it Pa\n\nya\n7 a\nef ie\n\n.\n7 las vi ga ae See\n| aS\nMr a\n\nera\n\n4 “i eae a\nTN Hy On cs <i Naas vipa en mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/02_functions-and-limits/04_limits-whats-a-limit/03_what-is-the-limit-of-sin-x-x.mp4", "id": 885, "text": " — .. sina\nWhat is lim ——?\nz-0 @& sin x (0.1\nf(0.0\n/ (0.00\n7 (0.0001\n\nf (0.00001\n\nf (0.000001 sin &\n\n&\n-.841470984807896506652500%0\n\n0.998334 1664682815230681 10s)\n\n   \n\nSQ=0\n\n   \n   \n   \n  \n \n\n   \n\nf(0.(\nf (0.00\n\nSOL\n\n  \n\n£(0.000% sin x\n\n \n\nf (1) = 0.841470984807s065066525ms0\\0s0me\n\nf(0.1) = 0.998 a\n\nf (0.01) = 0.99998333341666668\n\n(0.001) = 0.999999833 3:33.41 66660610\n\nf (0.0001) = 0.99999999833933331100n00\nf (0.00001) = 0999999999085 pa.\n\n(0.000001 ) = 0.9999999999905\n\no r(0 Seal 331166\n\nF(¢ a = 0.9999833338\nF (0.001) = 0.99999983334\n/(0.0001\nF (0.006 a\nF (0.006 sin £\n——\n©\n[OSABOTSH\n3A 1 GGAG825\nJ333334 166604\n999833333:\ngggguss3:\n9999999983333\n\n9999999999835 -5 -4 /-3 -2 1\n\nf. ae eA be Ww ¢ ADEN?) aor\ni oo\n=~ Asien oe y AG 2 eee can aR ne _\nus Oe alee Alcon)\n35 7\n\n \n   \n\ne LTE, -\nf ar Ze Fi ‘\\\n\ny 48 PE lOrraNce me aid?\nT Wor of) ken WD “L\natCas as CNEL\n\n  \n\n( Mec\n\ny 5 ie BS a eh (x) oan Po\n: i. hn abo)\nalan Ce) +f | OR\n\n \n \n\n \n\nEditn h\n\ning\n\nee\n(x) x Wear A\n\nOG\n\n: ow: Sella) x weer a\na= ee) i ee ze\n\nat im Or ww (0) gl\nOl\n* ete ff INGA Wy , ‘\nSCNPaN Cy Ear\n9) a Alc) ee We\naran (x) ;\ni pe 39 :f\nBs , eo \\ PY ,\nAtlee Wy , , welch) x agp\nVe ee) “hay Cn )\na Lo yi) = GER\n5 a e con\n\nsc cE Ol; Df ACE en\na 2 lO) thlx) aaa\n\"i ee) “hay eno\n\nIa ney -t Ke\n\nPalCorinceme: ae\ni 7 ee\nne Fo\n\n  \n\n/ . aCe Ways a aN om x Wear a\ni Hrs ea ae Lb\n, 5 an ie (x) } rf - V4 = ET ee\nPE ICaANce) ana aie,\n“ ee ai Alen) *L\n\nA oak\n\nYa’\n\n \n  \n\n— MIO NC ee aia,\nSS NCRAC a\naca\n\noo\n\no fe ta\na\n: = ain\nNCS)\nNeel\n>\nre)\n\nx\naN\n\ni” Seer\n\nig Ki Neo an —\"\nTen le ee , lA Sy CETUS\ndee (x) «x near A\nLe eo al gealee Se b\n\nAth iS Scns Or anor x i\naiid ic ai) e 7 oe Coes h (x) x Ne r a 3 meres rit a) x\nMie Nes a Aen\n\naid be ao e gn ai\n\nf< ( Z eras i Come acg\nyy a Neo ata Ce EZ a:\nAue bn aay zs > = | Gna ee\nwhee Peper tan Alen) 5\npat &: or.\nAcie Coa a\nalent) y 3 AC iS wees A\nj pill ox): “hay h( * wa We “« mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/03_the-end-of-limits/02_continuity/02_what-does-continuous-mean.mp4", "id": 892, "text": " What does “continuous”\nmean? V1.99 = 1.41067359796058s4125290100\n\nV 2.00 1.414213562373095048801\nV2.0) = 1.41774468787578252020000 bo V 1.99 1 A007 TOONS!\n\nP/2.00\n\nI~ jh 213562873008\nI (17s rer\n\nwal To say a is continuous at_@\n\nmeans tha ty lim i (Cc) — Al To say “f(a) is continuous at_@\n\nmeans that} lim f(a) = f(a).\nra ; i tla I\n\n \n\nlim f(x)\na rc\n\nf(a) is defined at x = a. lim f(x) = fla)\njim f(a) = f(a).\n\n \n\nf(z) is defined at x = a. mere) = f(a).\nta\n\nexists. f(a).\n\n \n\nlim f(a)\nPO (a) is defined at x = a.\n\nlim f(a) exists.\n\noO lim f(a) exists.\n\noe? CL f(x) is defined at x = a.\n\nlim f(a) exists.\noe? CL To say\n“ f(a) is continuous on the interval Ja, b|\nmeans that\nf(z) is continuous on the interval (a, b)\n\nand lim Tie) 110)\n\n2a\n\nand lim mooculus.osu.edu OHIO @r1@ Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/03_the-end-of-limits/03_infinity-how-can-i-work-with-that/01_why-is-there-an-x-so-that-f-x-x.mp4", "id": 895, "text": " Why is there an x so that\nf(a) =2? , f & aes ay ee\n\ni: aS mS\"\n6 <xe\\ ond,\nli\n\nMee (2 | on Z wwe\n| aoe < bp\n. Re od wet\n\nCr ~ ae\n\nc\n+\naay\nr\nie\nne\n\n \n\n» r ne ee\naoa\n| Then a 27d sf nes\n\nOrr eae -\n| a m { r eS tik oc mor mS\nI\") Oxet\n\niain De yet > ae an SB\n\n| Fee\n\n| Aes mane ct AA\nOks J eye are\n\naac Pe < c\nale J 7-3\n\nLoy re the\n=\nBog\nim\n\nia 4\n“\na\n® ae te\nYi aie Yr oe\n\nap\n\nat . ‘ - Paatt\nz a A\naoa\nLN Cy) Ce tea as\n\n90) =P (o> bn ,\nae) a Gh yD\ney Ae me\n\n4 Pe g(x): £&)- ~ apts c+e\n\non \"eRe\nNee ay . §\n\nal CYC) a C® kata 3\n\nSe iy\nre Aa\n\nvo O50) peace\n\nU1 eae\nNee 1. Oyen\n\na ine res BG) FR)-x 9 <ts\n9(0) > = il) ee es |\n\n2) i ea\nB, UN Otte eve\nak\nae\n‘\ncts\n\na\nsik\nuke '<\n|\n\n_ D0) ae\n\na) ee) 2 O\n\\ ie 2 )\n\\ ' C10) Ce kata a5\n\na) =\" \\D Baer\naD \\ ORE ©\nAaeee we\n\nA OC) Ce et aca\n\nCO eae\noD) DPR sa\n\n1B Nae sae ree ea 14 sn\n\ng (0) * Spy\noe Fa)\n2, sald os ¥08 CiCe eeme®,\n\n9 (0) * aly)\nae -3G@p)\n\n2, iid fd\n\n‘ 15 eye) eco ee Ye 5645\n\na) (er ae)\naD a GD BS hp)\nea Neen a(x):O O10) eC) erie\n\n(0) = 4 loge ~\nNG iy O\nena a : 0 nO ean\n\nRi ia \\ 2s\naig 5\nA \\ eC) Ce ee aa\n\nee\ni ant |\nion :\n\neg Crea ar le a4\n\nOk 2 ae y\nNoe sD) é\nz, il va {7 ic © a i) res\n\n  \n \n \n\nsoe\n\n206 Cl emcee 14 le 4\n\nOa eae a.\naD) a SGD eam\n\nan Nee Rate ‘ o ) Ce) tdi\n\ng (0) * + (exe les “i\nNae £1) - | = 2\nae Re Oi) eo aes\n| a ee\nie <\n\n-\nLae\nMi <¢ <\n\na A Meee , uy ;\nre\n\nAS 2098 (x)= IE >< 149 cts\n\ng) (0) * Peis)-O0 20\nee t))-— | < c e)\nz, Nae {ne x 9 a eC) a) ee dacs\nOh ea eae ae,\nFU)-1< 0\nne -£\n:\n\nBy IVT) find x 9 4 2S x 15 Cts\n\nae |\n\n. on\na TV a i Cro\n2 ay r Ps . ” #ls)-020\nag anata 9690) - 7\nie\n\nie 26 <£\n\n1 aw 4\n\nvie\n\nlye ‘\n, i,\n\noF ~~ ,\n\n \n\naaa, a 4\na4 2090 id po eee\n\nCare)\nwe ae lie zs y f(1.00000000)\n0.54030231 GIRS LeYelelelelele)\n0.54030231 ee\n\n_ f(0.68000000)\ne” 0.77757272 oa ORS LLLeleleTe'\n>=\n\nIME YY, f(0.74000000)\n0.73846856 sO Ase aTe\n\nARTS TT. k f(0.73908510)\n0.73908516 a PP a\nae £) eo aan ne Bt =e A\n_ Fae SE\n\n  \n\nae sen ey: ot Ard\n\naa Ne mooculus.osu.edu OHIO"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/03_the-end-of-limits/03_infinity-how-can-i-work-with-that/02_what-does-lim-f-x-infinity-mean.mp4", "id": 896, "text": " What does lim fia o6\n\nmean? lim f(a) = co means that\na\n\nf (2) is as large as you like\norovided x is close enough to a.\n» « large as you like\n\n_ enough to a.\n\n%\n\n* him f(x) = 00 means that\n\nf(x) is ag rge as you like\nprovided ee: enough to a. .) Wa im\nPad a yo\n\na0) ame H\nWe\n\na0 Seas , J\nlim\nKAO e\n\nmo 40 a J\nees\nand 2, y\n\nMareen Fee\nx20\n\naan hab Salon rae ees\nPad e\n\nWeer ]\ngt\ngee\nmI aaron)\na\n\n7. ed )\nDoe ie\nRaa)\nx20 p\n\nma Ont ea O00 ie J\nny ae : 7\nRaat a.\n\nhs x y\n\n- OWNS KS OsOD J : Fees\naa)\nPol 2) >\n\nmH heb OIOl 'z\n\nVS J\nj a\nale\nMORIN @ArOne1 |\n\nSe eal\n\n   \n \n\ngs\na Cee Glen ay\n\n&\n'% H\neee\nPod 2)\naah tap @aon Lott\n\nlm v.\nx20\n\nChi tap aaron oy ao\nones\n\njin J\n\nated\nx20\n\nChi Re aaron) i\nes\n\n- :0°N SO KE O00),\n1\n\na 1\n| haere\nPe 2) y\n\nBence |\nrs al\nwa i meee\n\n- & ]\nFees\nPad y\n\n-.0NEKEOOR | 7\nain\n« ee\n> Ww lisa\n“20\n\nSte ae\n\nreget 4\n\n4% J\ntoed\n\nMM a ORO I\neae\n\n- ie \"%\nat ot\n\n0° an 4 J\na\neee\nMIND Keb Ono)» |\n\nos a a, J\nFees\nat yi\n\nMeany) Fg. x\n«20\n\neee) = Does\n\nPas\nRY) a\nOye J\nFees\nx30 ,\n\nmea aes\n\nOd 4 '\nae we <O.08) ah\n(Oh |\nbe .\nNF gs\n\nrs ONY ie Oa\nwre are 0.000) ° lim\n\nmeer\nOe, aes |\n~~ ey.\nWY) as\n\nma Rom 10), oa\non. bec ony\n\na | J\nts —\n\nBION) eat On1o)) . | b\nlim\nMOO) )) aa\n© z te ONO} Te\")\nj ae\n\nes\n\nwi [ees\ndee lS)\n\nee op ag\nor mere Fy. x z P\n“x20\n\nOe ee aera e J\nee\npol, y\n\nICH tee en OntOl) Yr } a\neee\naa eb O21\n\nOre aaa aya aes\nale)\n\nCNUU Kep eon OniO) ime\n‘ ia bala) ony :\ni Sans +\nVea.\nMe y\n\nBae | im 7\nad as\n\na Lah\n\nop GO\n\nTN\nwT\n\n     \n \n\n \n\n] \\\nlim\npd y\n\nMaan)\n\nea\nyi & J\nTee\nMe yo\nMINI Rapa OLOy en) lim\n\na aor a\nhi Laer e\n\ncael)\nvA ve “ +]\nes\n\neco eo\nmes\n\naaOHOD hep Sc aOniO) 0) E +\n‘ a\nee\n\nee |\n\nes ;\nPE ge:\n} alo y\n\nj\n\nrc)\n| O<y AO ea\n\n% Ps | i\nee\nMeee) 4\n\nPs\n7 HOW Dy\nwi J\n\nliny\nMOtareaono | |\nOx ons AKeDn\n\n] .\nWc ae HOW N Yo |\nA ]\nFes ms\n\neel,\n\nmano e aC\nbe\n\nO 4 vA. v '\nid aloes\nw i\nbe r.\nae yi :\nf\n\nMINN a CCRC\n\nex van 0, oy\nsaan y ones\n\ndidn\nie ‘ih a\n\n \n \n\nalo) ; lim 4 ee -\nnl R\n\nit ee eaene\n\ni ae\n(\n\n. Ae PaaLOld)\\)\n\nwa\n\n   \n  \n\na aes\n\n    \n \n\nMONI eONIO | 4\nO<% bat cg oN\n\n(\nae Oy\nTe J\nie\nae fh\naa 6h\n>\nSc? Ve [ees\n«20\n\n \n  \n\n2O:0D)\niPtan bree) 00%\nOe\n\neg\n] J\n: a\nlip\nMANN had Odi ;\nex a 0G F\na 5\n\n \n   \n\nZ ——\nPs J\n\nsh\n~ iN\n. J\n/ lin > ih\nMeee)\nWe YS 0.00000 1\n\n(\nAOI,\ni } a\nPes yr. ea\nx20 y ,\n\neae \\ r\n\neee\nTe\nwi ae\nx\na\nn\nx\n\nxr\n\nFe\n>| Fea\nWess ,\n\n~— en\n> ed) ea\n\ni oy ls 0 poe\n\nPte\nye LAE, | > | eae y Pe\n\n~nr~-\n\nen\n\nae\nAf % eer lA ea\n\\ ~ 2x |\nA= | | ee .\nLeer\n\nA> | ti hae poe a a\n\n————\nhe 7s Cee ce | Pfs\n\nPa eae\nre nae\n\noy 2\nJie eis ed aes\nra wo poe\neo ies Peper\nit no |\n\nf\na\n\nhudeae ~ FE ea\nat ae . rn 4\n\nWabecrerte:\nwy oh va Se eae:\n\nhumévntir ~ —.\n\na i\nA\n\nANOYi LS Land oe\n\n2\nee ail em ;\n\nAe Cayo Fn\nay\n\newe bie\n\n~ rea a WNC\n\n=\nvevakr * DS ee\n\nlien wi orrs ee\nee -\n\nPn ane\n\nwe\n\n \n\nys rf +S ee yoo\nWis ee nae ener\naa)\nWY ayn are at eee ie\nwb a -ax«-+ | OF\n\ni Tees\n\n  \n \n\n22 a\\a «1%\nema\n\n=\nee as\nPMhea0s7 a and e\n\n, Be yea we eS of]\n\nmo . Wee eK? = |\nVena et’ = |\na nel aed <\" ,\nYi\n\nait a prea IaNN (TS\n\newe me eo\n\n=\nwow ~~\n\nrca\n\nKo.\n\nsf]\n\nMe\n\na\n\n—\n\n3\n\n<a\n\nut\n\n4\n\na4\n\nf\nbe Dear Fe ar\nmarr ie Kil AAT\n\nWay Be Bs\nRta. 3 Sue | on tS i ae\nWe rs worn\nVC) ai\nPaste\n< en Be, ar\n\nnhs: \\ ~~ aN aaa = d\n\nse\n\nao\n\nNIT ta . =\narte ava ams -\n) ae Sh\nwy\n\nae Ps in 2S\nes A arora) : , en 2\nneeeniener\n\nweanites Raa\nPao y\n\nma ONO) he 4\nors a. Raa\ned 1 y\n\n- > Ov\\ & K 6\ners o_.\n\nn J\n\nTae\nre\n\naa ONO) a\nOre a J\nhier\nlim\n- 0 OK ©\nOx ve | mM\nx30 -\n\naa ONO) he\nors\n\na J\n\nime\nawe\n- dol = K EC\nOre at «h\n\n4 Raa)\nPed 2) y\n\naa te ee)\nOe\ni\n\n \n\n7\n\n\\ mooculus.osu.edu Ore OHIO Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/03_the-end-of-limits/03_infinity-how-can-i-work-with-that/03_what-is-the-limit-f-x-as-x-approaches-infinity.mp4", "id": 897, "text": " What is lim. f(x)? 7 >=\n\nf (big number)\n\n| oe oe (2) = L means that\n\nDlercaas you want to L\n> enough. £\n\njim f(x) = L meang iz 1\n\nr '\nf(z) is as close as y J\ng@ ovided x goarge c\n\ns lim f(a) = L means that\n\ntC\"\n\nf(x) is as close as you want to L\nprovided « is large enough. wided «_is large enot jm f(x) = co means that\n\nis as large as you like\nJed x is large enough.\n\n—— 2 as you like\n\nee enough. 1 ‘(7) = co means that\nyo m\n\nsu; as large as you like\nprovided x is large enough. aa CE SOs:\n\n2. ‘i 7 ?\n5 Sov)\n: a @ F = P\nCoy a a : i\nBN ¥ Kn ac |\n\nee hs aa re\nae as es Kent ee\nee hl 4 hea) Ere\ntet oe en om\n\nte Kea) oe\npee hay es hen Sa\n\npe Ran Kea) =\nx o aA ee\nnos Tae re Ke ci\nee ty es aoa\nrr ora om +\n\nee he . ee\n\n| i\n\n\\yv K+ |\n™»\n\nena —\"\nKean ak i.\nal\n\nee Qa\n\\\\w =a |\n\npar hiay . am\n\nperky ee ax , He\nwe pe\n5s \\\\w0 ane\n\npee ety ne\n\nea neon ny\nbal\n\na eae me -|\n\ncee ae\npe et re vA\nkh\nare -\n\n“\n\nSe ee , ax 4\nA coal =:\n\n<—~\nDelia\n\n2 Ke, oe ie\nea ey veg —\n\ney\n\n  \n    \n\nea\nCLan E\n4 en oe | ;\n«7° “ —— F\nKea) em Vue 5 tery ~\naad Dsante! , eae.\n\nVW XI os F\n\na Nae i Dal\nae, a\n<A\n\nee a ae \\\n\nwaa\nol\n< , ae aa\nAA sm e:\ne hg\n\nee\n\na eae\n\nAAA\n\n    \n\nec ofl mooculus.osu.edu OHIO @r1@ OHIO Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/03_the-end-of-limits/03_infinity-how-can-i-work-with-that/04_why-is-infinity-not-a-number.mp4", "id": 898, "text": " Why is co not a number? 0 |+ ee loo|+ | =\\0°\n\nMM, OS LE i=1ce\n\n _ oot+ {1 =|00\n\nwy. lool|+i =|0e OO + eej00\n\nWc ® OO far ie=|C° oo + il =\\CO 0° + | eo\n\nao — |e\naa\nUz loo + |] =|co\nCO | ae (CO\n\nTT. joo + |] =|oo\nCO de \\S =)\n\nMas wall CO a i = CO\nco Saige = (0 oot L=\nCO co + 1 =\\00\nCo ol \\L a 0\n\naly _— eal JOO + | =|Co [00 |+ |1 =|00 — CC loo |+j1 =|0e\n\ni OO i— |OO\n—— | 0\n\n, — O@iae || =|CO\n=O oolth ae. OO i Lisjoo\n\noe ei oo + | ee\n\n_ ot] =\\cC oo+]\n= (06\n\n|\n\n| , lim ( x-(x)) =\nrN lie (x-(e1)) =\n\nZF x1) = lim ate)\n\n- Lie os & lie (safe) -\n\n\\. lo. ‘se opel. Slike ea (ile) = 2°\n\nas lovag as 3 lke li\n\nas |\nCr\nSse. 0s a\nlik.\n¢ lie (¢ < x) .\n\noS lie\nGé-x) = tes (et\n\nrer fier Gd-x) = lin?) =f lin GE-x) = ae (¢)- ben, a lie\n(¢- x)= i. ()- se\nalg x“\n\nrer lim\n(¢- x)= ae (&?)- se\nny x\n\nror ln Ger) nef * lim Ge- x) F “a @*)- be 2 \\ 2\noe (x -x) = ben Oc) - bes x\nKe\n\n\\ , = ea! Vien Gd-x) = bi Ge) bin\nKo” ce ts oe\n\n| s \\iws\n(é-x) = rr ()- ben\n\nror lin G2-x) = en (x) - be x\n\nrer 2\n—exi_=\n——\n\ny | a t) -.\n4 i\nLe li\n(é-\n-x\n\\= bee («*)-\nben\nx\n\nKo?\n\n: liv\nnd Xl< re ting G2) ste *\n\nliv x(«-1) =\nyore |\n\nAN tn G2) = hn 8)\nKo” mo —_\n\n——\n\n \n\nlima xCx-U) =\nro\n=\" \\ . \\i\nm (¢\nxm - -x) F r.. (*)-\nbe\nx“\n\nKoe\n\n      \n \n     \n \n\nliv Xl 1) :\n\nroo ‘\n“> Vie (¢-x) = bee) ~ be *\na gers t\n\nbs\nLe ; 2.x) = fim (x*)- bn x\ntin, Gen) = ten 8) i\n\n    \n   \n\n \n  \n\n4 liv X(x-V) = OF\n\nAg ' Yim Gc) = hen) bn,\n\nim Xlx- al +\n\nKoo\n\neS, se \\\nm (¢\nx-x) = hen (x) - se\nam x\n\nKoo?\n\nliv Xl ) => on ((x«19)- x)\nKo % Ving (Cet) = x) ((x 17) < x) * hea (xst7)-\n\nim\nKo Lion ((rat9)-%) “bn Cust li im ((x 17) < x) = lim (x07) - linn x\nxo” 3 me |i (Cx 11)- x) “hea C09) bin x | im ((x 17)- x) = lier (eet) - lim 2\nxo” Ree een\n\n= GO Jia (Cx 17) = x) ey C109) bn x\n\nco Lion (Cx (7)- x) “hea C1019) bin x Lion (Cx 17) = x) “hes C109) bin x\n\nee\n= CO CQ ; im ((x+17) - x) = lie (ett) bis 2\nKo % w~ee mon\n\n       \n \n\n— =\nco cS\n\n= &\n\nZz\n\n\\. 2 lim ((x+17)- x) = lim (xt) - bin, x\nK> % 35 xe\n\n\\ )- lin 2\n=H (xs? a\n((x+12)- x) fee\n\n[ews\n\nKo\n\n\\ Jina (x09) )) = hes Cet) x\nx2% Koo me\n\n     \n   \n\n- o> oS\n\ntn (1953 .\n\niv = “ 17) - go live Cue 17)- bes x [ina (C019) - x)= hes Cet)\nx2% Keo we |v ((x012) % x) ilira Cust) Te x\n\n     \n   \n\n- o> oS\n\n| Mats .\na Lion (C019) - x) “ha Get) ee x\n\nSa\n\n( tn (17) > fa Bs\nwe | im ((x 17)- x) = hie (eet) lim x\nKr 3 xe\n\n= CO 6\n\nbye ad q | im ((x 17) - x) = liv (xs07)- bins x\nKx % wee mon\n\n\\ - o> oD\n\\iv (1+)+ 14\n\ni mooculus.osu.edu OHIO @r1@ Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/03_the-end-of-limits/05_bonus-videos/02_why-is-the-limit-of-x-2-as-x-approaches-2-equal-to-4.mp4", "id": 903, "text": " From the definition, why is\nlim (a?) a A\nrc? ai sat shey NN Name\naaeee a od AV.V i ws Wink @0 a\n\nPas or ‘\nYon ee e ai stuf, wr Aras ete :\n\naS :\n-\nAu dlemanch, \\s\n\nais one On \\y dvr 3\nHad Xx be wth aa Ome «\nthat ~ ot a RE.\nYor clemand\n\nai. dl eon hale a’ 3\n\nape ~e Wakao\n\ncae\nAVN Beets\n\naX Ally am yer A co\n\neen oe mo | \\iws So) ctl\n\npete . =\na satisfy, hd\naan xX be a sa\nANN nee\n\nLT ststy yeme se\nae EN WARS? Ea\n\nD2 Bee ace\n\nYon ae a re ]\nee\n\nfil cre ee NI Alse Alls e\neee x be @ Ba\n\nthat x he AVS 4 oe\nae\n\nRIES OEY a | Ue,\nae o\niE\n;\n:\n\n‘\n\n‘\n\nDu\n\npi\n.\non a\nhe ra\nhl\n\nZ\n\n{.\n\nat ARCS ba\n\nDan pee aa\nSee\n\nae ee Sy hala RV\nHad Sache, eee oa\n\nYar clemand eh ek\n\nAu meer eee\n\n~\n\n  \n \n\n; 2\nDAN BO an\nT a SO bales an\n\nVeal 7 glee a iat oe a\n\nee\n\nDau) .\nTt Seay Cc u\n\nP WARS as\n\na a\nal pe - \\n e Pe\nDau a\n\nT shut, suv\n\na om. A ae\n\nYon nee :\n=\nat se SN Nlame tC oe\n\nD2 Pree me oa ee RY age\nAv or\n\n \n    \n \n\n1 SY eme el\n\ni Ann (Cae |\neee\n\nce oe <a\ni meee SO Ata AV \\ ; iS\neee | too\n\npas 3\n\n   \n   \n   \n\n7 ‘\nXx widhi\n\n \n\n) it ae a\nAv ee 1\nDAN nee ae\n\n4.50y yute deen\n} Pay vn Re\n\nTS ies x Far)\n<\\eh 1 ae\n\n   \n   \n  \n\nYoun Boer va CUR ata)\nct Oeaa\nean SYN Ree\nNw A = wi F\n\n9\nse ae 1 ae\n\n \n   \n \n  \n \n  \n\nDAN) me. a WAY\nEse Sire\nE eee Non: y . Poe ara ee\ngg atta site demand by Stipa\na wee pee ‘S\n\nhae\n\nFd Bi-faey =a\n\ne\n\n \n   \n \n\nAe\niter be lS\nLar Kot\n\nhacey hy, |\n\n     \n\no cay\nAE en\n\nPCE a ree\nay, SatsPy yur Ree by\nsee aU MN oh,\n\ni\n\n34 iS Biraey SOV,\n\n  \n \n \n  \n\noe UR aes\n\ny oly cCe\nai wate NN Atas Ry\nBay |\n\n34340 T satsty yume demand io sj\naos a MVE, 2 CE we A er\n\nern by We |\nbias” a4 Sie Ra\n\naaa) see\ns Yon ae r\nto ae,\nL ra SN hia Vs Bh\n. SE Pay\n\n    \n\nSY ye reer ;\nBaa<>x\nawe oe ney \\iw «K ei ;\n\nYc\nYon arr .\n\nEC rove\n\nASRwa rer ore |\nthat} ~ ey Mahi\n' RETA oo\n\n  \n     \n \n \n\nsee thot ~ ey VV | ‘x Too\nat a) Bi eri\n\nSeo) <x sh ae\n\n      \n\napa\n(te) =\", Aen ue Arn and by\neee:\n\nwr \\nwr ~) S =\n\nAN ae a an\nsae\n\nAES DO OmY ae\nmate P< et AVAV EN Mi 39\nsi. ee YIN ame en\nBAe ey a\n\n, 19\nBt) SERA\nx fe. OC Gem ira eee as\n\nae\n\nYon eae e4.O%g (eam at Ae Wie A\nSaree Fae ey We Le\nREE\n4 aro bk\n\nYon clement\n\nBt i\n\n, .\ncb ied ,\n34 AS ey ae 5 NR ECR\nane ee eee ue\nDAV nee eh\n\nWee) a ve\n\nEe eer ao\nSe yur Ae cl\na Pee CHEVY, MN oa Ann *) 4\naN are\n\ncin are\n\n  \n  \n \n\nay RCV IN ene bys\n\na ane) rh ere\n\nP eS a ae\nYon clemand aa\nEto 1)\n\nAGeveusyee\nHak > be wi Peed oh\nF 3 a\n\nDA ape\n\nEee\n\nCn IE OY Coaer |\n\nie an or ssthi\nkh ied Beg\n\nAu Bee ee ie\nSee ek\n\nDAN Acreage\nET\n\naS ROY toe |\nee 5\nNP 2.00 | Ky\n\nAAs\n\n  \n  \n \n \n \n    \n\n \n\n, baegces\n\n% Ps -\n\nDan Beet a. f\nae oe\n\neh SO halae Aye }\nee that ~ ol Washi\nBich Ie\nBorie i SL, sf\nee ~ ey es ce\n\n999 <X< Aog ‘\nBet ea — 3\n\nPk Cert Worol €\n59609 if < xt se\n\ncv\n\nDau aN Mee\na\n\na oe YUN Aer\nate re ol MATH\n\nh Be aoe\n\nBates. 72 = eran nee\n\nThe ~~ ey Ws ie\naS eel\nSTS Capa Brovoye Lea art AMES | CE ard\nSO Na Nersy\naloo < XT 44. COL 001 ‘oa\n\n. ee\nWEE\nEta\na Seay On RY is oe\n\nol\nAu mere ,\n3H\nat ee On RY is\n\n \n  \n  \n \n \n \n\ntr] eed —“\nEa veae SARS he\n\nan) mere\n3H\nae Me Gnmrer or.\n\nae a\n\nDAU ers a\nEi eer ane\nay ee Ala Re by\nae yn teo™\nae ako we\nSSRI Wal rns on\n\n    \n     \n  \n\non San\n\n  \n \n\n~~ ¥\n* Bea\n\n=\nAUT ae t\nay oe Sy\n\nSA a\n\n= a d or eS el os Patent ASS\n\nor a BB\n\n- |\nAVN Ber. |\n\nBia\nWOR Re CMmeT on\nSa ‘i Toosmelm\n\n499 <X\\< Qog\nid eS ony ras AP 3 Me aka as\n\n> eles\n\n  \n  \n\n|\ni ae Reval Woven eae hod ia ee a\n\nxa\n\nAN) nee | WaRCS0 eas!\n\nPaes\n\nYon Aide i\n\n \n \n  \n  \n\n|ooo ; “i\n. . bi 7 &\noe. 199 <X\\< 2.09\n\n\\\nBLOT apy al Wonca eRe a Bag |\n\nYun Boe i \"\n\nae ~ be MAT Ae\n999 << og\n\n349 .<\n‘ Seen <XF 44. COV 004 <4.0\n\n= ei\n\nam oy ee Poe Pati ceo\nRGN emer cor | en\nSate ae ey WAVES ie ]\n\nlh mich ian K 2.09 \\\n\nBaa Sean ee ” Wir CSD) a\n\n \n\naes\nDau Ae 6\nee\n\nBw emer cre!\naan fa he mes aS O°\n\nNIX <2.00 | “=\n\nen ae aS anl oN an pie BOS EON on (os\n\nCV eek ic\nate Riek\n\n=\n\n— _\n—— x_\na —\n\nen cas at a nn YW Uvie a aa\nnas “4 oaner so A\nMR\n\na by x\n\n(OSA Note Ta :\n7 aa\nAes er or\naa a ol Marin\n\nee enol hie\n39 ST Coal ete : a peers —\n4 aa p< ot AV we\nEra neNry\n\neo eS Soy Poe are OT Oe cs\n\nau ere 7.\n3H\n\n   \n   \n   \n\nSS\noats o sr a hin cE ae\nTH] <X\\< 2.09\n\nor eS any Pa DLE ht oKlca uh WARS ea\n\nAu Jevaa i Bg\n\n_ deel\n\nDAV ae k\n\ntec\n\n- on On hate Ak . ae\nA ee ie\n\nIG eX Pat= Hore)\n\nry ae Srl <4 “a\n\n%\n\not ® )\n\n    \n\nle Bie mr am |i\nSaree ane) VVn Ti\n\non rant ee a\nf Tako ca Val Worse\n\nss\n\nNN ow —-~ 4 DT satisfy yun\nthat Pan VT: ao\n999 eX\n\nsg ae ey courrier)\n\n—— i VEO.\n\n“ls aoa we oF\n\nomen” |\ncry take Seen}\n\niT ies Vali) aK: oa En SY: en US\nHab x be wih. ost\n\n1999 <X\\< Qog\na Sort <x} 44, oorr001 $4 LT atuty wane dk\n\nast te\nSa ee ec ee ay\nSM ie ioe\n\nEL ero) Sa he ee OL,\nPRS akon Anat Meme | co is Swe\na a ERY CO Wages\n\n  \n     \n       \n\nwe ie Orme eer Son i Se\na RE LS re\nPe SVE) NOR eer)\n\n999 <X\\< Qog\nco aan <r ZY, Ogtoar 4.0) aes\n\nYon clonal Viet Ce\n\npesea?\n\nAv Bee i\n\nan ee et | ae t\n\n099 <X1e Q.09) ~\nen {£2.09\nae Sarl pe vt\nTc ada Wo\nYO\nan ae Sarl pre Soy\nne ee Atal AN.\n\nBa ee. ag\n\n \n  \n\ntea resKe ny ic\nBa Sol me Dr \\nn Cao\n\nWA oneal ia\nane i 1999 <X|< Qog a\nMalco CO awa Moros Ten wi Ce .\nAVN oe\n\nnes Bl Oey con i\nX< be w'\n\n= hI oe\nski ac) z = Du\noe\n\n   \n\n‘nw! Top\nEe (C a Nore)\n\n\\ ae L\nae a) y.\n\nA\n\nRUC 6\n\netetay e\n\nwy Ue al\n\nMie gee thy OL\n\nBri) <2\nBSCS\n\nEte Sear aol\n\n    \n    \n  \n    \n  \n   \n \n\n2 p\npea sity\n\nIK A.09 (a\nVAN WeSC and Ps\n\n \n\n3 mooculus.osu.edu Ore OHIO @r1@ Ta\n——« Ghie"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/04_the-beginning-of-derivatives/02_what-are-derivatives/01_what-is-the-definition-of-derivative.mp4", "id": 905, "text": " If the derivative of f exists at x,\n\nwe say that\nthe function is differentiable at x. the derivative of f at x is lin\nx h-' the derivative of f at a is jim,\n\nthe derivative of f at a is jum .\n\n1—>() tw\n\n \n\nthe derivative of f at « is jim,\n\nthe derivative of f at 2 is lim\n‘ h-0 ad see\n\nthe derivative of f at 2 is lim\n/ wa\n\nthe derivative of f at @ ig jim ped\n\n~\n\n \n\n= ors ey\n\nthe derivative of f at x is jim,\n\nthe derivative of f at\n\nFo) f(z) Pr) Le : f(w)\nthe derivative of f at x is lim,“ the derivative of f at x is, lim, *\n\nthe derivative of f at 2 is lim\nho\n\nSige f(a)\n\nthe derivative of f at a@ is jim, . f(w) —f\nthe derivative of f at x is lim,\n\nf(a +h) — f@y\n\nthe derivative of f at a is lir no\n\nf(x) — f(a)\n\nthe derivative of f at ais lim\nta a, If the derivative of f exists at x\nwhenever x is between a and b,\nthen we say that\nf is differentiable on (a, b).\n\n \n\né&. how much wiggling 2 would affect f(z) The derivative of f at the point x\nis written as f/(x),\n\nl\n“ F(z),\n\nor\nda’\n\nor Def (2),\n\nLON crs f(ath)—f(a« 4,\n\n—~ mooculus.osu.edu OHIO Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/04_the-beginning-of-derivatives/03_why-would-i-care-to-find-the-derivative/01_why-is-sqrt-9999-so-close-to-99-995.mp4", "id": 909, "text": " Why is V9999 so close to\n99.995? +* a. yl\n\ndz. 2x ya!/2\n“ie J \\ i 4/9999 = 99.99499987400 JID (4993 9999 = 99.995 me V9999 = 99.995\n\n \n\n10000 = 100 /10000 — 1 = 9999 = 99.995 it LOO00 10000 — 1 = 100 — 1 - (derivative at 10000 9999 = 99.995\n\n   \n        \n\n/10000 — 1 = 100 — 1 - (derivative at it 10000) 9999 = 99.995\n\n/ 10000 = 100\n\n=\n\n| ~ 100 1 - (derivat V 9999 = 99.995\n\n10000 = 100\n\n \n\n/10000 — 1 = 100 — 1 - (derivative at 10000 J 10000 — 1 & 100) V 9999 = 99.995 ~~: 10000) 9999 = 99.995\nVv 10000 = 10\n\\ 10000)\n. =\n\npe 1 1\n= 2,/10000 ~ Deno ive at 10000) Vv 9999 = 99.995\n\nVv 10000 = 100\n\nV 10000 — 1 & 1 = 1 - (derivative at 10000) calculus is\nmore than calculating VG)\n4 — V81 +1 9-+1- (derivative at 81) eet\n\n \n\n \n\nHs = (.05555555 iiliin 7 mooculus.osu.edu @r1@ OHIO Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/04_the-beginning-of-derivatives/03_why-would-i-care-to-find-the-derivative/02_what-information-is-recorded-in-the-sign-of-the-derivative.mp4", "id": 910, "text": " What information is recorded\nin the sign of the derivative? yA f(a@t+h) xs f(x) +h: f(x)\n\nra is = yl bisser the x\nho wh 6 > yl bisser the x\n\nh70 f(a +h) = f(z) +h- f'(z)\n\nxh 6 2 yl bisser thes x\n\nho xh 6 2 yl bisser the x\n\nh70 Fiat hye f(x) +h- f'(z)\n\nats = Lit bisser the x\nh7o2 xh 6 > yt bisser the x\nh70\n\nif wn: £(x) > f(a+h) & f(x) +h- f(z) f(x) > 0\n\nmh 6 hit bisser the x\nho\nn- £(x) >O\n\ni, Puye hah i) >) F@+h) = f(x) +h: f'(z)\n\ntet Liyser the x Yih bt\nce Lisser the & F(@+h)& f(x) +h- f(x) f(x) <0\n\nKah bt biyer the x xth bt bi\ni Gisser the x flath) = f(x) +h- f’(2) f(z) <0\nXth bt biyser the x xth bt bisser the x\n\\ >2O\n\nwis fla+h) = f(z) +h- f'(x) Teo Foe OP Eames > 0 : a = 0\neatin 1 ppiness happiness > 0\ndcoftee PI\n\nie” dcoffee\n\n| .\n\n  \n\n—happiness > 0 i = ess > 0\n1a\ndcoffee Ppa\n\nif fi\n\n-—happin\n¢ coffee a a Ypplness 4 !)\nia\nFic oftee Pl \\, d\ndcoftee\n\n—happit f happiness = 0\n\n  \n\ndcoffee\n\n&. a Fog t@ppiness =)\n\nia ™ happiness = 0\n\ndcoffee mooculus.osu.edu OHIO @r1@ Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/04_the-beginning-of-derivatives/05_how-do-i-find-the-derivative/03_what-is-the-derivative-of-x-3-x-2.mp4", "id": 915, "text": " What is the derivative of\nge? + 22? How) |\n\nOy rm a)\n\ny= pCO Oe ax Gomes\n\n‘ te: a TO | Can\nSY KW) E (Eero) °\n\nx\" - A a ACCmae\noy sae oO Cornel\n\nhee 5-9(r)\na\n\n. rae Con\nva ee 0)\n\nX\n\na SAUOn Son\naoe a ral) a...\nasia\n\nae\nPe =\n\n \n\nAOE\nra\\> Sa)\n\n€ et\n} = ll\n\n= oie A ies a i\n\nie EAGOGe\n\ner. ae ra\n\nVeal’\n\nNadi mo\n\n{ Fa(4c ey :\nel ee\n\nlaw ~~ “See\n\n \n\nBAGO\nNel sare\nno\n\nyl. ;\n\ne)\n\n\"\n\nY\ne, € (GOE e) -\nray “4\nnee\n\na\n\no J oes\n\nvs hs f\n\nara\nyer\n\neS i amen\nOry 0 aa 7.\na 0 mS Geen\n2 So reas) a suman\n\net ie oD BRAGS oe\na a a 0) 2 (C+\nrs Sr - ,\n}\n\nConey\n\n2\n\n—_— | Ola\n\na Rac)\nPa aPAGOnOs\n\n] gi “i eo\ni\n\\S al\n\nSa Goes\naoe a 0)\n\nmy ¢ avi 4 A\ney 2 (6@+9(>) :\nca” 9) eAouas\noe\n\n_\n\n; BOE\nFon se \\)\nY\n\n— | £(CKx)+9(¥)\n\nae\n0.4 ss\nNee) Elx)e xx\n\n2(%+X) E(x): x4\n\n2 ler¥) xm € (x): x oe Tr\n\n2(i+X) xX * dx © z\n\n—- 3 x\n* ax * + x ¥ \\ 3xin digi (3**2) By\". ax > (3x42) Bartiaix x SUeeeee Byte Ax > x (3x2) % (3x42)\n\nos yt ix BRERH2? 3y's ax =x -(3x42) mooculus.osu.edu Ore OHIO Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/04_the-beginning-of-derivatives/05_how-do-i-find-the-derivative/04_why-is-the-derivative-of-a-sum-the-sum-of-derivatives.mp4", "id": 916, "text": " Why is the derivative of a\nsum the sum of the\nderivatives? oe\n\nC(x). aad glx IROOM Cm gay v\nif\n4\n\n)\n\noom. Fe acd glx SCOP C eae He, alx) aT fr Pe Aj 9G) Ly: oe - 16 CD We: a(*) RY ee,\n\n| vata A C Seer om arc\n\nWarco, . ate oe al) ao, autres Pens,\n\neye (aod) 4 py ep) Ps glx » aN a Gt\n\nSN Scere) PO eee eon oe ey hee\n\naCoe re Cern ©)\n3 Pe = we Lut, dio SS\n\na ap PEG Oo) ah he\n\nve on of) acer eax glx) La, di SVS ab g\n\nVeo aacon Bey ae.\nA(x) ace glx\n\nann e)\nCes ce xf Iam com ct\n\n\\alx) a oy fx) | aor om tet.\n\n\\alx<) 4 te ox) [aCO mem COME NaC tS nr Cnr\n\nee) ae or af x) eae\n\n&\n\nee) eg\n\naa nL pe (CD) bP, a(x) eae Alp ce EG\nOna pee aa Pon ic\n\nre) as on ox) a Cer race, PAGO” oN EO crt\nWeyrnecon 6) [ss NCO nEaE SAPO RECOM Cites\n\nWarne OMG C as.) Fr > Cr CD) SUE E Sem Go =\neee eee a CL\nee) P ot ' af) | Ay (a) ay PS\n\nFae ets a(x) eu dees Fi a —\nWUEEECOIES) fli Ar & Fae: PYG DON EO ee a\nOna. ae h(a) fa) re : pe oe: ee) eae A ri\nra (x)+ a Cern ¢ afr) ine NO ior) | Sb acd a(x) me Ae ee ere |\n\nla OOMOE ENC Ea)\n\ntok ae 50 EVM eer\nValeo) 5 a ir af) men CNT £a) AED) Hy nt\na\nP,\nes\nra E\n: x)\nWn fu\ni ‘a\nA\n°\nis\n-\ni\n¥\nGl\n4)\n\nvale\ny Ce). gee Oe: Ogee\n\naOR Clan [xe ook! he Pe aR\nween eens Oreaec)\nGO: <\n\nek = a —\nia OO Co) Oe nec\n\n| f Ce on af) arn h(a)» CONIC)\nAg! Ht ay) are) a tic? cae =\nalec ie acer co nl ee Cer Taree a)\n\nwy ar\n, en ba, hi SOS a (ye\nA(x) acd 9 wee rap F\neure |\n\nAan\n\nNa J ia) amar, oats glx) eo POG,\na NE or af) ae Cer vay) +9(a) Wy\n\ney “hon IROOM CC hes Co.\nre Cay af) iain h'(a)+ fa) AED) 2 | on L(x) Pa! a(x) one Afr Peo,\nOE er af) alien '(a)+ fa) +9(a) yy\n\nae \\ ne rap PEG OO We Or Ue\nOE |e h(a) Cla) ga 4 oe Peo eGo\n\\y oF paves | oS ner cao RCC) a pe) (x) uy. sr Peers,\n‘ 2 ra ar: Wen Ke f(a) ve\nRn\n\nmn Aeee Pes a\neee = te ees\noe h) Ws) a CD Bay 3Cn Hae Ae Ger,\nNC maces ECOL PaCOEL IC)\n_ Echt 4 fa en —— a(x) ras Aye Re\nMOMS sO)\n\nem Pi » henge S.A\n\nTae on\n\n   \n   \n      \n\n    \n\nerOrecow.) CUE ACOIC IC)\n: y ey \\ CORNED)\nHg A ema,\n\n \n   \n\n=) | ef a aon ed Reg At Pema,\nWACO OMCNO\n\npe CORNED\nCD ENed ee —————————\n\nge aan Rea au, cs ave\nbe) ma ine bee ONE\n\n' (\nam ee le (OMe: Real ON Oe s ,\nno wee Remon.) ce\nPa La eae Oe eo\nale we ares a f(a) ce\noan » COME Ae SoC\nMeee eer Coin. Cer £{q) +g (a) *\n\nBe NC ng aD ee\n\n \n   \n\ni ai a pe a(x) om aX AG Pe\n\nRON PENO\n\nHOW) |. (cede\nree\n\nSoar\n\n \n\n  \n\nalee\nPeay ae) as Pe Oar re\nwee (a u Cee\ney\n\n#) SBD BS (xD as ws a(x) PY eet\nor Af or atx) tee a) ‘a rai Pe) roy .\n_ wit aN “RO) Wee) hag ea\n\nVasa}\n\n[om Ke\nY\nce\ni ) SG i\nme\n, su¥\\\n‘ah AST\nas re\nlag\n19\n\nfaa\net\noP\n‘lian\n\nne\neof\na (£69\nei é qe race, PP a(x) Reger\nMVOC COMC NO\nORG lous\n«KA me: '\n\nie hy a) “Ihe Be iD ee se ce OY tO tol Cl -,\nWerner Onc) wer yt\noe ae\n\nx)\n\nvat Xe ree ns\n\ni) How hla\nmS Ex\nl(a) oa\n\nA\ng(a 7\n\nVand\nVY\nhla) * ho conn) %\n(£0)\ny A. \"\n\n\\ ym . ie Perea were sc to\na oe es (Or gs Tle bh ler rae) re 4\nNY eo Crore\n\nNe\n\n     \n\nak \"> Pes a(x) EOS Mae\naCe Ae ie ae\". or\n\nXa\n\nm pole pa ce ONY Wa Fe,\nOr ae Lomi)\n: 2 EOE load Orr re\na\na4 a oa\n\nPp\nba . LaE>) me Be eae Cry,\nWee Onin. h(a): (fa) 19a)\n\n\" wane HB) le) e cars ~(Fla)pale)) ay CD) eae a(x) uy.” ls aes\nRane son REM NCOIEACLC)\nra me esornO ee\n\nrat fn\n\ni om Si ieee\ni\ni (CD, Car)\ner\n\nZee\n\n. om rn\ndl os\na\n9\nme lh’ “ ce\n‘Ay L(x) ie: eam eee, 7\nne) See ace a ra PONT LC)\nwe nh) oro ie mee Y ; yo we) rae eet\naay mae | | PME CD ACD)\naay a cane pee\n\n  \n   \n\nx > oa) t ae ae. cu. y Fas ore,\nar Ber Ooi. eo) roe\nhe oe ue 2 sk ae (ae) -Fa pala)\n\n| aT\n\n     \n\nYa) a PEO eee\nse mare re COE ya POETC)\na pe\n\nae X- »\nfi pare o eat! a(x) as A, sc Pes A)\ntoe ae lan COL SaCOEIC)\n\nWie Ne mee a a y aa Re ae AGG,\nbo) HG: Le) [en h(a)» (lay aa\nfe eRe -(Flapale))\n\nna\n\n1 IG TS\n2 vce | oS For\n© lok Beer Conic. COE va PeET AC)\noe ‘Or ae er\n\n \n \n\ney Xa ns ) acd ae Nee toe\neo Ls fe), 7 ean h'(a)s ae\n\nEte PES BO kos\n; acon Maes BOM CAC) Cla) 5a\n“hG) We) ie (ear) -Fla)a'))\n\nOR ae ’ es eee: a(x) ae aie hrc\nRareeorocno\nPOEL OL OM cole oo)\n\nro eS - ue sep: aed a(x) ae AST 2a |\nME OREOCOUIO 1\n\na 2 Esky 1 (£Q)oft) -Fa)ale))\n\nre\n\nte\ni ae Xr a ane CD Si) Oe Rete rc,\n\nRoy eo romeo\nane BORA) r “ye\n\n“Se ulin é\n\nmw 5 Ct os. > ta er ae\nvat (Oe OOF | eS eer rae AC\nae ee ee eer ay\n1!\n\n-0 a(x) aol Ae Aer e , (a) :\nEE: art ag wen aye\nv nea Shee ae “hau ES} Rann) ee\na in a ANS Se\n\nIta\noil\n\nQ)- a Fy ee > Peo et tC\nPACE OM NAO\n2 ona Peon ion\n\n}\nPe. a Use\na, an oe P\n\nLa xe . 4 L(x) Py a(x) an ince =\ny COE acer Ont Aron eee eae F\n\nanmetnre b)- aa\nBay a a Ore ‘\n\nza ona Orr : |\n\nae\n\nay a ee 2 hw sea “\nff t Oe ee\na\n\nater)\n\na ; eS Pe, Jee\nne on PCN aC OEL).\ni a wh eo We)\npS Vale) «OD RG) hla) r (ace) Oe\n\nSeon\nmacy reaan lade .\n\n, tn\nbia}\n\n|:\n~~ Ee.\ne zaY a(x) OY Me ee e\n\nbe PONE ACOLL IC\nae (or acon pons ‘i aa\n\nSag \" ew ng\na ra a ae re\nHey) —————\nbaat 5 2 BO (oD) ety! a(x) a PP er,\n\nSco ORCC Rt i:\nXe) Ay Pear oe\nOP\n\nCaen ‘ a eu ae a Aaa aes\nie \\PNECD ESCO)\n\nne | E were ae Be: \" RV pce\nq Seren eS CNL ray,\n\nlx) +7\nf Oye\neS Revie: ae Be a(x) ne ae Be amare)\n\nMEIC OMcmaO\n\n(| ‘\n\nRe we\nhyo\nWw x\n\n \n\nay\n\n \n\n  \n \n\n \n\na,\n\nPE Meck\nay x) re ae Xa\n\nj wn aa NO a ; Bade) X@)\nce 7 oe ? Py alx 3 a ak oe at\nae ene rae\n\n, EOE dds)\noa CI ee\n— | m we Pe ome er fe oh.\nWee) han CEES CD) wel\nas me eae he) An) a Gare ie soe\n\nRene WO pas a(x) rae FA\\, Ines Per cA)\nle fa) Ce\neee -(Fla}ala)) Bene ie Res: ete Ale Ot ree,\nMe RAO Soin NCIRACED IO)\nAN\n\n\\y Cer\naCOreA ecace\nNom LOE ee: 2 aa ee\nton aan aaa\n|\nA See can a ee”\n\nYe a Cen afd) an ha): lay saa\n» ie oak x) av (Sf) -Flaa@)\n\nnn {\nmae an 4 (on 4a ae mA) r\naa aeD)\n\nry |\nXK\n\neel! a(x) enue\n\nan x), | oe\na) bi ane\n\n\"\n\nWiles\na ia Or py\nro\n\nPe Ae\n\nry (ey naieo) Ce\n(Keds) -Flapal))\nYS\n\n= pic) pans 0, £8) oa le VE\n\n       \n   \n     \n    \n\naCe: Be, es Ae A (3)\n\neC ORONO ni\nae ED. bigs ay)\n\nTH -20) « 46. oo Ns Gare zon a)\na Cel C(x) meet. a(x) oa Ale 6 Seer Ga,\n\nOe Oneao\nee\n\nhon\nee To) = le) Aas aS at cI\nyr Want f \\lan CNT rae Ae)\neee = oy\" dr at cAI\nWeneanoni\n\nBORN t Acer) oe\n| an eee\n\nxX- a\n\nWon 4 dkK)- fa |\nd re) ae #8 See on tern\n\na ORCC NC Es)\n\npia ED a (£-fc) -Fapala))\nwe...\n\nar\n\nin ewe aes\n\nXo aaa &)- fx)\ndion 4 j oo : tion pon me =\n|\n\n1 * —\nWay\n\nG n\nce\n\nC(x ae: ee) ain Rl.\n\n     \n \n\nx a\n\n~ Rp cane (Or jon ; (Q) #G) Py |\n\n| (5 cee fad flan aaa rT\n| hage . Ir Bd cAc® a Garr oe ‘i\n\nrm rand\n\nae zee ») a ah Gass Pe\nOn G) AAO)\n2 ae ual (£GQ0f) -Fla}9Q))\n\n—_) val 5a CO ee?) ie eee\n\n \n\noF Ne Ne fOr\nling — . ; ae ex! a(x) ae Apee re,\n7 cor aCe al eo COE f(a) AC\nPMS eae | od a(x) a Aes ey |\n\nAe EING) 1\nery (ABD (eta\na X- am ee.\n\n  \n \n\n      \n\n\\ PAG,\n\n7 aT EN oF Lila) gla)\n\nie: hb cm pe Ro -(Fla)pale)\nin EW . Sees vi = \"Se 50 ~ A ae ae a(x) Pag AC oC,\n(eye afd) fear (a): 4a) 1g)\nbe) Wa) a MeO COS\n\n: lx) *°\nED leew ~S\naay\n— . x\n\n: |\nEa OE SCO\n\ncae He glx) eee AGG re\nieecrea oe - —E,.)—\"\n\n1a COC ete cer\n\n, ales) 2a Cor Cian h(a): (a) +94)\n\n  \n  \n \n    \n \n\nNORAD) . Goo oe)\n<A rn WS Oa)\n\neae —\nie r ae =\n3\n\"4 Be nei Ge) mat alx) a Pil. ic Peee,)\neen aN a f(a) +g la)\naa Cee) av) -(Fa pala, * (=) pe! eee ») a ae Iga ay A\nAG) re Cay ue Nee A) (er £ (a) PC) ne\nCg mee\n\n \n\nLp) ia a an ane a Co gl*) ean cine oe Pear, F \\\n\nEEC. Denies h'(a)+ Fla) 19am\nmR Le\nae moe\n\n  \n \n\n\\ aa alx) =e eS alma |\n(oe co ey a h(a): La) +5(a) Wy\n1S NE) ng -(Fla}al@))\n\n: SS\n\nCom Ne << -\nyea)\n\nae re P &)-\nns eo) 2 =a)\n\n \n \n  \n\n \n\n4 iy\nAEA YET PAY Mr eer ,\nPer OMOC MAG aa hr.)\n‘, i) ORD (car) ~Fa}ale)\nOA ve aa a i\n\narea Oe pe LR) — eae eet t ol,\nee Com een CoE TaD AC)\n\nao\nOe aed\n\n5ar>) ei ron Aves,\nean) Com ews Ae rare)\n\n. WA gia by a ae -Fle\npar? (ae 4a Yo\n\n4 - CO Pte G Oo) pO ere CS\n- re Core Chis Ker aCORL IC) Ee\nAK) We) le Garr Gace)\n\n: —_ ee\n\n\\y ole\n\nlame NCO aoe\n\nyee |\n\nxe\n|\nGo) is ce ra) =\n\nCORA , ‘\na ELA E p> awa a(x) ones Aw ae\na OMEN) nal)\nPee\n\ntan é\nie ier\n5 Gi ,” P py oar Aer\nwoe ENE COEEACOED IC)\nBaa eee\n\nee a\n\ner. Cae ees cio\n\nOS Abe ge), flan (a): Clad ia\n\nNEN ae Zs\nND wee\nton nae ano a\ni. aa\nee Y BD aa Rey, Lo. le\" ee\n| ) \"ul Lar hi CORO\ni Mice Ean) a(x) uy. PPO\nOrr Cohan h(a) caCORL IC) ie\nak fa) kag CO GOn ms\nSa\n\narcs\nny hee =\nCG ann > rae alae ez\n\nDaner-cr. RAAT\n| BOE a” oa i)\n\n| SO a ar oan\n\"i ae saan 4 (on Kn\n| ru . a ora is pons x ea)\n\nyy\nee\nnek! pS a es a(x) eee a 1G. Pe aaa,\nACCOM\nE pe - why i noe i Boks le if ies i x Or Pie:\n\n5\n\nLs qe . eee) ae ees.\n4 anos Doone Nan COL Lilay AC)\n\nPs. a ny hon i) B sks. | _ |\n\naan ae a 4 &)- fn) 4\nes ; -) INCOM E Cee e  ,\nWeppna cei 6>) len CEE ACONC))\n\nbi\nVon a rane (\n\na moe “\n\naero Pe co\na\nhe ak\n! eee\ne\na ye)\n\n16)\".\nCWE aCOEC\nane\n\nCom\n\naa COy\n\n \n\nSans\n\nale. is\n\nG))\nidee)\nome 4\nfone $\nesta a ( nee |\nia) = y\nf . hors “ eye bog ben\n' K Le\ni Cob = ee\n|\n\n/\nrae ANE) ‘i\na Peele F +\nWer lat CNT La) +9(a)\n; vy par EORNCD) r (£Q) ofr) Ne CHONG)\nVir\" ere\n\nMC pont N\n\nWee\n) aed Aiew) may, ¢\n\n   \n   \n     \n\n \n\nxX- a 7\nboa\n4 HK)- ofa) AK) -%) Or 4)\n\\\\ . Roe Ft) a) fi eg z\nfe yy, 14 |\nNae 1¥%4)194)\nSt ae , one a ie eu a F\nAlen h'(a): La) tga)\nnla rf i £G) ar) Fl (a)-9(@))\nk)- f«) ate hy\nSeana ceo (Ok me\n\n  \n\n \n   \n   \n    \n\nee. hat re ae\n\nSire\n\n   \n\n; eam Wan CNL fila) +gla)\n¢ con) RoE nGoe\n\n=a\nze 6)- a aoe)\n\neae ro AEN: A i. |\n\n \n  \n \n\n \n \n\n5 ee Oe ®, a alx) TaN Pl Ore,\n\nSe wom. CNL We\n\nPOE\n| ia 1 ae Tie aie ew zs ACD nN she 0 coe Ga)\n\n(1 af) fen h(a): Fla) sa\n\nhO) Wa) ae (La) -af0) - Fao)\nVee «a 5\n\n  \n \n   \n\nee h>=-- =\na e®) ty)! alx) ene Aa ame)\nee nk ee . Fla) +54)\npeices) do) L(x)\n\n} fe\n\n   \n\n      \n\nAp Are, aa\nSR Os ROIOIC,\nWs) a\n\nbe) a) | - ae a\nWAY. Bae \"=u aa Ces 5 on dre a\naC COREA dco\nee Ne Gaen > E Sy. > a(x) TART ee\n\n| ¢ vale rae) a ey eam en eer TaeME IC)\n\n| ae ni Lana = beg feeckGen))\nus ic\n\n \n\nA\n\n \n\n* | wy\na mooculus.osu.edu OHIO er1@ OHIO"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/05_techniques-of-differentiation/02_how-do-i-differentiate-a-product/01_what-is-the-derivative-of-f-x-g-x.mp4", "id": 918, "text": " What is the derivative of\nParga GE): 9(@)) = F'(@)-9(2) + f(a) -9\"(@) 1\n= (f(a) - g(x) = f'(x)-g(x) + f(a) -g'(a)\n\ndx = f\"(\nor)\n“g(a\nF(x)\nGK\n(a\nx) Ju (Cre) -(14x' )) * Ac aw) -(14x VF\n\n)\n, PLC) (12) (Curr -(14x°)): H (Cured -(1xe V5 = dx)-(14x°)) = H (Cured (18 WF\n\nsoe 2h) -( lu )* F (Cure) -(14¢ 3\n(i Wr) -Cax )+\n\nj-\n\n-- (Curse YF\n\ni ux )* (4g) aU ls 2x) (ix YF\n(2.02) -( ly ) + (142r) . 7 (Cu aw-(14x¢ VF\n\nLuan tay ) + (142) x\n\n   \n\n1\nt FH (Curnh-(14x VY\n(Swan) Cae) (42d gel) = (Cure) -(1x¢e VF\ndy\nek (142e) : Z(ux )\n\nin\n- A (Cur -(x\n(2.C\\2»)),( lay’ ) + (142e)- Z(x') Fe (Cu2x) -(1+x' )) 5\nx\\)-( tay) * (142m) z(urx') — Se 2\\\\ - ;\na : ae + (\\42e)- (tx\n\\a2x))- x Cu a” (ae ED F(a (14°)\n(Slvr), ty) * (142): HOU) U Wax) (14x DF\n(£.(r2nl)-( ly ) + (142) : Z(tx')\n\n(21+ (2A) ; Je lCurwh-(14xe\n\n3 SC vr): (tay ) + (42a) beCl**\")\n\n  \n  \n \n\n(21+ (2) (4 )\n\na H(Cur-(ax)):\n(2.02) Ca¥ )+ (iste) Cx’)\n(dis d(an) Civ!) & » 5 (Cu2x)-(14x° J\na nl)-(sx )* (42e)- SC ttx')\nBi (20) -(tse') +(e) (B18 x)\n\nBNE x) (+e) +142) (0+ ax) I#x\")\na aaa\n\n) +(te2x)- (dig x)\n2 N ee oa H(Curd (axed):\n(EC »)-( tae) (is2e)- ZZ (1x\")\n\n(ble ban) Cie’) Lee) CHE 2)\n(0 ead) Cue) #2) (0 + ae)\n\nmF Q-V)-( tty\") + le2e).Q2%) &(L22).(142)) ° ae Kx): Qe x’) 5 ((W2s)-( Ww)) &(Cde).(49e)) «= ( S(( 022). 2 $e(C092). (00) * al S(Cras)(1e) ZL S(Cias) (tee) (tea? Se((¥22)-(4xe) * (1+ aed Se(Cv22).(10x°)) * (16 ax? + x\" a(( Wx)-(14e)) * me +d * Xe rll Wx)-(19¢)) . 4 tay? x S(L¥32)-(98) * E(1e ax? + x* + x)\n\na S(L0as).())* E (1 aw? + x\" + dx) == (\\edy+x' + dx) S.(Luds).(19) * (he ax? ? x\" Ax)\n\net\n\n      \n \n\n     \n \n\n2\ndy\na\nd ee 5 (\\eax? + x 2)\na 2a &(L Wx)-(14¢)) * al tay +x + dx)\n. . \\: Zax’): <4 - (Cuds)-(iax)) = 2 (14 ax? + x\" + x)\na :\n= Wy lt F(x ): She )1 Zax) d 3 2\n\njy[1+ ax?+ x\"+ ax)\na _ > ,\n\ntbe 20a) Be) FOy)\n\n~~\n\n\\,\n\nY =(( Was)-(4x°)) * al + ay” + x + Ax )\nthe 20a) He) Hy) Jd 3 z\n\njy(1+ dx? + x\" + x)\na 3\n\n: one #( 2» ag EX \\rg lax) i (t+ ax’? x\" Ix)\n\na 2 cf\n5 *). 4 x )* Cox) Fall Wx)-(14e)) * a + ay” ? x\" , Qx )\n. 5s F(a )s ahd )+ 02x)\n: oO + Gee de\" x\" 2)\n(2°): the \\eg 02x)\n\n=(( Wx)-(le)) *\n\na d 2\n2 (teax? + x*+ dx)\n\na d 3 ? d\nlt Ede) Hl) RO) see?)\nfla’) x el’ )13 Plax)\nD4 aa 4 jo\n\n=(( \\Wax)-( tx’):\n\n  \n  \n \n\n \n\nee\nss\n+ 5(( Wdx)-(l4x)) * eit td +x + dx)\n3 bal fax’) ele )19 02x)\n>0+2-¢&’): bi See oo\nalae i Z igs yg ee\n\nF((wrs)-(19°)) &((v22)-(142))* =A tay? x + dx)\n: is F(x’): Lhe )1 Plax)\n> O+ 2-z’). adxt a ax\n\ni. pact ae\n20a») the )) XCar)\n6 d-lv’)+ Ixt LEX\nBy tax aa-] Z((uas).(e))* Z(1e ax? + x\" + Ae)\n$l 2Qxr): £le Fe)\n>0+2- Ele): dee ade\n>O1]-3x% +tAx +a] FU hasdu xl} = 2\n\n  \n \n\n) *(120V2)/ WW= ax)\n+ (( Wox){ tt x \\\\ = |\ndy . . et Wx) { x We ax) = a = a\n(( hax) x \\\\\ndy\n\n: (\\ +e) + (42x\\Q2x\na =\n\n$a Wox){ t+ x ss\n\n+Qx) a EUR 1 x ‘W\\= a\n\naCtre )+Cis2x Vox) rm\n\n_ | 3 (i Wx){u x I\\= i\n\nAC +0 Wee) /\n» | bx's axed | & \" +Qx)\n(Ch x) lt x \\ -\ndy\n\nAlix ) *Ct2eVe) /\n\nf : by i. { Fi tax) {44 x} = ; ax) i=\ntdx) {tex\nFL bax)\n\n(Aliee )+ )*C12xW2e) 9 Ub ax)(u I} = j 2x)\n\nACI )+Cu2Vie)/ a box) x \\\\ =\ndx\n\n- =\nCee )*Cu2 Vv ral x) ts xf} = i 2x) Fat Wx) {4 ‘I - f si\n\nAc aw )+C 2x2. )/\n\nZe FL bax) xl = “2 dy\n\nAlix ) tC 2eW2e) /\n\nru\nAtay’: [- axs4y = ((hdx){ 4 x ll=\ndy\n\n[A(t ) *( 0 eWe) /\n\nAt Ax” + [Axa Uy?\n| dxt ob [\n\nax) grill Wx) {ts x'I} = 12x)\n\n)\nfair) (2xYrx) )/ st af) — +au\nC( Ox){ 4 x \\\\ =\ndy\n\nACHE) +Cu2Vin)]\n\nru\nat ax*+ [- axs4y . +Qx)\n(( kx) lt x \\\\ =\ndy\n\n    \n\nRC Ye )+Ctr2xV2x) (\n\nat ax’ + [- ax+4y* + y= +QxJ\na lt dx) ( lt x \\\\\ndy\n\nCte) *Cu2V0/ /\n\nz\n= At Qx't bans dy\nbx # AX + 9 Fe (Curxh-(taxe)) =\n\n(2 Cv) -Crav ) + (42) HC)\n\n(b+ Land) Cite’) +(uree) Chi egd x*)\nO + d-x) Cv) C42) ax)\n\na 1) (1) Cle). Q2x)\nACIHX )* Cex) ier ite\ni ‘i atax' + [- ax+4y* | expand (( Wx); (ie) rial + ax - x\" ¢ dx ) expand\n2h 20a) dle) OH)\n0 +2-2le)+ det 1e* (aa).(e =(\\sax +x oy\na \\s a aa\n: dy Say)? Ele \\i ofa)\n\n: Aly jifiesa\nO+a ale )s es ee\n\n: Ot J-3¥ + Ax 2a: iferentat|\ndiffereusale itferentiate HM expand. |\n\nar 4 mooculus.osu.edu OHIO"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/05_techniques-of-differentiation/02_how-do-i-differentiate-a-product/03_how-does-one-justify-the-product-rule.mp4", "id": 920, "text": " How does one justify the\nproduct rule? = = te\\se\\) « “bre\nAr\n\nLe\n\nar I\nMh\n\nte “hi | %\n\npat 3 ete\\s6) - “hee LGeab \\ofesh) \\ofesh)\n. +b i ‘ d feudsan) 5 be L(eat Soles) 5 \\s6)) : kre\n\nye S ete\\s6) - “hee L(est \\ofesh) - d\nav\n\n(ee\\sée\\) ‘ kee\n\nye dnt): +b est bofen) —Helo6 - te) sf) Neat oles) - Heol)\n\nvs DAE! UC A bp, Sette) Selo\n\ns\n“ d Gina’) ee Stent foun) — Sisbo - Le) fe) ‘\n\n<i\noe ~ d s6) Pee est ote - fe) 9(r)\n.. He4,) vee) — Mesh \\ oft) + Mert) fe) - Fe) 96\nb 0 L(e4t Vales) - Fhe)\n\n \n\n' ces Pleated) - be\nO\n\n \n\nam\nho am\n\n   \n\n- fe) of)\nACs) ahin ae gy a\n\nHGeHt,) o(eet) — cE ole) + Rerh } oft) Ble) 96 Gets) fo, Set nat = ate L(eat \\o(esn) — Fhe) of)\nS (u\\s4)) . kn 7\n\nHeat) sees) — Flee \\ ofe) + Hest J oft) - #te) of\n\n\\\n\nwr\n\n—s Aan) fa Sena L(eat \\o(esh) — Phe) of)\nSash) “be a =\n\nHeat) sleet) — Flea \\ 9fe) + Hest J of) - Fe) of\n\n\\\n\nwr d €\\s4)) “be Met lofen) — Fedo) h rte / |\n4) — Pleat Safe) + Mert, J ov) ~ 4%) 9¢\n\n  \n \n\n| eah)-o6) Plea) fe)\na 3 AE ar ee . ot) ) = hen TEL) Seah J — Tesh ) CE) + teed J ofk) - Fle) Of\n; h\na (o elt + Shel fe fle) 364)\na aa)\nNeth) = Os fin, (Poet ey\nbe n/t A oe 963 |\n\nin Tan) Lin *eloeie aA TEL | Sl¥eL ] — Flesh ) HE) + Teed J fk) — tle) 9f\n’ h\n(to ated) os) fee -F0e) 26)\n\nbe fe ss) bs 2 ot! |\n\nbo a ll Slr ae eM\nSSE eee se\nh\n\na(t steel 6) ——— te) 96!)\n\nme 2), ly (0-89 0 Re Seal NOE] + tied } fk) — tle) Of\n‘ of\n(en. alot a fhe -ffe) - 9f¢))\n\ney\n\nlis 2 *\nA hac , h\n\n: fi). 8G\n\n   \n   \n\n \n\n“lin, gf)\n(x) emma) — f (3) - g(a):\n\nIf id g are differentiable at a, then\n= f(a) - g(a) + f(a) -g/(a).\n\nv\n> siable at G then\ny! a) -g'(a) Let h(a) = f(x) - g(a).\n\nIf f and g are differentiable at\nh'(a) = f'(a) - g(a) + f(a)\n\n>, > ™ thw. (teh): —yT-—CO*T\nbw h ee - ea\n\n  \n \n \n\n  \n\nP tr ah ee oS oh, ln (a “fl of\nAe Ten tie se :\nhee in .\n. $0) Y/ “ 4\nee en) 2H: enh nel b. tn (A Fel of.\n\nhes (ae a\n\ntenlob! fies) 6 li\n\n+ ole teas\n\nNam Ree\ncy). wile) 9%\n\nght. aw. Nin [TE wnt) = = i\nAy fed: pss (a PH of\nles wal im e He lon\n\nA.\n\n.£ —— a a G\nfas\n| py ae e\n, ’\n\n| 4\n\n} 4) ” Let h(a) = f(a)\n\nIf f and g are differentiable at a, then\nh'(a) = f'(a)- g(a) + f(a) - g’(a).\n\nwt en. mooculus.osu.edu OHIO @r16 Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/05_techniques-of-differentiation/04_higher-derivatives/02_what-does-the-sign-of-the-second-derivative-encode.mp4", "id": 924, "text": " What does the sign of the\nsecond derivative encode? Concav ity\n\n(>\n\nConcave ConC ave\n“e dow\nf° 20 £\"ZO Concav:+y\n\nJ (a\n\nCon Cav e\n“ue\n\n‘2 £* 5a Concove\nue\n0.\n\n¥ fe\n\niN\n<n\n— > Concavity\n\n©\n\nConcev Q\n\n“ue Conctav:ty 7 1 eS\nze e\n\n=—_—\n\nee \\\n\ny oS 7\n\ni\nA\n7 ee\n=\n‘\n:\n\na mooculus.osu.edu OHIO @r1@ OHIO Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/05_techniques-of-differentiation/04_higher-derivatives/03_what-does-d-dx-mean-by-itself.mp4", "id": 925, "text": " What does = mean by\n£\nitself? WT, mi res Ce ie\ney) Ares aus == 22 @ *\n\nau wv\nM\n_ > =\ndx? dx d a? —1=(@=1)(x+1) \\Grs\n\n}\njt\n\n(Sede 4\n\na‘ (Se -Mae DE IME EF Swe\n* (S-\\(& Y (WEF (Se -W& ANE * ANS A): “Ss\n» J (as Wk A\\F ‘ (ie-Ny A) =\n\nL . 1 G-Vgea F - (Se -\\Wae UE 4] \\t =\nae\n\nLe =-\\\\( Ae\n\nJ 4 WS 4) fo 2yeae=\nBs. -1 ee +4) bene ne\n(3, -\" ae 1) * (&- Wir A)E =\n(2, -\\\\( ea #) > (NS HIE\n(3, Mae +f) a\n(3, -1)( jobs &) - A\\(H4)F =\nWebs) >\n\n4 (& VS AF\n(4 (if +) ; Zyeaye:\n2 i j > Ee\n-1)( f+) ; NG. AF *\n2 aes) ° (&-W(5e AE\n(2, Mae)\n\n&( GG F\n(4 See +f) °\nvo (ee 4 )F\n(2, Mae +?) :\n\nal (SAE\n(2 Rese) >\n\nasad\nde (ah De GING. F ° (& WS AE\n(& hes)\n\nasd\nele i, ae\n(3, \\\"\n\nafd\nalah f (GE\n\n(2, Mae 1F) ©\n\nasad\n& (HF) (Se -\"5e AE =\n= (iF +#) ;\n\nane\n£ (5 \")-@ (& WG HE\n(4, Mat?) ;\n\nard\n(Ee 9)-(a ee (WG AE *\n(3, -\\W a?) é\n£ (56: °)-(hee ):\n\n‘. da\n(&-\\W(R AE -\n(WEF) >\n\nasd\n= (aat)-(aF+*) - (&-VW(5e HE\n(2, -\"Wae#) >\n£(H19)-(RF+ £) :\n\ni‘ (= -\\\\(z A\\£ =\n(a. wee +t) 2\n\nio (aeeat)-(eF+F): (S-\\(R AE -\n\n(3 Mae) >\n\nasd ;\nmeet f)-(46+ *): (RAE -\n(2, ees)\n\nasad ’\nazlaytif)-(aF+ f) . (= Pha u\\t e\n(4. 1 af +) :\n\nH(t 8)-(4 +f): (WG AIF\n(3, -\" Mae 1) °°\n\nd\nbe (Set O)-(BF + #)\n\na\ni ih race\n(2, -Maet 14) :\n\n(He) (ee®): P| F a A) e\nRe\n\n3 a (ae ~(REAF)\n¥\nd p45 6- ¢\n\nEF ov (& W( 4) me\n(2, (RF +F) >\n\n(50) (sabe)\n\nw ae 5 GG IE\n\n(4, shee)\n\nasd\n(See) (de4f):\nee + af (= A\\(e + A)£ =\n(4, ZF +f\n\na(iF oe (6+):\nt20s5 0-3 Oe\n\na\\, | (Sr YGe ANE *\n(2, where) -\n25 9)-(ROt Ff):\n$40.5 ¢- ge\n\n‘\\ (&-(5e WF *\neS We teat) =\n\nEHCP EY:\nd\ngoers PO Oe (E-\\\\(4)F =\n\noe vy ZF +#)\n\na pt. L\n£ (581 9)-(EPD:\nA spt\nSy ie? +d O~ oe Zea)e -\n(2, -Maet 14) :\n\ndy (iF ae (RF MY #) | er Gee\nG. Veer) *\n\nasad\nde (ae) Btaet +f):\n\nd 7\"\nie (ME HIE *\n\n2 4 -\\ a+) :\n\n2(ze-0)- Parte)\n\nEt eRe ed AL A\na ( wey\nEnte:\n\n! { P+ f) :\na\n\n<\n\n=\n\nSL st:\n2d hy “ St\nev d¥ Ge Wir a eee\n(4, -\"M a gat) >\n\nE (SOO (zc7 Ff):\n\n4\nse SERRE\n\nett (-\\\\ 24) -\n(3, - Maer)\n\ndasa r\nmer ayeit)-(3F+ f) : Coa ra\n( eet) *\n\nse ce ee 7 (Z(H 4)€ -\n(3, (G+) :\n\n£(E FO -(Reef) -\n\nad\ndy in ENE\n(4, -\"M af) >\n£ (HE O)- (REF) :\n\n¥ (& Wa AE\n(3; 1) oF oe\n\n(EP O)-(RPtF)\n\nSet aR et - (E-\\e 4 -\n(4 -.Neerey\n\nE(Ze0)-(hee4):\n\nAd PBR EG (&-\\%+ H)\\£ =\n(4, -\" Ma fst) °\n\nde (dee) (& f+) ;\n\nfit REE\n“4 re (e-idale -\n\nay <u te HEF\ndsd\nECR O)-Chee tf):\n\nad SRF :\niy sok y “5t- Cg\n\nJt . fa\nGe ae * -* Gel d \\ =\n(& \"E+ - |\n\ns=pif):\nSe (See 9)-(Kee 4) mooculus.osu.edu OHIO"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/05_techniques-of-differentiation/05_how-do-i-sketch-a-graph-without-a-computer/01_what-are-extreme-values.mp4", "id": 926, "text": " What are extreme values? 7 f(e) is a local minimum value for f\nif there is some € > 0,\nso that whenever « is in (ec — €,c + €),\n\n{[QEGe)\nf ex We\naf A local minimum or a local maximum is\ncalled a local extremum.\n\n \n\nSf octopuses minimums minima |\n\nextremums — is a global maximum value for /\n\nnever x is in the domain of f\n\n \n\nglobal minimum value for /\n\nil whenever x is in the domain of f local feet\n~. 14> mooculus.osu.edu Ore OHIO"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/05_techniques-of-differentiation/05_how-do-i-sketch-a-graph-without-a-computer/04_how-can-i-sketch-a-graph-by-hand.mp4", "id": 929, "text": " How can I sketch a graph by\nhand? - 2 A i] // + (¥) 7 AK ox “tax Sg '-R fila) = Basie) (7m\n\nia) ae ‘SIM (70x | ei\nTo 000000\nx Va O-AAT )\n\nQ\nE\n=\na\nce\na\nWD x sin (12)\n\n   \n\n)\n\nf(a ae\n8\nE\n\n7\na\n4\na4\n2 )\n\nTX\n\n(\n\na\n=\n“4\nTD\n\nS\n\nJ\n\n(eae x sin (12x)\n\nf(x)\n\n% = Cee )\n\nTX\n\n(\n\n=\nS\no\nA\n8\n\nxlvzroree= )\n\ny\nRS\na\n\n8\n\n~~ )\n\nTX\n\n(\n\n4\nS\n=\na\n8\n\n)\n\nf(a x sin (wa\n\nf(x) )\n\nNTL\n\n(\n\na\n4\n4\nQD\nSS\n\nf(x)\n\nKy z ore )\n\nx sin (1a\n\n  \n\nf(x) )\n\n&\n——\na\noa\n\nQ\n\nf(x)\n\nKaz ore )\n\nx sin (wx\n\nf(x)\n\nPee a )\n\n&\n2\na\noH\noa\nQ\n\n)\n\n(Ge\n\ni\n\nKaz ore &\nK\n——\na\noH\na\nQ )\n\n   \n\nx sin (wa\n\nf(x) Vim £'(x) by - 6x -12\n- 6(x fh 2) Pe) © dx eet | PG) ax deaf\n\nL'(x)- by - 6-02 + (¥) i dx- 3x°-lix\n\n£' (x): by 6x -tX £'(x) + lAx-6\n: 6(x°-x-2)\n= 6(x+I Ce 2) + (¥) > dx - 3x*-lix ie) ee” Bye -llix 4(y¥)-dx- 3x°-lix f'r0 <0 | f's0\n\n \n\na 1 to\n, ay mooculus.osu.edu OHIO"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/06_chain-rule/02_what-is-the-chain-rule/02_what-is-the-derivative-of-1-2x-5-and-sqrt-x-2-0-0001.mp4", "id": 933, "text": " What a the derivative of\n\n(1+ 2x)? and Vx? + 0.0001? L(¢): (M4 dx) S fle): C28)” Ny): Cups)\n:\n\n7 A\nA y\n- f(4)= C4 si, )\n(+\nf $y) = Legg\n¥ Bg): Cae)” Pl): (aad\nJ (+) = (\n\n5\n4 2x ee\na f\ni\n\n\\ By): (12%) gem\n\nB _——\na\n\nBy): (ax) aa\noan FF By):( 2s) ma\n-|s | £(¢) : (\\4 i\n\n«|e lox s 1Ox's Bly): (ax) o>\n|e toxs 10x’ ae\n& + |e lox: 4YOx'e sox.\n\nPly): (ax) ;\n‘\n4 Sy: One\n\n* \\s lox4 YOx's $ox + Box “9 22x'|\n\nf (x): Or \\0+ ox e240 x +320? + box” |\n‘ st fl¢)= (14 a)\n\n. | + lOx4 4Ox'. tox + $0 x \"9 32x\n\ny 10+ Box +240 x + 320y7 box\nii Ue (4 Buco But 32x ¢ bx”)\n=(\\1 ax)\n\n    \n  \n \n \n \n\n’ h(x))\nBix) =( +x) > 20\n\n> lx) = 1 42x\n\\\n\\ee. F(x) =(14ax) = 2Chl))\n\nglx)+ x lx) + 42x\nWe: 3’ (ue) - b’lx)\n5 hte)\": a\n\nlf .S (wane) aa\nJ : lo (\\4 ax)\n\n» fe) = (4 ar\n\n+ |» loxs 4Yox's tox? Boxe 32x\"\n\nyf) Ov lor Box «240% +320 Kor”\n\n=lo-( U4 dx sUyt3x lex”) £() E [3F+ 0.0001\n\n77 VG.\nRM: ‘ [y+ 0.0001\n\n \n\nfe Graph! @ Explorations ®\n\n \n\n \n\nGraph! control other varia\n\nsqptx\"2+0.0001)\n\nv=\n\nv= (e+ 0.0001) f(x) : A xt 0.000}\n)\n\nTiv\\: Fieemie\n\nM F(0) = {32+ 0.0001\n\nLo L(+) : I wa 0.000}\n\nax\n\nFx): 7 |\n\nx F(0) = {32+ 0.0001\n)\n\nft)\n\nr 4 ——$—$——[—$_$_\noa x +0. f(x) 8 xt 0.000)\nax\n\nlx): — f() 3 xt 0.000)\nThy Bae Ox\n¢ Lh\n\nWEE EZ. J x7 +0. 0001\n\nlin £Ce)- bins ae\nx? 2\n\n     \n\n“\n\nB lm fle): wn, (e-0.000\n\nx? \"+0. 0001\n\nliv (x): $i\naoe ie f(x) = / N 7 eee | 7a mooculus.osu.edu OHIO ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/06_chain-rule/03_how-do-i-find-the-tangent-line-to-a-curve/02_what-is-the-folium-of-descartes.mp4", "id": 935, "text": " What is the folium of\nDescartes? Ky - 3axy = O\n\nHs %\nx 49°- Weg =O\n5 “.i3 a -\nx ¥--G4-9 KX 49° Ixy O\n\n‘\n3x°+ 39-2 - 44-9 F 8)\n3x'-%y + (3y*-4x) #2 = 6\n\n \n   \n\n  \n\n4\n\nx X49\" Ixy°O\nd\n3x14 39'S - 95-9 =O\n34 9g & (77*-2r) = = 6\n3 x49\" Ixy O\n3x4 3y?.d2-q -9 #4\nie =\n3x°-4Ay + (27*-4x) d= =O\nCs*-4 ) ¢ = -3x+ Fy ie: |\n» 4 +y -9xy =O oY mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/06_chain-rule/04_how-do-i-find-the-derivative-of-an-inverse-function/02_what-is-the-derivative-of-log.mp4", "id": 937, "text": " What is the derivative of log? —_\nao oe\n\n \n\n> 3 a r Pp _\n< [09 (ab)s\n\n=\n‘ . x+9 x Y\nC 7a\n\nOy.\n& [09 2 4\n- © x+9 x Yy\n\noe Came €\n\n4 |09 (ab): log a+le b\n\\\n—_—6lUR 4 “(x al\nr\n\nyee\n\nF(x 4 FQ) -e% Fly oe x ath © (ee) le »\nA , \\\ngq \\' 4 £6) :e% ibe) lo x\n\n42 jy POE* FU) le»\n\nAe ¢\na in RQ) EF Fl) -loe x Ip Fe )e% Este »\n\nAcyl: fi\nUe Ore\" £ lp) lov x\n\nAc y=\n\ni ee ey,\nA F£(i):e” FF lk):I\nAceves: a Ub ek Eo\nL(g):e” F(x): los x\n\nAe )() eg a7\nF(xj:e” Flr):\nAhoway :\n\nee i fe tive © Cx) lon »\n\nAe Y(x: aa 3 Yj Ysioe & Ue) oe»\n\n/ Yd 9 soe eb) ln\n\nM4 Y(d): a\na6 Ute f()aee a (x) + los x\n(\"YO\n\nSxl)\n\n4 ie lag a a los x\n\nA YCx): a TA ee Pa) to»\n\n. iA EG)\" Fla) Hos x\n; \\\nA YO): Sie\n\n: ve e #(4°(«) | 2 eb) be\n\nE CA a ly Yo e* Fleet x\n\nYo Y(x) Fe eel\neS GD 7 -\nA Log (1000000) #13.815510... )# 13.8155 )p\n| 000000\nlos (\n\n\\ 5 ( | 000 oot)#\n\nae los (1000000) # 13.815510...\n\n‘ log ( [000 oot) # 19.315)\n’\n\naod <2 / log x\nloo b ae\nd\n: loo, x\nsal\nd\na\na)\nL\n\n£\n4 log x\n\n4 dx oo, * * dx los b es\n\n \n\ndx ‘99, aim ie2\n\nae\ndx Sham dy loo b\n\n \n\n \n\nA.\n= a\n* ay (ems oa ae\ndK a a Ce a d\neres: M a rs\ndX a”: ax ten)\" eo xe ut\nay - a¥ (eV Y\na: dy fen)”\n\na\nf | 7 ;\nfet oF? a\n\nax¥ (ea\n2S\nare les 2)- x Jone ee leg 2)\naX \" dy (e )\na do (les 2)- x Oo” ie\n—\nr e™ z)- x ey\n* dy te™*)\"\n(les 2)- x Jone ee ( x\nax ¢ ay (e**)\nJ (les z)- x\n“ee\n\n, op x A\n\na: dy Ce\"\nee\n: ly a owe (\n\n; leg 2\n\nial ; :\nWy th? 2): x =\"\n\na” 2)-x\n\nlh a\n3 ae wer]*\noer?) x Aiyx £7 (og2)%\nax * dy (e'*\")\n(les 2)- x x A\na: dy le cals\n. zs (les z)- x\n\n: (los 2)-\n7e@ oF * (los 2)\n\n4 : a aa (\nz los\n* ere\naes\n\n| er (los oA mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/06_chain-rule/06_how-do-i-justify-the-derivative-rules/03_how-do-we-prove-the-quotient-rule.mp4", "id": 942, "text": " How do we prove the quotient\nrule? Cielo)\n\nee\n\n2a ee\n\nA\n\nwe 3d &), fx) 5h) - Fela)\nax Sh) (9(«))* A at) , Pleat Filo)\n\nMK 3) (9fe))*\nLa’ 3 fe) Tilo - Fle)\n\ni aK St) | (9(«))*\n\n   \n\n* a te) Plot Plo 4)\n\nly * > (x) 96) - Fielg%)\n(9) a\n\nam f\n\nhy A ©), £'(x) sf) - Fila)\nA aK 3) (9*))\n\nfL a), £'(e) 54) - Pleo)\nBp ** 26) (ot))* 3 a WH), £'(x) 96x) - Flel9%&)\nhe UX sl) (9(«))*\n\n‘i Q, db a) , Paty - Fihlo%)\naK St) | (9(«))* . Zz 7 feo: x - ot j\n£'(x)=\na\nf(r) *\"*\n\np fe) =% Fle): He\n\n  \n\n‘ps FS «% PG): ie Pe % Fle): Se £'(«) - ag\n\nPi Pee PG):\nee\n\n(\n4 GW) % RGD:\n)\n\na eek.\n7S L((r) Ce) tC’\n\n. |\n2 5° ae FM\n\n     \n    \n \n\n4\n\n5 £'(s¢)) -3 CaN Ce): “x:\n\n3 eee\n4 = eee L(s(e\\)\n\n- £'(o6\\)- 9)\n\niz fe? % Fle): He\n)\n\nat .¢\nMin’ (se)\n\na '(2f\\) . 9) £6) Tee Ge “52\n\nii\n“ 2 ge TOA\n\n \n  \n\n \n  \n\n: £' >(¢)) - 9) WH EO: He\n\n3 ! 2\n4 = cae L(s(e\\)\n\n      \n \n\n- £'(o&\\) - 9 Ce)\na GW) % Pd: He\n)\n\na\n\n> £ ee. 9) Lx FG): He\n\naf\n“ = ge TO Lx RG): HH\n)\n\nOA 2 £00\n4\n\n- §'(2&\\) - 9) fe *x €'G):\n\nOs da\n4°\n\nnor\n<*\n)\n. (26) 9 &)\n\n‘ ia Lex FG):\n\net lk\nA ieee o L(s(e\\)\n\n   \n \n  \n \n\n» £'(o6\\) - 9) oA &\nee\na ht i He)\n\n: a\niA ce 3G) ‘>t\n\n  \n\neB cm & (a ct He) |\n\nU4 ck 3h)\n\neo\nax( fea\n\n>» a\ncx a _ Ar) - x)\n\n1\n\nrat 2 i. (4): Str) x1)\n\n(A.\n4 |\n— 6 hU &: s. (40) - sea)\n\n>\n- y) oH, (A) Ste) x6)\n\nte\n\nvs 8 =(. Me) - 3%) x)\n\nee Z\n4° : ~\n= 4x)\ni oe\n\n- £O;\n\n- (8) 5) He ae Ae) - 5%) =)\n\n: £(e)- - a\ncx a\" (ae): x)\n\n/ £0) 5g + Fl: f(x) od tT\nZ £ = . 5.(e0) se)\n£0 Sea + £fe)- a He)\nce ay 5. (A) Zea)\n\n- CW) oa + £f)- x) 6B\n2 a ae 4) x)\n£ 6) BL x61)\n\nth (<) jm\n2 a 5 (Ae) 4)\n\n£0) + OB. a f) ad a\n= sa * axle) 36)\n\n£0) -Fq + FH:\n\nin\n\n— x)\n55a 5 (Ate) se)\n\n£0) sg + Ply a ff) od ai\n& wa) * ax (Ae) 36)\n\n‘ £5 + fh) az = Se) 5 (Ae) x)\n\n: £0) Se + £8): Ga 3h) ~ Hh eh 36) 5 (8) - 56a)\n\n; £50 + £6): a\" -9&)\n\n: £'e) s(x fr) cles\n7 sy 5. (0) - 549)\n\nfea + £8): Gay\" -9&)\n\n. £Ce\\ ole) - Fle) 9%!\nGary * Ce)?\n\ny )- $A) 9h) »\n\na ! —5\n\ndx *° x? Power Rak\nae\n\nx 3%)\" (aesyt 2) Chin Bole\naAfy, Ly\\\n\n£'(x)ofe)- My o%)\n\n4 ( oe ((v)a Te!\n' fated)?\n>. ( ‘(¥ \\« y ly ) (Alot! tg oe\n\n£(e) 9le)- FA) 9%!\n\n \n\n(sfe))\"\n\n)-%ele%)\n\n*\n\nZ\neo\nal TCE) SM) — th okl\n\n \n\n| Powe Rule\n\nx\n\ncae -3'lr) Clin Pale\n\n: €'(x)s(x) - ¥ U)sle)- ele)\n\\* .  Ofl)e\n\n\\ Powe, Ruk\nChea Rule\n\n‘el phy \\\n. ¥ v | —_\n‘\n+ mooculus.osu.edu Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/06_chain-rule/06_how-do-i-justify-the-derivative-rules/04_bonus-how-does-one-prove-the-chain-rule.mp4", "id": 943, "text": " How does one prove the chain\nrule? P\n & DLE GS)\n\n<F / < = (8G) = de = 0),\n4: Pr) ue? alts) = a 9)\na)\n\nY = a(£()) = ax < ols)\n4: Pr) a\n@ 2 2lFG) > & 90)\n4 Ol\n\n      \n \n\nLi = Ol) = dx = ols)\nae © y: ian\nx4\n94): d\nSalted) = & 90)\n4: Pr) | = (FG) ° dx = ols)\n/ 4: Pr)\nBes d\nS olf(e\\) = ax 9)\na y= lr)\n\n      \n \n\ndoy\nBT dx\n\n  \n\nd %\n‘ 5,794) / alte) = & 96)\n: y= Pl)\n4 Soames ay Z9lFG)) > ae 96)\nwo\n\nzy\n\n: d a\nA 94): ae ad\n\n. a < (fe) = ax = 6)\n\ny= Flr) Ye = 9lFG)) ° ie 9s)\n\ny: (x)\n\nds ds\n\nd a\n\n4 =, at): DT ax\nm dy\n\n3x y= Flr)\n\nBo* ace 9(£(e\\) = ax = os)\n\naS\n\nds\n<i : —- —\nax ol) PY dx\n\ndy is nt o emibas,\nax = )\n4: Pr)\nJd). 32.27\n=.3(4): DT Cai:\n\nAa Z9ltG\\) > 90)\n\n   \n\nnot ao res ban, y= Pl)\n_ s2 Ag\n\ny = 9lFG)) ° & 9s) UA = (f6)) = & 26)\nwe ae a\n\nd a\n5,99) 2\nay\n\nax\n\n    \n   \n  \n\nis nt a fyots y= Pr)\n2. As\n\nYo = 9(FG)) ° & 95)\n\n2 aly): ? d\n,  olf(\\) > & 96)\nZA oN ie)\n3 aS\n4h:\n» oy - Ba tas, The function f is differentiable at a\nprovided there is a number f(a)\nso that\n\nlim Err p(h) = 0\neee\n\nwhere\n\nf(a+h) = f(a) + f’(a) h + Err p(h) h. 9(F (xan \\\\ ole\n\na 9(F(esh\\) : 9LFO)+<%nf gl (ean\\) = oC 46) Gnd ry .\n» 9(Flxsh\\) « aC 4G)+£le)h+ Erre()-b) 9 (F (xem \\\\°\n- (Kans 91 9(F(x+h\\\\ + ol E+ <'(x)h+ Eveg(y)-h)\n= g(SN+ 9'(ECA)- 9(F (xem) ° al Fb)+£lx)h+ But) bh)\n\n(kids o'l€Gd-( 9(Fleeh\\) * 9046)\n- gf£ei+ o'LEGM F OF (ee \\\\ = oC EO+ Lledh + Eveee)-h)\n\nzg fEO4 oLECA) (Cede s Eeethdh) + xs (404 v Eero la) a) -\n(EN + Eere(al-4)\n\n- 9(€G))4 9(F(xsh\\\\ = Gl El)+<'(x)h+ Eveg(y)-h)\n\n: (EON + 9'(t(+) ‘(c's Evaolndh) + Eg (4604 1 Eego() i) -\nz ( ‘ (tlh t Eere(n)-4)\n\n= 9( FG) + 9/F04) -FCeL » 5'€(0) -('tat + Eq\n\n+95 9(F lah \\\\ =: oC EOYs Lens EvegQQ)-h)\n= 9(fG\\+ 9'l€(e\\) (ce + Evquladh) + Fes\n\n= 9(£G))4 9'/f0) Ce), + (stew. Ew, = aff 9'(E(ed) ((c'et\n\n- of eile 9/40) - E(x+h\\\\° 9l Fb) +£'(x)he Ey\n[ears 9'( Ce) - (4 Ll +\n\n- 9(€Gr))+ 9 (Ft)) teh, +( 9% 9 (Flxan\\\\ © oC FOS+ lh Evrgtt)-b)\n\n= lS + oLEGM (CNL + Eeeulhdh) + BG (4006 rErrola)) -\nae ( (1bth + Eece(ad-4)\n\n- AEN + 9/261) EGIL + (Meet - Enrelade rg) MTed + Eu el 9(Flxah\\\\ > of #OS+ <Cn)t\n= (SOi+ 9'(E Crd) (04 9(FCxc+h\\\\ :\n\n: (fl)\n\nof eo + 9 /eeH) 4 9(F (xh \\\\ = gl Fl)+<'(x)h+ Evee(t)-h)\n\n= gfSGi+ o' LEC) (e'b + Exgadh) + Fey (4604 »Eerp(a) 4) -\natt ( ‘ (P(Nh + Excel 4)\n\n(G4 9 (FC) CCH, + ( 9 let) - Ev7pla) + Fie, (-)- Ihe) cee\n\nlw (\n\nkhvo 9(£ (xh \\\\ : 9l £(r)+£'(x)\n\nraids o'4(el) «(4°61\n\n- 9( eG) + 9/9) fe), es oi LEG-(2'0\n\nM+ S746) Ch + (s'le0 9(Flxsh\\\\ = oC EOYs Lladh+ Eve h)-b)\n\n= lSON + 9'LEle\\) -('b + Eeqadadh) + Fey (4606 » Errpla) 4) -\n3 ( : (46M + Eeegal-4)\n\n- 9 Fe) + 9/01) CCL, » ( eG - Encolh) + Fury (-) {hol + Ec ot 9 £G)+<(x)he E\na c'GdL + %\nds gi l€Ced (4\n\n-9(G))4 9/60) CCL » (ste\n\n\\ 20 in E Pe\nal! (x4h\\\\ : a ( £(2)4 L'(x)he E\n\n: 9 fQ\\s 9'(¢(x\\) (ct + Eval\n( 4\n\n-off6\\)e 9 '/egn £4\n3 + 9 /fG)) Er), +(s'eu- Ee /l\n\n\\, nw (5’eeu. Ew\n\n\\\n\nhw 70 ai lGa) (cbs Eval\n\nF(e}) - £\"(eh, + (stu 9(Flxah\\\\ © oC FO)+ Flx)he EnegQy)-b)\n\n«gl od+ oF ECA) (eb + Ere lade) + Eg L616 »Eireala)-\nglft+ o'L€C) (0th + Facet 4)\n\n= 9G) + 9/604) Fle, »(steuv - Evvplhl-+ Fey (-) Lhe) + EC) “4\n\nKirn (2° Enel)\n\nkhvo ¥) I, +(seu- Ev/ola) + 9 (Flan \\\\ : oC G4 Lee Eveg)-b)\n\n glKOd+ o'LEC) (CL + Ered) + Bes (4004 + Erol) -\n(2b + Erce ad 4)\n\n9 EGN}+ 9/0 CNL + (lett Forel Es (-) {ho + ashlee\n\nVier (2°CFeA Evegli) + Eve (4-416) + Bes) -Furgt))'0\n\nkvo 9\n\n(a+ 9'(€(e) (cies\n\n(Pl cau\\\\* oC €G)+ lhe E\n\nf\n\nAFM + 9'/F0M) LG), + (\n\nliv (5° Ceba), Erp) + Eve (- es. \"\n4 0'(x)h O(F xan \\\\ = oC FO+£'Cx)h + Eves (Q)-b)\n\n= GfK + o'LEGM (CL + Erqulhdh) + Beg (40 Erroll) -\n(4M + Eere()-4)\n\n(FN + 9 (FGI) LCL, + (see1- Enel Fr\n\n\\ien((o' Cre. Feel) DE th\n\nkyo 9( E (xh \\ \\*\n\nWA\\E\n\nete) - Eur, 4)\n\nJ+ Cae, ( 9 (Feu \\\\ ol FO)+£'(x)h+ Evee(h)-h)\n\n«GfK oC) (ed + Evquladh) + eC FrotltD\n(20Th + Ered -4)\n\n= 9(GG\\) + 9/PO4) FL, » ( AGN - Ee ola) + Fiey (-) {hol + Ese\n\nki GF Derg 4 ol) Ba\n\nkyvo Suppose f is differentiable at a,\nand g is differentiable at f(a).\n\nThen (g 0 f) is differentiable at a, with\n\n(g0 f)'(@) = g'(f(@) - f(a). mooculus.osu.edu Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/07_derivatives-of-transcendental-trigonometric-functions/02_what-is-trigonometry/03_why-are-there-these-other-trigonometric-functions.mp4", "id": 947, "text": " Why are there these other\ntrigonometric functions? a as \\ or\nkegels — am 4\n\nANT | ae ce.\n\nia 4 ee ; om» VE VN OE\n\n4am\n\nol UNS PS.\ntw BAS ae SS\nLy NS\nLe i tan?\n\nos0 sec mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/07_derivatives-of-transcendental-trigonometric-functions/03_how-can-i-differentiate-trig-functions/03_what-is-the-derivative-of-sin-x-2.mp4", "id": 950, "text": " sin(x? > F(s(«)) Sine : £(5(<)) sin(x?) = Flslx))\nDo\nVen\n\n}\n\nff SiR F(x) n(x’): F(9&)) Biel) F006)\n+ in(x’ ): £(9(x«)) j ? Cos ¥\n\n£(9(x .\n\n*\\: ‘\nn(x goin(x’): £(9(x))\n\nJ\n\n£(t): cos x\n\n> 9x) sax\nie !\n\ncota): Pol) 3b\n\n4 ie { “(ste\\\\ ; of x)\n\n-Cos(x')-a ¥ sin(x’ ): £(9¢«))\n\ny\n\nJ £'(x): Cos x\n(x) > rx snl CS 1\n\n\\ f ?\n\nef | salx*)| we\nf yy, cal el c al. | sa el y° sa(x')\n\nvou VO C hallense , mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/07_derivatives-of-transcendental-trigonometric-functions/04_how-can-i-differentiate-inverse-trig-functions/01_what-are-inverse-trigonometric-functions.mp4", "id": 952, "text": " What are inverse\ntrigonometric functions? BE, D: sm wx sm(Qayeonll .\\ ; .\nee ial Sin (2-1) z Sin (301) = 2 O: Sin D= Sin aT = Sin (Zt) * Sin (3)? D: Sma WwW Sim (2-1) = Sqn (3) = Yyrarcsim x ‘ >\ne J\nt\n» | |\n\n0: awccos(z j\n\n—— 0 a avccos(z / eC x 2. +hen BO. then\nMm\n\nYe rt Tee , +hen \\f x 20, then ee ae, kei! mooculus.osu.edu OHIO Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/07_derivatives-of-transcendental-trigonometric-functions/05_what-can-we-learn-from-the-derivatives-of-trig-functions/01_why-do-sine-and-cosine-oscillate.mp4", "id": 954, "text": " Why do sine and cosine\noscillate? Velocity = position\nf'ley= Fl)\n\n  \n  \n \n\nih £10): ef —\nae\niz\n\n1 o>\n\n~ ACcelevatin = — Position \\\nPy omni 3 oe\n= 9 :\noad yo)\n\na\n\ne 3(k): Gos €\n3/(t): —sin t\n\ng\"lk):-cos 3(t): cos €\n3/(t): —Sin €\n\nglk): -cos € Acceleration = — Position\n\n£\"(£) *-£e)\n\n|\n\n6\nFIL): sin € alt): cos €\nf\"([t) Cos € “ ‘\n\n4\" (t)+ -sin t F(t) 14 )- 19 a4) F(t): 14 SLE) ~ 17 GG\n£' (4) = 17008 4) + 19 F(t): 14s le)~ IF aa)\n£° (4) <7 cos 4) + 1% sin l€)\n£° (tN AF on Ale 19 C4) ie Cos a) + (+ é)\n\n+19 o (+) F(t) lt lé)~ IF wey\n£°(¢) = 17 cos 4) + 1% Se)\n£'°(t) 44 wAe )\n\nwk) + 1% si, C€)\ntye (> o (+t) F(k) 14 Sole) ~ 1 rey\n£°(t) = 1700s 4) + 1% sin l€)\n£° (ES AF nA) 1 ow Ct ay =\nA mooculus.osu.edu Ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/07_derivatives-of-transcendental-trigonometric-functions/05_what-can-we-learn-from-the-derivatives-of-trig-functions/02_how-can-we-get-a-formula-for-sin-a-b.mp4", "id": 955, "text": " How can we get a formula for\nsin (a+ (3)? (1,0) a.\nL 2K (0,1)\n\nJ et eee\n\nAG\naS (0,1)\n\n  \n\n.. \\ 4 . ie\n(xcos 8, xSinO) mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/07_derivatives-of-transcendental-trigonometric-functions/06_multiplying-trigonometric-functions-with-slide-rules/01_how-can-we-multiply-numbers-with-trigonometry.mp4", "id": 957, "text": " How can we multiply\nnumbers with trigonometry? Q Ua lev Sq uaves\n\n   \n  \n \n\nlogs /, prosthaphaeresis cos(a + b) + cos(a — b)\n9\n\nai\n\nCOS @ COS b 0.14 -0.37 cos(a + b) + cos(a — 6)\n9\n\ncos a cos b = O.14 -0.3F 1\n\n1.56980\n1.55980\n1.54979\n1.53979\n1.52978\n1.51977\n1.50976\n1.49974\n1.48971\n\n2\noe\n.55889.\n\nTABLE OF INVERSE COSINE\n\n3\n1.56780\n1.5578\n\n4\n\n1.56680\n1.55680\n1.54679\n1.53679\n1.52678\n1.51677\n1.50675\n\n1.49673\n70\n\n5\n\n1.56580\n1.55580\n1.54579\n1.53579\n1.52578\n1.51577\n: 50575\n\n \n\ni 4846: TABLE OF INVERSE COSINE\n\n1.56680 0\n\n80\n80\n79\n79\n79\n78\n176\n174\n71\n\\67\n163\n\n)57\n\\n4\n\na\n\n1.56980\n1.55980\n1.54979\n1.53979\n1.52978\n1.51977\n1.50976\n1.49974\n1.48971\n1.47967\n1.46962\n1.45957\n\n2\n\n1.56880\n1.55880\n1.54879\n1.53879\n1.52878\n1.51877\n1.50876\n1.49873\n1.48870\n1.47867\n1.46862\n1) 45856\n\nTABLE OF INVERSE COSINE\n\n3\n\n1.56780\n1.55780\n1.54779\n1.53779\n1.52778\n1.51777\n1.50775\n1.49773\n1.48770\n1.47766\n1.46761\n1.45755\nI AAPFAQ\n\n4\n\n1.56680\n1.55680\n1.54679\n1.53679\n1.52678\n1.51677\n1.50675\n1.49673\n1.48670\n1.47666\n1.46661\n1.45655\n4 AALAO\n\n5\n\n1.56580\n1.55580\n1.54579\n1.53579\n1.52578\n1.51577\n1.50575\n1.49573\n1.48569\n1.47565\n1.46560\n145554\n\n1.56481\n1.55481\n1.5447!\n1.53475\n1.52478\n1.5147\"\n1.5047:\n1.4947:\n1.48465\n1.47465\n1.46466\n1.4545\n4 AAAAL ee Eee EE eee\n\n4\n\n         \n\nSHEN\n\nfh i fs PAU ON OE WA Oe\n\nSHAsesy\n\nRSSQLSRSHRSMANazs\n\nce QVwe we QR as\n-nRaemen ew Yond ech sh md pe\n\n   \n \n\nver)\n> te et\n\n1\n-\n\nBANGS 1.34561\nZEFEG 1 2146s 7 4 1.35922\n\n0.22 1.34898\n0.23 1.33872\n0.24 1.32843\n0.25 1.31812\nnN 9Re\n\n1anv77”\n\n \n\n1.35820\n1.34796\n1.33769\n1.32740\n1.31708\n\n19nNe\"A\n\n \n\n1.39794\n\n1.35718\n1.34693\n1.33666\n1.32637\n1.31605\n\n19nNnc7NH 1.51076 1.50976 1.50876\n1.50074 1.49974 1.49873\n1.49071 1.48971 1.48870\n1.48067 __1.47967__1.47867\n1.47063 1.46962 1.46862\n1.46057 1.45957 1.45856\n1.45051 1.44950 1.44849\n1.44043 1.43942 1.43841\n1.43033 1.42932 1.42831\n2 ances Hate 1.41820\n1.40808\n1.39794\n\n   \n  \n \n  \n \n   \n  \n\nbe he\nree ee es Oe eS eee\n\n   \n\n   \n\n1.35922 1.35820 1.35718 1.3\n1.34898 1.34796 1.34693 1.3\n1.33872 1.33769 1.33666 1.3\n1.32843 1.32740 1.32637 1.3\n1.31812 1.31708 1.31605 1.3\n19Qn77°7 19NLPVA 1 909Nnec7nH 1 9) 0.17 -0.37\nCos a - coxb\n\na % 139994 ezLialt4 o=zLialt4 0.14 - 0.34\nCora - cos b\n\nqxy3aage = BEL INIT9 cos(a + b) + cos( (a — 6)\n\ncos acos b = gh 0.14 - 0.34\nCox a- coxb\nQV 3V8TF\n\nSB ark = 2.59146\n\na-b: 0.201%\nwd\n\noz lla1t4 QQOOSAMIAAN | NAONMAVKAS | Gaon tosoomes | oer\nRQNAAWOGHIG | AMIBNOMIAOK | aoe\n\nSUDO OOY | PAO ONION | HIOMAAAOOUA | 00s\nEQOA | OODGNOYHIOMAS | NRGMOGASOM | New\nNARDIN | EAD SWOUMNIS | Hoos | See\n\nRERREOSCON | ad TtIINMNMAN | Ie\n\nxt\n(DOOTOD | WWOPFASMIALDA | SOMKRGONIAAUD\n\nIAISIDION-UIOIN | DOONAN | ANAS NUDAICOT DOORN DWN MatsHOROKOO LODO ONLI\n\nPSQRESSSS SBRwACSoHOw | omSaoseioes | SF\nDAAAAAAAD | HAAARARAAA BDARAAAAAAA | oc\nDODISIOSSS | SSSsSsedss | SSdddscdds | Sc\n\nANAM WON | EMADONBOTD | oriwteincontco | oc\nASSMAN | RAS RONBOSS | ores\n\n \n\nSOSOSOSS9 | SSSSSSSS8S | OOSSESSES9 | Oo: SASK CoN ig\ni ype ah DARAARAAAAD | AHAGHARAAH | HAAR |\nSSOSOSSSSS | Sodsccddds | codcdddddd |<\n\nManat tesa | woe 409\nSOULOSRASS | Pros R Sow\nSSESSOSSAS | POs aos ans | Sc\nPBAsoa000000' I SOOOND\nDBADAABAAAA | AAAAAAAAGAD | So\n\nDANHONDWONH | OMMPONIIOGD | it <eicnooh00 | S\nDUIIOS MIAN | AAONDIAMLAS | Arto? | 2\n\n   \n\nDOUI-AATI~OM | POWDAAE NOD | I MDmosTMAS | D\nOPE ON-OMS | HADOAOANG | NOM oor | 9\nPONAIMNWODI | DIONDIOINO | rac o PF AI99 | D\nPHADW200000000 | PN ROOOSD | no stINIMAN |\nDRAABAAAAAN | RAARRAAHAAAA | HRHRARAAAHAAH | D\n\nDWDM AHO | A OMOAI-SOM | FAOMRARMAQNND |\nEID DINNGO | QOPFNOHOMAS | MEGMIOGAGO rs |\neet AORN CA ed | ChPSIDCOCOCOLRCO Or | <fecOLOlcoueiet | OX 2 | BROOSAMNGTAHD | Doro\nf | SHOONTUNOINAS | SOMIGOOGO\n\n \n\n| osGrGn600006000000 | MER ROGOMIA | Io HIN\n\nIPRAAAAA | HARRAARAARAD | PAARRAARAAH\n\n3 | CSSES9C806 | COSSSOSSSS | COSSSSSSCO\n\n>| Connr-oerttor | moooN ao | bromo 0.14 - 0.34 = 0-06249\nCo 9- corb\nqx3aaat beLiart4\n\nare = 2.89176\n\ng-b: O.2001%\ncosla-b)= 6.99984\nCos (a+b): “e trigonometry is not\njust about triangles\n\n} mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/08_derivatives-in-the-real-world/04_how-do-derivatives-help-me-understand-how-two-rates-of-change-are-related/01_how-fast-does-the-shadow-move.mp4", "id": 964, "text": " How fast does the shadow\nmove? OC) Draw Picture\n\nyet\n\nCY ial\n~~ ,\nOe\n\n\\ C) Draw P: Cduve : >.\n\n1 aw \\ < Oe os eS\n\na\n\nUf,\n\n; _s i x(t) + lt) 4\n= > “\n} f\n\n[— = x(t) +s), LO\n—\n\n3 q\n\nS\nee\n\nii)\nA i xleyrst), zlt)es). £\n\n> +( \"i+ - x(t) ste). stk)\n“ee Xx to —_ a\noe (t)+ s(t)\nZ >\n\nLW si) )a é s (¢)\n*(e)+\n+; & eee 3S\nLO s\n\n_ yk se\n\n3 otal\n, i\n\n7% t)rslt)_ ste)\n\n3 a c/t) PN. 2 ol\nAB) s '* 2\nL(x\n\nbee)\nSoke > 1\na\n1\nt (¢, ay\n\n<i x(t) + ste) ,\n\n3 ~ . ) sl)\nmatron S| ae ae za\n\n()+ sity) > a 5‘?\nq i ess\nBx |\n\n\\\n\nS\n‘\nFE W 2x\nollense { de, ‘ OFe\nqc yor velot Mee\n\nthe\na Larder ra the rh =\nC\\rollense =\n\nic a . | Ve.\n\nyen .\n\n1s moun i\n\nspeed of\n\nP ase mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/08_derivatives-in-the-real-world/04_how-do-derivatives-help-me-understand-how-two-rates-of-change-are-related/03_how-quickly-does-a-bowl-fill-with-green-water.mp4", "id": 966, "text": " How quickly does a bow! fill\nwith green water? Water level in bowl — Consimt+ . | A ' Wi e Radius of bow!\n500\n\ni\n\n  \n\n \n\n200 r\n0 so (oo 10 200 250 00 350 400\neight (pa) ‘ais (PX) Radius of bow!\n$00\n\n400\n\n  \n\n>” a hie cps radius (08)\n\n430\n\n350\n\n \n\n \n\nRadius of bow! Volume of water (px*3)\n\n20+08\n\n1.8¢+08\n\n1.60+08\n\n1.40+08\n\n1.26+08\n\n10+08\n\n8e+07\n\n60407\n\n40407\n\n20407\n\n0\n°\n\n50\n\n100\n\n \n\nVolume of water in bow!\n\n150 200 250\nHeight of water (px)\n\n350 Volume of water in bow!\n20+08 +\n\n{ox'3)\n\nfolume © 20+08\n\n1.8e+08\n\n1.62408\n\n1.4e+08\n\n1.20+08\n\n1e+08\n\n8+07\n\n6e+07\n\n40+07\n\n20407\n\n \n\nVolume of water in bow!\n\n+ r\n\n  \n\n160 200\n\nHeight of water (px) Volume of water in bow!\n\n \n\nr r Volume of water in bow!\n26+08\n\n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n7\n\n1.86408\n\n1.6¢+08\n\n1.4e+08\n\n1.2¢+08\n\n1e+08\n\n80+07\n\nVolume of water (px\"3)\n\n60407\n\n40+07\n\n20407 ‘water eight (P®)\n\n‘Water level in bow! ‘Water level in bow!\n\n \n\n   \n  \n \n\n‘water beight ()\n\n© %0 100 120 140 10\n\nTame (seconds) xd) SLAIN Water level in bowl\n\n \n\n \n\nre |\n\nsi |\n\na\n: |\n4\nf |\n:\n\n“Time (seconds) mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/08_derivatives-in-the-real-world/04_how-do-derivatives-help-me-understand-how-two-rates-of-change-are-related/04_how-quickly-does-the-water-level-rise-in-a-cone.mp4", "id": 967, "text": " How quickly does the water\nlevel rise in a cone? Se\nj Re |\nmM\n\n \n\n—_ Wak tc (ov wins\n\nf\n\\ te of\nAno con Stont Vo\n\n    \n    \n \n    \n\neG ant\n\nHow Wek Pov wins\n\nNo = constant — vate\n\nUoht ow, Wee % TP\n\nor wale iq He\n\nate Pouvins\n\nvate of VES \\V a eo Powvins a ee\n\nno constat vale of Wile\n\nml\n\nAy wi\n\nCoht\n\n  \n  \n\nHow Way (2 Dowvins\nA\\we constant «vate oof \\W oe re Powvins\n\nAW Cow ston vate of wl ee\n\nwi aht Wak ‘2 Poevins in et\nS\\o constant «rate oof wl /s Woe is Povvins in ot\nAo Cow stot vate of ml Is Vistes Wak ie Qouvins iA ot\n\nAe Com Stout vate of | ml Is\n\n       \n \n    \n\nRonis “pee, = ot ME\net wale in +e Cone\nHow) ARSE atte cle lecel\nVisivs e Cc\nOne\n\nLO\nost\n+\ntle\nWw\nate\n(ece\ni Wake Pouvins hie st\nconstant vale of m/s Wek Dowvins in et\n\nMo constant «vate of | ml/s\n\n \n\n \n\nVicht fer) ee\nof wale in =a 1S Pouvins\n\nconstant vale of\n\nhow, the \\W aki 12 Pee vims in +\nvale of\n\nCon Stont\n\n \n\n \n   \n\ntee @ FT wl\n\nee wale in +e Cone\n\n»|\n\newis Cs eat\n\nVisine Ie\n\n90 c,\nbe “Cm ts\nAiR\n7 y Yeaeee Ih\n\nV- grr *h\n\nve (3)\n\npo* en | Waar ihe\n\ntah\n.grr\n\nea\ntah vwi-\ney A\n\\>\n\nAy\n\n“T\n\n—\n\n1\n\ne\n? 2\n\n.\ne\nols\n\n>\n\n \n\nh °\nye sarah\n\nNV:\n\n\\\n=\ni oly So hes cn mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/09_optimization/03_okay-so-if-optimization-is-possible-how-do-i-do-it/02_why-do-we-have-to-bother-checking-the-endpoints.mp4", "id": 973, "text": " Why do we have to bother\nchecking the endpoints? So ae bn ee\n\n6. EN\nuo tes\n\nBP (x) |\n\nCuecess / on F* .\n\n£'(¥) 2 7? OV\n\nf(y) - | Sear\n\nO1_ srace oon. A\n\nro ii “ on FS a\n\nf(x) «1-36 N -3, 33\n\nei) |g Ov) on L% a\n\n£ (x) ix =O on [333\n\n  \n  \n \n\n£()- |e\n\n— bn Eee\n\n£ (x) < 1- 3x\" 20\n\\ + 3 TT:\n\nw\n}~ esl ~/ :\n\nI+ :\nwe\naio “—_\nms Point to Check\nCritical points\n-{z +4\n\nend points\n2 ‘3 Points te Check ae + > Cheek\n\nCe ae\n\nend a\n\na) Points to Chek\n\nCritical points\n[es -2f4\n\n6 end Pow ts\nof -3 3\n——lC<“‘CS aa Daa\n-Jz|-5 55 +038\n\nPL 0.33 wirl wile\n\nWw ass %-0,39\n=J5 # 0,39\n\n-a4 -3/24\n\n“at aia 4-039 -3; 24\n\n-Jjz cad3 ¥-O.33\n$3 | SY3 = 0.38\n3\n\n4\n» mis #-O.34\n\nq 0,33 3] 24\nai ¥-O.39\n; age\n\n“24\n\nw orl é\n\n  \n\n% -3,] 36\n\nt|-2 53 v-034\n-J5|-35\n\n| 25 + 033\n3 ada\n\n3 |-a4 A OM\n\n'\nw\n\n'\nWwW z wl-\n4 ' : oie ¥-O,39\n: ada x 0,33\n-a4y For xX in [-33}\nLe) otors when x3\n\nQnd\nthe Smallat vale of\n\n°O) saul” ] ay 24\n43% -0,39\n\n{}/\n\n\\ \\\na '\nw\n\n24\naia ¥-O.39\n\n4 al oe\n\n<a + Oe\n“a4 — Sie\nt|-2f3 +-033\n3|°9\n;|2n,\n\n§3 | $5 < 0.33\n3 -3/ 24\n7 = ie\n-Jz caus Oe\n\nie ait # 0.3% 24\n-2 FB 0.38\n\nre Oe)\n\nol sao [% B12 v-0>\n5 qs 0.33\n\nof 2 0,39\n% i mooculus.osu.edu OHIO ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/09_optimization/03_okay-so-if-optimization-is-possible-how-do-i-do-it/03_why-bother-considering-points-where-the-function-is-not-differentiable.mp4", "id": 974, "text": " Why bother considering\npoints where the function is\nnot differentiable? On kre\n\nth ev | a\n\n \n\nWw AN\nYY)\na\naA\nmn\ne\n\ne\n(x) =\nx\nBa |\n\nO\n“\ni\nCc\ni A\ne\nUO \\ On the wv Ad\nMax d\nwi a\nWA\nVey lue a\n\nPi = x- |x\n<\n\nOn dhe \\\nth Kv\n\n   \n\nAu On Me\n\nim ev | Ow the wer ACo,33\n\nGe. Find max ond\nmin Valnes\n\ni> x-\n\nOwn re wk Find Max and\n\nPee Welues 6 ot\n\nol\n\nBij = x- |x-2«|\n\nOw the A dev vo | Lo, oui mie) * x- De oi | Lled> eS | ke |\n£ (x): - |\nnx\n| x\"\n\n#\n“6\n\n4\n\n/ £ld> X- | |\n£ (x): \\- x- (x*- Ix) £ xx 20\n% + (97 Ax) if x 2 <é\n\n# (x) =\n\nfled? x- | x 3] Bron) se xta02e\nx +(x\"-2x) if xome<¢\n\nF(x) = F(x) = x= (x ax) if x-ax20\n(«\\ eye -Ax) if x- «<9\n\n| fe: a eae | Be Bi) Sein\n\n| Ales = x= | x3 | x-(x'-Ax) if x° 2x20\nZ . (xtax) if x'-2x<O\n\n£le: ;\n\n \n  \n\na’ y . Coe fl 5 ap‘! 5” if “« > if x 2x i xox lll 2 if ¥\" Ix 2\nx-(% - Xx) ia\nF(x) r m. (x ax) if x-Ix<c\n\n5 fx 3x20\nEs\n\noe j-(ax-a) if x-2x70 £): a eee 2270 ee. if x -Ix2O\n14 (ax-2) if ‘ -(x\"- Ax\nete) 13\nx4 (x- dx\nfl. S'-@<2) +f x Ix\n14 (ax-2) if xd a , Pox\nia.->) :f x2 K-(xe Ax) if x 2x20\nBU) -f x I2x<O\n\nlx): - . if x\" 3x20\n\n \n  \n\n14 (dx-2) Ff xX -ax<O\n\ni. Bes (xc\n\n  \n \n\no> if x2\ne\nx~<O\n\ni 14 (ax-2) if Se Nae 2\n\nA\n\n{lx < if 2x70 Mfax-a) if x-2x>O\n3) if x'-ax<o ‘- ast.\n\nF(x):\n\nsige» P x24K20\n\nAx < O\n1#(ax-a) if x -I«\n\n  \n  \n    \n\ncle\n\nq F(x): ‘-\n\nx>O\nfax-a) if x-2\nlx): a >) Da x -i’x< O\n\n_ eo... if x! 3x > ge\n\n14 (ax-d) if vary\nly): Sax WL x<Q\n-lsax if ma\nat _ x-(x\"-2x) if x\" .\nF(x): «+(x ax) if x -Jx\n\nGyfren f 200\n\naya) if x -2x<O\n\naie Wf x<O of xd\ni -jaax\n\nif aos: °* £ (x\\:O\n\npi-\n\n£ Not bff a ix) =O\n5. Ae\n\nnet aff“ £ (x\\=O\n\npl-\n\n+ Not bff sé\nxa\n\n_ ge, >»\n\nendprints _ ga. «> endprints\nOo, 3 £ (x\\-0\n\npi-\n\nendprin ty\n\n+ Not bff M4\nxr a % | £(x)\n\nv2\n\n+{(<) x Kit) | oa..\n\nO|oO\nvA % | F(x) E\n\nLad x- | xo ax] +(4)° X- | 2 Jos vm\n\nSZ\nPES Oo = Ne\n\n \n\nWA\nmw mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/09_optimization/04_why-would-i-want-to-optimize-a-function/01_how-large-can-xy-be-if-x-y-24.mp4", "id": 976, "text": " How large can xy be if\nx+y = 24? Wo Nurmbev\n14\n\nHow lavse Cu\n\npe Bley be Nu mbes\nAY\n\nie terse 8 thers\n\nre duct Les ¢\nbe a\n\\ \\weo \"\\ Qn ey 5\n24\n\n= How | Gvse@ Can\n\nre pe duct pe duct Nu invev\nOY\nCOHN\n\\avse\n\n(re duct\nt _—\n\nMie urbe\nA oF\nOw | arse\n\npe let | (\nne - aT \\ KZ\n\\ wo Nuwbev\n\nG\\ U\n\nCurl.\n\n   \n \n\n[arse\n\npe dua XK,\n\nNu ym bev v\n4\nU,\n\narse\n\npe Blide+ aT 2\nIwo Numbers Wi Su\n\na4\n\nHow larse\n\np ro Blu ct be ¢\n\nUy.\nThe ¢r Max; mre XY\n\nx44: 2H ry\n\n£'(x)* I - ax Be) 2M - ax\n\n. or C/L\\ =: -\n\ney 24 - Ax L/\nF(x’\n\n(x\\* aM\n-ax Bey 24 - Ox it/\nmx) ~ |\n\neee) 24 - 0x ps\nC/\n\nBey 24 - Ax TN\nA\n£; .\n\ne( e\n£'(x\\* aM e/e\n\n£'(x\\* aM\n-ax ps\nrif\nC/\n\n(x) AW- ax a}\nC/\n\n+(x “a\n£'(x)* aM L£ /\n\nF a\n(x)? 24\n-ax ~s\nc/s\n\nmae) 24 - 3x £ TEN =\n£'(x)* AW - ax Hix) 24 - ax rs\n\nBay 24 - Ax f(x) 4-2» mie) 24 - ox As\nC/ ,\n+ x&\n\n\\\n\n#(x)* I - ax his\nt /\n\ney 2 - ax #(x)* IM - ax\n\n  \n \n \n\npf (yy20 if ny a4 - ox\n\nmilo if I £[x)* IN - ax\n\n   \n  \n\nbP lyy20 if x<la my, 24 - 3x\n\nDR Iy20 it x</3 n/\ni\n\nf(x)? AN - ax\n\n  \n\n \n     \n \n\npf (x) >O\n\nxe 1d.\n£'(x) oO ; F(x) = x- (24-> - 7\nae\n\nao\n\nlx) 20 if\neix)<o C/,.\n\n£'(x)* IY - ax\n\nflo Wf xs\n£'(¥) <0 4 ef\n\nfle)? M-2>\n\nFi)oo fg\n£'(¥) <0 if 1. #(x)> x. (24-x) =\n£'(x)* aN: ,\n\nal\nao\n\n(x) 20 if\ne(y<o By) 2M - 3x\n\n#lyyro wf x<la\npinyco fF Xx>/a Lf,  :\n\n\\\n\ney 2 - 3x\n\nPe ipro wf xc lo\nmaeo Xx? /a Bey 20 if x!\nPiy)<o if x>/a f\nc\n\nae) a4 - ax\n\n \n \n\nIf (y)>0 Pe xe 1d.\nee i, >! Ly): x\n\n\\\n\n£(x)* A4- ax\n\nHIyyr0 Wf x</\nPly)co if x>/a\nso Fla) sf f ly 20 axel\nBeleyco if x>/a\ns (1) 's c/\n\nPix)? AM - ax\n\n  \n\n \n  \n\n(yy >0 mo xe ld\n£'(¥) <0 eee sc > / 2.\n‘se Fla) is mn vely Podthmets Meen— Geometry\nTrequal:+\n\n  \n\ny\nA\n\n1 RANE y0 1.\n\nwith equali+, ite a Av ithmeti Mean— Geomety\nTrequal f\n\nwith equality Av ithmets Meen— Geomet\nTrequal with equali+, Exe mets Mean— Geomet\nTrequal mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/calculus1/09_optimization/05_optimization-in-action/03_how-short-of-a-ladder-will-clear-a-fence.mp4", "id": 980, "text": " How short of a ladder will\nclear a fence? —\nGROUND aa ‘ fi\n\nPec, ROUND ee il\n\nNe LOUN D | = it\n\nNaNsA Ie\nSHEEP\n\n2, F\n\nGROUND GROUND p\nFIND f&\\ , GROUN [2 (> s+) mooculus.osu.edu ore"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/comparch/01_introduction-instruction-set-architecture-and-microcode/02_instruction-set-architecture-microcode/02_course-overview.mp4", "id": 1067, "text": " Computer Architecture\nELE 475 / COS 475\nIntroduction and Instruction Set\nArchitectures\n\nSegment: Course Overview\nDavid Wentzlaff\n\nDepartment of Electrical Engineering\n\nPrinceton University\n\nPRINCETON °\nGane PRINCE LON > aes ee les ees\net ae\nAN ee aes\n\nEe\n\n \n\n_— Course Administration\nInstructor: Prof. David Wentzlaff\nLectures: Two 80-minute lectures a week.\nSegmented into shorter content sections.\nText: Computer Architecture: A Quantitative\nApproach Hennessey and Patterson,\n5th Edition (2012)\nModern Processor Design: Fundamentals of\nSuperscalar Processors (2004)\nJohn P. Shen and Mikko H. Lipasti\nPrerequisite: Computer Organization (ELE 375) &\nDigital Logic (ELE 206) pa ak\nthes hans th TT hadi\nLd. dgahek AT lad\naa a\n8 able\n\n \n\n      \n\na =\nhie\nie\n\nde\nwea)\n\n‘\n:\nM\n\nbase\n\neat\n\nbade te / om anes ad\n\npee ase\niz\n\nya i. Pe ee\n»” State\n\nas a\n\n \n\nae a:\nA * a\nbeetle -4-1-4-11m\nae Cauky toate\nNipeett cebew\nee\nfy a te\n\nte it~ ae! aWiitae\n\nmn best aut\nve ae vs\ntee Acknowledgements\n\nThese slides contain material developed and copyright by:\n— Arvind (MIT)\n\n— Krste Asanovic (MIT/UCB)\n\n— Joel Emer (Intel/MIT)\n\n— James Hoe (CMU)\n\n— John Kubiatowicz (UCB)\n\n— David Patterson (UCB)\n\n— Christopher Batten (Cornell)\n\nMIT material derived from course 6.823\nUCB material derived from course CS252 & CS152\nCornell material derived from course ECE 4750 Copyright © 2012 David Wentzlaff"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/01_foundations-of-convolutional-neural-networks/01_convolutional-neural-networks/01_computer-vision.mp4", "id": 5234, "text": " Convolutional\n\n(CG) Neural Networks\n\nComputer vision\n\ndeeplearning.ai deeplearning.ai Deep Learning on large images\n\n—— Cat? (0/1)\n\n \n\n \n\n   \n\n3m\nxeD\n64x64 «3. tease c\nLR Covo, 24)\nX4 &. Gelli\nx.\n& [ood xlv0o XS 2 A\n= Baillie : y\n\nAndrew Ng y\n\n  \n\nAndrew Ng"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/01_foundations-of-convolutional-neural-networks/01_convolutional-neural-networks/03_more-edge-detection.mp4", "id": 5236, "text": " Convolutional\n\n(CG) Neural Networks\n\nMore edge\ndetection\n\ndeeplearning.ai deeplearning.ai Convolutional\n\nGC) Neural Networks\n\nMore edge\ndetection\n\ndeeplearning.ai Vertical edge detection examples\n\nAndrew Ng\n\n \n\n    \n\n \n\n \n\n-30|-30| 0\n\n0 |-30}-30) 0\na\n\n \n\n \n\n0 |30/30| 0\n0 |30/30| 0\n\n \n\n \n\n \n\n0 |30/30| 0\n\n \n\n \n\n0 |-30}-30| 0\n\n0\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n=)<]4 =|s]—\no[olo ooo\n=lala alalea\n* *\nelelolofelo e}sisisfs|s\nelololololo Seis sisis\nelelololelo glsisisis|s\neletalelsleltelelelelole\nelsisis[sisl] felelelelele\nelsielsisie olelolofelo 1 edge detection examples\n\n1ca.\n\nVert\n\n \n\nAndrew Ng\n\n \n\n \n\n \n\n-30}-30) 0\n\n \n\n \n\n0 |30/30| 0\n0 |30/30| 0\n\n \n\n \n\n \n\n0 |30/30| 0\n\n \n\n \n\n \n\n0\n\n \n\n \n\n0 |-30}-30) 0\n\n \n\n \n\n \n\n1\n\n1\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n1/0\n\n|\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nSi\n\n \n\n \n\n \n\n10/10/10} 0|0|0\n\n \n\n10|10}10| 0 | 0] 0\n\n \n\n10/10/10} 0|0|0\n\n \n\n10|10}/10| 0 | 0|0\n\n \n\n10|10}10| 0 | 0| 0\n\n \n\n10/10/10} 0|0|0\n\n \n\n \n\n0 | 0] 0 }10}10}10\n0 | 0/0 }10}10}10\n0} 0/0 }10}10)10\n0} 0} 0 |10]10}10\n0} 0] 0 |10/10}10\n0 | 0/0 }10}10}10 a\nVertical and Horizontal Edge Detection\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n= pI =\n1\\ 0 1 q[i][ a\n=> 1] 0 ]-1 —>/|0/0)/0\nTN.\nla/ 0-4 -1}-1]-1\nVertical Horizontal\n10|10/10}0 | 0| 0\n10|10|10] 0 | 0 | 0 a ale oj}o|o|o\n10/10}10} 0/0 | 0 '10]-\n\\2 | : ololo _ 30} 10 |-10},30\n0 | 0 {10} 10) 10) ala 30| 10|-10}-30)\n0 | 0 10/10] 10 olololo\n0 10] 10] 10,\nGxt Andrew Ng Learning to detect edges\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n1/0]-1 t lel & lig |=\n1/0}-1 >| 2/0] -2 lo] ©] -to\n1|0/}-1 ea ee B/D [ck\nx Sobel SMter San Cay.\nIo fw) 2 = «\n\\2 {e Z 7\\ 4 Conualusts an\n1|(5| Bi} 9}] 3) 2 { im aie\nLote tb sJ| 1) 3 | ee oe _ fT\no}1/3/1/7]8 WI |e ~\n7s, ws)\n4)/;2/1])6/)2/)8 ase\n2]/4|5]2]/3]9 “Fa [e a\n33 Andrew Ng Andrew Ng"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/02_deep-convolutional-models-case-studies/01_case-studies/03_resnets.mp4", "id": 5247, "text": " Residual Network “Osim rate”\n\n \n\nCr jl} jo JO\nO}\n\n> alll\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n@\nt——=\n]\n0\n0\n|\n0\nOOO\n4\n| [OOO\n[elere\nt\nOOO\nOO\n4\n(OOO-\n\n  \n \n \n\ntraining error\nz\nof\ntraining error\n\n   \n\n# layers\n\n# layers\n\nAndrew Ng\n\nfile etal S048; Dece:vesidua? networks dor imaee reooenition! Andrew Ng w\n°\n5\na\no\nOD\n\n&\ng\n\na=\nx\nfc]\n\n8\n\n1015. Deep residual networks for image recognition]\n\n \n\nAndrew Ng Andrew Ng w\n9\n5\ng\no\non\n\n&\n¢\n\nBel\ns\nB\n\n#\n\n1015. Deep residual networks for image recognition]\n\n \n\nAndrew Ng Andrew Ng w\n°\n5\ng\noO\nop\n\n&\ngS\n\nB=\no\n8\n\n8\n\n1015. Deep residual networks for image recognition]\n\n \n\nAndrew Ng Andrew Ng we\n°\nof\na\no\non\n&\n¢\ns\ns\n8\n8\n\n \n\nAndrew Ng"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/02_deep-convolutional-models-case-studies/01_case-studies/05_networks-in-networks-and-1x1-convolutions.mp4", "id": 5249, "text": " Case Studies\n\nNetwork in Network\nand 1X1 convolutions\n\ndeeplearning.ai deeplearning.ai Case Studies\n\nNetwork in Network\nand 1X1 convolutions\n\ndeeplearning.ai Why does a 1 x 1 convolution do?\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n(MD Blels[s 2416|--\n3(5[5[1/3[4\n2[1/3[4/9[3 . 5 _\n4{7[s[s|7/9\n1[5[3{7[4/8 T\n5[4/9[8[3[5\n6x6 «/ 32 —> ates —S—Sy1\nnod\nLy rd\n\n \n\n \n\n \n\n|\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n6xX6x 32\n\n[Lin et al., 2013. Network in network]\n\n \n\nAndrew Ng Using 1x1 convolutions\n\nReLU\n\n——>\n\nCONV 1x1\n\n&%\n3 Catia ta > 28 x 28 x3)\n\n\" ele tart Nato, Ne\n32 Liltes\n\n[Lin et al., 2013. Network in network] Andrew Ng Andrew Ni\n2013. Network in networl ns ig"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/02_deep-convolutional-models-case-studies/02_practical-advices-for-using-convnets/01_using-open-source-implementation.mp4", "id": 5252, "text": " Practical advice for\n\n©) using ConvNets\n\nUsing open-source\nimplementations\n\ndeeplearning.ai deeplearning.ai Practical advice for\n\nG) using ConvNets\n\nUsing open-source\nimplementations\n\ndeeplearning.ai pee ee es Tome\npues\nFore!\nPortree)\nRona ee\nfer\n\n \n \n     \n \n   \n  \n\n  \n\nTEN\nCes\n\neo eres\ncea\nPee tse\nCOCs tnst omer are\n\n \n         \n        \n \n      \n\nrene toes\neset creed\npad: 3\nScreed\n\nemcees\nMore (0%) Cre\ntop: “convi\"\nCece!\nCBT a\nPeres ae\nPeete ae eree ars\n\nree\nCora\ncue\nCre CMTE\nPesce\n\nMore (0%) Cire ray)\nPeay a aL)\nCeCe ee\nPeete\nPoste ent\nerm\n\n  \n\n \n\nSoar)\n\nRC Eee Ley)\nCee a et\nLe ree eis)\nSeat!\n\n \n\n  \n\n}\n\nBCU Te Cec mec ea oa Ls toe eae te er\n\neo (py | = See Deep Residual Networks er\n= pees\n\noe\nname: TONG\nol cee\n\n| top: |"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/03_object-detection/01_detection-algorithms/02_landmark-detection.mp4", "id": 5257, "text": " Object Detection\n\nLandmark\ndetection\n\ndeeplearning.ai deeplearning.ai ‘Object Detection\n\ndeeplearning.ai deeplearning.ai Object Detection\n\nLandmark\n\ndeeplearning.ai deeplearning.ai Object Detection\n\nLandmark\n\ndeeplearning.ai deeplearning.ai Object Detection\n\nLandmark\ndetection\n\ndeeplearning.ai JT? Sow!\n\nLandmark detection {Q) >=\" BBE ye\n\n \n\nby, by, bp, by\n\n \n\nAndrew Ng by, by, bn, by\n\nAndrew Ng . git apt\nLandmark detection {Q) >=\" Bek\n\nbh uay\nS.\n\n \n\nby, by, bn, by\n\n \n\nAndrew Ng by, by, bn, by\n\nAndrew Ng Landmark detection {9) >\" BEE -\n1c\n\n \n\nby, by, bn, by\n\n \n\nAndrew Ng by, by, by, by\n\nAndrew Ng Cont.\n\nLandmark detection ce\n\n    \n\nDy, by, Br, bw Ww, Boa, Vee\n\nIg)\nFe he, fry, i\n\nby pay, You bs)\n\nRog larg\n\nAndrew Ng. Andrew Ng."}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/03_object-detection/01_detection-algorithms/03_object-detection.mp4", "id": 5258, "text": " Object Detection\n\nObject\n\ndeeplearning.ai deeplearning.ai Object Detection\n\nObject\n\ndeeplearning.ai deeplearning.ai Object Detection\n\nObject\n\ndeeplearning.ai deeplearning.ai Object Detection\n\nObject\ndetection\n\ndeeplearning.ai Car detection example\n\nTraining set:\n\n   \n  \n\nx\n\n—\n= '\n= *\n= 0\nbd\n\nAndrew Ng Sliding windows detection\n\nut? ap Const\n\ncr\n\noo\n\n      \n\nAndrew Ng Andrew Ng"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/03_object-detection/01_detection-algorithms/06_intersection-over-union.mp4", "id": 5261, "text": " (G) Object Detection\n\nIntersection\nover union\n\ndeeplearning.ai deeplearning.ai a\nEvaluating object localization\n\n| hamedies, ow Gaien Qhe)\n\nsize ok SM\n\nSve _ se SS\nSie oF @\n\n“Correct” if =\n\nOb\n\n \n\nMore generally, loU is a measure of the overlap between two bounding boxes.\nAndrew Ng More gen@ ing boxes.\nAndrew Ng"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/03_object-detection/01_detection-algorithms/09_yolo-algorithm.mp4", "id": 5264, "text": " Object Detection\n\nPutting it together:\nYOLO algorithm\n\ndeeplearning.ai deeplearning.ai Object Detection\n\nPutting it together:\nYOLO algorithm\n\ndeeplearning.ai Training\n\n  \n\n1- pedestrian\n2- car by\n3- motorcycle\n\n  \n\n    \n\nOn OP SSP Hwee wee\n\n2\n\n.: I=\nL | ts\nEnid —~_EF ML )  _E\ny is3xX3x2x8\nlanane AN st doen i\n\nAordhor:\nAaxiQx FO “s (OD F1a0st Bex \\b\n[Redmon et al., 2015, You Only Look Once: Unified real-time object detection] Andrew Ng\n\nJ\nf\n¢\n)\n\nv Making predictions\n\nPe) TOE TO\n\nPe} 1O I\n\n \n\nby by\nby by\nbn by\nbw be\nG °\n2 \\\ncs =\n\nAndrew Ng Outputting the non-max supressed outputs\n\n+ For each grid call, get 2 predicted bounding\nboxes.\n\n* Get rid of low probability predictions.\n\n+ For each class (pedestrian, car, motorcycle)\nuse non-max suppression to generate final\npredictions.\n\n \n\nAndrew Ng Outpt suts\n\n \n \n  \n   \n\npunding\ns.\n\npreycle)\ne final\n\nAndrew Ng"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/03_object-detection/01_detection-algorithms/10_optional-region-proposals.mp4", "id": 5265, "text": " Object Detection\n\nRegion proposals\n(Optional)\n\ndeeplearning.ai deeplearning.ai Object Detection\n\nRegion proposals\n(Optional)\n\ndeeplearning.ai a\nFaster algorithms\n\n~> R-CNN: Propose regions. Classify proposed regions one at a\ntime. Output label + bounding box, —__\n\nFast R-CNN: Propose regions. Use convolution implementation\nof sliding windows to classify all the proposed\n\nregions. €—\n\nFaster R-CNN: Use convolutional network to propose regions.\n\n3. Rich feature hierarch\nt R-C]\n\ns for accurate object detection and semantic\n\n \n\nmentation]\n\n        \n\nAndrew Ng\n\n \n\ntime object d one ata\n\nAndrew Ng one ata\n\nFaster\n\nAndrew Ng a\nFaster\n\n    \n    \n\n<> R-CNN;3 one ata\n\nFast R-(\n\nFaster Jj\n\n[Girshik et. al, ation]\n\nAndrew Ng one ata\n\nFaster\n\nAndrew Ng a\nFaster\n\n    \n    \n\n<> R-CNN;3 one ata\n\nFast R-(\n\nFaster Jj\n\n[Girshik et. al, ation]\n\nAndrew Ng one ata\n\nation]\n\n \n\nster R-CNN: Towards real-time object detection with region proposal networks) Andrew Ng"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/04_special-applications-face-recognition-neural-style-transfer/01_face-recognition/02_one-shot-learning.mp4", "id": 5267, "text": " ©) Face recognition\n\nOne-shot learning\n\ndeeplearning.ai deeplearning.ai Face recognition\n\ndeeplearning.ai deeplearning.ai Face recognition\n\ndeeplearning.ai deeplearning.ai Face recognition\n\ndeeplearning.ai deeplearning.ai Face recognition\n\ndeeplearning.ai deeplearning.ai Face recognition\n\ndeeplearning.ai deeplearning.ai One-shot learning\n\nLearning from one\nexample to recognize the\n\na person again\na \"at\nSol tmoy\n\nFH\n\n \n\nAndrew Ng Learning a “similarity” function\n\n+> d(img1,img2) = degree of difference between images\n\nIf d(img1,img2) < t ‘Samm Nerbicobien:\n>T SQiReret”\n\nGagl ins»)\n\n \n\nAndrew Ng Andrew Ng"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/04_special-applications-face-recognition-neural-style-transfer/01_face-recognition/03_siamese-network.mp4", "id": 5268, "text": " ©) Face recognition\n\nSiamese network\n\ndeeplearning.ai deeplearning.ai Siamese network\n\n7’) “ encoblige ae\niO}\n& o-:\n(2)\n= a AP x) = WE) - S601,\n\n[Taigman et. al., 2014[DeepFacd closing the gap to human level performance] a Andrew Ng\n\nv\n9\n\n \n\nx\n\n40-00)\n|\n\n2\neo\n\n \n\n \n\n \n\n \n\n \n\nae\n&% DO: Oe | %O=00 <—\n\nA>\n€\nwy Goal of learning\nA\n\nl l L\n’@@ oe )-:\n\ne=\n\nos, ry\nParameters of NN define an encoding f(x)\n\nLearn parameters so that:\nIf x, x are the same person, ||f(x) — f(x) I\" is small. \\\n\nIf x, x are different persons, ||f(x®) -— f(x)])’is large.\n\nAndrew Ng Andrew Ng"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/04_special-applications-face-recognition-neural-style-transfer/01_face-recognition/05_face-verification-and-binary-classification.mp4", "id": 5270, "text": " ©) Face recognition\n\nFace verification and\nbinary classification\n\ndeeplearning.ai deeplearning.ai [Taigman et. al., 2014. DeepFace closing the gap to human level performance] Andrew Ng"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/04_special-applications-face-recognition-neural-style-transfer/02_neural-style-transfer/02_what-are-deep-convnets-learning.mp4", "id": 5272, "text": " Neural Style\nTransfer\n\nWhat are deep\nConvNets learning?\n\ndeeplearning.ai deeplearning.ai Neural Style\nTransfer\n\nWhat are deep\nConvNets learning?\n\ndeeplearning.ai Visualizing what a deep network is learning\n\n'\n>\n4 4\n\n26x26 13x13 13x13,\n55x55X96x256 © x 256x384 © 2\n224x224x3 110 x 110 x 96 t 4 t 4096 4096\n\nPick a unit in layer 1. Find the nine\nimage patches that maximize the unit’s\n\nactivation. 7\n\n \n\nRepeat for other units.\n\n \n\n[Zeiler and Fergus., 2013, Visualizing and understanding convolutional networks] Andrew Ng Visualizing deep layers\n\n \n\nAndrew Ng Andrew Ng Visualizing seep leyeNs\n\n \n\nAndrew Ng Andrew Ng sualizing deey Eyeas a 3\n\n \n\nAndrew Ng Andrew Ng Visualizing deep layers: Layer 4\n\n \n\nAndrew Ng Reggie Selea\nSee ari\n\na 7\nOY, alli\n\nhat ee\n\n \n\nAndrew Ng Andrew Ng Visualizing deep layers: Layer 5\n\n   \n\nAndrew Ng Andrew Ng Visualizing deep Evers Layer 5\n\n   \n\nAndrew Ng Layer 5\n\n \n\nAndrew Ng Andrew Ng Layer 5\n\n \n\nAndrew Ng Andrew Ng"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/database-management/01/03_course-objectives/01_course-objectives-video-lecture.mp4", "id": 1590, "text": " MODULE 1\nCourse Introduction\n\nLESSON1\nCourse Objectives\n\nMichael Mannino\nAssociate Professor\n\nData Warehousing\nFor Business He Business School\nIntelligence\n\nNe \"Or ee DENVER — Uh\n\nLESSON OBJECTIVES\n\ne Gain a perspective on the position of this course in the\nspecialization\n\ne Grasp the target learners for this course and the\nspecialization\n\ne Understand the broad objectives and prerequisite\nbackground for this course\n\n«@)\n\niy COURSE SEQUENCE\nCourse 1\n\nCourse 2\nCourse 3\nCourse 4\n\n==> Course 5 TARGETED LEARNERS\n\n(58 2\n\no\n=\n\n——\nIT Professionals\n\n@\n\nProject Management\n\nBusiness Analysts\n\nUniversity Students\n\noy PREREQUISITE BACKGROUND\n\ne Not an introductory computing course\n\ne Basic computing concepts and personal computing\napplications\n\ne No computer programming but detailed assignments\n\noy\n\nQ { SUMMARY\n\ne Basic course on database management concepts and skills\nPrerequisite background for other courses in the data\narchitectures track\n\nDevelop knowledge and skills for query formulation and\ndatabase development\n\nCareer opportunities for IT professionals as well as business\nand computer science students"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/database-management/02/01_database-characteristics/01_database-characteristics-video-lecture.mp4", "id": 1592, "text": " Data Warehousing\n—= | For Business\nIntelligence\n\nDatabase Management Essentials MODULE 2\nIntroduction to Databases and DBMSs\n\nLESSON 1 a\nDatabase Characteristics\n\nMichael Mannino\nAssociate Professor\n\nData Warehousing\nFor Business Business School\nSB\n\nIntelligence ONE ee Gesnee DENVER @\n\nWHAT DATABASES HAVE YOU EXPERIENCED\nOR INTERACTED WITH TODAY?\n\noy Ul\n«)\n\nLESSON OBJECTIVES\n\ne Define basic terminology\nand database characteristics\n\ne Provide an example of a databases Decision\nMaking\n\ne ATTA gg ie\n\ni\nSAN\n\nVe aul\nan\nRN\n\naN\n= DATA |\n\n\\ 22 40D\nws\n\"I\n\nom\nwe o\n\nWS,\n\nUH a\"\n\nOl a\ngo\n\no7 UNCONVENTIONAL FACTS | ”\n~\n\n© 0 OC: 9 ES\n\nPersistency @\n\nInter-related Hy mae\n\ne~\nOe sie 9) °\nrn “5\n[ e\noe\n\nInter-related\n\n& / 6a\nct %\n\nShared f / y\n\n“a A\nCe\n\n\\P\n\nCom\n\nRe r ~~\n\n&\n\\e\nS|\n\n' - \\P\n\ns)\n\n( Mi\n«) \\\n\nEig 125)\ni? mz\na (tC Grade\n\nRegistration Recording\n\nFaculty Course\nAssignments Scheduling\n\nGS [Student Offering \\Faculty ]\nStdNo OfferNo FacNo\n‘StdClass OffLocation —Teaches--—©+| FacSalary Oh\nStdMajor Offtime ho FacRank\nStdGPA Has FacHireDate\n{_____ +\nE | Sapeni\n—s | °— Supervises\nAccepts | Pt\nRegisters g Course |\n|__.!Enroliment CourseNo\neae | CrsDesc\nEnrGrade CrsUnits SUMMARY\n\nDatabases and database technology\n\nvital to modern organizations\n\nDatabase technology supports daily operations\nand decision making\n\nUnderstanding existing databases\n\nis crucial to query formulation\n\nEmphasize structured data\n\nof shared,\n\n \n\nnt"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/database-management/02/02_organizational-roles/01_organizational-roles-video-lecture.mp4", "id": 1593, "text": " MODULE 2\nIntroduction to Databases and DBMSs\n\nLES Bone\nOrganizational Fol\n\nMichael Mannine\nAsaqciate Professor\n\nData Warehousing\nFor Business: A\nIntelligence @\n\nWHAT ORGANIZATIONAL ROLES\nINTERACTING WITH DATABASES\nDO YOU WANT TO PLAY?\n\nUT\nWw Ul\nWY\n\nLESSON OBJECTIVES\n\ne Discuss organizational roles in functional areas\nand information technology departments\n\ne Think about your career interest\nespecially your potential roles in\ninformation technology departments\n\noy Q\n\nun vs. wo. iam\n\n<>\nSs\nwe ©® ((0 (tC Entities:\n\n| Customers\n\n| Meters\n\n| Bills\n\n| Payments\n\n| Meter Readings\n\nRelationships:\n\n| Customers Make Payments\n| Employees Read Meters\n\n| Bills Sent to Customers Payment\nBilling Processing\n\nMeter __ | Service\nReading Start/Stop BO\n\nIndirect User aa\nParametric User\n\noy Power User Developer cr\n\nData Administrator Accounting\n\ng (sis\n\nInformation\nTechnology Do you want to be focused on people skills\nand interaction, technical skills and tasks, or mix\n@ of people and technical skills and tasks?"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/database-management/02/03_dbms-overview-and-database-definition-feature/01_dbms-overview-and-database-definition-feature-video-lecture.mp4", "id": 1594, "text": " Data Warehousing\n—= | For Business\nIntelligence\n\nDatabase Management Essentials MODULE 2\nIntroduction to Databases and DBMSs\n\nLESSON 3\nDBMS Overview and Database Definition Feature\n\nMichael Mannino\nAssociate Professor\n\nData Warehousing A\nJ} For Business Business School\nwe 7 Information Systems Program\nIntelligence UNIVERSITY OF COLORADO DENVER @\n\nHOW DOES A DBMS DIFFER FROM\nDESKTOP SOFTWARE SUCH AS\nA SPREADSHEET OR WORD PROCESSOR?\n\n>\nSG\nWe Ul\n«)\n\nDBMS FEATURES\n\nData Acquisition\nStorage\nDissemination\nMaintenance\nRetrieval\nFormatting s\n2\n5 (=\n.\nx\n\n—\n—\n\n—\n\n2 — ee\n2 — i\n=_— = = oe\n—\n== 7\n\nmE Microsoft Uyquill\nae mine\n\nicrosoft\n\n=\nTT\n=a UNIX\n\nos Microsoft =\n\nENTERPRISE DBMS’s\n\nOrganizations with very large databases\n\n \n\nThousands of simultaneous users\n\n \n\nStrong reliability & performance ORACLE 77M], ORACLE ORACLE A\n\nDESKTOP DBMS's\n\n \n\n  \n \n\nSmall workgroups with smaller databases\nTens of simultaneous users\nModest reliability & performance EMBEDDED DBMS's Student Offering Faculty\n\nStdNo OfferNo FacNo\nStdC\n\n   \n\nS OffLacation Teaches FacSalar\n\n \n\n \n\n  \n\n|StdMajor Offfime i FacRank |\nIstdGPA f Has FacHirsDate |\nSupervises\nAccepts Ps\nRegisters & Course\nEnrollment *» Co\n\nCrsD\nGrsUnits STRUCTURED QUERY LANGUAGE\n\nSQL is used to communicate with a database.\nIt is the standard language for relational database\nmanagement systems.\n\nExample:\nCREATE TABLE table_name\n(\n\ncolumn_name? data_type(size),\ncolumn_name2 data_type(size),\ncolumn_name8 data_type(size),\n\nS ir Hy\n\nUl\n« dustin ARCHZ(25 BITE) Mo\nspan vancma2.2s B17) no\n[ee es ee oes\n\n(OBE Taran ae om =\n\njoer,\n\ncolumn. EIT data ee\n\n} ‘ata |Contact states Tes stb Dependence ett Paton dees SO\n2D eter.\n\nBL coumeiyuve|l oar ne ae rll ou. commons\nIEGLoTeE ID MRGER(E,0) Ho ‘Primary tay of\n\n2ETEST WOE VARCHARZ(ZO BYTE) Yeo 2Firet nese of\naust — vARCREZ(35 BITE) No Stas nese of he\nspan ‘aRCMR2(25 BATE) to tra id of che\n' PRCUE_MINAER VARCHAEZ(20 BYTE) Yeo ‘Phone suber of\nGumoue | mare » ‘sbace when oh\n72010 ‘ascmz(10 BYTE) 0 oureest 32 of\n\nesuan moarnie,2) es |xoaeny salary of\n9 cOGSSION PCT MRER(2,2) Yes 3 comtanicn per\nwoamsrn_tD  MRAERIC,0) Yes aomaneger 44 of\n4 DemRTmT 19 wmarn(ejo) Yes Lideparcnene i 4 - ORACLE RELATIONAL DIAGRAM — 2 Pettoniips ea a > ~ PLANNING FOR DATABASES\n\nPlanning is essential for databases,\neven for small workgroup databases. TRY EXPLAINING TO AFRIEND >\n\n?\n® «\nOC A AA Cm\n\nMe 4 DBMS\n\nA collection of components that\nsupports the creation, use and\nmaintenance of databases. NON-PROCEDURAL ACCESS\n\nSet-oriented\nOnly need to specify what data to\nretrieve rather than how to retrieve it."}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/database-management/02/07_dbms-technology-evolution/01_dbms-technology-evolution-video-lecture.mp4", "id": 1598, "text": " MODULE 2\nIntroduction to Databases and DBMSs\n\nLESSON 7\nDBMS Technology Evolution\n\nMichael Mannino\nAssociate Professor\n\nData Warehousing\nFar aUsness Business School\nWP Intelligence\n\nCRRESSEE ‘CF Aes DENVER THAN h\nA\n\n \n\n|\n]\n| “ae TN\ni“\nPS\ndg i} HEEL ISS\nSS 7)\nTL aH qi 1\n\n«) i} HIS WHAT COMPANY PIONEERED EARLY ADVANCEMENTS\nIN RELATIONAL DATABASE TECHNOLOGY?\n\noy\n\nNe i @®) «(| tt \\ i | Dh\nANN \\\\\nGe\nA | a LESSON OBJECTIVES\n\ne Appreciate the advances in database\ntechnology and the contribution of database\ntechnology to modern society\n\ne List the major periods of database technology\nevolution and one advancement in each period\n\noy Hi\n\na\n\ncn\n\n———\n\nA ZL SS\n\ni\n\ni i Ne ’ a , Generation\n(1980's)\n\nRelational with\nnon-procedural access\n\nGeneration\n(1960's)\n\nFile oriented\n\n \n    \n   \n  \n\n    \n\nssing and data ware-\nsing\n\nCan store and manipu vention\n\n \n\njata types\nConver\n\nand dynami\n\n   \n\nGeneration 4th Generation\n(1970's) (1990’s+)\n\nNavigational Object oriented fc wl ,\n\nHIN\n\n}) Ti\n\nHT MTTtl ]\n| HTT AA\nI i \\ \\ STS\n= 4 BUSINESS INTELLIGENCE PROCESSING\n\nTWH\nPET Tty Q 4\n| \\ a\n\n|\nH I . BUSINESS INTELLIGENCE PROCESSING\n\nAN\nNE : \\\nNis\n\n \n\n(\nA i b BUSINESS INTELLIGENCE PROCESSING °Q\n°\n¢\n5\nQ\n°\n=\nz\n¢\n=\nz\n9 iN\n\nDIN\ny) Q\n(g.\n°\n¢\n5\nQ\n°\n=\nz\n¢\n=\nz\n9 NN\na \\\nYX\nI\na /})»\nY\n|\nHH]\nHHH)\n\n°\nve\n°\nic\n5\nQ\nfe)\n=\nz\nic\n=\nz\n9 HN\n\n( c\n\nA\n\nos h ( i iid J (f Nn\n\\\\\n\\\\\n&)\nGRY NN\nHig rH, Y\n\nca\n\ni\n\n/f} /\n4A]\nWi)\n’\n\nrit\n\nAAW \\ AM i\n\n\\ 4A N OPTIMIZED FOR BIG DATA\ni AN\ni ay)\n\nce\n\\\n\n \n\nTH\nEET\nTT tN\nHI Nt IN OPTIMIZED FOR BIG DATA\n; BIG DATA GROWTH\n= x0\n\n| ot\nOn\n\nS\nA\nB\n\nly) e\n. | 8\n(ol)\n%\nm ©).\n\nBIG DATA GROWT a\n\n| ®\ncm %\nCB\n\nmH ©)\n\nES\nZ)\nB\n\nUL ae\nSe 4\n\nGo\nm ©).\n\nBIG DATA G NOSQL\n\nA NoSQL (originally referring to \"non SQL\") database\nprovides a mechanism for storage and retrieval of data\nthat is modeled in means other than the tabular relations used\nin relational databases. NoSQL systems are also called\n“Not only SQL\" to emphasize that they may\nalso support SQL-like query languages. Hy\n\nof\n\n \n\n>\n| ENTERPRISE DBMS's\n\n¢\n\n)\n\n» i\n\nif\n\n \n\nhi HOT\n| ail\nH] hy ] A | Wh\n\n|\naULI iy) BM mb\n\n=== MySQ\nIm Microsoft\n“TERADATA\n\ni Dh\n\nySQu\n\nHH wr\nIY TERADATA\n\n \n\nE> ie A\\\\\n\n \n\n«. . cd i Dh\n\nySQu\n\n=\n\n.\n=\na\n\nif\n\n“TERADATA i N\n\nh i ) \\\nIh ] HAWN\nY if KK {EU Hf y }\\ \\\\\nSs ny\ny\n\n}\n} q\n\n\\S ’ )\\\n\nc\n\nWe a\ng\nA\nib\n8\nGo\n&\na\no Y A\nae ae ir\nAANA VAIN I\nI) N\\A HN\n[ / NN\nIf LIN | i |\nj | ETA \\\\\nLEI {le HW, SN OPEN SOURCE DBMS PRODUCTS\n\n© Source code is available for free.\ne Service contracts are available for a fee.\ne Typically have a lower cost of ownership.\n\n@ g\n\ne\n\na A\nHA i),\n\nK\n\\\\ Ww Wp “Tt Ki ¥ iis\nANY}\n/ i i\nAh KN)\nH\\\\\\|\n1] ii}\nTI\\\\ HK\nVAAIT i} Cie\n\nH} il\n\n|\n\n(\n\n“ “ay SUMMARY\n\ne Databases and database technology are vital to modern organizations supporting\nboth the daily operations and decision making.\n\n« Database technology has undergone remarkable evolution over 50 years.\ne The industry remains highly competitive with a continued high level of innovation.\n\nGy | AN\n‘iin:\n\ncr\n\nLT\nHi\nTELLS i ————————\npanned\n="}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/dwdesign/01_data-warehouse-concepts-and-architectures/03_course-topics-and-assignments/01_course-topics-and-assignments-video-lecture.mp4", "id": 1744, "text": " Data Warehouse Concepts,\nDesign, and Data Integration LESSON OBJECTIVES\n\ne Understand course topics and course flow\n\ne Understand assessments especially practice and graded\nproblems\n\ne Obtain software\n\nQ\n\noy eee Archi\n\n= \\\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\na\n\nge COURSE TOPICS >)\n\n \n\n \n\nPivot Table Manipulation\n\nDesign “== > Data Integration\n\n  \n\n \n\n \n\n   \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nD |\n\nsham COURSE FLOW\n\n \n\n+ Motivation and\ncharacteristics\nArchitectures\n+Project\ncharacteristics and\nmaturity model\n«Employment\nopportunities\n\n \n\n \n\n+ Mult-imensional\ndata model\n\nMicrosoft MDX\nlanguage\n\n+ Pivot table tool\npractice\n\n \n\n \n\n \n\n \n\n \n\n*Scehma patterns\nand summarizabilty\nproblems\n\n*Schema intergration\npractice\n\nEnterprise data\nwarehouse\ndevelopment\n\n \n\n+Data integration\nprocess concepts\n\n/=Change data\ncharacteristics\n\nData integration\ntechniques:\n\n \n\n \n\n \n\n \n\n \n\nArchitectures and\nfeatures of data\nintegration tools\n\n+ Overview of Talend\nand Pentaho tools\n\nPractice with\nPentaho Data\nIntegration Ul\n«@)\n\nASSIGNMENTS\n\n \n\nPivot Table Manipulation Schema Integration\n\n \n\nData Integration Workflow ®\n\nDATABASE\n\nTOOLS\n@pentaho-\n\n \n\n[J Pivot4J Skettle-\n\npentaho data integration\n\nORACLE . SUMMARY\n\ne Balance concepts, design, software skills, and\nmanagement practices\n\ne Assignments for schema design, pivot table manipulation,\nand data integration workflows\n\ne Usage of open source tools for pivot table manipulation\nand data integration workflows\n\n \n\nSS"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/dwdesign/02_multidimensional-data-representation-and-manipulation/02_data-cube-operators/01_data-cube-operators-video-lecture.mp4", "id": 1751, "text": " Data Warehouse Concepts,\nDesign, and Data Integration MODULE 2\nMultidimensional Data Representation and Manipulation\n\nLESSON 2\nData Cube Operators\n\nMichael Mannino\nAssociate Professor\n\nData Warehousing ;\nFor Business Business School\n% Information Systems Program\nIntelligence\n\nUNIVERSITY OF COLORADO DENVER .\n\n» rl tes,\nLNT\niN WN\na \\\nu A\nHA\ni l Wal)\nA id a) '\\\n\nA @\n\nWHAT IS THE GENERIC MEANING\nOF THE VERB “PIVOT”?\n\nWHAT DOES PIVOT MEAN\nFOR A DATA CUBE?\n\nQ\n\n&F LESSON OBJECTIVES\n\ne Explain usage of each operator\ne Demonstrate each operator on an example data cube\n\nY oy nies =\n\nVv) - |\n\nWii \\\\\\ NAN - SLICE SUMMARIZE VARIATION >\n\n \n\n \n\n \n\n \n\ne Replace a dimension with a\nsummary of its values across\nall members\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nTi\n«@) \\ DICE OPERATOR\n\ne Replace a dimension with a subset of values\ne Dice operation often follows a slice operation\n\n \n\n \n\n \n\nCalifornia 60\nUtah 50\n‘Arizona, 4 ag 60 =\n‘Washington 75 a5 | 45 45\n(Colorado 6 45 | 85 60\n\n \n\n¥\n\n(Utah, Colorado, Arizona Dice)\n\nUtah\n‘Arizona\nColorado a = = a Q\n\nNAVIGATION OPERATORS\n\nOperators for hierarchical dimensions\nDrill-down: add detail to a dimension\nRoll-up: remove detail from a dimension\nDistribute or recalculate measure values\n\noy f\n/\n\nDRILL-DOWN EXAMPLE\n\n \n\n \n\n \n\nCalifornia 80 110 60 25\n-Utah\nSalt Lake 20 20 10 15\nPark City 5 30 10 5\nOgden 15 40 30 10\nArizona 70 55 60 35\nWashington 75 85 45 45\nColorado 65 45 85 60 PIVOT OPERATOR\n\ne Rotate or rearrange dimensions OPERATOR SUMMARY\n\n \n\n \n\n \n\n \n\n \n\nSlice Focus attention on a Replace a dimension with a single\nsubset of dimensions member value or with a summary\nof its measure values\nDice Focus attention on a Replace a dimension with a\nsubset of member values | subset of members\nDrill-down | Obtain more detail about | Navigate from a more general\na dimension level to a more specific level\nRoll-up. Summarize details about | Navigate from a more specific\na dimension level to a more general level\nPivot Present data in a different | Rearrange the dimensions in a\n\n \n\norder\n\n \n\ndata cube SUMMARY\n\ne Operators for subsets, hierarchical dimensions, and\nrearrangement\n\ne Well developed commercial languages and tools for\ndata cube manipulation\n\nUU\n«@)"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/hadoop/01_hadoop-basics/01_lesson-1-big-data-hadoop-stack/01_hadoop-stack-basics.mp4", "id": 2437, "text": " Hadoop Stack cassia\n\n \n\nNatasha Balac, Ph.D. y ie\npe ~\n\nBe pre Pa\npO oe x\nsp Se Dy ry\n7) pre ds Scalability is at its core! XE Ley iA\n\n \n\n. 2\nHardware Failures Handled Au’ vA)\nrou New Approach to Data\n\nKeep all data New Kinds of Analysis"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/hadoop/01_hadoop-basics/01_lesson-1-big-data-hadoop-stack/03_hadoop-distributed-file-system-hdfs.mp4", "id": 2439, "text": " Hadoop Distributed File\n<« System(HDFS) Distributed, scalable, and portable file-\n\nsystem written in Java for the Hg\nframework ce) ! Secondary\n\\ flameliods NameNode\n\n| aoc DataNode DataNode DataNode\n\naaa Gos eso BB\n\na ele\n\nea\n| I Road | MapReduce Engine\n\nWolo Tile\n\nTask Tracker\n\nyf Apache Hadoop NextGen\nMapReduce (YARN) HADOOP 1.0 HADOOP 2.0\n\nMapReduce Others\n(data processing) (data processing)\n\nMapReduce\n(cluster resource management\n& data processing) What is Yarn?\n\n* YARN enhances the power of a\nHadoop compute cluster\n\nev T va LNT 7 ated\n\nSupports Othe\na ola toys \\ors\n\npS Yex<] (= ee Additional Application in the\nHadoop Ecosystem"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/hadoop/01_hadoop-basics/01_lesson-1-big-data-hadoop-stack/04_the-hadoop-zoo.mp4", "id": 2440, "text": " __The Hadoop \"Zoo\"\na ’\n\n \n\nNatasha Cet ai OS Apache Hadoop Ecosystem\n\nAmbari\n\nProvisioning, Managing and Monitoring Hadoop Clusters\n\n%\n&\n\nSqoop\n\nR Connectors\n\nWorkflow\n\nYARN Map Reduce v2\n\nDistributed Processing Framework\n\nWw\n\nZookeeper How to figure out the Zo0??\n\n) Google Stack MySQL\nGateway Evenflow\n\n  \n    \n\nMySQL\nGateway MySQL\nGateway Evenflow Petal)\n\nMySQL\nGateway Sawzall\n\nDremel MapReduce / GFS\n\nChubby Sawzall\n\nMapReduce / GFS\n\nBtn]\n\n \n  \n\nGateway a\n\n  \n\nace\n\nMySQL\neC NY Bye Taal )|\n\nte eae\n\nMySQL Sawzall ~\npe MapReduce / GFS Ves\n\nChubby Dremel\n\nMySQL\nGateway Byes)\n\nMySQL\nGateway eye yantl}\n\nEvenflow Evenfiov|\n\n    \n   \n  \n\nDremel\n\n \n\nE72: ||\n\n \n\nMySQL\nGateway\n\n        \n   \n\nMapReduce / GFS\n\n \n\nChubby L=VZ-Tahi fo)! > Dremel\n\nMySQL Bigtable &\nGateway NVETiacre leew Ke aS) ' vy\n - eye yantl}\n\nEvenflow Evenfiov|\n\n      \n   \n\nDremel\n\n \n\n          \n        \n\n \n\nE72: ||\nYR Sear\nGateway MapReduce / GFS ry °\nae\nChubby A = Dremel\n\n  \n  \n\nMySQL\n\nBigtable\nGateway ¢ ie\n\ng\n\n      \n   \n\nMapReduce / GFS\n\nwr\n\n \n\n=\n\nChubby Bigtable ie\ney MySQL\nGateway MapReduce / GFS\n\nMySQL\nGateway MySQL\nGateway\n\n; Bigtable\nee en a |\nEvenflow Evenflow Dremel\n\nTigi y, Bigtable A\n; is\n/ Ag\n\n     \n    \n\n \n\n     \n \n\n   \n\n  \n \n \n \n\nSE\n(eC : MySQL\nGateway Azkaban Azkaban\n\n \n\nSqoop tek alc)\nKafka eer ee\n\n \n\nSqoop Lele Mal)\n\nVoldemor’\nKafka —\n\nZookeeper Flume, Sqoop Flume, Sqoop Apache Sqoop\n\n* Tool designed for\nefficiently transferring\nbulk data between\nApache Hadoop and\nstructured datastores\nsuch as relational\ndatabases"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/hadoop/02_introduction-to-the-hadoop-stack/01_lesson-1-overview-of-the-hadoop-stack/01_overview-of-the-hadoop-stack.mp4", "id": 2443, "text": " Overview of the\n-* Hadoop Stack Hadoop Stack Transition\n\nHADOOP 1.0 HADOOP 2.0\n\nMR Pig Hive Others\n(batch) | ataffiow) || Gal) |! (cascading). StFEAM, Services\nBase\n\nPig Hive Others\n(data flow) (sql) (cascading) Applications ano\n\n© — a scalable data warehouse with support for large\ntables.\n\n— a data warehouse infrastructure that provides data\nsummarization and ad hoc querying\n—Ahigh-level data-flow language and execution\nframework for parallel computation\n\n— a fast and general compute engine for Hadoo\ndata. Wide range of applications — ETL, Machine\nLearning, stream processing, and graph analytics. Deureten) mea aca Dance Been Resource Management, Scheduling: * ' YARN-based system for\nparallel processing of data Apache PIG Hadoop in the Spark world"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/hadoop/02_introduction-to-the-hadoop-stack/02_lesson-2-the-hadoop-execution-environment/01_the-hadoop-execution-environment.mp4", "id": 2446, "text": " The Hadoop\n_-Execution Environment The Hadoop\n_-Execution Environment |\n\nPee\nre\n| The Hadoop\nExecution Environment.\n\nBe NextGen Execution Frameworks\n¢ Enter: Execution frameworks like\nYARN, Tez, Spark\n\n¢ Support complex directed acyclic\ngraph (DAG) of tasks.\n\n¢ In memory caching of data"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/01_your-first-computer-program/07_simple-games-and-animations-with-sequence-selection-and-iteration/01_balloon-party-changing-the-looks-of-our-sprites.mp4", "id": 5415, "text": " @ play\n@ @® create\n@ @® program Oe\na A 2\nep? “08?\n\n*\n\npest\n\n2 yourself |! @ play\n@WE@® create\n®® program\n@ repeat\nre) ©\n©\n\ncode yourself ! Scratch 2 Offline Editor\n\n \n\nCa gy\n\n \n\n   \n\ni Operators\nCy\n‘S>\nQO\n\n   \n\noe Sea se Scratch 2 Offline Editor oe\n\n   \n  \n\n    \n   \n     \n     \n \n   \n   \n \n\n+ 1 lle» ThePC + Detop\n\nOrganise + New folder one\n\nLe btoupsge ona sao) PGF\n8h reeing dec arco\n\n5 eeetne doce\n\nBi screenshots pat\n\nGB} SoftmareDevelopment docx\n\n    \n\n21m Tec\n\n \n\n   \n\n   \n\n  \n\n \n\n=\nNew spre. O /\n= fm United\n\nee re «\n\nNew sprite. @ / <3 a a aed ee\n\nfm United ee\n\nEse yw\n\nNew sprie O / <2 a\n\n‘e CA eed\n\nPe @ 2 | Breese | souras\n\nsae\na/oo i — Pees (oe cd Pee)\n\nUnites\n\nSere\n\noe\n\nNew spre O / ess\n\nTe unites =\n\nwets\n\nmeee olour Dy ay int the cat touct\n, the\n\n \n\nolour y point the g\ncolour a rere)\n\nTm United Seapta | Costume\n\ni: une\ni a\n\nUtes CEDRB GF wer caity Tos Adowt Ste\n\nwowsome:  / <3 Pees)\n\n{Unites\n\n.. =\n\nemer 4\n\nNewsprie: O / a CEES\n\nIm Unutes\n\nNewspre O/ a j fers\n\nNewspre O/ a EERE Gtr conv Tos sow es\n\n{5} Unites\n\nNewspre O/ a Peer)\n\nnow sonic /\n\nrotator sty: (oe\non drag a ptayer: BE\nnow: CEE Pere\n=e = .\n\nF-| bee Feros)\nPe @ 2 | comme | saunas CER GS ruer cae Tos About oe\nPe @ | 220 | cetera | seins\n\nee fee\ni Feros)\n\nE = CER GS ruer cae Tos About oe\nPe @ | 220 | cetera | seins\n\nee fee\ni Feros)\n\nSepia | Costumes | So\n\nNew spre O / a New spite O / a {mH Untties\n\nemey we €\n\nNew spre O / a Peer)\n\nso\n\nce\n., Sess\nnew spre © / New spre O / 3 ae es\n\nUnited\n\nrenee\n\n=r ee\n\n3\nos\ncE\nnewspne @ /\n=\n> SE United\n\n“Se Pees bt\n\nTm Unites =e ™\n\neee\n\nE-:\n\nney\n\nNew spre O / a Pe\n=e = ;\n\ni! PEs\n\n{united\n\nos\n—]\nca\n=\n\neRe ye\n\nnew spnte O/ a\nS—— fm Unvites\n\nree\n\nwoe we\n\n‘New sprite: s/aa PEs\n\n{united\n\nrere\n\newyu €\n\nnew spnte O/ 2 @\net neo Utes\n\n¢ he\n\nnewsone @ / a munities\n\na\n\nNewsprie O / a im\n: o\nte.\na = | —- a\nSar\n7 he Co\n\n> =\nE\n\nSome .\n\nTee, i\n\nma\n- 7\n\n[i ae cms & na\n\n=e SE\nea iu =p is\n: i\nx : Iam\n\nss _ oes aoe CE.\nSe THE UNIVERSITY a la\nof EDINBURGH “—_"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/01_your-first-computer-program/07_simple-games-and-animations-with-sequence-selection-and-iteration/03_blow-the-clouds-away.mp4", "id": 5417, "text": " @ play\n@ @® create\n@ @® program Oe\na A 2\nep? “08?\n\n*\n\npest\n\n2 yourself |! @ play\n@WE@® create\n®® program\n@ repeat\nre) ©\n©\n\ncode yourself ! New sprite O / a seemed Gy\n\n2g Ure:\n3 Documents\nMase\nPiers i=) &\n\nJ Computer\nSu Uberes Sytem Folder\n\nNetwork\n\nSunny Ovy ee\n\n{= sunny Day ee fame\n\n‘Sunny Day\n\nNewsprie O / 2 a 7\n‘\n\nan\n\n  \n\nat ie\n\nal\na\nA 1) position the cloud over the\nsun\n\n2) move the cloud to the right\n\n8) ensure the cloud moves\nwhenever we blow over the\nmicrophone oe fees\n\n‘Sunny Day @\n\nNew spite O / a Eo ee\n\n7 i\n\nvents\nSensing\nOperators\n\nBice cts CSR OD tee cade tee tien Pea\nPe @ ce [cairns | samc\n\n| feo [E~ EE =\n\n  \n   \n    \n\n \n\n(6-240, ¥:0) 060, ¥20) 06240, ¥:0)\n\n0, Y-180)\n\n‘Sprites New sprite & / Be KX\n\nfm Sunny Day\n\nSo\n\nNew sprite & /\n\nem\n\n \n\nEs CO a ae xx\n\n‘Sunny Day\n\nSprites: New sprite O / a\n\nzt)\n\nw/oa Newsprte O / a Se\n\nNewsprte O / a BEDR © ter rake Ton Att fess\n\nfm Sunny Day\n\nNew sprite & / a 1) position the cloud over the\nsun\n\n \n\nmicrophone ee\n\nNew spite O / a [he a ened\n\ni Sunny Day\n\nNew spite O / a {Sunny Day\n\nSprites: Newsprie O / a\n\na/om sure the cloud moves\n=r we blow the ee Fess\n\n‘Sprites New spite O / a ===\n\n“soa 2exx\nTm sumy day =e“\n\n[= re\n\nte\nToss Bese 800\n\n   \n\n    \n   \n\nNew sprite O / a fees\nio : Everts\n{sunny Day fa\n. <=\n\nNew sprite & / Poperioe:\nBecce iocrs\n\nNew sprite & / fees\nio : Everts\n{sunny Day fa\n. <=\n\nNew sprite & / GSR Grae tee tos mt rent\n\n           \n\n \n\nSumy day Seagal | toa\n: od\nfon Pieneece\n\n \n\n  \n   \n\n‘Sprites New sprite & /\n\n—<\n\n“soe\n\nvay G50 tae ciny ton Ano\n\n[Pisce acts eee rrr!\n\nfm) Sunny Day\n\nNew spate O / a ee ee Pets.)\n\n            \n   \n\nSarpts [Costumes | Sounds\n\ncontrat\n\n \n\n    \n\nNew sprie O /\n\n‘anh ao\n\nif\nUR\n\n \n\nAa\n\na\n\nCH | THE UNIVERSITY ee ORT\nof EDINBURGH —_"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/01_your-first-computer-program/09_bonus-interviews-optional/02_interview-with-an-audiovisual-producer-spanish-with-english-subtitles.mp4", "id": 5421, "text": " \\ia programar!\n\n‘ENTREVISTA\n\n6 ©) WALENTINA BARACCO\n| fe) PAOQUCTOAA ECUTINA\nHAUTORAYREALLZAQORAAUDTOVISUAL He IY TC\n\n \n\nLCA eC a ON a\nUNIVERSIDAD ORT URUGUAY\n, DOCENTE DE mec DE ARTE EN CINE ¥ Ve\nae buco UNIVERSIDAD ORT URUGUAY\nif\n\n. wee 4\n4 a. Te\n-\n» ve\nMCs caahaantela nts\n\nee BARACCO Manone\n7, a . ae a .\nDOCENTE DE DINECCTON DE ARTE ENV CINE.Y TVs\nees tea UTE UNIVERSIDAD ORT URUGUAY\n, § (Cae da  Aa\nONL\n\ned ,\n\nDOCENTE DE mca ARTE EN CINE: Y TVs\nat UIC) UNIVERSIDAD ORT URUGUAY\n\n> DOCENTE DE mec DE ARTE EN CINE ¥ i\nsee VALENTINA BARACCO UNIVERSIDAD ORT URUGUAY\n\n—_ 3 a\nMena acaa u\nthe TALENTINABARACCO TENN) aa =\n\n—_— 1 = ca al mea Van tai Rees The\ni Ny) uC) ESOT\n\nAD ORT URUGUAY\nmee <4 : | |\nTT << 3\n\n  \n\nJENNER ae ae Ae\n\npl a DOCENTE DE DIRECCTON DE ARTE EN CINE Y TVs\n\nees VALENTINA BARACCO Ty OO\nr ry y”©~— ee UNIVERSIDAD ORT URUGUAY\n\nTy \\ ALENTIN A R AR, aay [ mena DE ARTE EN CINE.Y TVs\nOR? . Vesta) rae\nWat\n\ny oes of EDINBURGH “—_"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/02_code-gone-loopy/02_loops/05_drawing-squares.mp4", "id": 5427, "text": " @ play\n@ @® create\n@ @® program\n@ repeat code yourself ! @ play\n@@® create\n@ B® program\n@® repeat\nO\n(8\n©\n\ncode yourself ! mm REIN THESAND MUTT AVGENSNULA anN RTRs NU DRAWING ASQUAREL REPEAT 4\n-MOVE 10 STEPS\n“TURN $0 DEGREES TO THE RIGHT [ad\n\n{ml Unived pe)\n\n   \n\n \n\nnew spate O / CG0UE © fey car Toe see\n\n     \n  \n\nMere Bioes\n\n \n\n \n\n4 ea\n\nJ\n\nSs oo ®\n\nSK a\n\nao\n=o\n=D\n\nSpotes new spite: © / ae\nry\nSc\n\n \n\na/oe EEE\n\nml Unied ne\n= Jrisr00\n\n \n \n\nBucreaiece\n\n \n\n \n\n \n\n=f a=\neS Totes ie tr mont]\noo\na\n= a _\nSmee\n\n \n\na/oe Sprites New sprte: © /\n\n \n\na/oe\n\ning: ed ress\n\nunites ®t\n\n  \n\n \n\nNew spete:  / Ge\n\n \n\na/oe 2x x\n\n   \n\n \n\n \n\nPe @ 22 | cosumes | sinc CY\nPerera | (cat | oe Cee mes |°\nfae |\nty a)\na\n’\n.\nOS oO\ntS} °\nag T\nrm\n&\nQ Se Oo\n\nNew sorte: O / 2\n\n \n\n \n\nQ=Q\na/ee 1008\n— Vector Mode\n—\n\n‘Comsestobamap Costume Library\n\n4 @&e @ Pf xa 7e (con ced\n\n    \n \n\n-@e@\n\n \n\nSpmtes new spone: O /\n\na/oea GHP (© fe conv Tos diet\n\n \n\nI\n\n \n\nMere is\n\n \n\n \n\nSprites newspmte O / a\n\ne/a © te Tos About\nUnies ne\n\nsprites newspme O / a\ne/a ae) ot\n\nPe @ | 2 | cose\n\n     \n\n \n\na moe\nasia eo Tips About Pee\nfm Untied\nsores rewsone $7 6\nae\na/se (Untied\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nSprites\n\nw/e\n\n \n\nnewsore O/ Orns’\n\nTHE UNIVERSITY UNI Teeee,\nof EDINBURGH “_"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/02_code-gone-loopy/03_birthday-card/01_birthday-card-butterfly-behaviour.mp4", "id": 5428, "text": " @ play\n@ @® create\n@ @® program\n@ repeat code yourself ! @ play\n@@® create\n@ B® program\n@® repeat\nO\n(8\n©\n\ncode yourself ! BIRTHDAY CARD PROGRAM\nBUTTERFLY DIALOGUE O) =\n\na\n\nFLYING BUTTERFLY ©) BIRTHDAY CARD PROGRAM\nBUTTERFLY DIALOGUE O)\n\nFLYING BUTTERFLY ©)\n\nCAKECANDLES\n\n \n\nha Scratch 2 Offline Editor\n\n \n\n \n\n==\na newsorie &/ Oe\n\n \n\nw/oa Eiay we &\n\n‘Sprites Newsprie  / a/ee\n\nSptes Sprite Library\n\n- ©7 7 © @ @ BI!\n\nLetters\nPeople\nThings\n\n- ©4353 O@B v\n\ncity\nFina Beachbal sutton:\nHotaay\n\nMusle and Dance\n\nSpace\nSports\nUnaerwater\n\nwaikng\n\nArrow Batoont Bananas Baseball Basketball\n\nal\nstmap\nVector a\n\n{Untied\n\n‘About\n\n   \n\nnewsorte > / a Untitled\n\n \n\noe cine A8\n\n \n\nrm ym «\n\n‘Sprites New sorte: © /\n\n \n\nSe cue\n\nee tnaoe am 74\n\neu fe:\n\nbo R007 28\n\nVector Mose\n‘Cometio nian oe eed\n\nfm Untied\n\n \n\n= a fi -\na/ie i.\nQS (a\n\nUntied\n\n \n\ni.\n[on ons nl New sprte: © /\n\nUntied\nSpies\n\na/ie\n\n \n\n(oe eed CEE O tw cov tos hom\n\ni} Untitled\n\n \n\n \n\n@\n\n   \n\nson vee 67 a\n. *s\na/ée ee eed\n\ni} Untitled\n\n \n\n \n\n@ Untied\n\n   \n\n‘Sprites New sprte.  / 1 @ GONE tier exe Tor sw\n\n   \n \n\nrue ne 6\n\na vewsote O/\n- Ss\naja Untied Sprites\n\nUntitled Untitled\n\n \n\nSptes\n\n \n\n——\n\n[os\ni]\nca\n\nCEs\n\noe\nnewsone O/ Untitled\n\n       \n \n\nreyes «\n\n— rewsonte / a\ne/a ¢\n\na.\n\nie\n\na/ee\n\na\n\n‘Sprites New spre O / a\n\nos Untitled\n\n   \n\noa vont 0/7 om\nfia) as\na/ie Ce\n\nUntied\n\n    \n \n\n‘Sprites New sprite > /\n\n-\n\nw/oa ed\n\nUntied Untied\n\n     \n \n\n \n\n‘Sprites New sprite: > / ed\n\nUntied Untied\n\n     \n\nra\nios\n\naa sensei 0/7\na/ée ed\n\n \n\n \n\nip\" rein et\ni) ee\nUnited\n\n \n\n         \n\na sono 6 /\nPag\n_ te\na7aa\n\n1\noo\ni\n==\nee)\noy Te unites =e\n\nSprtes New sprte\n\na/oe ed\n\nUntitled MUL LOTR AT Tio\n\n \n  \n\n \n\n= newsorte © / 2 Untied\n\n   \n\nsotes vewsonte  / a\n. ey\ne/a ‘Sprites New spnte: @ / a eed\n\n{Untied\n\n \n\na sensei 6 /\n. +2\na/ie\n\nI\nons\n=\n=\nGl es\nDate tie ans | {mea {im unavea Co ed\n\nel Untves\n\n \n\nSprites Cd\n\n{ml unvea GEOU (© tee cot tos shes\ni) United ed\ni) United Untied\n\n   \n \n\n‘Sprites Newspnte: © / 1 (a eed\n\n   \n \n\n \n\n[Untitled\n\n \n\n \n\na\nSee —\nie =\n—\na Emel =\n__ te fie =\naaa oa\n4\n= a=a 1 ¥\n\n‘Sprites Newspnte O/ a\n\n \n\ne/a os newsoie  / (a ed\n\n   \n\n  \n\nm_unetes se ; esy) =\n1°\n> ia e\nge cx\na cE\n=\n—\nme eat Lea =\nPea |\nSaal =\nar\n=a a=Q\neee os newsoie  / (a Med\n\n   \n\n  \n\n{Unties me rs -\n|? e\nae\n\n—\n=\n= we\nPm,s.|\n\nGrae om\nar\n=a a=aQ\nPeer os newsoie  / (cc nace\nm_unaites se\n\n   \n   \n\n  \n\n.\n| ta\n|\n\nae =\nie =\n|\n= ee -\n__ te fie =\n\na =\n4c\n—as asa\nere Untied ee\n\ney 19\n\nNewsprte: © / Ga fm Untied THE UNIVERSITY CY eae\nof EDINBURGH “—_"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/02_code-gone-loopy/04_event-driven-programming/01_face-effects-with-event-driven-programming.mp4", "id": 5432, "text": " @ play\n@ @® create\n@ @® program\n@ repeat code yourself ! @ play\n@@® create\n@ B® program\n@® repeat\nO\n(8\n©\n\ncode yourself ! aD\n\nPavcng\n\nEvents are things that\nhappen, occurrences\nor actions that take\nfolctece <a. EMG LVENT-DRIVEN\nPROGRAMMING & ‘Scratch 2 Offline Editor\na eo Ps\n\n \n\n \n\ncostumes,\n\n    \n\nNew costume:\n\nofa\n\nOD ca\n\na¢ Clear Ads impor\n\n  \n\n—_ e\n\nSoe\n\ntaeffsery |\n\nxe is «Aw\n\nspies newsorie @ /\n\n \n\new esto a=Q\na/oe 100%\nBitmap Mode.\n\n \n\nComverttovecor Coxe Mae ce See\n\nfim Untitled Pe @ 5198 | Costumes | sounds\n“ ton evens [a]\nsound -\nbe Borea0s eo\n1\n\n \n\n  \n \n\nemmys «\n\nSprites New sprite: © /\ni\nory\new ners:\na/ee fey EetY Tes Atost\n\n \n\n<0\n#4\n\n  \n \n\nxn r we\n\ntessa O/ eon ee a Pee\n\n \n\ni ‘Events\nee Cont\nata Bice sic\n\n    \n \n\nOY =,\n\n=\n\n \n\nspntes newsprte: @ / <2 Untitled io ms\na Untitled THE UNIVERSITY UNIVERSIDAD ORT\nruguay\nof EDINBURGH"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/02_code-gone-loopy/05_software-requirements-design-and-implementation/05_helicopter-game-implementation.mp4", "id": 5437, "text": " @ play\n@ @® create\n@ @® program\n@ repeat @ play\n@@® create\n@ B® program\n@® repeat\nO\n(8\n©\n\ncode yourself ! Sprite Library\n\ncatey\nanima ase\nrary\ntates\n\nveo\n\n‘Arpiane s car-Bug Convertbiet Convertible\n\nFyving Convertoies Hetcopter Magic Carpet Salboat Spaceship street Cleaner\nHoliday\nMusic and Dance\nSpace\nSports\nUnderwater\nwalking\nType\nall\n\nitmap\nVector\n\noK || cancel =@\n\na i =\n| :\n\nmy «\n\nNew sprite: > / i a a eo\n\nBice seas\n\nnew sprite: & / <a Pa Ema\nPe @ | 22% | costes | sounss\n\nE Operators\n\nes a ChE\n\nene y wo @\nsprites New sprte: & / <i sr\n\nie Soo\n=\n=a\n\nw/oa To =e\n\nPen m\n\nx20 y me @\n2 Newsome / <b\n\nFSS\n= =\n\neee\n\nayia Sprites new sprite: & / <2\naS)\n= eam\n\na/oe I\n\nMoce Blocks\n\ne2oy wo @\n\nNew sprite: O / i @ re\n\neae y wo «\nsprites New spate: © / <a\n\neS\n\nHetcoptr\n\nNee ao:\na(eo\nPaintfew vackarop\n\n \n\nStNX\n\n‘Scipts | Gackarops | Sounds\n\nvents\n\nLooks Conta\nsound Sensing\nOperators\n\nBice cc\n\nStage selects:\nNo motion ocks > Fey Edt Tips About\n\nPt @ 598 | B3e%ps | sounds\n\ngs\n\\\n-\n\n@\nKe\no\ngo\neal\ni\n\nmay wo «\n\nNewspite & / Eo\n\ngs\n\\\n-\n\n@\nKe\no\ngo\neal\ni Sn\n\ngs\n\\\n-\n\n@\nKe\no\ngo\na\ni Ea\n\nPt @ 5298 | B2etope |” sounds\n\n —_—\n\n“\n\nemer\n\nnew sprte: @ / eo\nPe @ 5298 | B3etops. | sounds\n\nfoackeropt ———d)\n\ngo\n~\n-\ne\na)\n>\noa\nB\nnm x20 yam «\n\nnewsprte $ / Pe @ 5198 | B3etop| seunds\n\ngo\nNY\n-\ne\ni\n\no\noa\n2\n2 [oracle a\nSfgen_| Costes | sounas\n\nfreicomte ‘Add import\n\nNew costume:\n\no/aa\n\n\\S\n\ni\nF\n\n\\S\n\naorta\n\nse\niN\n=\ne\nT\n>\na\n\n&\n2\n\n20 7 180\n\nspntes Newsprte: @ /\n\n100%\n\nBitmap Mode\nConvento vector spmtes newsente:  /\n\n=D\n\ne/a [scearce ge Sa Rae Pes)\nPe @ | sein | cxstimes | suns\n\ni= oe\n\nBee pears\nToss Bice 20a\n\n20 9 r\nspmtes newsente:  / LEN KO\nCostumes. | Sounds\n\nii\n\nSee\nspmtes newsente: @ / <b [scearce ge Sa Rae Pes)\nPe @ | Sei | cestimes | sons\n\nMotor\n\nfous Bitereaioces\n\nspmtes newsecte:  / of HELICOPTER PSEUDOCODE\n[MOVE 10 THE RIGHT)\n\nwhen right arrow key pressed\npoint to the right\n\n‘switch costume\n\nmove 10 steps sprites eee\n\nans\n\na/ea E20 yo 4\n\nnews ¢ / et)\n\nee\nsorts vewsone ¢ /\n\naS\n\nw/oa ey,\n\nsprites New sprite: O / a\n\n= 20 ¥ 41\n\nsprites Newspnte: O / <i x\n\nmie\n\nw/oa one an\nSpies newspate $ / sprites\n\nE20 ¥ 100 4\n\nNew sprite: & / <2)\n\nLe\nor\n(180) down one an\nSpies newspate $ /\n\nmi)\n\na/ae =\nsomes newsente: @ / <b ® Scratch 2 Offline Editor - oe\nfat Tips About Pee)\nPe @) S208 | comines\ni=\nPours sensiea\nPon Toveratos\nBcc tocts aes\n\nCoico\n\nPett)\n\nE20 180 4\n\nsprtes New sprte. © / <i\near\n& =\naed henge y by\n\n \n\na/eo\n\n2\n\"\n2 E20 180 4\n\nsomes newsente:  / <i\n\nae\nop\n\nw/oa sprites eve y 00\n\nnewsecte: > /\n\nmS\n\nw/oa New sprite © / 20 ¥ 180 4\n\nnew sprte:  / Ga\n\nmy\n\nw/oa (ecrc  e\n\nNew sprite: & / <2 sf HELICOPTER PSEUDOCODE\n[TOUCHING THE CLOUDS)\n\nforever\n\nif touching a cloud then\n\n‘say “Ouch!” =e =\nMonon\n\nE20 128 4\n\nNew sprite: O /\n\n \n\n=\n=\n=\n=\nSa\n=\n=a\nfaa re\n\nON\n\n‘ee.\n20 80g\n\nNew sprite: > /\n\n‘Scipts | Costumes | Sounds\n\nI nen ie\n\nPoa Bore soa\n\nByford\n\ncD\nop\nce [arc a\n\nSa\n\nera y 44\n\nNewsprte: © / <i\n\nmove € steps\n> CSE re\n\nSS\n\nE20 ¥ 1D\n\nNewsprte: © /\n\n‘Soipis | Costumes | Sounde\nsoton j=\n\nty\n\nTew Bove\n\nTous Biers eioces\n\naD\n\nCyr Eee (=o\n\nro\n\nsprites revs O/ oy LT\n.\nSvea\n\nSe 20 #0\n\nNew sprite: O / <a\n\nsprites\n\n5 eo REET TT)\na:\n2h\na/ée of HELICOPTER PSEUDOCODE\n[REACHING EDGE]\n\nforever\n\nif touching edge then\n\nswitch backdrop to next cloud configuration cs\n\ns HELICOPTER PSEUDOCODE =r =\n[REACHING EDGE] [eae a\n\nsprites\n\nPe @ 2199 | Costes | sounss\n\nE20 ¥ 1 4\n\nNew sprite: © / <i =e\n\nSpite New spite: /\na\na/an\nes _e@ =\nTicton\n\n—, es\n\njos Cet)\n\n2\nae\n\nSe ener\n\nsprites newspie O/ oa & =\n=r\nak\nn/a\neae fais\n-@\n\n(or ee\n\nre)\n\nSpntes newspte $ /\n\nFi Ras change color effect by\n=\na\na/ea or\n\nSprites new spate: /\nSoe fe\n\nw/oa BEPRE © tur tar tor tw\n\n=\n20 ¥ #8\n\nNew spate: / eh\n\nsprites SS\n\nSes E20 yo 4\nsprites Newsprte: > / <i\n\naS\neo ee\n\nres\n\nfee en) [or a ee\nne Sevpts es\n\nFe Se\n\ni te\nBere ioc\n\nsprites New sprite: > / <a\n\neo ed\nSnr seer = &) [ocrarc ac\n\nn@ ‘Scipis | Costumes\n\nSEs\n\n100 80 4\n\nNew sprite O / jG new sprite: O / <a [ore a\n\nspmtes newsente:  /\n\nre THE UNIVERSITY SEY aeeee\nof EDINBURGH —"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/02_code-gone-loopy/07_bonus-interviews-optional/01_interview-with-a-software-engineer-spanish-with-english-subtitles.mp4", "id": 5439, "text": " ia programar!\n\nENTREVISTA\n\nTNGENIENO EN SISTEMAS\nGFNTOR DIRECTOR OF TECHNOLOGY\n\n  \n\nEDUARDO MANGARELLE\n\nMICROSOFT LATIN AMERICA pale NLM aa NNNVAVE NASAL\nUNIVERSIDAD ORT URUGUAY Ife (oho)\n\n   \n\n     \n\nFit oe a\nio anton\nNG I Urata UNIVERSIDAD ORT URUGUAY\n\noe\nia NLA a NNEVEN ASANTE\nUNIVERSIDAD ORT URUGUAY, Pa ma\nOo\n7\noO\npa\n\ni\n\n= eal\n\nere tert\nBe eee Microsoft ~*\nnear\npe en _\n<= a\n= NE Se Microsoft Kyo)\n\nM1 Microsoft\n\nrs\nonnae\nTT yd\nEa ®\nrat Microsoft hee FX SX\n\nHe\nhie dee\n\nHet te,\nLae\n\ndl\n\ni Microsoft bors t ieee eae\nSitters\nSS oa *:\nSESE\n\nMicrosoft Microsoft ,\n\ni\n\n(\n\nMicro Microsoft eee\nPe Microsoft =\noO\n2)\nO\nSome\n=\n= Microso ras\nPxee\n\nfer Fee Microsoft\n\n \n\n \n\nseh\n\noe\neth\n\n \n\ns\n\na\nne WH rs\nMicrosoft WV Cel vexyey ii _ Microsoft. S\na\nanes\nower den et\nidee eel\nPees g ft ¢\npee eS\nSee\n\nfe\nfo)\n2)\n(e)\na\n—\n= “s\n\nICroso\n\n \n\niM . —\n(oe)\nWN\n(e)\n=\n2\n>= Microsoft\n\n       \n\nea er\na NUM aya NNN Asay\nUNIVERSIDAD ORT URUGUAY, Microsoft\n\n    \n\nerr: ae Sens\nING. EDUARDO MANGARELLI crater\nVig Prey a» ta NLM aya NNW Asan\n; NG am ren ian UNIVERSIDAD ORT URUGUAY,\nyt cone a. | he——_— Microsoft Vile cexxeyi \\ L\n, IC ‘Oo\n| @\nj »(\nei Me fehso)i WWillenesye- J\n\nMicrosoft a Microsoft Oe ape” rr aa\nlien eee\n\nror\nor Microso yt oer\n* ibd aoe\n\nthet Bathe!\n\nery\na Microsoft ccetege ee herey ie\n\noe\n\nPa\n(oe)\n17a)\n(eo)\nSe\n\na\n\n= Microsoft et\nPa ey\nPeet Microsoft Vile Microsoft Pree oe\n\nrd\nPr Microso &\neo)\n2)\n{e)\nte\n\n4\n\n= M\\ilteagekxeys Pa ma\nre)\n—\noO\na\n4\n= Pr\n\nee?\nsegue?\nrd Microsoft Prone\nar ee ee | Microsoft DOCENTEDE INGENTERTA DESOFTWARE\n“W6 ung ee tat UNIVERSIDAD ORT URUGUAY, Microsoft\n\n  \n\nNaa NAVAN Asay\nae at ft UNTVERSIDAD ORT URUGUAY\n\nte oe —_l(<iéj: iS Ng i wo erie\nOL ———— Microsofé\n\n    \n\n= *\nhe Late eel ey rh,\neet vee eh\nz pene aks bet\n\n \n\nNG nT ARDO Ny INGARELT NLM aa NENW ASA\n\nUNIVERSIDAD ORT URUGUAY,\nKeo, aa\n\nx Microsoft\n\n \n\ni i. '\n\nONC LAVOM SUA LAC\n\n \n\nPETE SO UMUC\n\nWARREN oo ll pk eae\noh vaaee® Mi\nNicrosoft fake bX\n\nkA\nLeer e hd\npeat\naoa\nnaebee Microsoft Pa ma\n(oe)\n179)\n(e)\n—_\n\n—\n\n= Microsoft 6\n\neel\n\nMi Microsoft Cy\nwees\n\n—\na\n4\n\nMicrosoft Microsoft al\nas\nPa een\nem Microso er\nST =\n\n=_\n\n) Ooo Microsoft Ps a\n‘@)\nm\nve)\na\nSs)\noo\n\n \n\ntHe yy ¥\n\nn ee\nSr Microsoft Vile cexxeyi ce\n\nSSS ks\n\n{\nX\n\nie\n\n6\n\nMi\n\n“ 4\nSipe ees\nso '\nSee ak\naa iY\n\na\na)\nmae of EDINBURGH — > 4; > 4\nCOTND\n\nTHE UNIVERSITY CNV Ee ORT\nFuguay\nof EDINBURGH"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/03_remixing-games/02_variables/01_helicopter-game-extension-with-variables.mp4", "id": 5442, "text": " @ play\n@ @® create\n@ @® program\n@ repeat code yourself ! @ play\n@@® create\n@ B® program\n@® repeat\nO\n(8\n©\n\ncode yourself ! TAEDA anebis is @ space in the\n3 Memory wiereaws\nnheid information used iby\n\nelm e ime relia VARIABLES\nNAME DAVE\n\nAGE ]\n\n \n\na a fe Seven cent\n\n(Ce ee ao\n\n \n    \n\nfm) Helicopter Pe @ sei | costumes | se\n: = Events\n= LS\n\n  \n\n     \n \n\nMaks a Variate eyo. ok oe\n\n2©\n\noe as\n\nee\n\n      \n\n  \n\nMake ast\n\nK20 yt\n\nnewspnte: © / [cerca\n\n{mi  Helicopter\n\n \n\n \n\ni\n\nHET Becco acess\nMake avanable\noe\n\n        \n\neyo. ee\n\nED.\n\noer)\n\n       \n \n\nMake a List,\n\nx20 40 §\n\nNewsprie:  /\n\n   \n\nw/oa ae\nocr xrc aa\n\n \n\nfm Helicopter\n\nsprites\n\n \n\n2s\n\nw/oa\n\nre\n\n  \n\nvewspne 6 / 2 cD\nre “USER DOCUMENTATION” i) § | DUA UA 1 |\n> = ae\n(oc ee ae\nfm) Heicopter Ke\ni\n\n   \n          \n \n  \n\n \n\nSprites ew spite:  / a\nES\n\n   \n\nQE)\naaa ST Scratch 2 OffineEator Se) e)\n\nGes ee\n\n \n\n \n\nIm Heicopter pe @ | cee Ln\n\n \n\n      \n \n\nx20 ye 0\n\n=\nvewspne ¢/ 2G ES Sprite Library\n\nCategory\nal\n‘Animals\nFantasy\nLetters\nPeople\nThings\nTransportation\n\nheme\ncaste\n\ncy\n\nFrying\n\nHotday\n\nMusic and Dance\nSpace\n\nSports\ntunderwater\nwalking\n\nal\n\nimap\nVector\n\noO\n\nBaseball\n\nButton\n\n=\n\nBasketbal\n\na\n\nButtons\n\n>\n©\n\nBeachbal\n\naS\n\nButtons\n\n&\n\n%\nus\n\nBananas\n\nButton\n\ncanate x20 ye 1\n\nNew sprite / i Gx\n\n \n\nCostumes | Sounds\n\nFO\n\n[batons aie lear\n\nte eorBei’s\nes)\nul\na\na\nFy\ni\nE} er ae\n{m_ Helicopter\n\n  \n\nfeel\n\nIe operators ee\n\nfan\n\n \n\ner)\n\n   \n   \n\n‘Sprites, New spite O / fan\n\nx20 ye\n\nNew sprite & / i Ge\n\n  \n\nbe Poveraocs\n\nEvents\ncontro:\n\nHsensing ROEM Oca ems ton sont\nIm) Helicopter\n\n[ns es EEN)\n\n \n\n    \n\n-@\n\nx aie ye\n\nNew sprite & / i Go\n\n \n\nmes | Sounds\n\n \n\naa\nPrion (es\n| Fe [sensing\nBes Plover\nHET Pes ccs\nr~-)\n\n \n\nMake ast THE UNIVERSITY eee,\nof EDINBURGH —"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/03_remixing-games/03_remixing-pong/02_modifying-pong-with-complex-conditions.mp4", "id": 5444, "text": " @ play\n@ @® create\n@ @® program\n@ repeat code yourself ! @® play\n@@® create\nB® program\n@ repeat\nO\n©)\n©)\n\ncode yourself ! niatisabo\nsewement\n\n \n\n \n\n \n\n \n\n \n\nNew sprite: © / a\n\n‘This is what nappens when te\ntouches the paddle or the red in|\nYou can cnange wnat\nhappens when the bat\nhis me paddle\n\n \n\n    \n   \n   \n  \n \n\na/oe\n\nQ=Q ACCESS EMAIL\n\ncorrect username provided AND\n\ncorrect password provided OPTIONS FOR NOT GETTING WET\n\nunder open umbrella OR\n\nwearing raincoat TRAFFIC LIGHTS\n\nNOT traffic light red PSEUDOCODE s\n\nif today is weekday AND (NOT today is holiday) then\ngo to school THE UNIVERSITY ae es seter\nof EDINBURGH “—_"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/03_remixing-games/04_guessing-game-and-flower-animation/02_a-flower-garden-with-nested-loops.mp4", "id": 5448, "text": " @ play\n@ @® create\n@ @® program\n@ repeat code yourself ! @ play\n@@® create\n@ B® program\n@® repeat\nO\n(8\n©\n\ncode yourself ! sce na 7 @ | 222 Lo— | ee\n\nLots cant\nsoins Semana\nBoss Bore socks\n\nCes\n\nNew sprite. & / <j x\n\nSe xz wes 4\n\nnewsote C/O aera\na es\n\nfm Flower Garden\n\nwowsprie © / <b mee yer 4\n\nnent C/G New sprite.  / nent C/G revsoite O/ oem © fm) Flower Garden\n\nxo yas 4\n\nnewspte C/G Bere aiocss\n\n \n        \n \n\n   \n  \n  \n  \n   \n  \n   \n\nCoton\n\n \n\n20 ye 4 a eer e)\n\nSprites Newsprte O /\nCtr)\nA:stamp is only a temporary image of the\nes) ste thot kan onthe Stage. can be\nSass\ni er dean o cet sng the Cac\n\n‘A stamp cannot move and cannot hold scripts fm Flower Garden\n\nx20 ¥\n\nvewsoite © / <3 fm) Flower Garden\n\nx20 ¥ 4\nNewsprite O / 20 ye\n\nNew sprite: O / Gy fm) Flower Garden\n\nnews C/G Pe New sprite: O / Gy {Flower Garden\n\nNew sprite. / ee\n[ccrais i MC aaa\n\ni) Flower Garden\n\n     \n    \n       \n   \n     \n   \n\n \n\nversie @ 72\nono\neres New sprite. O / Gy ® ‘Scratch 2 Offline Editor =\nCa\n\n \n\nFlowerGarden\n\n \n\nBicson evn\n\nET | coors:\n[sous =\n\nPen onertrs\naa eresocks\n\n    \n\nsprites newspte / 2 CE\n\nQe\n\nol\n\neA\n\ncA\nys\n\ne2l ores)\n\nSee)\n\nsae Lo\n\n[veins\na/ae\n\near\n\nws rmyn 4\n\nsprites newspte / 2 CE Tm Flowercarden ne >\na Events:\nsala cote\n\n@\nS8eeseee\n\nge]\n3\noe\n\ncorn\nspntes newspcte: © /\nSE) eur y wo 4\n\nspntes newspcte: © / Ae &\na aN aMtay Na § ;\naa NY 4 oTxe®\n\nTHE UNIVERSITY OI\nof EDINBURGH —"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/03_remixing-games/07_bonus-interviews-optional/02_interview-with-a-biotechnologist-spanish-with-english-subtitles.mp4", "id": 5451, "text": " ia programar!\n\nENTREVISTA\n\n \n\n \n\nLORENA BETANCOR\n\nDOCTORAEN BIOLOGIA MOLECULAR\nTNVISTIGADORA Manian emettien\nUa Ta ri E ; Lee MCCANN AEM NaONONNUaE\neg) OK ya DOCENTEINVE meant a enninuad\na) uy poe a\n\nDOCENTE INVES rn ROUT L\nUNIVERSIDAD ORT URUGUAY\nRTS” NCAA MNaOONNUAE\neae ey eats nen OE URqOUNA A\na Ter ae J Ese)\n\nUCASE NC fu ay un if AON A\nben hg eT SL mu ee\n\n \n\nPy ry : i\") i nn i BT ea mC orc nT uta aren o MUR\nUES te aN\ni YY\n} FOP A\nMica en\nSN ass\nWy\nFu\nUCN aA O NAINA\neile AY nA Ya Di\n\nfi\nTc |\n\ny)\nse acl enti\nDi ui Ta TN TL\n\noe | 3 Me ranelunn UE moana\nsee STD ut a\nCea un guy vu Nae\n\n \n\nPy OY A Warr i i i uta ‘Sey aan nea nari Maynnanntad|\nsee SS vu vod NCAA Na OnQNNLad\nue Bui UE we LUNIVERS eT ANA UENs nected\nUNAS OLUUAE URUGUAY 4)\n\nWet 1 tata arent Nay LaE\nUVa) Mi UU UCN a NSM Na ana\nUS) dl uy ve ret i matter\naa se UNIVERSIDAD Wi UU ea nen Nay OnTNNNLad\nDu DAD MM UVGUN ra raat UE Mantel\nNn) iN Le | mann HV TeSHG NNR Na ee\nuu LORENA BETANCOR ee aK wa\noN a1 BS iM na a Out ea i ann\nibs wy) yi Hl | pe DUE\n\n \n\nrk ” A ui ENABET ANCOR NGA Pai\n\ni ee THE UNIVERSITY SS a OE\nof EDINBURGH “ee"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/04_reusing-your-code/02_procedures-and-generalisation/02_generalising-a-program-for-drawing-squares.mp4", "id": 5454, "text": " @ play\n@ @® create\n@ @® program\n@ repeat code yourself ! ©)\n(©) ©\n\n@® program\n@® repeat\n\n@ play\n@@® create\n\ncode yourself ! ed <a\n\ntm Draw Squares Pt @ se | Costumes | Sounds\n\nPiston i= by\n\nBooois Conor\nHsaina sensing\n\nPen\nata\n\nMake a Bock\n\n‘Aad. Extension\n\ne207 4\n\nspies ew sprte: @ / BE scaich 208\n(src ea a\n\n{ml Draw Squares Pre\n\nte ¥ 08\n\nNew sprite: / 1 Gx BF Scroich 208\ned cme\n\nDraw Squares Pe @ 8208 | costumes | Sounas\n\nBoone\ni\nOrta\n\nMake aBiock\n\n‘Aad Extension\n\nrere «\nspies ew sprte: © / (Qiaiarn\nval ite\nWW aan.\nANS\nWi Qatiiath\nANS Ny\nWet\n\nBAN EAT Qraciam\nWoo\nWs “\n\nPAT NY Qian\nANN\nWs —\nQian\nWOE\nWs n“\n\na +S fi qq atm lle\nWoon\nWek\n\nPAT OY ~~\nQiaiam\nWOE\nWe n“\n\n4 a y qq mat\nANS\n\nWei th\n\nBA man! —\nmE\nWoe\nWe n“\n\neA ven’ (rata\nANY\nWs Qrariath\nWOE’\nWH “\n\nGAEL PARAMETER ae ala PARAMETER\n\neeu ein: ce ee)\n| A parameter.is a value that is\npassed to some procedure. Pe @ 5298 | Costus\n\nPoston\nHosoi con ==\n\nake a Bock\n\neS\nRomo\n\ne2e na @\n\nSprites New sprite:  / <1 © Seraich 2 Offine|\nCa Mee\n(Draw Squares Pe @ | sa | costumes. | Sounds\n\nHsoina sensing\nfe I\no\n\ncoe Peete!\n\nMake a Bock ete eee\n\n‘Ada an Extension\n\nEmons 4\nsprites New sprte: © / at\n\n  \n\nWh\nWY\ne\n\nYE):\n\na\n\nanv BS Serich 3¢\n[ccRATc dL Aaa\n\nDraw Squares\n\nSprites\n\n \n\nPe @ | Baie | costes | Sous\nPitcicn j=\n\nBicors tl (oh Co\nFsounra—[sensing\n\nDeen Tovecators\n\nbs f=\n\nMake a Block\n\n‘Add an Extension\n\nee ym 4\n\nNewsprte: O / 1 Ga BS Scratch\n(Sex\n\nfm Draw Squares re\n\nrare\n\nzie ye\n\nNew sprite / Go ee\nDraw Squares Pe\n\n \n\nze yaw 4\n\nNew sprite: > / {ml Draw Squares\n\nSprites\n\neee\n\neo\nJosten\nPisois\n\n \n\n \n\n \n\n \n\n \n\nmize ye &\n\nNew sprite / a 1\n\nMA\n\nWW\nys) NG) om\nQvacvcam\n\\\\\\ a,\nWet\nBANA! ——\nQaiam\nVn\ni a\nWA\" gratia.\nWow\n: A\n“ au IAC Mb UL Y\n\nRepent Mme (oy\n\n \n\nThe modification of a\nouccrele-lunlk-ie) that it can be\napplied to a wider range of\n\nrelated problems.\nNaS 288 —\n: :\n/\na\\ AM (Qrariai\nWO\nWet\n\nBAN van’ gaan\nANS\nWel (Qrariiam.\nWOE\nWet\n\nCAAA! a\naa.\nISS (iain\nWO\nWe “\n\nGALE =~\naa.\nx WAAL!\n\n~~~\nQian\nWOO\nWs “ Uhh\nWY\nws a) ie) arate\nWoon’\nWe\n\nMANUEL anaes\nMWOoe\nWet\nAeA! (Qraricatn\nANA xv\nWs an\n\naus Byar(ain.\nWoe\nWs n\nSAVER! THE UNIVERSITY TS\nof EDINBURGH weragas! NL\nSe\n\nsly,\n3\n\nTHE UNIVERSITY UNIVERSIDAD ORT\n( ruguay\nof EDINBURGH"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/04_reusing-your-code/03_cloning-and-modularity/01_hunting-ghosts-with-cloning.mp4", "id": 5456, "text": " O\n(©) ©\n\n@® program\n@® repeat\n\n@ play\n@@® create\n\ncode yourself ! CN by = yaw\nCY »\nI eo r\n5 <= a \\\nabe ese S :\nSo <F\na\n/\nf\n7\n/\n‘ /\nNaN - oe — e.\ni eh . i\n“7 Lt eco = PROGRAM PARIS\n\nCAT BEHAVIOUR GHOST BEHAVIOUR\nCREATION OF ee wos TILL CAUGHT\n\nNO [Scratch 2 Ofine Edie\n[a\n\nTm Univea =e\n1\n\nI Breace\n\n‘Stage select\n‘No metin books\n\neva yw &\n\nspntes new spite / a Sprite Library\n\ncategory\nay\n\n‘Animals\nFantasy\nLetters\nPeopie\nThings\nTransportation\n\nTheme\ncastle\nty\nFying\nHoliday\n‘Music and Dance\nSpace\nSports\nUnderwater\nwalking\n\nType\nall\n\nftmap\nVector\n\nLaptop\n\nt\n\nFire hydrant\n\na\n\nLahtning\n\nSH\n\nFortune Cookie Fruit Platter Frut Salag\n\nnh es\n\nHome Button\n\nFlower Shape\n\nt\n\n‘Microphone Stand Microphone\n\nMagic Wand Marble Bulaing\n\n& ’ (ccRAtcs Mae\n\nfm Untitled umes. | Sounds\n\nw\n\n=a yw @\nSprites New sprite: > / Go C2 reer)\n\nal) Untitied Pe @ 5272 | saeco. | saunas\noh See\n\na/ae |\nLe]\n\ncates\n\n5\nfa\n\\\n-\noe\n77\n>\nog\na\nm\n\nxia ym &\n\nSprites New sprite  / Go\n\nbitmap Mode\nConvrtto vector sprites 20 9\n\n‘Sprites New sprite: & / i 24\nso\n\n~\n2o 1G Scratch 2 Ofine Eaton\n\nsprites New sprite / UE Scratch 2 Offine Editon\n\nSprites New sprite / new spite:  / ob\n\nae LE Scratch 2 Offine Ector my\n\nsprites sprites New Vanable\n\n© Forattspites\n\nSprite New sprte © /\n\naoe New spite / 2@\n“a\ngS\n\ne sprites Newspie © /\n\nBee - al\n\ndll, ANN *\nW\nai ro\nata. —\nea\nANS\nWel\n\nVee New spite © / xiv\n% i\n\n>\n\nsO,\nS3\n—_\n\né\nDIne»\n\nUNIVERSIDAD ORT\n\nTHE UNIVERSITY Uruguay\nof EDINBURGH"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/04_reusing-your-code/03_cloning-and-modularity/03_a-modular-program-for-bursting-bubbles.mp4", "id": 5458, "text": " @ play\n@ @® create\n@ @® program\n@ repeat code yourself ! ©)\n(©) ©\n\n@@® program\n@® repeat\n\n@ play\n@@® create\n\ncode yourself ! 837\nx\n\nINL SASGUVCMV IM MARU aN YALA TASCA UIA caNyAN AUG eee)\n\n1\n\none conto!\nee\nBorers\n\nno ye < ery\n\nnew sprte: & / i\n\nGres\nr=\n<==\noD\n==\n=D IS Scrtch\nccc i oa ha ero Pee\nPa @_ 108 | contimes. seas\nNew costume:\n\n$/aa\n\nClear | Add Import\n\nMS\n=\ne\nI.\no\nog\ni,\n2\n\nneers «\n\nnewsprte: > / Gr\n\nBitmap Mode\nConvent tovecor Newsprite: & / i Events\nonto\n\nPopecatocs\nBex ccs\n\nnewsone C/o \"SED\nr@ Fey Edt Tips About\n\nPm @ 8 | cou\n\nnmr @\n\nrere 6/2 a CD (ccrrce I aa Ra\n\nLuin Events\nee\nSlee\n\nNewspnie: © / <1 ANU GU VI LA\n\nAEN A Sa CNN\n\n \n  \n \n\nGr\nom\n\n’ procedure float\nforever\nmove a few steps\nif touched by user then\n\nburst\nif touching edge then\ndelete teps\nuser then\n\nge then\n\n \n\na je Scrtch 2 Ofte Elta\n| BSOGR G ruer tour tws About\n\nx20 ¥ 100 4\n\nsprites Newspnte:  / <i ay ES, Scrtch 2 Offi Eater\nco a es\n\nNewsprie & / <3\n\n \n\naD\na\nap\nap\naD\naD\ncD\n=»\n==\n=\nap\n=D\n=D Cee\n\npe @) e208 | costne\nHivie\n\nsprites Newsprie & / <3 oS Sch 2 Ofine\naren\n\nery\n\ncoe y so « CRE)\n\nnewsonte: © / i\nEB ff Sctch 2 Oftine Cala\nfe aa\n\nNewspnie: & / <3\n\nap\nap\nap\nap\nG==nD\na\na\naD\n==>\n=-Z\nos\n\nee\nw/oa\n\nio on sprites je Scrtch 2 Offi Ector\n(co ae\n\nSes\n\ncee ye 5 EET\n\nNewspnie: © / <3\n\nCan)\n\n \n\nEa eee\n\n20 yao 4\n\nsprites New sprite:  /\n\nap\nap\nap\nap\nec==nD\naD\nae\naD\n==\nep\n= Scratch 2 Ofine 6\n(a ae\n\nrmy 7 4\n\nsprites New sprite:  / <i x ) eS Scrtch 2 Ofte ecto\nee es\n\n \n\n[oer\nBoece scers\n\noS\na\n\nnew sprite @ / 4 @ ees\n\nnmoye @\n\nsprites Newspnie: & /\n\nap\naD\nap\naD\nec==nD\na\na\naD\nee\nTs\nZz sprites Newspnte: & / a x GS Scratch 2 Oink\n(co oe\n\nBeer soces\n\nsprites Newspnte:  / a x sprites Newspnte:  / a x 5 Ssatch 2 fine tl\n[fa ee\n\nx20 yao ¢\n\nrevone ¢/ag “C=D sprites Newspnte:  / i x\n\n> GS Scratch 2 Oink\n[fa ee\n\nx20 yee 4\n\nNew sprite: & / a x se\n\nBicten\n\nbe 0\n\nNewsprie & / <a a Scratch 2 Offline Editor\n\n   \n\nos _Abeat Pee)\nim Bubbies Pe @ 52198 | Sestines | Sounds\ni R [es Events jO\nPsoure . @ -\nfen Doserats ib\nPoss Bucre soc\n\n     \n\n   \n\nxa em &\n\nnew sorte @ / eres a\n\nPee\nim Bubbies P@| | sore [caer\nkx]\n\n[0t0n\nBloc\nBsouna\n\nX18 180\n\n‘New sprite: O / a\n\nSaas LENO\nScripts | Costumes\n\nXG 190 180 4\nreve 6 / og CD Peed\n\ntm) Bubbles @ eH | Costes\n| iti Brton i\n\n108 #190.\n\nNew spre: / Ped\n\nim Bubbles A@\n\nX18 #190\n\nNew sprite O/\n\nBuvrea0a8 Peed\n\na Bubbles PS@ | 225 [ome\n\nfo\n\neee\nNew sprte @/ oD 8 0\n\nNewsprte: © / <b Se so um\n\n{ bs ! Events Sr eed\n\n \n\nCero\n\nCrd\nCord Bod\n\nturn C4 pick random GB to €P degrees\n\n   \n\n   \n   \n    \n   \n \n\nci video motion on\n\n \n\nord\n\n  \n\nCin\n\n   \n\nCae a\n\n90 to x: pick random 29 to ED v: CED\n\nset size to | pick random @Pto TP %\n\nCe ome\n\n  \n\n   \n \n    \n\noe ee\npoint in direction (pick random ETP to\n\nCC ome Gee eee NEM EM NT\n\nmoj-uh-lari-tee / mo-juh-lar-i-tee\n\n      \n  \n\nThe extent towhich a\nprogram is separated into\ndifferent components. THE UNIVERSITY ay ORT\nof EDINBURGH “— ORE,\n\n& o\nDine»\n\n2-7\nQuai,\nHORS\n\nTHE UNIVERSITY UNIVERSIDAD ORT\n; ruguay\nof EDINBURGH"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/04_reusing-your-code/03_cloning-and-modularity/04_wave.mp4", "id": 5459, "text": " ©)\n(©) ©\n\n@ B® program\n@® repeat\n\n@ play\n@@® create\n\ncode yourself ! ia Scripts Backdrops Se\nto L Football wave @ = = me\n™, Football wave “= @ oe\n\nwe New backdrop: ae\n\nm/aae\n\n    \n\nHeese gem maior 2 ae\nGEOG GS reer any ts About\n\nPe @) 5292 | cxstn88 | sounas\n\nJews\nLooks Cont!\njeund ‘if Sensing\n\nVe Poseratcs\n\naa (Por soos\n\noor\n\nan CE)\n\nNew sprte & / Go ———\nod\n\nTunes @ | 5 | come\n= New costume:\n\n¢/aa\n\nna\n\nve\n\naoa © Scratch 2044 .\n[ccxaice a ae\n(mi Untied Scripts | Costumes\n\nNew costume:\n\n¢/aa\n\nener)\n\nq\nq\n4\ni\ns\n7\n\n4\n\n:\n\n13\n\nNew spite & / Go\n\n& Clear |_Ad_| Import\n\naaa\n\n10%\n\n‘Bitmap Mode\nConvertto vector © Scratch 2044 .\n[ccxaice a ae\n(mi Untied\n\nNew costume:\n\n¢/aa\n\nq\nq\nq\n4\n4%\n1\n4\n\nNew sorte @ / ki a\n(mi United\n\nNew costume:\n\n¢/aa\n\nft\na\n=\ne\nT\n>\nog\n\n8\niz\n\naaa\n100%\n\nBitmap Mode\n\nCConvertto vector PROGRAM PARTS\n\nAUDIENCE CREATION — WAVE BEHAVIOUR\nv a STANDS Ce\nme\n\nnewsprte > / he to\n(a ea rare\n\nUnites ne @\n\nq\nq\nq\nbY\n4\nq\n4\n\nnew spite / <i iz Cee\nme oc ee a\n[m) Untities = e Scripts:\n\nE20 es\n\nspits rome, Ls a) Petes\n=e“\n\nspits New spre: © / repeat 4\nrepeat 8\ncreate clone . a\n\nchange x by 40\nchange y by -\nset x to -200 ml Untites\n\npees new sorte / E Scratch 2 Offine Eat\n[oor ee Rs\n\n[Untitled\n\na0 \"84\n\nSprites New spite O / Ga eed ReneS\n) Unvea\n\nq\nq\n4\ni\nb\n1\n4\n\nNew spite O / <3 Go Eres\n\nsprites eRe\n\nNew sprite O / <i\n\nsprites\n\nD Scratch 2 Offine Edit\nSPREE © rane tar tos Ami Peer\n\nunites\n\nSh\n\nq\na\ni\n4\n1\n‘ fm Untied\n\nSprites Newspre O/ a & forever\nif touching mouse then\n\ndo the wave-movement eee\n=e\n\nSprites Newsprie O / <j ‘Scratch 2 Offline Edita\nCo i oe\n\n| unites\n\n|\n\nchange y by @D\nat x to ED\n\n=\n\nSprites New sprte: O / 4 Ga fais\n\nSprites New sprite: @ / Ga ERs\n\nSS\n\nq\n4\ni\nt\n1\n4\n\nSprites New sprite O / a Scratch 2 Offtine Eat\n(scone a Sac ai ce bt KOK\n\nunited\n\nNew spite O / 4 Go 30 YE 80\n\nSprites New sprite O / a sprites\n\n \n\n=\n\nchange y by @D\n\"sot x ts\n\na0 Yo\n\nNew spite © / © Scrotch 2 Offline Eales\n[scenic aa FRees\n\n-@\n\nNew spite & / Go CELTS reer tar Ts avout eer\n\nml Untites eae bt KK\n\nserps\n\nocx ea ee\n\n| fm Untied\n\nq\nq\n4\ns\na)\n1\n‘\n\nNew spite © / Go CELTS reer tar Ts avout eer\n\n| Untites eae\n\nNew spite @ / ] © Scretch 2 Offline Eats\n(ex ae\n| Untied\n\n2a YE 80\n\nSprites New sprite © / Gy THE UNIVERSITY SN aes ORT\nof EDINBURGH —_"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/04_reusing-your-code/05_bonus-interviews-optional/02_interview-with-a-jewelry-designer.mp4", "id": 5462, "text": " @ B® program\n@® repeat\nte) 2\n\n©\n\na\n|\ncode yourself !\n\n@ play Awaba \\ I\n\nPi . <2 THE UNIVERSITY nae oes\nof EDINBURGH “—_"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/05_think-like-a-software-engineer/02_zombie-game/01_zombie-game-requirements-and-interface-design.mp4", "id": 5464, "text": " @ play\n@ @® create\n@ @® program\n@ repeat code yourself ! @ play\n@@® create\n@ B® program\n@® repeat\nO\n°)\n©\n\ncode yourself ! ~ > : y :\n- P } y i His i : { :\nae WV SS\n\n \n\nhe Jha | ’ REQUIREMENTS\ney\nDESIGN\nomens”\nIMPLEMENTATION\nTESTING\n\nMAINTENANCE ENTS\n\nMa) a,\nMLO /\n\na , Pent\n\nP\n\n  \n\nte\n\na MAINTENANCE pew ENTS\n\n \n  \n\nDESIGN can iia : a | £ ) i |\n\nPie\n\nite\n4 ne\n\naia\n“\n\n   \n\nFa coe 6 | fy\na £ ee Naval\nae how\n\nD\n\n  \n\na )\n\n \n \n\nSa\n\n3\n\na\n\n—— eS\n‘\n\nrs Mow r Hh\n\nON >:\n— |\n\ne Bio\n\na\n_\n\nr\n\n- ‘Mon Y Tier g ca 1 Pll s' |\n‘Mn a a g Nh\na, |\n\n™\nTs\nF\n\n‘Moo 4\ncs ~ ia ; | | |\nCe | vy >\n‘Ma v\n‘Ne al | |\n\n   \n\nIN\nar i Biot\n\n= | zz\n‘Mn | a \\ INCREMENT\n\na\n=\n\n  \n \n\n43\n\n=a)\n=\n\n, 2 mit\n\ng\nes\n\nI\n'\n: | |\n\na. 6 | | r Sonata\n\nSINC e OER ATT Nn\nSins\n\nSeen aa ma Layib)\n~ INCLUDES REWARDS OR ELEMENTS THAT HELP\nsa \\SSUNDS\n\nBe Cha SN IUANCM nn\n\nSCL NOMI\nSen\n\nSista NTA -HAS act LEVELS\n\n~ INCLUDES REWARDS OR ELEMENTS THAT HELP\n~ HASSOUNDS\n\n~ HAS CLEAR TNSTRUCTIONS i i] | i ni rt py\n\ntt ~\na 1 ; 4 |\n\n| a\nwl\n14 .\n\n \n\n \n\n \n\naia ~\n\n{\nN\n| mae }\n\nAi z\n‘eal a ni a li w ss\n————\nane\n\nre\n\ntS Sl\n| a\nw i\nd i: 4 ‘ah td\n~\n\nN aarcytantly\n\nMae OOM aay\n5 AS POSSIBLE FROM ENTERING\nMOTUS ATAU Se\nENMU B SSC CNET\nSTEMS aL\nTERS YOUR HOUSE, YOU LOSE!\nra Tee LUN AU AOC Ua\nFLOWERS HELP YOU DEFEND YOUR HOUSE, BY\nLCN AEO NS a\nTa Tea UC UTE a Tee UNA AUO CC Ua\nANAL OUT UUA TOS\nate\n\nTaN SIN aac utAN\n\nUae. Va O NUNN\n\nMANY ZOMBIES AS POSSIBLE FROM ENTERING\nSNUG NITRA\nAND A POINTS SCORED FOR\nLVM COUST aE Ge\nNTERS YOUR HOUSE, YOU LOSE!\nTOMBIES APPEAR ONE BY ONE OR IN GROUPS.\nFLOWERS HELP YOU DEFEND YOUR HOUSE, BY\nVENTS\nSOTA TACT CIN AACN ALY\n\naac OMT ANE.\n\nLES AS POSSIBLE FROM ENTERING\nCNIS TMA\n(Sea ERIN PASC tet)\nMV Lsta LUTON Oa NG\nYOUR HOUSE, YOU LOSE!\nTYPE aN aN OTe OUD\nTENTED EES MOUNTS\nOa\nST aR CETTTe NS Te AU MONS UD\nLEC OUD EE NIATUSa\nNOS ea\nOT TRACE OF THEMOUSE, AND A POINT IS SCORED FOR\nae Te a TR iz\nZOMBTE ENTERS YOUR HOUSE, YOU LOSE!\nJOMBIES APPEAR ONE BY ONE OR IN GROUPS.\nFLOWERS HELP YOU DEFEND YOUR HOUSE, BY\nPNET a a ea\n\nSa TACT Varetay ith\n\naT aca NNN\nPUSSIES\nCE NTOMT VON URIS ini\nit)\n\nr aa 1 MK ’\noe) i a Ss = il\ni cil GAME OVER\n\nVo, qar\\oies WON...\n\n? Al mi nit MR ip ‘ij\non\n\nah\ni\n\n| | | | oe,\né S\nDIN»\n\nTHE UNIVERSITY ST Gor ORT\nruguay\nof EDINBURGH\n\n7\nQuel\n\ng3\nCons"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/05_think-like-a-software-engineer/02_zombie-game/02_zombie-game-code-design.mp4", "id": 5465, "text": " @ play\n@E@® create\n@ B® program\n@® repeat\nO\n)\nO\n\ncode yourself ! yd\na yr\n‘Ga ! 7 | cont ih\n\n| &\nvs en “\n\nECD\n\nSOUNDER COUL CATACH GOT Te CUS CGa nT ACO AAU ND\n\nBROOM BEHAVIOUR ZOMBIE BEHAVIOUR FLOWERBENAVEOUR STAGE BEHAVIOUR TUTTE\n\nOUND CUU mL Dta Tat LU aU) a JeiL\\Y LOU meSHTGa ter UDG mouse-pointer initialise\nforever\n\ncreate clone\nwait for a short time ee : forever\nmove a few steps\nif touching broom then\nplay a sound\n\nchange score by 1\nreturn\n\nif touching flower then\nwait 1 sec\n\nif touching house then\ngame over ‘ :\n4 4 7\n. = d\n4 a oo ae ‘ forever\nwait for a short time\nchange speed by 1 > |\n\nral <\n.*)\n\n-\n\n \n\n. oa\nyi C co DD WD z when game over\n\nswitch backdrop to game-over\nstop all scripts sNLVe\n% 4\n\né\nOrne»\n\npie\nQual,\n\n53\n7\n\nTHE UNIVERSITY ONIVERSIDS® ORT\ni ruguay\nof EDINBURGH"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/05_think-like-a-software-engineer/02_zombie-game/04_zombie-game-implementation-of-the-zombie-clones-message-broadcasting.mp4", "id": 5467, "text": " @ play\n@@® create\n@ @® program\n@ repeat code yourself ! ©)\n(©) ©\n\nB® program\n@® repeat\n\n@® play\nBB create\n\ncode yourself ! [aa LixXXe\n\nins |\n\nZombies Pe a Pee) bene\n\n0 oe\n\nNew spre O / [or ea Pee)\n\nxe ene\n\nNew spre > / [CS ee Lixo\n\nxm 2M\n\nNew sprite: O / iy Scratch 2 Offline Editos\n(ce ana\n\n{Zombies\n\nemo y 88 8 Be ee oa\nSprites New sprite: © / <2\n\n1% —\n\nresins I Scrtch 2 Ofte ecto IN\n[ee eee Pera)\n\nfm] Zombies Scripts\n\nkoopa 4%\n\nsprites New sprte: > / <1\n\n1? [ee aH\nml zombies cto\n\n20 129\n\nNew spite: O /\n\n? (8 ewsprte $ / me |< © Scratch 2 Offine itor IS\n| Gabe Geer tay es dont eee es\n\nfm Zombies PS\naa Pct oon\nfe few\n\n1\n\n==\n\na\nSprites Newsprte: O/ ch\n—_\n\n1 ¢ are Sprites New spre / a\n\n? (6 [ee ae eee\n\n{ml Zombies\n\nNew spre O /\n\n? Time BetweenZombies © Scretch 2 Oftine Editor,\n\nTime BetweenZombies\n\nsw sprite O / Co ee\n\n{ml Zombies ‘Scratch 2 Ofline Editor, fm) Zombies ee\n\nMaks aBiock\n\n‘Aaa an Extension ‘Scratch 2 Offline Editor,\n\nfm Zombies cy |\n\n- c\n\new spre / < @\n\n? P\n\nUVeMa sales MODEM oicon a\nBROADCAST. MESSAGES AN\n\not\n\nWADE aS Gass \\3\n\nMITE one he\n\nMUMONA ca |\n©\nTA\n\n4 fa\nBROADCAST. MESSAGES 3\n\nOe ee —— 30s am\nNew sprite: & /\n\n? [co MOM\n\n{im Zombies ben\n\n:\n\nSprites New sprite: / a Gy\n\nm@: ?(e Zombies 1 Scretch 2 Offline Editor)\n\n{im Zombies OT,\ng\n\n‘\n\nsNLve\ny fs\nred\n\né\nDIND®\n\nTHE UNIVERSITY bia ae cts ORT\nruguay\nof EDINBURGH\n\n#\nCHK"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/05_think-like-a-software-engineer/02_zombie-game/06_zombie-game-implementation-of-invasion-and-extensions.mp4", "id": 5469, "text": " ©)\n(©) ©\n\n@® repeat\n\nB® program\n\n@® play\n@B create\n\ncode yourself ! TimeBetwoenZombies ‘Move me with the\nmouse to make\n‘the zombies go\naway! Don't let\nthem enter your\n\nhouse! The\nflowers stop them\nfora few seconds “oss aaa owe OG aid Time BetwoenZombies\n\n‘the zombies go\naay! Don't let\nthem enter your\nhouse! The\nflowers stop them\nfora few seconds Zombies\n\nGAME OVER\nThe Zombies won... Tm Zombies\n\nNew sprite: & / i Gx\n\n1@k Sa\n\nPc a\n\n{mi Zombies\n\ni¢\n\nw/aa\n\n \n\na ees\n=r le\n\nmouse to make eee\n\n‘the zombies go\naway! Don't let\n\nflowers stop them\nfora few seconds ae -\n\nNewsprie O / 3\n\ni\n\nMate ais [cera I aa ae\n\nMake a Vaniaie\n>\ne\ncS ED oes\n=\n\n‘=\n=> Make a Variaie\n\neS\n[a\ncS) © Seatch 2\nGEOR OD ter tat tos owt\n\nZombies\n\nED Pees\n2\n\n2\n=> 108 ye\nNewsprie O / a a\n\nMake a Variaie\neS\n5\ncS)\n\n$ Mate aust oxo a na\n\na fb\n72\n\n‘[\n8 ar a\n\neB:\n2\n\n‘[\n8\n\n4 Mate aust\n\nvenspite $ / SERED © tw torr Tos si\n\na fb:\n72\n\n‘[\n8 © Scratch 2 Offi\nar a cero a ea\n\n}} (mi Zombies\n\noF\n\nMake a Vaniaie\n[a\n.\n\nNew sprite: & / <a x\n\nMate aList, Cas MAG ME REQUIREMENTS\nETO PUY\n\n    \n\nle \\ Wan\n\nLETO PLAY\n\nana ARnU AD\n\nSIVA aY aM\n\nI eA AME REQUIEMENT\n\nsana arnU AS\n\nVa Tea\nwa aM\n\nI eA E=) my\n\narn T AD\n\nI eA i MTA\n\nSra nny el ua aC\n\ni TRA E REQUIREMENTS\n\n~ STMPLETO PLAY #) Zombies Cee\n\n{Zombies “\n\n[score mee |\n\nSprites new sprite @ /\n\n= [Zombies\n\nLex}\n\n) ow exact\n\ne/a\n\n \n\n \n\n(Saree\n\ng\n\nKr\n\nee\n\nx20 \"ms\n\nNew sprite & / <2\n\n  \n  \n\nbX\nSatpts | Backarops | Sounds\n\nae\nva\n\n‘i\nes0oe701 8\n2\n\n \n\n¢ lear [Ada\n\nems\na ann\n\nBitmap Mode\nConvetto vector imetetweenzomber TS Scratch 2 Offline Editor\n\nimetetweenzomber TD\n\na/aa imetetweenzonbier TD w/oa\n\n \n\ntimetetweenzonbier OE\n\n \n\nAS\n=\ne\nT\na\ng new sorte / {mi Zombies new sprie: © / timebetweenzombies ED\n\n \n\nb TS Scratch 2 Offline Editor Iimebetweenzombies TEE\n\na/de TS Scratch 2 Offline Editor Newsprte: © / Scratch 2 Offline Editor\n\n \n\ntimetetweenzonber EET a/de Won\n\ni\n\n|\n\n \n\na/aa a/aa Won\n\ni\n\n|\n\n \n\na/aa imebetweenzonbier EEE\n\n‘Move me with the\n‘mouse to make\nthe zombies go\naway! Don't let\n\nthem enter your\nhouse! The\n\nflowers stop them\n\nfora few seconds on\n\ni\n\n|\n\n \n\na/aa imetetweenzonbies TEED\n\n \n\nyoul Sr) bd\ne\n\n1h on |\n\nTowtch backdrop to Space\n\n \n\n \n\na/ée imetetweenzonbier TED\n\n \n\nSes em RE Scratch 2 Offtine Editor\n\n   \n\n \n\nimetetweenzonbier TED\n\n \n\na/aa\n\n \n\new sprte.  /\n\nCEE)\n\nrs\n\noe\n\non imetetweenzonbier TED\n\na/aa TS Scratch 2 Offline Editor\n\n \n\nMove me with the\nmouse to make\nthe zombies go\naway! Don't let\nthem enter your\n\nhouse! The\nflowers stop them\nfor a few seconds.\nPress the\nspacebar to\nchange my looks!\n\nne ¢/\n\n“\n\n \n\n \n\n=) w/oa Lb Mii\n\n \n\n \n\nw/oa wpe,\n\n3\n\né\nDIND®\n\nOLT\nxs Un\nCH\n\nUNIVERSIDAD ORT\n\nTHE UNIVERSITY Uruguay\nof EDINBURGH"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/05_think-like-a-software-engineer/04_bonus-interviews-optional/01_interview-with-a-computer-science-student.mp4", "id": 5472, "text": " @ play\n@ @® create\n@ @® program\n@ repeat code yourself | @ play\n@E@® create\n@ B® program\n@® repeat\nrp (©)\n£0\n6)\n\ncode yourself ! Pater Col uled ace) (-lei8 ree)\nmenses eared ae\nNesconset uk Pater Col ule are) (-lei8 re)\nmenses au BV Eure\n\nlic Project Lead\n=e rein ST ee\ne a t Cee clasrCuCn\nbs i BE Ticn (MU ngte Ne\n\nid rol ole lmyel (ne.\n5, University of Edinburgh “pal | wi = 4) 1p fez! ‘8\n<< THE UNIVERSITY Cee\nof EDINBURGH “—"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/iot/01_what-is-the-internet-of-things-iot/02_module-1/04_prof-harris-takes-you-on-a-tour-of-his-lab.mp4", "id": 3210, "text": " PROGRAMMING\n\n= PA)\nRi d ‘\n\nWITHIANG.HARRIS a ERIS TAMAT YS &\n\name\nay) e\n\nx\n\nWITHIANG.HARRIS. —yeeq uses\n\n   \n\n22 ee\n| es | | ee \\ iy i) )6=—hlh i (w\n\nRIS, PH.D.\n\nDye are col ree SCIENCE Pye TE tela ey ny rare ia “TAN G. HARRIS, PH.D.\n\nPesaro) eee a3 i\n\nAN G. HARRIS, PH.D.\n\nDEPARTMENT OF COMPUTERSCIENCE IAN G. HARRIS, PH.D:\n\nNa yV aR ee Us ee 4 7\nr =:\neS =\" re - ey A\n\n@= x ee\n\nae Ore we\n\nHH \" shh\n\na\n\n’\n‘Se 4 rl mh\nede =\nale al —s\nwt w\\ he\n‘uw\n\nre\nUL\nop\nwl\n\n\\ A fl\n\n2c i, we! i\nLs\nA} a\n\nNl } Hy\na\n\nPik .\n+ eae rr 6\nty Wl Le\na"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/iot/01_what-is-the-internet-of-things-iot/03_lesson-1-definition-of-the-internet-of-things-iot/03_lecture-1-3-iot-devices-vs-computers.mp4", "id": 3213, "text": " U of University of\nCalifornia, Irvine Lael CUR CML a\nThe University of California, Irvine The main function of a computer is to compute — any\ntype of program can be executed '\n\ncondition\n\ntrue (hot 0) true (hot 0)\n\n \n\n \n\noa\n\nry '\n\ncondition\n\n \n\ntrue (hot 0) true (hot 0)\n\n \n\nBr\n\n \n\na2 :\n\ncondition >\n\n \n\ntrue Jey\naction Computers are general-purpose\n\n* OK at executing anything \\ y\n* Not particularly efficient for type of code ¥ : ON CT a loT devices are special-purpose\n\nCelia eT MATeelWIkR aie aod eee\nTat ailell lal Col mel nc\n\n+ Amusic player is great for playing — but terrible for\nplaying video\n\n+ Laptops can do both — but less efficiently * C language example. Creative Commons Attribution\n3.0 Unported. Author: Thedsadude. https://\ncommons.wikimedia.org/wiki/\nFile:C_language_while.png UCI Uae Ae\nCalifornia, Irvine"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/iot/01_what-is-the-internet-of-things-iot/04_lesson-2-trends-in-the-adoption-of-the-internet-of-things-iot/01_lecture-2-1-trends-in-the-adoption-of-iot.mp4", "id": 3214, "text": " U of University of\nCalifornia, Irvine of Pca\nls\n\nere Lae\nRoan ascii\n\noka Professor lan G. Harris, Ph.D.\nSUMO ets em eco MAT d Number of Internet users as a percentage of a country’s population. Data costs are fairly low\n«= This point is arguable, but many can afford it Data bandwidth is high\nPe-Tam vaccinia lie) (mated) TS * ENIAC ous ae Sat Uses a\n\n \n\n* ENIAC computer (color image), Paes on\nAttribution- sableiile 3.0 Hh a Lladel\n\n \n\n* Internet penetration map, cae (eoynTaaleyay Attribbtion=\nShare Alike 3.0 Mae Jeff Ogden. https: Mh\ncommons.wikimedia.org/wiki\n\nFala aNeetaat ata svatattee eon onal Lee N74\n* Wi-Fi logo, public domain. ‘OF OTA\nCalitc UCI Uae esi A eli\nCalifornia, Irvine"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/03_functions-and-conditionals/01_functions.mp4", "id": 5485, "text": " Functions\n\nDuke int myFunction(int x, int y) {\nintz =2* x-y;\nreturn z * x;\n}\nint f(int n) {\nreturn 3 + myFunction(n, n+1);\n}\nint g(Q) {\nint a;\na = myFunction(3, 7);\nint b = f(a * a);\nreturn b;"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/01_welcome-to-the-course/01_introduction/01_welcome.mp4", "id": 3246, "text": " iS\n\nit\n\nSe aU ae Cod Cul Dyula Ra aed mC ts PNK)\n\nDUN CS a an See ws -\nDyes SNC a ar mer ae ma aU Rec Cau | DUS Cua Step 2: Write Down What You Did\n\n56 17 4 33 Or\n\n¢ Step 2: Write down what you did\n\nDuke s QuakeSort {\n\nsortByMagni tude(ArrayList<QuakeEntry: public class QuakeSort {\n\n   \n\npublic int getSnallestMagni tudeCArrayList<QuakeEntry> qu\nint minfdx = from;\nfor Cint i= front; i < quakes.stze(); i++) {\nTF Cquakes.get(i).getMagni tude() <’ quakes. get(mis\nminIdx = 1;\n\nme\n\n=\n\n \n\n \n\n \n\npublic void sortByMagni tude(Arraylist<QuakeEntry> wl\n\n  \n\n. File saved ‘7 _ alia a Software Design: Open-Closed\n\n* Open for extension, closed to modification\n\n« Don't change tested/proven code!\n\nDuke Has-A and Uses-A Relationships\n\n© QuakeEntry object created by Parser\n\n« Location used in EarthQuakeClient\n\nDuke wy /  —_—- — aaa Wartth golvizttchAli Filner APIs and Location in Android\n\n¢ The Location class from Android system\n\n« http://developer.android.com/reference/\nandroid/location/Location.html\n\nVery useful in devel\n\ne Using the Location class fein griiiag m é@clivolica ct Moving Away from edu.duke.*? Moving Towards Java's IO Libraries\n\n* Several concepts required\n\nDuke 3.get(\"hello a EXt\")5\n> reader = Files. newBufferedReader(p\n\nie = reader\nk= null) {\n\n+. printin(L Editors: Beyond BlueJ\n\n) eclipse\nNovice Expert\nFriendly = Friendly\n6) NetBeans a UNIVERSITY"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/02_earthquakes-programming-and-interfaces/01_searching-earthquake-data/02_introduction.mp4", "id": 3247, "text": " Earthquake Data\ne Using earthquake data as basis for study\n\n  \n  \n  \n\ne Object orientation with classes\ne Searching, sorting, understanding data\ne Parsing and transforming data\n\ne Transition to further study\ne Capstone Project\ne UCSD Specialization be\n\ne On your own Real-time Data, November 11, 2015\ne http://bit.ly/dukesoftware-quake11\n\nVisualizing earthquake data in California,\nUnited States\n\n= Earthquake DatabyMa.. Q World/Asian Quakes, 11/11/2015\n\ne Larger magnitude quakes ocean based?\n\n  \n    \n    \n\ne Creating maps by creating CSV files\n\nCCA\nNovember 11,2015 415 PM EST\n\nSHARE\n\n@]_ rovitecev\nY grorts\n16-31\n@32-47\nmis-69 Transforming and Using Data\n\ne Data from http://earthquake.usgs.gov is in\nXML format. JSON another data standard\ne Widespread standards, tricky to parse\n\ne We need CSV format for Google Maps\n\n  \n\ne Also used in other mapping services\n\ne Transforming data common application\n\n \n\nLatitude, Longitude ,Magnitude, Info\n\n60.08 ,-152.76,2.50,45km S of Redoubt Volcano, Alaska\n36.33,-115.76,1.30,24km NE of Pahrump, Nevada\n33.83,-117.00,1.00,7km NW of San Jacinto, California\n33.83,-117.00,0.80,7km NW of San Jacinto, California\nDuke Parsing and Transforming Data\n\ne Parsing isn't simple, so let's use an API we\ncreated to return collection of QuakeEntry\nobjects\n\n  \n \n   \n \n\ne Parse file or URL, testing or real time\n\n \n\npublic void createCSVQ){ ws\nEarthQuakeParser parser = new EarthQuakeParser();\n\nee source = a egeeneaeeee\n\ndumpCSVCLlist) ;\nSystem.out.printLn(\"# quakes read: “slist.sizeQp & ae\nNE os\n\n \n\n \n\n \n\nSag QuakeEntry and Location Classes\n\n¢ QuakeEntry holds relevant data from USGS\nXML feed lic class QuakeEntry {\n\n* Location pasate ena\nprivate 27\n\n    \n  \n\n: private double depth;\n* Magnitude private double magnitude;\ne Depth public QuakeEntry (...){\n\ne Description }\n\ne Location is a separate class\n« One class often uses another\n\ne Location code adapted from-Android standaré\nDuke"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/03_earthquakes-sorting-algorithms/01_implementing-selection-sort/06_efficiency.mp4", "id": 3262, "text": " Implementing Selection Sort\nEfficiency\n\nDuke SortTimings Data SortTimings Data\nSorting 10,000 to 70,000 Strings\n\noo y = 2.3323x? - 3.057x + 1.0443\n\ny = 1.3185x? = 1.8487x + 0.8229\n\n   \n\n \n\nTS\n\n  \n  \n  \n \n\n50\n\n   \n  \n\nTime (s)\n\n— bubble\n—-quad fit (bubble)\n— select\n— quad fit (select) \\_\n\n25\n\n0\n10000 20000 30000 40000 50000 60000 70000\n\nDuke Size (elements) Sorting: Common\n\ne Most languages: Sorting built in\ne Typically a very efficient sort\n\ne Needs to work with variety of types\n\n   \n\ne Did author think about earthquakes?\ne How to do this? Interfaces\ne Comparable\ne Comparator\n\ne Java: Collections.sort"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/03_earthquakes-sorting-algorithms/02_sorting-at-scale/01_introduction.mp4", "id": 3264, "text": " Sorting at Scale\n\nIntroduction\n\nDuke public void runSelectQ){\nString[] cats = {\"tiger\", \"lion\", \"cheetah\", \"puma\", \"Leop:\nselectSort(cats);\nfor(String s : cats){\nSystem.out.println(s);\n$\n\npublic void runnerQ){\ntimer( 10000, 100000, 10000, 2); public void runnerQ){\ntimer( 10000, 100000, 10000, 2);\n\nL $\npublic void selectSort(String[] list) {\nforCint k=0; k < list.length; k++){\nint mindex = k;\nfor(int j=k+1; j < list.length; j++){\nif a\nmindex = j;\n}\n}\nString temp = list[k];\nlist[k] = list[mindex];\nlist[mindex] = temp;\n}\n2\npublic void selectSort(ArrayList<String> list) | New Class.\n\n \n\nes\n\neve BlueJ: Create Object\n\n \n\n  \n\nSortTimings0\n\n| Name of instance: sortTimil |\n\n \n\ncancel_] [Oh |\n\n \n\n  \n\nLt IWUn BlueJ: Sorting\n\nes j\n\n \n\n  \n\nNew Cass.\n|\n=>\n\n‘Compile\n\n=—= —\n\n \n\n \n\nSontimix\nere\n\nSortTimil = Sor\n\n \n\nBluoJ: Sorting\n\n \n\ninherited from Object\n\nvoid bubbleSort(ArrayList<String> list)\nboolean isSorted(ArrayList<String> list)\nArraylisteString> makeRandomlistint wordSize, int size)\n\nvoid selectSortiArraylist<String> list)\nvoid selectSort(Stringl) list)\n‘oid timertint start, int stop, int increment, int trials)\n\nInspect\nRemove\n\n \n\n——F ea\nSS iro000\nsem 20000\n\n|90000\n\n| 100000\n110000\n\n \n\n \n\n0.35\n1.18\n2.90\n5.24\n9.14\n14.38\n21.39\n29.15\n38.43\n54.85\n68.47\n\n \n\neosoossss9\npe eae\nN Class comni pe\n\none\nicheétah\nleopard\nLion\npuma\ntiger\n\n  \n\n \n\n \n\nst\npubli.\n\n \n\nClass comni .\npublic void runSelectQ){\nString[] cats = {\"tiger\", \"lion\", \"cheetah\", \"puma\", “Leop: | =\nselectSort(cats);\nfor(String s : cats){\nSystem.out.printLn(s);\n+\n\n  \n\npublic void runnerO{\ntimer(10000 , 100000, 10000, 2);\ni\n\n \n\nClass camniled - no cvntay errors ese Blued: Sorting Blued: Sorting\n\nnew SortTimings()\n\nOpen Editor\nCompile\nInspect\nRemove BlueJ: Sorting\n\n \n\nSortTimings\n\n \n\n \n\ninherited from Object\n\nvoid bubbleSort(ArrayList<String> list)\nboolean isSorted(ArrayList<String> list)\nArrayList<String> makeRandomList(int wordSize, int size)\nvoid runselect)\n\nid selectSort(ArrayList<String> list)\nvoid selectSort(Stringl] list)\nVoid timer(int start, int stop, int increment, int trials)\n\nInspect\nRemove 0.35 :\n, 10000\n“20000\n\n30000\n\n \n\nled -— no cvntayx errors id — no svntay errors 10000\n20000\n30000\n /40000\n\n \n\nid — no svntay errors id — no svntay errors =o\n* 10000\n20000\n30000\npoe\n\n \n\nid — no svntay errors No cyvntay errors Class camniled - no svntay errors A\nSEAL /m)\n\n \n \n\n \n\nLcaamaaaam @.35\n20000 «1.18\n30000 2.90\n40000 865.24\n50000 69.14\n60000 8614.38\n70000 8621.39\n80000 29.15\n90000 38.43\n100000\n110000\n\nS2SeS00990909\n°\nN\n\n \n\n \n\n \n\nid - no ¢cvntayx errors Class camniled - no svntay errors iblic void selectSort(ArrayList<String> list) {\nforCint k=0; k < list.sizeQ; k++){\nint mindex = k;\nforCint j=k+1; j < list.sizeQ); j++){\nif Clist.get(j).compareTa(list.get(mindex)) < @) {\nmindex = j;\nf\n\nCollections.swap(list, k, mindex);\n\niblic boolean isSorted(ArrayList<String> list) {\nfor(int k=1; k < list.sizeQ; k++)f{\n\n \n\nClass comniled —- no <cvntayx errors"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/03_earthquakes-sorting-algorithms/02_sorting-at-scale/03_ordering-quakes-by-magnitude.mp4", "id": 3266, "text": " Sorting at Scale\nOrdering Quakes by Magnitude\n\nDuke BiveJ: QuakeSorterDemo\n\n \n\nii\n\n \n\nEarthQuakeClient\n\n \n\n \n\n \n\n \n\n \n     \n   \n    \n \n    \n\nQuaketntry\n\n \n\n \n\n \n\nCompile EarthQuakeParser\n>|\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nInherited from Object >\nvolekyestsort0\n\nInspect\nquakeSorl =) Remove =8000.0U, TITLE = oskKM ESE OT Lakeview, Uregon\n-10200.00, title 67km ESE of Lakeview, Oregon\n-10500.00, title 68km ESE of Lakeview, Ore\n-7400.00, title = 69km ESE of Lakeview, Or\n-7300.00, title = 69km ESE of Lakeview, Or¢\n-7500.00, title 69km ESE of Lakeview, 0\n-7800.00, title 69km ESE of Lakeview, Or\n-9800.00, title 67km ESE of Lakeview, Or\n-8100.00, title = 68km ESE of Lakeview, Or\n-8100.00, title 68km ESE of Lakeview a\n-8400.00, title = 68km ESE of Lakev?\n-8700.00, title 68km ESE of Lakev\n-8400.00, title = 68km ESE of Lake’\n\n-9100.00, title 68km ESE of\n\n-8400.00, title = 68km ESE of\n\n-7900.00, title 67km ESE of\n\n-9100.00, title = 67km ESE of\n\n-8200.00, title 67km ESE of\n\n-8300.00, title = 68km ESE of\n\n-6900.00, title 68km ESE of\n\n-8700.00, title = 68km ESE of\n\n-7100.00, title 67km ESE of (63.\n(63.\n\n(63.\n(63.\n(63.\n(63.\n(63.\n(63.\n\n“13a\n151.\n-151.\n-150.\n-150.\n-151.\n-151.\n-147.\n-149.\n-148.\n-151.\n-147.\n-150.\n-146.\n-151.\n-146.\n-147.\n151.\n-151.\n-146.\n-148.\n+22),\n\n-151\n\nZLry\n66),\n21)\n00),\n22),\n22),\n88),\n62),\n00),\n79),\n42),\n28),\n04),\n57),\n25),\n68),\n00),\n21),\n28),\n72),\n99),\n\nwag =\nmag\nmag\nmag =\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag =\n\n \n\n \n\nPRP ORR SSOP EEREPRPEPHEEEPHONE\n\nOU,\n-40,\n+90,\n+90,\n+50,\n+70,\n+10,\n-60,\n+70,\n+20,\n+10,\n+20,\n+30,\n+80,\n+80,\n+90,\n+00,\n-30,\n+70,\n+90,\n+30,\n\n50,\n\nuepur\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\ndepth\n\n  \n\nUU. UU, CLUCe = LL4nil WUT Cartwett, At\n-11700.00, title = 135km NW of Talkeetna,\n-700.00, title = 113km W of Cantwell, Ala\n-95800.00, title = 53km W of Cant, AL\n-94000.00, title = 63km W of Ca\n\n@.00, title = 113km W of Cantwe]\n\n \n \n    \n \n \n  \n \n  \n \n\n-11200.00, title = 146km W of A\n-7400.00, title = 66km E of Can la\n-10800.00, title = 5km NNW of Ca 7A\n-10100.00, title = 9km ENE of A\n\n-12300.00, title = 123km W\n-1100.00, title = 83km E\n-116100.00, title = 54kr\n\n-19100.00, title = 76km\n-7400.00, title = 115k\n-10200.00, title\n-19200.00, title\n-4500.00, title =\n-10800.00, title = 116\n-1000.00, title =\n-10400.00, title =\n-7200.00, title = public class QuakeEntry implements Comparable\n\nprivate Location myLocation;\nprivate String title;\nprivate double depth;\nprivate double magnitude;\n\n \n\npublic QuakeEntry(double lat, double lon, | |\nString t, double d) { 1 7\nFy\n\nmyLocation = new Location(Lat, lon); I rable<QuakeEntry>{\n\n}s .gov/\n\nad(sour\n\nlon, double mag, }\n\nrecurn weperrs\n\n@0verride\npublic int compareTo(QuakeEntry loc) {\n\n    \n\nif Cdiff < @) return -1;\nif (diff > 0) return 1;\nreturn Q; s /\n\n+\nif (difflat < @) return -1;\nif (difflat > @) return 1; ) return 1; saved| 3\n\npublic double getDepth(){\nreturn depth;\n\nZ\n\n@0verride\n\npublic int compareTo(QuakeEntry loc) {\nif q\n\n2\n\npublic String toStringQ(){\nreturn String. format(\"(%3.2f, %3.2f), mag\n3 if\n\npublic double getDepthQ{\nreturn depth;\n\nih\n\n@0verride\npublic int compareTo(QuakeEntry loc) {\nif (magnitude < loc.getMagnitude()){\nreturn -1; f\n\n \n\n   \n\nt\nif (magnitude > loc.getMagnitude()\nreturn 1;\n\n \n \n\ni\n\nreturn Q;\n\n \n   \n\n \n\nClass a compiled - no syntax errors e getDepthQO{ uakeSortDemo\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\ne getDepthQO{ e getDepthO{ 1 a hd Oe kd FS dS tO ad TN hd\nBlueJ; QuakeSorterDemo\n\n— [4 ZZ if\n\nEarthQuakeParser STE Sg TIES faa SS en OS haan TE ee\n\n \n\n|| GG e getDepthOt\n\n \n\n   \n\nQuaketntry\n\n \n\n \n\n \n\nEarthQuakeParser\n\n \n\n \n\n \n\n \n\n \n\nLege Blued: Create Object\nE Quakesontdemoo\nName of Instance: quakeSor1\nCancel) ——\n\n \n\n \n\n \n\n  \n\naT — e getDepthQ{ —E——————————————\nBlueJ: QuakeSorterDemo\n\n \n     \n   \n\n \n\ne getDepthQ){\n\n \n\n \n\n \n\n(QuakeEntry ee eee\nBlueJ: QuakeSorterDemo\n\nNew Class...\na EarthQuakeClient\n—>\n\nEanthQuakeParser\n\n—=\n\n       \n \n    \n \n       \n\n \n\n \n\n \n\n \n\n   \n\n‘QuakeEntry\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nInherited from Object >\n\n   \n\nInspect\nRemove\n\nquakeSorl Qu Ame +20),\n-13),\n+75);\n41);\n+94),\n«15);\n+93),\n+95),\n+23);\n11),\n+32),\n+31),\n+31),\n312),\n+29),\n+98),\n+09),\n325):\n+14),\n+19),\n+30),\n\n21)\n\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\n\n-0.00, depth = -9600.00, title\n-0.00, depth = -9300.00, title\n0.00, depth = -8300.00, title\n0.00, depth = -7600.00, title\n\n    \n  \n\n  \n\ndepth = -6700.00, title\n\n, depth = -4200.00, title\ndepth = -2660.00, title\ndepth -2120.00, title\ndepth = -5200.00, title\n\n, depth = -7900.00, title\n\ndepth = -9200.00, title\ndepth -00, title\ndepth -00, title\ndepth -00, title\ndepth = -7400.00, title\ndepth -6800.00, title\n\ndepth 0.00,\n\ndepth -2600.00, title\ndepth = -7900.00, title\n\n0.00, depth = -6400.00, title\n\n-0.00, depth = -10700.00, title\n\nA AR Ananth — 10100 AA\n\ntitle = 63km ENE of Be,\n\n59km N of Pahrumn.\n45km ESE of Be\n\n7km NNW of Truckee, California\n44km SW of Beatty, Nevada\n\n25km N of Beatty, Nevada\n16km WNW of Fernley,\n\n   \n  \n \n \n\n18km WNW of Beatty,\n\n57km ESE of Beatty\n\n15km ENE of West Ye e,\n15km NE of West Yel e, M\n\n51km ESE of Beatty,\n\n46km ESE of\n46km ESE of\n6km NW of A\n46km ESE of\n7km N of Iv\n\n   \n\n50km ESE sla\n\nee Override *\nSeventh ublic int compareToC(QuakeE\n\n| return Double. compare\",\na\n\n  \n\n‘Undo| (Cut| |Copy| |Paste| |Find...| (Close\n\nreturn deptn; ~ 1 SOP a ae Ep SS\nBlueJ: QuakeSorterDemo\n\n \n\n \n\n \n\n[___EarthQuakeclient___|\n\nCompile EarthQuakeParser om\n> VLLETA\n\nLoa i\nI 1\n\n \n\nQuakeEntry ToCQuakeEntry loc\ncompare(magnitude\n\n \n\n \n\nClass compil\n\n \n\nClass compiled - no 1 MYR b&e BEL RMIT SIV MUNEETIUE YY LVS\n\nBlueJ: QuakeSorterDemo,\n\n \n\n \n\n \n\nare :ompare(magnitude\n[___EarthQuakeClient__|\n= LI\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n|\n\n \n\n—-h\nI\n\n‘QuakeSonDemo\n\n \n\n \n\nLocation\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\ninherited from Object»\n\nvoid testSort0) return aeptn;\n\npublic\n\nE\n“175.937, mag = 5.10, aeptn\n(-22.61, -66.71), mag = 5.10, depth\n(-32.62, -176.63), mag = 5.10, depth\n(-9.04, 158.51), mag = 5.10, depth\n(38.87, 20.56), mag = 5.10, depth\n\n \n\n \n\n(31.33, 129.05), mag = 5.10, depth\n(-26.43, 67.83), mag = 5.10, depth\n(37.95, 143.94), mag = 5.20, depth =\n(-7.57, -13.53), mag = 5.30, depth\n(31.30, 128.88), mag = 5.30, depth\n(6.76, 94.55), mag = 5.30, depth = -\n\n(7.18, -34.27), mag = 5.30, depth =\n\n \n\n(-6.48, 130.29), mag = 5.40, depth =\n(38.77, 20.54), mag = 5.40, depth\n(26.38, 142.71), mag = 5.50, depth\n(40.39, 73.21), mag = 5.50, depth\n(31.43, 128.96), mag = 5.70, depth\n(17.83, -81.86), mag = 5.80, depth =\n(48.30, 154.28), mag = 5.90, depth\n(38.75, 20.55), mag = 6.50, depth\n\n \n\n \n\n \n\n  \n\n= soutn or 1\n= -211440. = 105km W oz mpa\n= -39610.00, title = 251km ES! Nera\n-10000.00, title = 123km SSW o a, So\n-10000.00, title = 12km WNW of L Gre\n\n-29960.00, title = 120km W of\n-10000.00, title = Indian” A\n-16070.00, title = 230km\n\n-10000.00, title = 106kr { /\n-10000.00, title = 137k \\) |\n\n \n\n10000.00, title = 129km h\n-10000.00, title Centr\n-135820.00, title = 19€\n-9240.00, title = 15km\n-12890.00, title = 91k\n-18000.00, title = 21km\n-26070.00, title = 128\n9980.00, title = 1\n-34000.00, title\n-11070.00, title\n\n4 public String getInfoO{\n\nreturn title; ttn or nga\n\n+ 5km ¥ ra Pampa\n:\npublic double getDepthQ){ ae i patspelal\nSRL WNW « cada, Gre\nt mWo jrazaki,\n‘an 0 “ste Jun\n\n~~\n\n@0verride\npublic int compareTo(QuakeEntry loc) {\nreturn Double. compare(magnitude, LoclgetMag |\n\n£\n\npublic String toStrinaQt\n\n \n\n7 6), i depth = 80.00, title\n154.28), mag = 5.90, depth = -34000.00, title ;\n\n20.55), mag = 6.50, depth = -11070.00, title A\n\n(-8.93, 158.41), mag = 7.00, depth = -13390.00, titlg"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/03_earthquakes-sorting-algorithms/02_sorting-at-scale/04_comparator.mp4", "id": 3267, "text": " Sorting at Scale\n\nComparator\n\nDuke {Compie) undo) it) (Copy) [Paste Find Cove\n\n \n\nimport java.util.*;\n\npublic class QuakeSort {\n\npublic void sortQuakes() {\nEarthQuakeParser parser = new Earth\nString source = “data/nov20quaked7 \\\n//String source = \"http://¢ og S i\nArrayList<QuakeEntry> list,\nCollections.sort(list);\nfor(QuakeEntry ge: list)\n\nSystem. out.println¢.\n\n} 23% EanthQuak\n\n \n\n \n\n \n\n \n\n \n\n \n\nee Blued: Creat\n\nQuakesorto\n\nName of Instance: quakeSorl = |lmport java.util.*;\n\nBluod: QuakelntroBiue|\n\n      \n    \n \n     \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nDistancesoner\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\ndata.aton\n\nSs EarthQuaket\n4\n\ne.USgS\n)\\. reac Me si\n(=24.07, -175.93), Mag = 5.10, Geptn = —1vvvV.vU, TITLE oT Tonga\n(-22.61, -66.71), mag = 5.10, depth = -211440.00, title of Abra Pampa\n(-27 67 -176 62) man — 5 10, depth = -39610.00, title E of L'Esperar\n, depth = -10000.00, title = of Dadali, So\ndepth = -10000.00, title Lefkada, Grec\n, depth -29960.00, title ‘ Makurazaki,\n, depth = -10000.00, title \"ean Triple Jun\n, depth -16070.00, title , ~ of Ofunato, Ji\n, depth = -10000.00, titl<g 3 Ds. Georgetown\n, depth = -10000.00, “| =< a <j vazaki,\ndepth = -10000.00, “\\) | Amel} \\Indon\ndepth = -10000.00\n, depth -135820\n\ndepth = -9240.0¢\n, depth -12890\n= = -, depth = -1800%\n\n128.96), mag = 5.70, depth = -2607\n\n-81.86), mag = 5.80, depth = -9980.\n, 154.28), mag = 5.90, depth = -34000\n\n20.55), mag = 6.50, depth = -11070.\n\n158.41), mag = 7.00, depth = -13391\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nlass Cumpreu — nu syntax errurs: public double getMagnitudeQ){\nreturn magnitude;\n\npublic String getInfo(){\nreturn title;\n3\n\npublic double getDepth(){\nreturn depth;\n} L\n\n \n\n@0verride\npublic int compareTo(QuakeEntry\nreturn Double. compare(getM.. =\ngq. geth\n\n \n \n \n  \n \n\ny\n\npublic String toStringQ){\nreturn String. format(\"(%3.2\n3\n\nfoLinm Ri J\n\n2 getMagnitudeQ){\nignitude;\n\ngetInfoQ{\natle;\n\ngetDepthQ){\npth;\n\ng toStringQ){\n= tring. format(\"(%3.2\n\n—_ Using a Comparator to Sort\n\n  \n\ne Collections.sort can take a Comparator\ne Will use ordering defined by Comparator\n\ne Remember: can use object as interface type"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/03_earthquakes-sorting-algorithms/02_sorting-at-scale/05_comparator-for-distance-from-a-location.mp4", "id": 3268, "text": " Sorting at Scale\n\nComparator for Distance from a Location\n\nDuke comple Undo) (Git) | Cony) |Pase| [ina.) [Coe\n® Dsmcesoner- Ouanenosiun 3240\nie) (Ga) (Coo [Pase) (id. (ce\n\nimport java.util.*;\ngubLic class DistanceSorter {\n\npublic void sortByDistanceQ) {\nEarthQuakeParser parser = new EarthQuakePar\nString source = \"data/nov2Qquakedata. atom\" ;\n//String source = “http://earthquake.usgs.g\nArrayList<QuakeEntry> list = parser.read(|\n// Location Durham, NC\nLocation where = new Location(35.9886, -74—=\n// Sort first\nCollections.sort(list, new DistanceCom\nfor(QuakeEntry qe: list) { fj\nCyvetam out nrintlin(ae): ene Blued: QuakeintroBlue}-3.2.50\n\nEarthQuakeClient\n<j\n\nClosestQuakes\nEarthQuakeParser Source C\n\nee\neee\n———\n\n$ new distancesorter\n\nvoid main(String{] args)\n\nOpen Editor\nCompite\nInspect\nRemove\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n    \n  \n\n \n\n     \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n= Compile | >|\n|\n\n \n\n \n\n \n\n \n\n   \n\n \n\nrrr Blued: QuakeintroBlue}-3.2.50\n\n \n\n \n\nEarthQuakeClient toa): QuakeintreBve-3.2.50\n\n \n\n \n\nEanhguakeCint\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nonoie | | , = eabauakerarer\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\ndistance! DitanceSorter\n\nHPr”7 \"Location purnan, No\n\nsss quakedata. Ol\n\n} f\nnew EarthQua|\nearthquake.\n\n= parser,\n\nLocation where = new Location(35 . 98%\n\n// Sort first\n\nCollections.sort(list,. new Di <tand vionnnwnnnnnnnnnae\n\n-71400.00, title\n-18800.00, title\n-9000.00, title\n-55300.00, title\n-15400.00, title\n-15100.00, title\n\ntitle\ntitle\ntitle\ntitle\ntitle\n+00, title\n-00, title\n-10000.00, title =\n-16300.00, title\n-29700.00, title\n-14800.00, title\n-66400.00, title\n-78800.00, title\n-25500.00, title\n\n-00,\n+00,\n+00,\n+00,\n+00,\n\n \n\n \n\n0.00, title = 43km\n\nviunnnronnnnnun\n\n85km NE of Manley Hot Sp\n\n14km W OT WnIttier, Alaska\n43km SSW of Cantwell, Alaska\n10km NW of North Nenana,\n\n \n \n          \n      \n\n   \n \n\n43km ENE of Y, Alaska\n10km NW of North Nenan,\n12km NW of North Nenan\nNE of Y, Alaska\n\n62km ENE of Manley Ho!\n12km WNW of North Ng\n34km SSW of Cantwey\n13km WNW of North ff\n13km\n18km\n23km\n\n   \n \n    \n\n \n \n\n     \n \n \n \n    \n  \n\n21km\n27km\n47km\n60km\n59km\n31km +40,\n+20,\n\ndepth\ndepth\n\n \n\n     \n\n-5300.00, title 55km SE of North Nenana, Alaska\n-13800.00, title = 50km ESE of North Nenana, Alaska\n-1000.00, title = 43km ESE of Healy, Alaska\n-29900.00, title = 39km ENE of Cantwell, Alaska\n0.00, title = 13km WSW of Ester, Alaska\n-9400.00, title = 49km NE of Healy, Alaska\n-200.00, title = 22km E of Healy, Alaska\n-2700.00, title = 26km W of Ester, Alaska\n-118500.00, title = 33km NNE of Healy, Alaski\n—8700.00, title = 41km NW of Ester, Alaska\n-14400.00, title = 142km NW of Arctic Vill\n-15800.00, title 5ikm NNE of Sutton-Alpj\n-14400.00, title 30km W of Ester, Alaskj\n-21100.00, title = 144km S of Prudhoe Bay\n-34800.00, title = 15km E of Sutton-Alpi\n-6600.00, title 18km NE of Healy, Alas)\n-2900.00, title = 33km W of Ester, Alaski\n-10100.00, title = 9km ENE of Cantwell\n-19400.00, title 4ikm WNW of Ester, Alal\n-37200.00, title 5@km N of Sutton-/\n-29200.00, title = 14km E of Butte, 4 (38.\n(38.\n(38.\n\n \n\n.84),\n+84),\n.85),\n+85),\n+85),\n+85),\n.85),\n+85),\n285).\n+85),\n+85),\n+85),\n.80),\n+86),\n+86),\n+86),\n.88),\n+93),\n.94),\n+76),\n-08),\n\nmag =\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\nmag\n\n \n\n \n \n \n   \n\n   \n \n \n \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n    \n \n \n\n   \n \n\n+00,\n+00,\n+00,\n+00,\n-00,\n+00,\n-00,\n+00,\n+00,\n+00,\n+00,\n+00,\n+00,\n+00,\n-00,\n\n+00,\n\n+00,\n\n+00,\n\n-00,\n25470.00, title\n\n21200.00, title FS\nRAI AA title = kre\n\n  \n  \n  \n  \n\nNW of The Geysers, |\nWNW of The Geysers,\n\nNw of The\nNw of The\n\n   \n \n\nPONFSSSONH title 10km S of Denton, North Carolina\n\n \n   \n     \n   \n   \n \n\ntitle = 7km SSW of Centerville, South Carolina\ntitle 13km SSE of Eatonton, Georgia\n\ntitle 2km ESE of Holliston, Massachusetts\ntitle = 4km SSW of Tiptonville, Tennessee\ntitle = 4km NNW of Ridgely, Tennessee\n\ntitle = 4km NNW of Ridgely, Tennessee\n\ntitle 11km S of New Madrid, Missouri\n\n \n     \n \n\ntitle\ntitle\ntitle\ntitle\ntitle\ntitle\ntitle\ntitle\n\n11km S of New Madrid, Missouri\n\n10km SSW of New Madrid, Missouri qj\n\n16km ENE of Perry, Oklahoma\n\n16km S of Langston, Oklahoma\n\n15km S of Langston, Oklahoma\n\n15km NNW of Perry, Oklahoma\n\n20km WSW of Perry, Oklahoma\n\n11km S of Conway Springs, Kansas\n\n15km N of Crescent, Oklahoma\n\n12km N of Crescent, Oklahoma\nN\nE\n\n    \n   \n         \n     \n     \n     \n     \n     \n    \n\n19km of Crescent, Oklahoma\n19km of Waukomis, Oklahoma\n16km S of Medford, Oklahoma\n\nBim COW of Medeocd Ob laboos"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/04_n-grams-predictive-text/01_generating-random-text/02_introduction.mp4", "id": 3270, "text": " Markov Text Generation\n\ne Generating and recognizing text\n\ne Statistical and probabilistic models\n\n \n   \n \n \n \n \n\ne Illustrate Java concepts with amusing program\n\ne Idea behind both PageRank and Machine\nLearning algorithms\n\ne Random keys pressed\ne Per text typewriter!\ne After pressing ‘a’, ...\ne After pressing 't','h’, ..\nDuke Random Text Generated\n\ne Training data: Chancellor Angela Merkel to\nEuropean Parliament: October 7, 2015\n\ne Order Zero text: lots of e's !\n\ne Order One: often pronounceable\n\n  \n \n\ne Order Two: words and would-be words\n\n \n\nEuroplace Justranage red uniont, valliameme valsold dincies.\nlOvere solvence in Pree ther to in whation werty. Frally, ing\nhand propeals. But pot is man to hat to seessfulaus of unitions\nterge for re v\n\n \n\n \n\n \n\nDuke Recognizing Random Text\n\ne Recognizing text of different orders, part of\nwork in SPAM filtering and more\n\ne Order Zero: not English?\ne Order One: possibly French\ne Order Two: likely French\n\n   \n \n\ne Order Three: La Marseillaise\n\n‘Aux armes, Mugir ces féroces féroces suivre! Amour survivre!\nlAux armes, citoyens! Formez vos bras Egorger nos fils, nos drapeaux,\nque de gloire Accoure a tes ennent ton triomphe et notre nous\nlaurons\n\n \n\n \n\n \n\n \n\nDuke What You lf tearn\n= Ger cialis e eomepiand iaeaihr\n\n         \n\n®) (Orotder t-orom tc N\neeoNenrersa\nfractions |"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/04_n-grams-predictive-text/01_generating-random-text/03_order-zero-order-one.mp4", "id": 3271, "text": " Generating Random Text\nOrder-Zero, Order-One\n\nDuke Markov Text Generation\n\ne Order-zero Markov text generation\n\n   \n    \n \n \n\ne Use training text to generate text randomly\n\ne Choose character at random; don't use any characters\nto \"predict\" next character\n\n   \n\n¢ In order-one, use one character to predict next\n\nwa nitsernibsm epex uatcdfaaaleohdi f roise e.tj\nigthgb lutosth nid, loaqnednegee olwr dasti tdnihertv\nInao o astvnscna nnrl tmba oteidpi ttfti eion nia\nlbeTtliesO aod eura spnb utee y dnkmo\nitstious acron ary, chom prondy at h) s hes cromindeatha’\nlon bests s orion terinomicof id cthat gul asojedafincos\nfimisin. cut toffroutheail cthespend stesurd bl\n\nike ibst/tico| nat ts mpsthe cen cecy Developing MarkovZero\nWe'll think about behavior or methods first\n\ne That will help think about state or\ninstance variables\n\n  \n\nWe need to set the training text\nWe need to generate random text\nCould combine into one method, but\n\nin general making methods do one\nthing is a good idea Training Text in MarkovZero\n\ne Setting the training text to be used when\ngenerating random text\n\ne Might want to generate several random\n\"texts\" from the same training text\n\ne Store text in instance variable to set in one\nmethod and access in another\n\npublic class MarkovZero {\nprivate String myText;\n\npublic void setTraining(String s){\n\n  \n\nDuke Generating Text at Random\n\ne Choose random character from training text\n\n \n  \n    \n\ne Use java.util.Random\n\ne Use StringBuilder to build random text\n\n  \n\npublic String getRandomText(int numChars){\nif (myText == null) return \"\";\n\n   \n \n   \n   \n    \n\n  \n\nStringBuilder sb = new StringBuilderQ);\nforCint k=; k < numChars; k++) {\n\nint index = myRandom.nextInt(myText.lengthQ);\nsb.append(myText. charAtCindex)); Constructors and Methods\n\ne Constructors should initialize fields\ne Random number generator\ne Sometimes useful to set seed\n\ne String that's training text\n\npublic class MarkovZero {\nprivate Random myRandom;\n\npublic MarkovZero() {\nmyRandom = new Random();\n\npublic void setRandom(int seed){\nmyRandom = new Random(seed); MarkovOne\ne One character predicts the next o™\n\ne From training text we see that ‘a’\nfollows ‘t' 12% of the time\n\na\n\n(a)\n0.42 ANY\n\nCe ore\")\n15; .\n\n     \n \n\ne We see 'y' follows 7%\ne Don't create probabilities\ne Search for every 't' a\ne Add next characters to list 9.07\ne ‘a’,'e',‘a','r', ‘a’, 'e','y'...\nDuke"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/04_n-grams-predictive-text/01_generating-random-text/06_testing-and-debugging.mp4", "id": 3274, "text": " Generating Random Text\nTesting and Debugging\n\nDuke Tek, worth'soche. mss, Mere Isprie war'sth ath Wige\n\nle uperon § usowhe hy ser. fone. thatd Moul t nere matheorelly.\nhinerepaswineagher ‘st vond, n Canisu Er Tu, toundf p chir ho.\nwhencefars hthar t mond, Rolleserou Ju h Sulise ld be! he I w\n\nhat d. cid w Ma t corso Be my BUL anodved to haco he ertht\n\ne le brinuth, brithee? uplesurit I'sint Un Bug anoom ghid t.\n\nNive heloitr's be s Itr bav' (ed. t s t, had chouloirtco 'staresses\na, y, difind n ceay. th iene Whedstie Gico B\n\nn, ais. fo. wo. iff kir let par t acisomas ofuthturor nm, mi\ndw theat serereloun'so Beais. [Litout ins atheas d we withatl\nHow He Wherer sse I Thth sst, cend, Rorer thathyod ton, s le\n\nhom. t incrdas cheher, mereup. Olliofrt oricean towoure d gia\nShr ore] ba! trvasefod, m. he 0, s sthe nb, t is that r Roug\nt wo tand. Lansedofe thte. de at hete Bes medshe hiciomeent,\n\nhI' Fr Cait. alereatar'l!~ onge, hour.'s We Co Gouins s. Now\n\np-\n/\n\nFile saved n Canisu b\ne¢stoy duh |sulise\n\nShr or\nt wo tand. oF\nWI’ Fr Cait, aler t cit $s. Nou\n\nString fext = “follows. getCindex) ;\nsb.append(next);\nkey = next; tit sc ole\n\nene = MarkovRunnes - MarkavBases\n\ni\n\n| [compile [Undo] [Cut| (Copy, [Paste (Find... [Close Source Code F\n— |\n\nome |pUbLic class MarkovRunner\n~ al lf ys aa\n\n  \n  \n  \n   \n  \n\nP| public void runMarkov() {\n\nFileResource fr = new FileResource®\n\nString st = fr. ro\n\nst = st.replaceC'\\n', ' \");\n\nst = \"this is a test yes a test\"{<\n\nMarkovTwo markov = new MarkovTwa\nmarkov.setTraining(st);\n\nforCint k=0; k < 3; k++){\n\nString text = markov. ger ‘o-\n\nprintOut(text); - Blued: MarkovBasics:\n\na\n\n \n\n \n\n \n\n \n\n \n\n     \n   \n\n \n\nMarkovZero\n\n \n\n \n\n \n\n \n\n \n\nMarkovTwo\n\n \n\n \n\n \n\nMarkovOne\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n|\n\n| Creating object.. Done. neOUeCeext ys\n\n|\nResource();\n\n \n\nBrest\":\nkovTwo();\n\n     \n \n\n{y | |\n\n115, 1:32 PM\n115, 1:32 PM\nM5, 1:32 PM\n\n’\nrest\" ; M15, 1:32 PM\nkovTwo(); |\n\n \n\n- V.getRandomText(5\nty eee OE FE\nM5, 1:32 PM\nM15, 1:32 PM\nM5, 1:32 PM\nM5, 1:32 PM\n\n \n\nee Open |\n‘data\n\nNat EL date Modified\n\nalice.txt Tuesday, December 1, 2015 1:32 PM\n> confucius.txt Tuesday, December 1, 2015 1:32 PM\n* hawthorne. txt Tuesday, December 1, 2015 1:32 PM\n* marseillaise.txt Tuesday, December 1, 2015 1:32 PM\n) melville.txt Tuesday, December 1, 2015 1:32 PM\n merkel.txt Tuesday, December 1, 2015 1:32 PM !\n> obama.txt Tuesday, December 1, 2015 1:32 PM\n5 Tuesday, December 1, 2015 1:32 PM 5\n\n \n\n \n\n   \n\nFile Format: | Files t, y, a, tl\n\n]\n\not, J\n,t, y, a, t]\n|\n\n» si\n\nmote A\n»t, y, a, tl\n, si\n\n,t) |\n| a eee\n\nj = || ZZ } SS\n\n8 heanorine - Manowar\n\n \n\n \n   \n   \n  \n \n  \n\nle) |Uao| Cu] (Copy) (Pate, Find.) [Close\n\npublic String getRandomText(int numChars){\nStringBuilder sb = new StringBuilderQ; i\nint index = myRandom.nextInt(myText.Length() #3\nString key = myText.substring(Cindex, index+27/ ;\nsb.append(key);\n\nforCint k=; k < numChars-2; k++){\n\nArrayList<String> follows =\n\nSystem.out.printlnC\"key \" + key +\n\nif Cfollows.sizeQ) == @){\nbreak;\n\n} New Clas. |\n\n \n\neee\n\nConpie_|\n\nBlued: MarkovBasics:\n\n \n\n \n\nFi Compile\n\n \n\n \n\nMarkovOne ‘New Class... | ‘MarkovRunner_\n=<\n\n \n\n \n\n \n\n \n\n    \n  \n\n \n\nMarkovZero\n\n \n\n \n\n \n\n \n\n‘MarkovTwo\n\n \n\n \n\n \n\nMarkovOne\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n=\ninherited from Object >\n& Inspect\n\nRemove lay i ndayv.?):\n\neve Open\nSidata $\n\nName a Date Modified\n\nalice.txt Tuesday, December 1, 2015 1:32 PM\n\n> confucius.txt Tuesday, December 1, 2015 1:32 PM\n\nhawthorne.txt Tuesday, December 1, 2015 1:32 PM\n\n> marseillaise.txt Tuesday, December 1, 2015 1:32 PM\n\n> mehville.txt Tuesday, December 1, 2015 1:32 PM\n\n> merkel.txt Tuesday, December 1, 2015 1:32 PM\n\n© obama.txt Tuesday, December 1, 2015 1:32 PM\n\n» putin.rxt Tuesday, December 1, 2015 1:32 PM\n\nFile Format: | Files a\n\n \n\nwe qeatlindey): ars){\nderQ);\nxt. LengthQ)-2);\n\ney indeys?):\nom,\n\n \n\n \n\n \n\n \n\n \n\n   \n\n™ system.out.printin\n\nif Cfollows.size()\nbreak; ag =\n\nin =\n\nindex = ecmremeprs (SST)\n\nString next = follows.getCindex);\n\nsb.append(next);\n\nkey = key.substring(1) + next; es a tes is is is a tes a tes is a test yest yest 03} __\n\nyooe . Mane haere\nja | | | in) (|\n\news) Lic class MarkovRunner\n\n \n\n   \n\nP) public void runMarkov(Q) {\nFileResource fr = new FileResource();\nString st = fr.asStringQ;\nst = st.replace('\\n', ' ');\n//st = \"this is a test yes a test\";\nMarkovTwo markov = new MarkovTwo();\nmarkov.setTraining(st);\nforCint k=0; k < 3; k++){\nString text = markov.getRandomText(50Q) ;\nprintOut(text) ;\n\n \n\n  \n    \n  \n \n  \n  \n \n\nE\n\n \n\nClass compiled - no syntax errors New Chass... |\n=|\n=e MarkovZero\n‘Compile |\n[—“Markovon @  @ Blued: Greate Object\nMarkovRunnerd\nName of instance: /markovRul -\n=\n\n \n\n \n\n \n\nwT mT ee Blued: MarkovBasics\n\n \n\n=\n\n \n\n \n\n \n\nMarkovZero\n\n \n\n \n\n \n\n \n\n \n\n \n\nMarkovOne\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n| Source Code\n\n     \n \n\n \n\n \n\nvoid runMarkov)\n\n=\nGS Inherited from Object»\nx ‘MarkovZero,\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nprintout ceXty: > Sek ) ae —\n\n15, 1:32 PM.\n5, 1:32 PM\nM5, 1:32 PM\n118, 1:22 PM\n15, 1:32 PM\nMSc. 0M 817 byt\n\n  \n  \n   \n \n    \n    \n    \n  \n  \n \n     \n   \n\n \n\ndata\n\n \n\nName ate Modified\nalice.txt Tuesday, December 1, 2015 1:32 PM\n» confucius.txt Tuesday, December 1, 2015 1:32 PM\n» hawthorne.txt Tuesday, December 1, 2015 1:32 PM\n» marseillaise.txt Tuesday, December 1, 2015 1:32 PM\n» melville.xt Tuesday, December 1, 2015 1:32 PM\nmerkel.txt Tuesday, December 1, 2015 1:32 PM\n= > obama.txt Tuesday, December 1, 2015 1:32 PM\nutin.oxt Tuesday, December 1, 2015 1:32 PM\n= marl = « Tuesday, December 1, 2015 1:32 PM\n\n \n\nFile Format:\n\nax errors == _— —_ = ma\n\nsere\ns tan ifidefor noth calloven, wit floilet. Ent you but of dear\ncou hat in, shell mill night th andearif fies lock. ‘Til blear\nready. Ear, Jull nothidow I pup, wask or sh I dagriewou sict\nsir! 0, may Julif to and thor shatch old onge a villif I re,\nRomin agueare 2. In Juliv'd\n\n \n\n \n\n=, Kistalogue ithey can! Prin you hime touna's marl, of boo. Or\n\nExed tord! Mereake towelf Consmadead, an th, Fat, beir; Nur be,\n“S*friark plugh'd- of to but inge and's my of the th a wien go mé&\nesi 'tine une th, bropichands grin de. Tyb. What, thers Rom. Wit /\n7 eaday! [som. Mar let I dot wery wainur Lad, ter Romeo, Escom\n, and fe. N\n\n \n\n \n\nay! Cuppis tiont tom. The do is a ver of thy to ford! Cap.\nas show of torefie. Tak. Eit nischer; bove th Musers mys is”\n“uid if diese. Thatcas to the, no hounturnsmor th frous til}\n[and de lethein hortunswe you meo, Pet frownriess nothitg\n\n“wis d :\n= |compite| [Unda) [eut) [Copy| [Paste) |Find..| [Close] Source Code\n\n \n\nve Markoviwo - MarkovBasics\n\n  \n  \n   \n \n \n\nempile| |Undo| |Cut| |Copy) |Paste| |Find...| Close\n\n \n\npublic String getRandomTextCint numChars}\nStringBuilder sb = new StringBuilder\nint index = myRandom.nextInt(myTexté\nString key = myText . substring(indey,\nsb.append(key); Fey\n\nfor(int k=0; k < numChars-3; k++);\nArrayList<String> follows = Bea\n//System.out.printinC\"key “ ‘\nN\ni |\n\n \n\n \n\nCompiling... Bone. New Cass. |\n\n \n\n \n\nBlued: MarkovBasics\n\n \n\n \n\n[MarkovRunner\n\nTiiankovzero |\n\n \n\n \n\n \n\nMarkovOne Blued: MarkovBasics Blu: Markovian LL\n\n‘New Class... | ‘MarkovRunne-. i\nnew MarkovRunner() Source Code\n— Open Editor\nill Compile ia]\n\n \n\n \n\nInspect\nRemove\n\n \n\n \n\n \n\n‘MarkovTwo\n\n \n\n \n\nMarkovOne TINVCFAM OIF HNKRINTINIG ~\n\nNew Clas. | MarkovRunner\n= ll\n=| tt MarkovZero\nCompile |\nMarkovOn @  @ BiueJ: Create Object\nMarkovRunnerO\nName of instance: /markovRul\n| Cancel |\n==\n\n \n\nSource Code Blued: MarkovBasics\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n   \n  \n\nSource Code\n\n \n\n \n\n \n\n \n\nNew Cass. | 2 ‘MarkovRunner\n—>\n| MarkovZero\nCompile | ai\nSORES MarkovTwo\n=\n& inherited from Object >\n\nInspect\n\nRemove ee ne, eee N65, 1:32 PM\n\nBoy indays 2): piss 122 PM\nee Open 5, 1:32 PM\njs, 1:22PM\n\n115, 1:32 PM\n\n \n\ndata\n\n32 PM\nName ate Motified y\nallce.txt Tuesday, December 1, 2015 1:32 PM\n» confucius.txt Tuesday, December 1, 2015 1:32 PM\n* hawthorne.txt Tuesday, December 1, 2015 1:32 PM\n* marseillaise.txt Tuesday, December 1, 2015 1:32 PM\n> metvillext Tuesday, December 1, 2015 1:32 PM\n© merkel.txt Tuesday, December 1, 2015 1:32 PM\n© obama.txt Tuesday, December 1, 2015 1:32 PM\n| > putin.oxt Tuesday, December 1, 2015 1:32 PM\n\nI\n\nFile Format: | Files\n\nj Cancel\n\n2aXTLINTUTOLLOWS. SLZEU))J5——\nws. agetCindex): = Rome seek worn again. Rom. Rom. Peter all that thou have murts\n‘wholy hou'— 'Wilt a true law, at he part? Borrow with ope, your\nmorro\n\n \n\n \n\n \n\nNurse, good hite me, my go all! Pet. Jul. I daught, here joy\npointo canneratch.] Jesu, dug, Nurse, powder kill ment. Petermi\n_= Bond she deathe hith stars! Rom. Go be move man? Rosall I do ™\nGrosset, thou live I. Jul. 0, thould Capuletter Mer. He wond oy . y\ni IE Oe 7\n“oe\n\n \n\n \n      \n       \n       \n       \n \n\n‘but to-night, Parient. Now love, ear eyes, For the*'my he shal\n-iI see her. Romeo Being 0' ming good forth is new this in expe .\nThou aring; mad buri ft\n\nny ge ee ‘ ~\n\n \n\nomeo! Juliet. Rom. Fie, Shut thouse friar. Ay, sir, Nurse. y.\ninund thy her. This my he contague sir, baker Nurse. Read,\nOur havity. Romeo doom? Jul. Sharm the friage. Juliet wher\nMy bad? Rome IV. Julier's this it shor. Make ackill wher\nBen. Good still Peter the not this thou are hat kiss fio\nhat Samp. Wife [and man; Cound, Rom. That it Mercy."}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/04_n-grams-predictive-text/02_word-n-grams/02_order-one-concepts.mp4", "id": 3278, "text": " Word N-Grams\nOrder-One Concepts\n\nDuke MarkovWordOne Class\n\ne Use Concepts from Markov Programs\n\ne Usable, tested interface: |[MarkovModel\n\n   \n\ne Client programs continue to work\ne Implementation changes; interface doesn't\ne Abstraction in software at its best!\ne String myText to String[] myText\ne Searching for words rather than characters\n\ne Need to create new helper methods\n\nDuke Thinking About State and Behavior\ne MarkovOne basis for MarkovWordOne\ne Both implement IMarkovModel\ne setTraining and getRandomText\ne Search for word in training text\ne Similar to searching for character?\ne Build random text one word at a time\n\ne Similar to character at a time? Initialize MarkovWordOne\n\ne Instance variables, constructor\n\ne Also setTraining method, create array\n\npublic class MarkovWordOne implements IMarkovModel {\n\nprivate String[] myText;\nprivate Random myRandom;\n\npublic MarkovwWordOne() {\nmyRandom = new Random);\n\n}\n\npublic void setTraining(String text){\nmyText = text.splitC\"\\\\s+\");\n\n \n\n \n\nDuke MarkovWordOne getRandomText\n\ne Interface specifies method to return text\n\n \n \n \n  \n   \n  \n\ne String getRandomText (int numChars)\ne Type of parameter is meaningful, not name!\ne Add words not characters, manage spaces\n\npublic String getRandomTextCint numWords){\nStringBuilder sb = new StringBuilderQ;\nint index = myRandom.nextInt(myText.length-1\nString key = myText[index];\nsb.append(key);\nsb.append(\" \");\n\n// for\nreturn\nt\n\nDuke Completing MarkovWordOne\n\ne Code is nearly identical to MarkovOne\n\n   \n  \n \n\ne Changed numChars to numWords\n\ne Append \" \" to StringBuilder\n\n \n\nfor(int k=0; k < numWords-1; k++){\nArrayList<String> follows = getFollows(key);\nif Cfollows.sizeQ == @{\nbreak;\ny\nindex = myRandom.nextInt(follows.size());\nString next = follows.get(index);\n\nSo-eppenac™\ney = next;\n\nDuke E Coding and Testing\ne We'll copy getFollows from MarkovOne\n\ne Searches String myText i. =\n° String methods .length() and .indexOf () ; & p\n\ne Uses .substring() for one-character String\n\n \n \n  \n\ne Changes due to String|] myText\ne We'll need to write .indexOf () for arrays\n\ne Java doesn't supply indexing search, does | ¥\nsupply .contains for ArrayList"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/04_n-grams-predictive-text/02_word-n-grams/05_wordgram-class.mp4", "id": 3280, "text": " Word N-Grams\nWordGram Class\n\nDuke Markov Models\n\ne MarkovOne to MarkovTwo and more\n\ne for characters, changes are very simple:\nchange 1 to 2 to myOrder in\ngetRandomText\n\n  \n \n\ne No changes to: getFollows ()\ne Changes to MarkovWordOne not so simple\n\ne Strings: character sequences\n—.substring gets any subsequence\n\ne Need analog for String array Method getFollows for N chars\nString myText, String key has any length\n\n  \n\ne .indexOf(..) and .substring(..) work\n\n \n\n \n\nprivate String myText;\nprotected ArrayList<String> getFollows(String key){\n// code not shown\n\nreturn follows;\n\n \n\nDuke Extending to N Words?\n\ne MarkovOne to MarkovTwo/N for characters\n\n   \n\ne Simple because String key was 1, 2, 3, ... characters\n\ne Key isa String, argument to .indexOf (. .)\ne MarkovWordOne to MarkovWord/N\n\n¢ One-word key to N-word key\n\ne How to search for N words in a String[]\ne Design and implement word sequence\n\ne Analog of String as character sequence\n\ne We will call this WordGram\n\nDuke WordGram\n\ne Sequence of Strings, not characters\n\ne String is \"plant\" or \"dinosaur\"\n\n \n\n \n\n \n\ne WordGram is |theldinosaurleats|plants\n\n \n\ne The type char is primitive; String is not\ne Internally String is array of char values\n\ne Internally WordGram is array of String values\n\nalp|p|ile f ee\n\n“the\"| \"dinosaur\" |\"eats\") |\"plants”\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nDuke"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/04_n-grams-predictive-text/02_word-n-grams/07_equals-and-hashcode-methods.mp4", "id": 3282, "text": " Word N-Grams\nEquals and HashCode Methods\n\nDuke Developing WordGram\n\ne We'll use WordGramTester.java in\ndeveloping, coding, and testing WordGram\n\n   \n  \n\ne We'll test .toString() and constructor, code\nalready written\n\ne We'll see why .equals() is needed,\ndeveloped for MarkovWord.getFollows ()\n\ne Enough for us to implement MarkovWord,\nbut one advanced method to go!\n\ne Implement .hashCode () , work with HashMap\nDuke Writing .equals()\ne You've seen why .equals() with Strings\ne Can't use ==, that tests something different\ne Writing .equals (): Java requirements\ne Parameter has type Object\n\ne Cast object to type in class being designed\n\n[public boolean equals(Object o) {\nWordGram other = (WordGram) 0;\n// compare me to other\n\nif ClengthQ) != pther. Length()> return false; Looking Ahead\ne We could use a HashMap to store the\n\nfollow lists for each key: |\"the herd then...\"\n\ne Works with letter or word Markov\n\n \n   \n   \n\ne Avoid scanning the text many times for \"he\"\n\n \n\ne look up in map!\n\n \n \n\n\"th\" | me\"\n\ne Could be efficient ['faet'} —\ne Need .hashCode ie”\n\nS\n\nwan\n> Values in HashMap\n\ne Must convert object to integer: hash code\n\n \n   \n  \n\ne This \"hash code\" is like index into map\ne Simple idea? hash code is 17 for everything\ne With .equals working, everything correct\n* Bad performance, everything in same \"bucket\"\n« Details in further studies\ne Simple .hashCode\ne Add string hash codes\n\nDuke"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/01_using-java-beyond-bluej/04_static.mp4", "id": 3287, "text": " Using Java Beyond BlueJ\nStatic\n\nDuke What Does Static Mean?\n\ne main is “static,” what does that mean?\n\ne First: non-static (instance) = in each object\ne Static: one for the entire class\n\ne Named: BankAccount.nextAcctNum\n\nclass BankAccount {\nint acctNum;\ndouble balance;\nstatic int nextAcctNum;\n\n \n\n  \n \n \n\n \n\nBankAccount | BankAccount |\n\n \n\n \n\n \n\nacctNum:\nbalance:\n\n  \n  \n\n \n\n100 | acctNum: 101\n\n \n\n \n\n45.67 balance: 567.89\n|_BankAccount _\nacctNum: 102\n\n \n\nbalance: 8999.10 Static: Methods and Fields\n\ne Static fields:\ne One shared by all instances\ne Not as common as instance variables\ne Static methods:\ne Not inside any particular instance\ne Can access static fields, call static methods\n\ne Cannot access instance variables or call\nregular methods\n\ne Need to specify what object to use\n\n \n\nDuke"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/02_mainstream-java/06_reading-files-with-java-nio.mp4", "id": 3295, "text": " Mainstream Java\nReading Files with Java.nio\n\nDuke Information Hiding and Resources\n\ne Why we have edu.duke.* and FileResource\ne Insulate programmers from complexity\ne Even without edu.duke.* this happens!\ne Empowering essentials: problem-solving! _, y\nLG\ne Duplicating FileResource and URLResource\ne Seven classes and three packages\n\ne Exceptions and different idioms Reading Files Simply\n\npublic void runHello(){\nFileResource hello = new FileResource(\"hello_unicode.txt\");\n\nSystem.out.println(line);\n3\ni}\n\ne Using edu.duke.FileResource\ne Hello Around the World!\ne Create FileResource\n\ne Loop over each line of file\n\nDuke Reading Files with Raw Java Duke\n\n \n\nReading Files with Raw Java\n\npublic void readAndPrint() throws IOException{\nPath p = Paths.get(\"hello_unicode. txt\");\nBufferedReader reader = Files.newBufferedReader(p);\nwhile (true) {\n\n  \n \n\nUsing seven classes and three packages\n\ne Create Path resource\n\ne Loop over each line of file Java Package Details\ne java.nio.file package\n\ne Paths, Files, Path\n\ne Note that Files and Paths use static methods to\nget or create resources\n\n   \n  \n\ne Many uses throw exceptions, deal with those\ne java.io package\ne BufferedReader and IOException\n\ne Lots of details for all situations\n\nDuke URLs and java.net\n\nURL source = new URLC(\"http://.../hello_unicode. txt\");\nBufferedReader reader =\nnew BufferedReader(\nnew InputStreamReader(source.openStream())) ;\n\ne Reading from URLs similar to URLResource\n\n \n\n \n \n \n  \n\n \n\n \n\ne Create a URL object\ne Use the URL object and java.io classes\ne Hierarchy of Reader classes\n\ne Read all lines\n\nDuke"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/02_mainstream-java/07_hello-around-the-world-with-eclipse.mp4", "id": 3296, "text": " Mainstream Java\nHello Around the World with Eclipse\n\nDuke SS eeipes:€56: Oe Sommee Resenier. Weegee Sense“ Caelees Ae cee neeeere ee BVOOn7 Sas eO*VOrte\nev NadOiveMeionordecut ra - Epa - ervalvopbeu Diag CStDicovmer\n\n*\nAOS a i Onarga\nneon =o\n\n1 a oY\n\n   \n \n \n\nA ES Fa D0 41: 46-28 PAL ES\n\n \n   \n \n\nsi We See Bowes\n\n  \n   \n\n \n\nTD toms 78\nBARNEY\n\n \n\n“i import java.nio.file.Path;\n\n   \n\n \n\n     \n\npublic class HelloWorldRedux {\n\npublic void readAndPrint() {\n\nPath p = Paths. get(\"hello_unicode. txt\");\nBufferedReader reader = Files.newBufferedReade\nwhile Ctrue) {\n\nString line = reader.readLine();\n\nif Cline == null) {\n\nbreak;\n$\n\nSystem. out.printInCLine);\n\nevausawanl\n\n     \n\n \n   \n \n\n8\n\n    \n \n\n    \n \n\n5\n\n    \n \n\n    \n \n\n~\ns\n\n \n \n\n \n  \n\n&\n\n  \n \n\n   \n \n \n\n \n\n    \n\nDomes & xe\nTP SCS ECE eS aneng?ser tide rey ar eee\nass Thefed abe; [15, t Mende e BOR t sthand wothe\n\nuan ed In the. Chinowa nghes is; Cha Ye Yutendousthe ;_Retioen'_ the Eon \"Source _ Hetantor_ Nedante _Gensch | Patect_Antiont “fue “Window 0. BSOON7 BAS 9 4 DD t 0 F OWRD Fridect) 40523PM 2 OQ\n. = dea RaiaaOroertaioreduive- Ege -Anlon/Dopbex Dae CSEDEesra\n\n  \n  \n   \n  \n \n \n     \n \n   \n   \n   \n   \n   \n         \n       \n   \n \n   \n    \n\npublic class HelloWorldRedux {\n\n \n \n\npublic void readAndPrint() {\n9 Path p = Paths. get(\"hello_unicode. txt\");\n\n2 Manin 10 BufferedReader] reader = Files.newBufferedReade\naauee 11. while Ctrue) {\ndeen nsiitis lal2 String line = reader. readLine();\na 23 if Cline == null) {\nSm 14 break;\npect tS t\ni nn 16 System. out.printLnCLine);\ncoc 18} \\~S\n\n20 public void readAndPrintURLO { ‘N\n\n   \n\na 21 URL_source = new URL(\"http: //dukelearntoproara\nee cone £2 . xk ae\ncoe CP SOT ECE S aren =Ser that ine yar ene\n\nBese ass Thefed abe; [15, t Mende e BOR t sthand wothe\n\nuan ed In the. Chinowa nghes is; Cha Ye Yutendousthe “ Add throws declaration\nJo j import java.io.\n8 Surrould with try/catch impart avant\n\nder import java.ni\na\n\n  \n\npublic void re\n\nncL reer A RoR tm Ne Oe ste\norm ReiaaOrvaowrRedi ave Eo - ieloalopbxibwe CSEDLoera\nean 2 Bila Boa o0m\n\n \n\nS lad (konnichiwa) - Japanese\n2488142 Cannyong-haseyo) - Korean\nHallo - Norwegian\n\nCzeSé - Polish\n\n014 - Portuguese\n\nBund ziua - Romanian\n\n3apascteyite (zdrdvstvujte) - Russian\n\nHola (oh-1a) - Spanish\nHujambo - Swahili\n\nHalla - Swedish\n\naah (sa-wat-dee) - Thai\nMerhaba - Turkish\n\nBitao (vitayu) - Ukrainian\n\nChao Gow) - Vietnamese\n\nHyl6 - Welsh\n\naxv ton x Ca gutn tog) - Yiddish\nSawubona - Zulu"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/matlab/02_the-matlab-environment/01_lesson-1-the-matlab-environment/06_syntax-and-semantics.mp4", "id": 5599, "text": " VANDERBILT 7 UNIVERSITY INTRODUCTION\nto MATLAB\n\nSyntax and Semantics Gas eR gen soars grein) @ Borner\nGicemieeon i presen a. re ee\nhow New Onin compe eat Se on satan tle\nSim TOF Peseta cepueealal, Jeune Pe\n7 Sample Data nis absuzero.e = \" Eila.really og... 7\nSth banc saris Use” Zaysasio\nBy cxamote sclenifc. notation dock eee eae ene ae\nA eamoteis8im nee yas Fs a\n2 ay 2\n\n> apother” Long. one = 175\n52 yetvanother-Tong_variable.nane = 2_really_long_variable_nanes...\n‘nother. Long. one\nYyetanother long variable_none =\nT= x\n1\nError: The expression to the left of the equals sign is not a valid target for an\n\n   \n\nJA. >> Bs nero F = abs nero G19/5-32 Lead Instructor: Mike Fitzpatrick\nCurriculum design: Akos Ledeczi and Mike Fitzpatrick\n\nGrading Technology: Robert Tairas VANDERBILT ¥7 UNIVERSITY\n\nV| DL: INSTITUTE\nDIGITAL\nhe 0"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/programming-languages/01_introduction-and-course-wide-information-start-here/01_welcome-information/06_why-part-a-part-b-part-c.mp4", "id": 4257, "text": " Zs\nSering vw\n\ncz)\n\n$\n‘ae\ni)\n3\n\n%\n\nOS s\n\nYo S\nScience ae Programming Languages\n\nDan Grossman\ngeome University of Washington\n\n \n\nWhy Part A, Part B, Part C How it breaks down\n\n+ Unfortunately “by language” when that’s not the point\n\n+ Part Ais roughly as much as Part B and Part C combined\n— No natural place to sub-divide Part A in my opinion\n\n* Part A: 3 homeworks, 1 exam\n\n+ Part B: 2 homeworks (1 more challenging)\n+ Part C: 2 homeworks (1 more challenging), 1 exam\n\nDan Grossman, Programming Languages"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/programming-languages/01_introduction-and-course-wide-information-start-here/01_welcome-information/08_optional-very-high-level-outline.mp4", "id": 4259, "text": " Programming Languages\n\nDan Grossman\n\nTorey)\n\nmeee § University of Washington\n\nBS eR Sy\n\n \n\nOptional: Very High-Level Outline Course Overview\n\n+ Very hard to describe topics we haven't done yet (!)\n— So don’t be intimidated and maybe skip this to “dive in”\n\nPart A:\n\n0. Software Installation\n\n1. Basics, functions, recursion, scope, variables, tuples, lists, ...\n— Give extra time for Section 1\n\n2. Datatypes, pattern-matching, tail recursion\n\nFirst-class functions, closures [and course motivation!]\n\n4. Type inference, modules\n\ne\n\nOverall: A precisely specified introduction to functional\nprogramming built up piece-by-piece\n\nDan Grossman, Programming Languages 2 Part C\n\n7. Dynamically-typed Object-Oriented Programming\n\n8. OOP vs. Functional decomposition\nAdvanced OOP topics (e.g., mixins, double dispatch)\nGenerics vs. Subtyping\n\n“Finishes the story” even if you “already know OOP”\n— Some with OOP background find 7 “less interesting” but stay\ntuned for 8\n\n— Some find Part C “anti-OOP”, which is mostly © not true\n+ About contrasting with what many “already think/know”\n\n+ And yes, some focus on where commitment to “pure\nOOP” may be unwise even in “an OOP language”\n\n \n\nDan Grossman, Programming Languages 4"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/rails-with-active-record/01_introduction-to-active-record/02_beginning-databases-in-rails/04_scaffolding.mp4", "id": 4604, "text": " Se ee ee) Scaffolding\n\nRails with Active Record and Action Pack In this lecture, we will discuss...\n\n~ How to scaffold resources quickly\n\n~ What Rails scaffolding gives you out of the box Scaffolding\n\n~ Essentially a code-generator for entities\n~ Generates a simple prototype to work with...\n~ Lets you get up and running quickly\n\nGreat for learning Rails! Scaffolding Generator\n\nee ulo mae\n~/fancy_cars$ rails g scaffold car make color year:integer\nSte Mela hm lool ue)\nfoils} Cee iRe vets 1fa Nhe is ob ec mage ee EE\nogo app/models/car.rb\nUo) alma\nfog) Ao Ee Te ata)\nei te Och\nUe Moo] ite\nDc Mo eo\n‘invoke scaffold_controller\nfog app/controLlers/cars_controller.rb\ninvoke = erb\nfoi) app/views/cars\nie Col AAR alae ah Lo)\neae) Aa ees ema}\nfol ia} Col AAR Ao)\nar Ce Aa eae Mac)\neid ee eRe a) Applying Scaffolding to DB\n\n~/fancy_cars$ rake db:migrate\n2015907153643 CreateCars: migrating\n\n-> 0.00\n\n20150907153643 CreateCars: migrated (@.0011s) Scaffolding — API also?\n\n€ ) @ bocathost:3000/cars json\n\nBut wait\nthere’s more! 7a ay\n\nmake\n\n \n\n   \n\n\"cadillac\",\n\ncolor: \"Black\",\nyear: 2014,\n\nurl: http: //localhost :3000/cars/1. json\n\n \n\nJSONView\n\nViews JSON in the browser.\n\n \n\n \n\n \n\n  \n\nyear: 2015,\nurl: http: //localhost :3000/cars/3. json >\n\nScaffolding — Explaining the Magic\n\ncaffolding creates:\n\nMigration\nWe'll be discussing these\nP\n“s i\n\nR S\nController with actions\nViews\n\nARWONAD\n\nAnd more... Summary\n\n~ Scaffolding can get you up and running quickly\n~ Generates JSON response\n\nWhat’s Next?\n\n~ Database Setup eee ean nee etre]"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/rails-with-active-record/01_introduction-to-active-record/02_beginning-databases-in-rails/05_database-setup-and-sqlite.mp4", "id": 4605, "text": " Se ee ee) SQLite\n\n+ Rails uses SQLite for database by default\n* Self-contained, server-less, zero-configuration,\n@ transactional, relational SQL database engine Other Tools for Viewing SQLite\n\n€) @ o010, 20 05) ntpa/geMo com xobrows\n\n \n\n© | Psear\n\nREADME md\n\nDB Browser for SQLite\n\n \n\n   \n\nies ee ee\nOatbase Svuctre CEEMEENEN tit Pragmas Execute SQL\nTable: (tou members 2) (6 New Record) [ Dalat Record\n\n1 gluster-board 2013-09-05 99909\n2 gluster-users 2013-09-05 99999\n\n \n\n=] 1-202 [> Cot: ) 1 Summary\n\n~ Rails uses SQLite by default\n~ Built-in command-line DB viewer\n\nWhat’s Next?\n~ Introduction to Migrations Ree ie eee ter]"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/rails-with-active-record/01_introduction-to-active-record/03_metaprogramming-in-ruby/02_dynamic-methods.mp4", "id": 4609, "text": " Se ee ee) Module 1 - Lecture 6\n\nDynamic Defining Methods Dynamically\n\n+ A.k.a. “Dynamic Method”\n\n~ Not only can you cai! methods dynamically (with send) -\nyou can also define methods dynamically\n\n* define method :method name and a block which\ncontains the method definition\n\n~ Defines an instance method for the class Dynamic Method Example\n\nclass Whatever\ndefine_method :make_it_up do\nputs \"Whatever...\"\nend\n\nend\n\nwhatever fpevernew\nwhatever.make it up # => Whatever... ...We Can Do This!\n\nExtracts product name\n\nrequire relative ‘store!\nclass ReportingSystem\n\n   \n\ndef initialize\n@store\n@store.methods\n\n \n\nStore.new\n\n \n\np (/get_(.*)_dese/) { ReportingSystem.define report _m\n\n \n\nend\n\ndef self.define_report_methods_for (item)\ndefine_method(\"get_#{item}_desc\") { @store.send(\"get_#{item}_desc\")}\ndefine_method(\"get_#(item} price\") ( @store.send(\"get_#(item)_price\") }\n\nend\nend\n\nrss gSystem.new\n\n   \n \n\n \n\n \n\n \n\nputs \"#{rs.get_piano_desc} costs #(rs\n# => Excellent piano costs 120.00\n\n \n\npiano_price.to_s.1just (6, '0\")}\" Summary\n~ Defining methods dynamically can dramatically reduce\n\nthe amount of code that needs to be written\n\nWhat’s Next?\n~ Ghost methods Pee eRe ed"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/ruby-on-rails-intro/01_welcome-and-setting-up-the-development-environment/03_git-and-github/03_remote-repos-and-github.mp4", "id": 4706, "text": " Se er ee) ku\n\nJOHNS HopkINS\n\n \n\n‘The Johns Hopkins University 2015, all rights reserved JOHNS HOPKINS\nDe\n\n \n\nSee Module 1 - Lecture 3\n\nRemote Repos\n&\n\n \n\nJOHNS HOPKINS De ee errr ae JOHNS HOPKINS Remote Repos — Set Up and Push\n\n*+ $git remote add alias remote _url\n* Link remote repo with your local repo\n\n+ origin - default alias for a cloned repo\n\n+ $git pushalias branch_name\n\n* Push changes to your branch (master) out O mar Potreqnets eens cit e+ @-\n[J inv-ep-coursera / fullstack-course1-module2 @Urwatcn= 2 Star 9 Yok 2\n{ullstack-course1-module2 / |\nfF <—\nes |\nIB Ascrmeresessor Asean Case Staten’ README hn “\n1B Aesirmerts.csson Asan} Cate Satnan/README ma\n1 Aetonmenst.estora-Aasgnmen Cate SatendREADME pl =\n[B Assgrmorteoctoot-Assgnmand}-CatoSatanltontodin.jetont Jonata =\n> (B AadarmeisAesson0!-Assanmanio|-Case-Sntomanshidatsr spas\nao\n1 signmensessono-Asngnmento Case Sterner strode? lesson Jomatve\n|B Assignees asorOt-Assonmano}-Caso-Statomensattortstatspactesson!_spe G\n\n1B Asagrmenteosor0t Assia Cate Satoraniatdertstavecispec heer\n1 AssigrmerttLesonte Assignment! ColectonyREADME hint\nTi Assigrmonttessn02-Assgrmaniot-Coloctons README md\n1B Assiormentat.esonn2-Assgnmeniot-Colectons README pt\n1 Assirmerst.esor0a-Asignmaiat Colecionsteoksionioded lessond Jomatve\n1B Assigrmontr.esaonaa-Aasgnmaniot Colectonstuent sta spec\n{© Assignments/Lesson02-Assignment0|-Collectons/student starvmodile2.lesson2. formative sb\n[ Assigrmenst.essonl2-Assgnmena| Colectonsstudent-statspectesson2 spec.\n haclapnaaaii aeuiailis-dadlesahaiels eaaitionaneident:ttaatiactenes alee: QD Precio Pultraquets leaves Gist\n\n \n\nB+ @-\n\n[D) jnu-ep-coursera / fullstack-course1-module2 @Unwaich 2 jeStar 0 YFom 2\n\nfullstack-course1-module2 /|\n\n‘Youve acvate ee derby pressing +. Saying er the tt. Use and: tonmvgate, we 10 Vow ls,\n\nay |\n\nfl fc\n\n \n\n[Bh Assiormonttiesondt-Aasgrmarnt Cate SatarardHEADME hint\nBi Assiormontinesona\n\n \n\n     \n\nThis concludes\nthe lectures for\neee Module 1. Ce nee Raters] Coe ean eee eters]"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/advanced-calculus/01_sequences/04_what-is-the-limit-of-a-sequence/01_what-is-an-geometric-progression.mp4", "id": 7, "text": " sequences\nserles What is a geometric\nprogression? A geometric progression is a sec\nwith a common ratio between the t\n\njuence\nerms. » 3, 6 VA, AY 4h IG, , 3, b, 1d, a4, 44%, 3, 6 Va, AY 48%. - WA, ee\n\n— 3, b, 1%, AY 44 9%. — 24, Yd %.\n\n \n \n   \n\n~\n\n‘ co\n3, b, 1%, AY 44 96_ 6.\n9\n%,\n\n:\n\nH,\n\no\n\na m=.\nSe, A, DY 43 96 | 2 \"i 2\nyb, 1s, 24 4% 96.\n\nbe 2.2. Be 1s, 24 4d A\nee ma.) .2 :\n3, b, Id, 24 44 9_\nGi 3- ol 3, 6 1%, AY 48 96.\n32 a 2 a ‘e sis\nees, 1a, 24 44 9.\nPe.\n\nAn = “eee . meee\n3, b VA, AY 48 96.\nPe 3:2.\n\nww\n\n= AoC =.) .2\nBb Id, 24 44 9. 3, 6 IA, AY 4% 96.\n, . 3.9\" 2 2\n\noN\n\nmes, 1d, 24, 44 96.\n3\n\nn\n\nAn = aN a) 3 : va core al\neb. 1%, BY 4% 96 |\non eo In A Som. Prog.\nCah tevr, is the\nSeometyvw Mean\nof is neishbors G “Veom M tan\n\n      \n \n \n\nos\n\n|\n\n|\n\nThe s2om mem of\nA al b is | Geom Mea, |\n\n|\n\n  \n  \n \n\nGQ Com M tay\n\nThe s¢om mem of\nAad b is | Geom M ean of\n.\n€\ne And\naA ia “Vom Mean\n\n|\n\n  \n  \n \n\nTh\n| e€ Som mem\na Qa b ‘Ss f\n\nfal 78)\nMéom o\n22om\n\n“The\n\nis b \\eom M ean,\n\n“The 920m Mem et:\nAad b is\n\n-\nak\n\nlaa’ Pe - a. a 2\neb, 1A, 24 44 96\n3-2\nAn = 1.6; a ay Ay ay 44 06.\na 3:2\nD2 O.-- -2 ra ‘2 2 il\n3, 6 1%, AY 48 96 -\nO,- 3-2\nAn ett eee oC\n3, 6 VA, ay 44 96\n| 4\n\nSeb, 1A, 24 4% %\n(3-1 m2 2 3\n3, 6 IA, ay 44 96\nBN Ss\n_ ive 4 48 9% Ss 6, ioe SG 44 %\nSie. 3c.> 6 Ax SG 44% %\na, = a 2 - =\nmes, 1a, 24 44 96\nBoia 03c.: 6 OD, 24, 44 % VA, a4 44 96\nhia: (3c 76\n\nA\n\na.\nSb, —\n\na re\nVa, a4, 44, 96.\n\n \n\n3\n\nmb\nAb\n\n    \n\na\n5 mo) .2 2\n3, 6 IA, AY 44 %\nSta 43c.> 6\n\n{6-24 me y =_\n\n\\\n\n2\n24 44 %\n\n \n\n2\n¢\n4,\n\n2\n1\n\n2\n_\n, 3, 6 1A, AY 48 96\nBaia. 030.7 6 — st\n3,6 Id, 24 44 9\n\n \n \n\nBore 2c. 6 3, 6 VA, AY 4% %\n“Wr yas ss ee\n3, 6 IA, ay 44 96\nBia {3c 6\nDodie > 1X eof\n3, 6 VA, a4 49 96,\nfe. 3-2\nBy = Ce: SAS\n\n\"= pl a ‘ ~\n3, 6 IA, AY 48 96 eb, 1A, DY 4% 96 |\n\n‘2\n24 439\n\na\n\n    \n\n-:\n1d, 3, 6 IA, a4 48 96~ ek\n——./ mera i NN \\\n3, 6, VA, a4 44 96\n\n \n \n\nlim Qn LR\nn> mb 1d, 24 44 9,\n\n \n  \n\nlim On SO\nn° E et\neos bl’\n\n\\ 30°\nnr” Qa *\\\n\nnore\n\n-O ice lee AN OU created by Jim Fowler ocr lne Mm AN Og created by Jim Fowler THE OHIO STATE UNIVERSITY\n\n© 2013, Jim Fowler"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/advanced-calculus/01_sequences/04_what-is-the-limit-of-a-sequence/02_what-is-the-limit-of-a-sequence.mp4", "id": 8, "text": " series What is the limit of a\nsequence? more + 2\n\nee 6n + 2\na 3n+ 3\n\n \n\nAn 6n + 2\nss 3n + 3\n\n \n\nAn eagle\n| 2\n6n +\nOe\n\na, On\n\noy 3 _ 6n+2 6-1+#2\n— 8n+3 We 3-13 -\n\ny\n\nmee\né\n\nan\n\n>\n\nG-|oeo+2\nA loos ~ 3-looe oo Go0r\nloos > 3 l00e+3 3 _ 6n+2\n3n+3\n\nlee Oot * 2\na & 3-loov +3 ~ 3003 , 2 Eee\n\" 37n4+3 4° 31°93\n\nJooor2 6002 %\n“*2007 a soe\n7 Z\n\nopor2 002%\n“*2002 »\n\n>\n\npooor3 ee\n‘To.\n\n \n\n6-\\000+2 GCA\ni: <a a0 ee “2007 :\nQ woe i\n\n6-loovsees 2 E000 wy\n\n\\ \\o02ce * % toovese a2 4 ro 6n + 2\nme 3n+3\n\nAn 6n + 2 \" ’\n—I— 5. . 9 . 4. Zt\n3n4+3 6\n\nG-looor2 6002 yoy\na is jooors ““2002\n looo 2 a\n\n6: loovsees 2 += G0000D2\n~ J fooove +3 Seeeew\n\nA lo02cee d 6- lo0veees 2 Go000002\n2 I poo #3 ~ Zeecoo t\n\nA loo? cee IT promise An '5\n\nat Closa *F 9°\n\nwent t 4,\n\nprovided n is lose\nGvovsl I promise An '5\nWithin z of alg\n(€rsiten)\n\nis flavse.\n\nhe\n\n: An '5\net a.\n\na j I promise Aa, és\nwithin 2 of a.\n\n(ersilon)\n\nProvided n \\im Om? & mean S$\n\n   \n \n\nFor evely t?0,\nwe is an N\n\nit\n\n\\evev n2N,\n\nrl<e\n\noa, Can S$\n\n}\nLs deve is an N\n\n+\n_ n2N,\n: lim a, = L means that\nMOO\nfor every € > 0,\n\nthere is a whole number JV,\nso that\nwhenever n > N,\n\\an —L)| < e. means that\n\n= (,\nMole number JN, lim a,, = L means that\ni oO\nfor every € > 0,\n\nthere is a whole number JV,\nso that\nwhenever n > JN,\n\\an — L| <.e. created by Jim Fowler cr }Ke AN Og ocr 1Ke ANON Lg created by Jim Fowler THE OHIO STATE UNIVERSITY\n\n© 2013, Jim Fowler"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/advanced-calculus/01_sequences/05_why-do-we-care/02_for-some-epsilon-how-large-need-n-be.mp4", "id": 11, "text": " or some ¢, how large need N\n\nbe? sequence\n\nSETIES For some €, how large need N\nbe? lim a, = L means that\nn->oo\n\nfor every € > 0,\n\nTce Ma eGR eam\nOmir!\n\nwhenever n > N,\n\nla, — L| <e. nh bL: 5 does\n\nN\n\nNeed + be lim a, = L means that\n\neee\naaa ae |B\nToe Ema CR Tle\nSem at\nwhenever n > N,\nja, — L| <e.\n\n \n\na) ci V+ I\nAn* V4)9 v\\+ |\nAn* V4\n\nfiw Aw = ‘iL\n\na Ys Find N, nz2N,\nlan-\\|¢ te\nZB? Lang tot Bend N, wen,\n} lan -\\|¢ re\n\na lol\nL ZAn< Too\n\n\\ N, wn2N,\n\nlan-\\(¢ ies Fud N, n2N,\nlaw-\\[¢ is\nZB LAne tot\n\na naka ie.\n“ nez toe\n\n\\ Fud N, 02K\nlan-\\|¢ i\n\nlol\n\na\niso Qa< Too\n\n \n \n   \n     \n     \n\n  \n\naagntt oye\noe nez toe\nWw7 Ad\n\n“ee _\n\nWw created by Jim Fowler (otc }Kle AN OTe ogee ie-e NANO ocr lK-e Mm NAN Og created by Jim Fowler THE OHIO STATE UNIVERSITY\n\n© 2013, Jim Fowler"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/aiplan/01_Week_1_-_Introduction_and_Planning_in_Context/08_1.5_Context_-_Practical_Systems_4-31_.mp4", "id": 154, "text": " THE UNIVERSITY of EDINBURGH PE Ualiale,\nTam Oxo) ai (> 41\n\naU MUR UNO Coed Pret) Modelling,\nTask Assignment and Execution Overview\n\n* Context of Practical Systems\n\n* Context of Task Assignment & Execution\n* Context of Multiple Agents\n\n* Context of Plan Representation & Use\n\n« Example Practical Planners\n\n¢ Planning++ Pr id esae Practical Al Planners\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nPlanner Reference Applications\nSTRIPS Fikes & Nilsson 1971 Mobile Robot Control, ete.\n\nHACKER Sussman 1973 Simple Program Generation\n\nNOAH Sacerdoti 1977 Mechanical Engineers Apprentice Supervision\nNONLIN Tate 1977 Electricity Turbine Overhaul, ete.\n\nNASL McDermott 1978 Electronic Circuit Design\n\nOPM Hayes-Roth & Hayes-Roth 1979 | Journey Planning\n\nIsis-i Fox et. al. 1981 Job Shop Scheduling (Turbine Production)\n\nMOLGEN Stefik 1981 Experiment Planning in Molecular Genetics\nDEVISER Vere 1983 Spacecraft Mission Planning\n\nFORBIN Miller et al. 1985 Factory Control\n\nSIPE-2 Wilkins 1988 Oil Spill Response, Miltary Planning, ete.\n\nO-Plan Currie & Tate 1991 Search and Rescue, Spacecraft Operations, etc.\nSHOP/SHOP-2 | Nau et al. 1999 Evacuation Planning, Forest Fires, Bridge Baron, etc.\nEX/-Plan Tate et al. 2000 Emergency Response, etc. Course Reading\n\n       \n   \n \n    \n\n\"View of Al Planners to 1990\n\n+ Hendler, J.A., Tate, A. and Drummond, M. (1990) “Al Planning: Systems and Techniques”, Al Magazine Vol. 11, No.2,\nppS1-77, Summer 1990, AAAI Press,\n\nhito:/aaaipress.org/ojsindex. php/aimagazine/articie/download/833/751\n\n+ Knowledge-Based Planners\n\n+ Wilkins, D. E. and desJardins, bl, (2001) \"A Call for Knowledge-based Planning’, Al Magazine, Vol. 22, No. 1, pp. 99-115,\nSpring 2001, AAA\\ Press,\n\n+ _htipz/www.aaai.org/ojsindex. php/aimagazine/article view/1547/ or hitp:/wwew ai sri.com/pub_lsv@08\n\n \n \n       \n     \n    \n\n‘O-Plan Paper\n+ Tate, Aang Dalton J, (2003) \"0-Pan: a Common Lisp Planning Web Gerice,nited paper, in Proceedings ofthe\nInternational Lisp Conference 2003, October 12-25, 2005, New York, NY. USA, October 12-18, 2003.\n\nw.alal,ed. ac. uk/projectix/documents/3003/2003-iuc-tate-oplan-veb pat\n\n+ Optimum-Alv Paper\n\n+ Tate, A. (1996) \"Responsive Planning and Scheduling Using Al Planning Techniques — Optimum-AIV’. in ‘Trends &\nControversies — Al Planang Systems inthe Real Wold, IEEE Expert Intellgent Systems & thelr Appications, Vol. 11 No,\n6. pp. 4-12, December 19!\n\n+ hitpizwivw aial.ed.ac.uk/projecloplan/documents/1996/96-ieee-s-trends-and-controversies-orig pdf\n\n+ SHOP/SHOP2 Applications Paper\n\n+ Nau... Au, T-C. ligham, ©., Kuter, U., Wu, D..Yaman, F., Mufioz-Avila, H., and Murdock, J.W. (2005) Applications of\n‘SHOP and SHOP2, IEEE Intelligent Systems, March-Apnit 2005, Vol. 20,'No. 2, pp.34-41, Computer Society,\n\n+ _hitpi/hwww.cs.utexas.edu/~chiw/papersiNauoSshop2.pat\n\n+ Other Practical Planners\n\n+ Ghallab, M., Nau, D. and Traverso, P. (2004) “Automated Planning ~ Theory and Practice\", Chapters 19, 22 and 22,\nElsevieriMorgan Kaufmann, Origins of some well known Al Planners\n\n \n\n \n\n \n\n \n\nHele, Tate and Drummond"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/aiplan/01_Week_1_-_Introduction_and_Planning_in_Context/09_1.6_Context_-_Tasking_Execution_Agents_and_Plans_5-59.mp4", "id": 155, "text": " nS THE UNIVERSITY of EDINBURGH O-Plan 3 Levels of Agents:\nTask Assignment, Planning & Execution\n\n| | |\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n|—[ Capabilities |—[ Capabilities |—[ Capabilities\n‘Task Assigner 2 Planner e Executor =\n\n|_{ Constraints || Constraints ‘Constraints\nPlan State Plan State Plan State\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n[Domain Info |-[Domain Info |{Domain Info Overview\n\n* Context of Practical Systems\n\n* Context of Task Assignment & Execution\n» Context of Multiple Agents\n\n* Context of Plan Representation & Use\n\n« Example Practical Planners\n\n¢ Planning++ Multiple-Agent Platforms behind some\n\nPractical Al Planners\n\nMultiple Planning Agents (MPA) platform is the basis for the SRI\nInternational SIPE Planner\n\nThe Open Planning Architecture is the basis for O-Plan and is\ndesigned to handle multiple planner roles and levels, such as\ntask assigner, planner, planning specialists, plan execution\n\n|-X is intended to support multiple types of command, sense-\nmaking, analysis, planning (|-Plan), decision making, execution\nand communications agents even in mixed agent frameworks. Multiple Agents in the Context of\nCommunications for Emergency Response\n\n     \n   \n\n      \n \n\nCollaboration and\nCommunication\n\nvee Isolated\n\nry a Personnel es52 Example I-X Multiagent Applications — esa% Disaster Simulator Disaster Prevention / Search and Rescue Agents\n‘Traffic Flow Model\nDoctor Agent\n\ng\n\n2 Combustion Mode Traffic Map,\nFy F\n\nz\n\n     \n \n\n_Commander Agent\n\n   \n  \n\n~ Rescuer Agent\n\noflawide\n\n  \n \n\nMass Behavior Model _\n\n   \n\n \n\n   \n   \n  \n\n   \n \n\n \n   \n   \n   \n \n \n\n \n\n  \n  \n  \n \n\n    \n \n\nMass Paycholog lise ait 2\nBuilding Collapse Map ~ Robot Aer ee\nInveriatignattnterdseiptinary | RaM Aeon Se\nStructural Vibration Modet__{__Interfiation an\n‘Tsunami Model — Cooperative Research, Poles seen epee\na arin Mode victim agent 2\nld Dynamics Mode\naoe ~ pack Supporter\n\n    \n \n \n  \n    \n\n   \n\n \n\n    \n \n\n‘Man-Machine\n\n    \n   \n \n \n    \n\nThc Fighters Police» Volincos\n\n \n\n \n\n \n\n   \n  \n  \n \n\n   \n\n  \n\n— Doctors « Commanders\nisaster Information Disaster Control Center\nPee neocon Vie Diawer —\\_ Paineinite Frans People &\nitis «Moss Mea peices Mayor Plielans sale\na | Workers «Stadents= Chien pehavior commana OFGANIZations,\n\n     \n\nShopping Malls « Museums\n\n \n         \n\nDisaster Information Co\nSeismometers\n‘Tsunami Meters\n\n \n\nTon Command Transmission\nTraffic Signals « Evacuation Signals\n\n    \n  \n  \n\n \n\n \n  \n\nElectricity Controls + Rescite RObOT\n\n \n \n\nReconnaissance Parties\n\n   \n \n  \n\n    \n      \n \n\nSer\ni Environment\n< Rapanen ome issn ia pe i aig\nSerene «Gane Toren eat awe\n: ee\n\n \n  \n\n“Adapted from HT Katana and & Tadokoro, RoboCup Rescue A Grand Challenge\n\n2\ni\n5\ni\ni\n4\n:\ni\nz\n3\n:\n\nBack Supporters\n+ Synchronous Simulation Using Real Data + Simulation of Disaster Conteol Strategy\n\n \n\n \n\n \n\n+ Efficient Generalization of Rescwe Parties, + Decision Support at Urgent Disaster Plan Representation & Use\n\n« Plan representation itself an important area.\n\n+ Plans are used in many areas beyond activity planning ...\nsuch as situation understanding and summarisation,\nnatural language interpretation and generation, etc.\n\n+ Plans provide an ontological and formal representation\ncore for a wide range of practical applications and uses. Uses of a Plan Representation\n\n \n\n \n\nKnowledge User\nAcquisition Communication\n\nNZ\n\nPlan Representation\n\n/oN\n\nFormal System\nAnalysis Manipulation Plan Representation & Use\n\nAl planning work has influenced standards\nrelated to process and plan representations\nused by many industries and fields. E.g.,\n\nMIT Process Handbook Process Interchange Format (PIF)\nNIST Process Specification Language (PSL)\n\nDARPA Shared Planning & Activity Representation (SPAR)\nISO 18629 Industrial Automation Systems and Integration -\nProcess Specification Language"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/arduino-platform/01_arduino-environment/03_lesson-1/02_lecture-1-2-arduino-board.mp4", "id": 408, "text": " UCI University of\nCalifornia, Irvine U Unv sit Or\n1] a ria | Vie\n\nn Internet of Things\n\nProfessor lan G. Harris, Ph.D. Module |, Lesson |\nLecture |.2: Arduino Board Input/Output Pins 7 digital /0\n\n  \n      \n\neal ; |\nPower/reset pins Analog inputs + 7 I\nPower/reset pins Analog inputs Input/Output Pins 7 digital /0\n\n  \n      \n\n+ ; |\nPower/reset pins Analog inputs + 7 I\nPower/reset pins Analog inputs Input/Output Pins 7 digital /0\n\n      \n\n=a soon\nPower/reset pins Analog inputs Firmware\nTwo types of code executing on a simple\nmicrocontroller:\n|. Application code\nY Executes the system's main functionality\nY We write this code\n2. Firmware\n¥ Low-level code; supports the main\nfunction\nY USB interface, power modes, reset, etc.\n+ The distinction is a matter of perspective\n+ Arduino firmware is pre-programmed UCI University of\nCalifornia, Irvine"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/arduino-platform/01_arduino-environment/04_lesson-2/01_lecture-2-1-arduino-schematics.mp4", "id": 410, "text": " U Cl University of\nCalifornia, Irvine f\nr\n\nInt? n to, |\n9 |\n\nc i c\n©\nn\n7)\noO\nfe)\n\na\n“a0\ni\nFo\nwet\n°\ned\no\n[=\n=\no\n—\nc\n= Internet of Things\nProfessor lan G. Harris, Ph.D.\n\n \n\n@\n2a) O.\n\n \n\n \n\n \n\nES\nNY\nSH\n\nx\n|\n3 Arduino UNO Schematic\n\n \n\n* Arduino designs are open source\n* Design is available\n* You can build your own Microcontrollers and |/0\n\n   \n  \n  \n\n— Power pins\n\n— Analog in\n\n—Higital 1/0\n\nAlmegalBU2 ATmega328 USB, Power, ICSP\n\n_Power\n= connector\n\n   \n\n~ IGSP2\n\n \n\nUSB connector ATmega328 UC University of\nCalifornia, Irvine"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/arduino-platform/01_arduino-environment/05_lesson-3/02_lecture-3-2-arduino-basic-setup.mp4", "id": 414, "text": " UCI University of\nCalifornia, Irvine U Unv sit Or\n1] a ria | Vie\n\nn Internet of Things\n\nProfessor lan G. Harris, Ph.D. Module |, Lesson 3\nLecture 3.2: Arduino Basic Setup Set Up the Arduino IDE\n\n{. Download the IDE www.arduino.cc/en/Main/Software\n+ Easiest ta run Windows Installer\n+ Also installs USB and other drivers\n2. Connect the board to your computer\n+ Use USB cable\n8. Launch the Arduino application\n+ Starts the IDE Launch the Arduino IDE\n\n- =\n\n4. Open the Blink example: File > Examples > Basics > Blink Run a Program\n\n5. Select your Arduino in the Tools > Board menu\n6. Select your serial port in the Tools > Port menu\n+ There should be only one selection (COM3, etc.)\n7. Upload the program with the upload button\n+ This writes the program onto the Flash of the Arduino\n8. The LED near pin 13 of the Arduino should blink UCI University of\nCalifornia, Irvine"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/convolutional-neural-networks/04_special-applications-face-recognition-neural-style-transfer/01_face-recognition/01_what-is-face-recognition.mp4", "id": 5266, "text": " (G) Face recognition\n\nWhat is face\nrecognition?\n\ndeeplearning.ai deeplearning.ai a\nFace recognition\n\n \n\n \n\n[Courtesy of Baidu] Andrew Ng Face meeopnikinn\n\nie/Show you something else. I’m here with Lin Yuanging, the director\nCad which developed all of this face recognition technology.\n\n \n\n[Courtesy of Baidu] Andrew Ng Face recognition\n\n \n\n[Courtesy of Baidu] Andrew Ng Face recognition\n\n \n \n\n;\n\n[Courtesy of Baidu] Andrew Ng Face r‘\n\nAndrew Ng Andrew Ng a\nFace verification vs. face recognition\n\n— Verification (sk G4s/s\n* Input image, name/ID a4 4\n* Output whether the input image is that of the »—\nclaimed person\n\n—> Recognition \\ike\n* Has a database of K persons\n* Get an input image |\n* Output ID if the image is any of the K persons (or\n“not recognized”)\n\nKz\\o0 &\n\nAndrew Ng bons (or\n\nAndrew Ng"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/database-management/02/04_non-procedural-access/01_non-procedural-access-video-lecture.mp4", "id": 1595, "text": " MODULE 2\nIntroduction to Databases and DBMSs\n\nLESSON 4\nNon-Procedural Access\n\nMichael Mannino\nAssociate Professor\n\nData Warehousing\nFor Business Business School\nIntelligence ieee Ge Salone DENVER @\n\nHOW MUCH HAVE SOFTWARE DEVELOPMENT COSTS\nBEEN REDUCED BY NONPROCEDURAL\nDATABASE ACCESS?\n\n@\n\na QUERY\n\nA database query can be either a\nsimple data retrieval query or an action query\nthat performs additional operations\non the data, such as insertion,\nupdating or deletion.\n\na PLANNING A VACATION\n\nBEEae of the Trip\nVANY PLANNING A VACATION\nCANCE\n\n|Paris, France\n\n$1,000— $2,500\n—— -\n\n \n\n| Thur 7/23\n| Mon 7/27 SELECT OfferNo, CourseNo, FacFirstName, FacLastName\nFROM Offering INNER JOIN Faculty\n\nON Faculty.FacNo = Offering. FacNo\nWHERE Offferm = 'FALL' AND OffYear = 2012\n\nAND FacRank = ‘ASST\" AND CourseNo LIKE 'IS%'; MARIAH [DODGE [SEATTLE | 12 33\n808 NORBERT BOTHELL] S67 a7\n[ROBERTO MORALES |SEATE | 5079\n[MARIAH [DODGE SEATTLE 6666 Be\nLUKE ‘prazz—_|SEATTLE | 777737\nWiLLiAM —JPILGRIM BOTHELL jl\n\n \n\n \n\n \n\nome Fettime — EGRARE tatiana\nlocos iS\n\nAssignments\nFacalyNo_= [Ofer Ho ~ Course Ne-) Unde ‘Your = Vocation Sat Tine\n| osaresas2\n owsresase 355 8320 ‘SPRING | 2013 8M MW 8:30AM\nosa7esuxe 422118320 ara osu mH 330M\nRecor g 8o13 D9 etn Se\n\n \n\n \n\n \n\neset WO Tot6 > WO) Gla tiae | Semen | oseresuze 3333 18320 ‘SPRING | ON 8UGM MW 8:30AM\n[ rests2 “#otiseo AFA) zoreuuais TH 330M\nReco Ms Lot |) NY | Glin fier | Sew g\n\nFaculty Work Load Report for the 2012-2013 Academic Year\n\n \n\n \n\nDepartment Name Term Offer Unis Limit Enrollment Percent Low\nNumber Fall Enrollment\nFIN\nJULIA MILLS.\nWINTER 18 4 1 50%\n\nSurenary fr Yr = WATER (1 dt recor)\nst 4 1\n\n \n\nAng 50%\n‘Sumy for JULA MILLS\nSum ‘ 1\nAvg 500%\n\n‘Summa fr opatment = FRI(t deta ecard) \\\n\nPROCEDURAL LANGUAGE INTERFACE\n\nBatch processing\nCustomization and automation\nPerformance improvement\n\n \n\nut ORACLE\n\nPL/SQL\nBE Microsoft\n\nTransact-SQL SUMMARY\n\n° Database technology vital to modern organizations\n\n© Crucial DBMS feature: nonprocedural access\n\n© Query language, visual tool, form tool, report tool, and embedding\ne Fundamental skill: query formulation"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/database-management/02/06_data-warehouse-processing-overview/01_data-warehouse-processing-overview-video-lecture.mp4", "id": 1597, "text": " Data Warehousing\n—= | For Business\nIntelligence\n\nDatabase Management Essentials MODULE 2\nIntroduction to Databases and DBMSs\n\nLESSON 6\nOverview of Data Warehouse Processing\n\nMichael Mannino\nAssociate Professor\n\nData Warehousing\nFor Business Business School\nIntelligence UNIVERSITY OF COLORADO DENVER /\n\n@\n\nHOW DO DATA WAREHOUSES\nAFFECT YOUR LIFE? An\n\n \n\n4 A io Ul\n«@®)\n\nLESSON OBJECTIVES\n\ne List three levels of decision making\nand at least one decision on each level\n\ne Define data warehouse\n\ne Explain at least one characteristic\ndifferent for transaction processing _\nversus business intelligence processing Mey 13 ition o} TYPICAL DE\n\nISIONS\n\nStuialiae)\nEAs stermining\npricing levels TYPICAL DECISIONS\n\nIdentification of\nnew markets\n\nmining\n\nnew locations i N\nCp REASONS FOR INVESTING IN AN OPERATIONAL DATABASE\n\ne Faster processing\ne Larger volumes of business\ne Reduced personnel costs cc\nrr\nE\nfo}\nal in\n\nWi\n+]\n\n \n\nCi\n\niy\nN\nA\n\\\nA\\\\\nWY\nyy)\nA\n\ni\nSY\n‘ CS UM Mr\n(\\\\ itt \\\\ VAY Vfl \\\n} : | i \\N \\\ny) 1 N\\\ntT} j ae j AS)\nqi >) Cf {\na\n] | AHH)\n» DATA WAREHOUSE\n\n(Term coined by William Inmon in 1990)\nRefers to a logically centralized data repository where data\nfrom operational databases and other sources are integrated,\ncleaned and standardized to support business intelligence.\n\nSy \\ 7 ~\n\\ \\\n! _ . i\n| NY)\nTN Lt CTtH,\nif\nHUTT BENEFITS FROM A DATA WAREHOUSE\n\nef ® SUMMARIZED DATA\n\nProvides fast response to repetitive queries. )\n\n! i ve i) »\n\nHii} HHH /\nm= pi}\n\n \n\n)\n\nATT\nPELTED] {HH | he 2 a\n! ni \\\n\ni\n\nqt\ni = or\npeers\n— = VF\n= fff\nee ee\nSz\nLL\nLF\n\n \n\ni vi i Hh\nAth\niE |\n\nN\\Y\n\n \n\nitil df Ni ih |\nane Ni\n\n \n\ni i} TTT iN )\nQS)\nPred)\n\naya\n\n \n\nCs SSS SUMMARY\n\ne Data warehouse processing supports tactical and strategic\ndecision making\n\ne Business intelligence processing evolution since mid 1990s\n¢ Different DBMS features for business intelligence support\n\na |\n\n( im,\n\n \n\nNy\ni i\n‘ H q\n\n \n\ncy A) .\nae)\n\nTET gy i” i Ni Lf"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/database-management/03/01_basics-of-relational-databases/01_basics-of-relational-databases-video-lecture.mp4", "id": 1599, "text": " Data Warehousing\n—— | For Business\nIntelligence\n\nDatabase Management Essentials MODULE 3\nRelational Data Model and CREATE TABLE Statement\n\nLESSON 1\nRelational Data Model\n\nMichael Mannino\nAssociate Professor\n\nData Warehousing :\nFor Business Business School\n: Information Systems Program\nIntelligence\n\nUNIVERSITY OF COLORADO DENVER Th\n«®)\n\n@\n\nWHY IS THE RELATIONAL DATA MODEL\nCOMMERCIALLY DOMINANT?\n\noF RELATIONAL DATABASE BASICS\n\ne Collection of tables\ne Heading: table name and column names\ne Body: rows, occurences of data\n\nQ\n\noy 123-45-6789\n\n \n\n   \n\nWELLS\n\nSEAT\n\n \n\n98121\n\n  \n\n114\n\n   \n\n \n\n1238-56-78\n\nNORBERT\n\nBOTHELL\n\nWa [oeoir-2127 [AN\n\nJR\n\n2.70\n\n \n\n \n\n234-56-7890\n\n \n\n \n\nKENDALL\n\n \n\nTACOMA,\n\n \n\n \n\nWA [esosa-aazr [acc\n\n \n\noR.\n\n \n\n \n\n3.50 SAMPLE TABLES\nSpee\n\n \n\n \n\n \n\n \n\n \n\nOffering\n\n      \n \n\nii |e [enw] pew\n\n \n\n \n\n \n\n \n\nim fez [Av | ORTESA. [MW\njereomr [exten vas oeaee_[TT8\n\n \n\n \n\n \n\nEnrollment SAMPLE TABLES\n\nStudent\n\n \n\n \n\n \n\n \n\n \n\n123-45-6789 | HOMER WELLS SEATTLE [WA ggi21-1111 [IS FR 3.00\n128-566-7690 | BOB. NORBERT [BOTHELL [WA 99011-2121 [FIN a 2.70\n[234-56-7890 | CANDY KENDALL [TACOMA [WA 0042-s021 [ACT __[ a 350\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nOffering \\\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nEnrollment\nSunient [sano Jono]\n1 789, 1234\nWELLS: 123-45-6789 a : 1234\nNORBERT 12-56-7890 x\n123-45-6789 4321\nKENDALL 4-56-7890 | =\n124-56-7890 4\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n# ALTERNATIVE TERMINOLOGY\n\n \n\n \n\n \n\nTable Relation Record Type, File\nRow Tuple Record\nColumn Attribute Field SUMMARY\n\ne Commercial dominance of relational model\ne Use sample tables as an aid in query formulation\ne Importance of visualizing relationships\n\nXY)\n\n&"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/01_your-first-computer-program/03_introduction-to-algorithms/03_precision-and-assumptions.mp4", "id": 5407, "text": " ay ~ DRAW ADIAGONAL LINE\n\nDRAW ANOTHER DIAGONAL LINE CONNECTED 10 THE TOP OF THE FIRST ONE\n\nDRAW A VERTICAL LINE OVER THE POINT WHERE THE DIAGONAL LINES MEET\n\n~DRAW A HORIZONTAL LINE OVER THE STRAIGHT LINE\n\nDRAW ADIAGONAL LINE FROM THE BOTTOM OF THE FIRST DIAGONAL T0 THE STRATGHT LINE\nDRAW A DIAGONAL LINE FROM THE BOTTOM OF THE SECOND DIAGONAL TO THE STRAIGHT LINE\n~DRAW A CURVY LINE, STARTING AT THE BOTTOM OF THE STRAIGHT LINE THE UNIVERSITY HRY es See\nof EDINBURGH —_"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/intro-programming/01_your-first-computer-program/04_how-to-use-scratch/03_programming-in-scratch.mp4", "id": 5410, "text": " @ play\n@@® create\n@@® program\n@® repeat\nO\n©)\n©\n\ncode yourself ! BSORE GS reer tony rps Aout\n\n \n\n \n\nevents\n\n \n\nMore Giocns\n\n   \n\nSD,\nQ P=)\n\noo\nNewspite O / a\n\non\nom\n\n>\n= Se\n\n \n\n  \n \n\nNewsprte O / a versmie O/ Om Operators\nMore Gioces Backdrop Library\n\nbench with view berkeley mura oarcwatk brick wall and stairs rik walt\n\nety win water ‘ey with water2\n\nUe New sprite: fe / i ex\nsenor tn | Sprite Library\n\nategory\nau\n\nAnimas\nFantasy\nLetters\n\nPeople\nThings\n\nTransportation\n\nt ¥\n\n&\n\n<\n\nBeetie =\ng\n\n \n\n5 i 4\n2 pi\n& hui\n\ntote\nTegel gall i i\n\nej flu ell hall all =z)\na\nNew spre O / a = Hccn eects & ©\n\n \n\n21m\nI\n\n   \n  \n\nae\n\na/oe c/o\n\n \n\nsorts nts\n\n \n\nPisin Evts\nPan oowrare\nOse nore Ble @ ter canyon teat oR\nFirst Example Pe @ | 2208 | comimes\n\n \n\n     \n\nce\nre [PES\n\n    \n\nCm\n=e Sa @ tae Catv tos Abou Pee\ng) First Example  @ | 220 | comm\n~ Moon Events:\ncont\n[eons seraing Dp he\nte Overters ro BEER GD reer cate ys Avout\nID Fist example\n\n \n\nnome\n\n \n\n \n\nNew spote: @ / <a a\n\nrotation aie: Qe\nan arng i player: BE\n\n \n\n2+\n‘en\nLooms\nj= Senving\nPen Spears\nata Btcre Bioces oe a\nIm Fist example\n\n    \n\nunas\n\n   \n\nfs\nSlee\n\n \n\nNewspete O / i\n\n \n\n  \n\n=e ratce te OD oo\na/ce ae pee ee ‘About\n\n= First Example —\nco om\nies CEPT GD tev cane tw stow ESE\n\nIm) Fist Example  @ | 2298 | comm\nco ie\nPon Pye\nomen\n\n \n\n \n\n \n\n———oe\nz {First Example\n\n \n\nSariots | Costumes | Sounds\n\n \n\noton vente\nLooks ‘conrot\n\nECE Poe\nPen pecsors\n\n(re\n\n \n\nSe\n\n \n\nation iva: (oe\ncan grag player: ID\n\n \n\n \n\n \n\n=>\n\"= Newsprie 0 /\n(Spat\ncomet Ore\ncan dog payor:\nstow BE E i Btocrs\n\n=\nPe nn es mmm\n=\n=\nSe\n=\n==\n\nNew spre O /\n\n \n\nem\n\n \n\nrotagon ue: Oe ©\n3199 player: RE\nshow: 3\n\n   \n\na/aa\n\n \n\n\"\n2 \"\n2 Cenc\n\nNewspre O /\n\nnt Newspre O /\n\nfotaton ate: ee @\nea drag player:\nshow: 3\n\nOperators\nMore Dios\n\n=\nEE\nSe\n=\n<== Be Screen Projects\n2 Ube\n\n[3 Documents\n\na Msc\n\n \n\noes See Projects\n\nGe Libra\n\n2 Documents\n\nDP Muse\n\newes\n\nBi viseor -?\nFename: Fistsarple\n\n  \n\n \n\no Se ery\n\n \n\nae Re: utoa oie Ove ©\n— can drag in player: BE\nw/oa a (a Frat\nBE sesacmare inshore\n\nspies\n\n \n\na/sea\n\nNew spite O/ am New spate O/ am\n\n \n\na/c 5, [FsiBrampe cows\nFT ceanare cinshaeay 8, aaa\n8 !\n\nsaune Sensing\nPen Onecare\noma Biow aces\n\n‘Sprites\n\n \n\na/oe RODUE © pwr cas Tos tioe\n\n   \n\n= Cr ~e@ Scripts | Costumes | Sounds\nvi CC Fees 2)\nia soe #\n\nNewspte O/ Griied Pe @)) 728 | corner | sounae\n\n \n\nPew ©\n8 si\nfe be\nJou: Bere siocks\n\n \n\n  \n\na/oe Date modes Date medi Pe @ | 2208 | Costes Sounce\n\nbe\noe Pane re\nEe Boer aoa\n\n \n\nNewsprie O /\n\n \n\na/ae SERED tr conv Tos Heo\n\n \n\nese 0 ¢ Qa ery\n\n \n\nw/e THE UNIVERSITY a\nof EDINBURGH “—_"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/iot/01_what-is-the-internet-of-things-iot/05_lesson-3-the-importance-of-the-internet-of-things-iot-in-society/01_lecture-3-1-societal-benefits-of-iot.mp4", "id": 3216, "text": " U of University of\nCalifornia, Irvine Professor lan G. Harris, Ph.D.\nThe University of California, Irvine el coe Ro\n+ What food do | need?\nSNC MUN Cece MLL Lae Leg eM om Re\n+ What food do | need?\nSem eetccort nea eure Ea * Link to the\nPam aicedanarlarela ie [e015\n\n* Global interactions betwee\npeople are possible people are possible Link to the\n* Information access\n\n* Global interactions bet\npeople are possible people are possible Link to the\n* Information acce: ~\n\n* Global interactions betwee\npeople are possible * Pacemaker photograph, public domain. UCI University of\nCalifornia, Irvine"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/python/02_installing-and-using-python/03_recommended-using-python-macintosh/01_macintosh-using-python-and-writing-a-program.mp4", "id": 4444, "text": " CHARLES\ntat VN ol\n\nInstalling Python 3.0\nona Macintosh —\n\nhttps://www. py4e.com\n\nPYTHON\n\nFOR EVERYBODY @ Terminal Shell Edit View Window Help 9 OBB t Od F 00K Mm FitasemM 2 QO\n\n1 PvaE - python for Everybody x) ® Download Python | Pythonorg x \\ ‘Atom e\n\n{@ Python Software Foundation [US] _https:/www.python.orgidownlo: *\n\neps te Bookmarks Or. yi Tw Ea Teach Ba Sekai Bxcksere Ga Teugi EamMs Ba IEEE Ba uMsi » Botner Bookmarks\n\ne  csey —-bash— 80x24\n\n2 python Last tpi Fi pe 38 1:3137 on tyes\n\nIn .bash_profile\nMacBook-Pro-4:~ csev$ python --version\nPython 2.7.10\n\nME COMNNEtintt MacBook-Pro-4:~ csev$ python version\n\nPython 2.7.10\nMacBook-Pro-4:~ csev$ python3 --version\nPython 3.6.0\n\nLDToN a) Co-ed at M Lemley (olnM MacBook-Pro-4:~ csev$\n\nDownload Python 2\n\n‘ooking for Python with a different OS? Python f\n\nPee eee ein\n\n(Cyberduck @ Atom File Edit View Selection Find Packages Window Help SF 00% ME FritasPM £2 Q @ Atom File Edit _View Selection Find Packages Window _Help OO Bt Oa SF 00%Keo ME FIGASPM 2 Q\n\n   \n\na cent nmtts B nt tnn aa\nSave As:| Untitied\n1 prin\n\nTogs:\n\n» BB Burn Temporary\n> Bi Ocve-Backup\n> Bi Fee expone\n\n> Bi GoPro Projects\n> Bi 200m\n\n> DB Audiospimer\n\n> Dil Paraits\n> DB Adobe\n\n> TB workspece\n\n> IB Microsot User Data\n\n \n\nGilde extension | Now Folder Atom File Edit View Selection Find Packages Window _ Help 100% Gi Fri 1:44PM\n\n \n\n   \n       \n      \n      \n\nhello.py — (UsersieseviDesktop/oyée\n\n \n\n1 print( ‘Hello world’) 100% ME Fri1:a5PM RQ\n\n \n\n@ _ Chrome File Edit View History Bookmarks People Window | Help oo wt On\n\n        \n\ne #) PYGE - Pytnon for Everybody x \\ ¥, Download Python | Python.org x \\ 4 Atom e\n\n€ © | O wwmpyae.com/vook. e\nApps ik Bookmarks [or yy Tw Ga Teach Ga Sakai Eycrsera Gy Tsugi GaIMS GI IEEE By uMsi » Bay other Bookmarks\n\n \n\nPython for Everybody\nExploring Data In Python 3\n\nNew Eeltion! The goal ofthis book is to provide an Informatics-\n‘oriented introduction to programming. The primary difference betwoen|\na computer sclence approach and the Informatics approach taken in\nthis book a greater focus on using Python osohe data anayis\nproblems common in the world of Informatics. The Pythoy\n\n(ofthe book i stil availabe, There are multiple translations of the\nPython 2 book - the Python 3 version ofthe book has not been\ntranslated\n\nUpdated to use Python 3, the book is now avaliable in a variety of\nformats:\n\n» Printed Book on A z\n\nkind n ofthe book\n\nM9 Select Language ¥ .\ni\n\nCHARLES\nSEVERANCE FOR EVERYBODY For more materials, a\nfree book, and interactive\nexercises, please visit\n\nnay -  https:/Avww.py4e.com\n\n    \n\ni\nNe\n\nea PYTHON\n\nSEVERANCE FOR EVERYBODY"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/python/02_installing-and-using-python/03_recommended-using-python-macintosh/02_macintosh-taking-screen-shots.mp4", "id": 4445, "text": " @ Finder File Edit_View Go Window Help @ Finder File Edit View Go Window Help Dt S 4) Si Sun 7:48 AMO. Sun 7:48 AM Q. @_ Preview File Edit View Go Tools Bookmarks Window Help. ba ED § S&S 4) <i Sun 7:48AM\n\nresets once 2008, Navies\n\na yy\n\nParas Photo Booth resets once 2008,\n\nParas\n\nyy\n\nPhoto Booth @ Preview File Edit View Co Tools Bookmarks Window Help Finder File Edit View Go Window Help. @ Preview BAUM Edit View Go Tools Bookmarks Window Help Sun 7:49AM QL\n\n000, Edit fest.py (modified)\nFile Edit Search Markers Folding View Utilities Macros Plugins Help\n\nCommands Pugins ~ Favorites ©\n\nB Path: [7Users/podcast/Desktop/ >|\n\nis mr |\n\ntake me ax a scren dsljdljdfjkldi.\n\n \n\nTnput/output complete “@ython.none MacRoman)~ Preview Bi Edit View Co Tools Bookmarks Window Help Edit View Go Tools Bookmarks Window _ Help\n\nCee\na\n\n‘Eat = fist.py (modified)\nFie, £6t Search avers, Folding View lies Macros Pugins_elp Fy\n~*Losaaoyge YeO/7 B200¢08 AK Des 5\nGreene Hokie tetris fist. py Jusers/podeast/Desktop/\n\nath; (VUsers/podcas/Deskton/ +] [fake me as a scron dsljdljafjkldt. =\n\nFier a\n\ni\ni\ni\n\n134 Ai input/output complete “python none MacRoman). Preview Edit View Go Tools Bookmarks Window Preview File Edit View Go Tools Bookmarks Window _ Help Sun 7-SLAM QL\n\nCen\n\ntoot Move Select Seshow\nat — fist. py (modified\nFile Edit Search Markers Folding View Utilities Macros Plugins Help.\n\n~*LoOBaoyeg SeOZ 22 00¢88 A& a\n\n4\n\nath: [User /podeast/Oeskiop? > Fale aslee's aeak Gl slaral\nFier: TAA =\n\n&)\n\n1 podcast\n\n‘System Browser\n\nfi\n\n134 al “Gython.none MacRoman)———— UIE GB Preview File Edit View Co JACLEE Bookmarks Window Help.\nInspector al\nShow Colors 038C\nShow Fonts ¥T\n\nAdjust Color THC\nAdjust Size\n\nFile Edit Search Markers Fold Move Too! $81 ros Plugins Help\n\nLOSARSOS vector 43 EP OOFEB AX A\nCaeearet neni ci racine JesstDestoon\n\ntaetet et\natk: [UsesipodasiDestip!] Retatehigm mek PEFON dal JAljatyKLae\n\n4\n\nF Fier: Aa] Flip Horizontal . 7\n, Flip Vertical ae\n\nBe Users\n\nMark Us\n1B podcast a\n\nAnnotate\n\nFile System Browser\n\nMatch to Profile\n\nhare Type [Se [Ste [attmodiied Assign Profile\n\n134A) ‘phon none MacRoman) acros_ Plugins Help\n\nOO+8B AX: =) Sun 7:51 AMO\n‘New From Clipboard $8N\nOpen. %O\nOpen Recent > firstimage\n\n \n\n \n\nClose xw Fe cc\n2 ee saat i ite\nSe =\nRevert a\nMail mage\nGrab > iz\nxP\nrwerummversmate: Plugins Help 1\n\n12 OO+HR A®\n\na7\n\n       \n    \n\n   \n\nren dsl jdljafjkidt Save Plugins Help\n\n2 OOFHB A®\n\nLjaljatjeiat\n\n   \n  \n\noe\n\nSasi\nos) Cee @% Preview File Edit ¥View Go Tools Bookmarks Window Help. D + Sun 7:52 AM Q. Bookmarks Window\n\n   \n\nCee\n\nco) Finder File Edit View Go Window Help."}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/python-programming/01_python-as-a-calculator/02_core-material-numbers-and-expressions/03_compound-expressions.mp4", "id": 5698, "text": " Gompound Expressions\nScott Rixner Compound expressions\nDemonstration of compound arithmetic expressions in Python 42\nwe 16\n\n# Expressions can include multiple operations operator precedence\nprint (\"Compound expressions\")\nprint(3 +5 +7 +27)\nprint(18 - 6 + 4)\n\nprint(\"\")\n\n# Operator precedence defines how expressions are evaluated\nprint (\"operator precedence\")\n\nprint(7 +3 * 5)\n\nprint (5.5 * 6 // 2 + 8)\n\nprint(-3 ** 2)\n\nprint(\"™)\n\n# Use parentheses to change evaluation order\nprint(\"Grouping with parentheses\")\n\nprint((7 +3) * 5)\n\nprint(S.5 * ((6 // 2) + 8))\n\nprint ((@3) ** 2)"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/rails-with-active-record/01_introduction-to-active-record/03_metaprogramming-in-ruby/01_dynamic-dispatch.mp4", "id": 4608, "text": " Se ee ee) Module 1 - Lecture 5\n\nDynamic\nDispa\n\nRails with Active Record and Action Pack Dynamic\nDispatch Dynamic\n~ In siatic languages, like Java, the compiler requires you\nto define all the methods upfront\n\n~ In dynamic languages, such as Python and Ruby,\nmethods don’t have to be predefined - they need to only\nbe “found” when invoked\n\n~ Disadvantage?\n* Compiler can find bugs easier Reporting System Example\n\nrequire relative ‘store’\nclass ReportingSystem\ndef initialize\n@store\nend\n\n \n\nore. new\n\ndef get_piano_desc\n@store.get_piano_desc\nend\n\ndef get_piano_price\n@store.get_piano_p\nend\n\nend\nrs = ReportingSystem.new\n\nputs \"#{rs.get_piano_desc} costs #(rs.get_piano_price.to_s.ljust(6, '0')}\"\n# => Excellent piano costs 120.00 Calling Methods Dynamically\n\nclass Dog\ndef bark\nputs \"Woof, woof!\"\nend\ndef greet (greeting)\nputs greeting\nend\nend\n\ndog = Dog.new\ndog.bark # => Woof, woof!\ndog.send(\"bark\") # => Woof, woof!\ndog.send(:bark) # => Woof, woof!\nmethod_name = :bark\n\ndog.send method_name # => Woof, woof!\n\ndog.send(:greet, & ) # => hello Dynamic Dispatch: Advantages\n\n~ Advantages to dynamic method calling, a.k.a. “Dynamic\nDispatch”\n\n* Can decide at runtime which methods to call\n\n~ The code doesn’t have to find out until runtime which\nmethod it needs to call Dynamic Dispatch Example\n\nat)\n\nirb(main):@01:@> props = { name: \"John\", age: 15 }\n\n=> {:name=>\"John\", :age=>15}\n\nirb(main):@@2:@> class Person; attr_accessor :name, :age; end\nama\n\nirb(main):003:@> person = Person.new\n#<Person :0x007f8d1c24b908>\nirb(main):0@4:@> props.each { Ikey, value! person, C\"#{key}=\", value) }\n\nae MA (c(t botg\nirb(main):0@5:@> person ”\n=> #<Person:0x007f8d1c24b908 @name=\"John\", @age=15> Summary\n\n~ Don’t need to call a method using the dot notation\n\n~ Can call methods dynamically using a string or symbol\n\nWhat’s Next?\n~ Dynamic Methods Coe ean nee etre]"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/ruby-on-rails-intro/01_welcome-and-setting-up-the-development-environment/03_git-and-github/01_introduction-to-git.mp4", "id": 4704, "text": " Se er ee) Module 1 - Le\n\nIntrod\n\nIntrodus\n\n \n\n \n\nJOHNS HOPKINS\n\n   \n\nee ey JOHNS HOPKINS Introduction\n\nto Git\n\n \n\nJOHNS HOPKINS Distributed VCS\n\n~ Git, Mercurial\n* The full repo resides locally\n* Contains full history\n* Server is (almost) not involved\n= Commit often and offline\n= Work on the beach / train\n* Can push and pull between repos\n* Back ups - trivial and readily available General Workflow\n\n1. (empty) Create or (existing) clone repo\n\n2. Add changes to staging area\n\n3. Commit changes (from staging area to local repo)\n4\n\n. Push changes from local to remote repo Good Git Reference (gitref.org)\n\n€ Botton e wrooutne\n\n \n\nGit Reference\n\noe Source\n\nGetting and Creating EUS uaeeunennncd\nrojec\n\n \n\n= Ria cia iat eee oe eee ea\na eee eee\nPepe eet eae reat nomy piers ote\nraises\nae Cee on ae\n0 SSE eee cama ias re eee aaaimer\n= Seer ep mreperpieeee ree etapsielen\n=.\n=\nat\n=\nRoa oa a Se aa aT\nBranching and Perforce or whatever SCM you may be used to. It \\s often easier to lea Git by trying to forget your assumptions about how\nima Salerro\naa\nciate (leet Cerca cate ses eee erent ee\nee ey aces ey ea seiioes\n= Be\n\n= tog Summary\n\n~ Git lets you snapshot changes to your code\n~ Promotes committing changes often\n\nWhat’s Next?\n~ Working with Git’s local repository Chee eee nee ea"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/advanced-calculus/01_sequences/02_what-is-a-sequence/02_how-is-a-sequence-presented.mp4", "id": 3, "text": " pCTIES How is a sequence presented? A,= nv\n\n\\\n* o- | QO, n*\n\n= a A,° 1\n\nMeet 416, 25. | n> n*\n\nSe Vecu csively : F.:0 F,=1 mans O F,-!\n\nea? Fae 4 r Meer.:O SOF, = I\n\n. ~ moO F,-!\nFu? Fu-s + Fa-2\n\n<i F. O P, P l\nFa? Ent Fa-2 F.:0 *F,:!\nia: ne + [aes\nF.- iO §62C##F, = ‘|\na: Fa. +t Fa-2\nre F.:0 Fg - l\niw: fen is Fa-2\nF. ie - ir. *O F, r l\ni fn, + Fa-2\nr. F... ; re O F, E l\ni at i. Fa-2\nr. : Fl. Fh abit Fo Fo:0 =F,=!\nF.: Fa-1 + Fa-2\n\n  \n     \n    \n\nei\n\n=\n\n: | + Peo 6«CSFS#rF+== '!\nfin? Fn-* Fa-2\n.. : F., +I F. : O Sy S ]\nFu: Ea + Fa-2 = |\n-\na n\nF; co *F,:!\nFa: an * Fa-2\nF, ss Fs. .\n\n \n   \n \n\n? F.:0 F, = ]\n7 lint 2 Fa-2\nFy : F3., t F3.2 mp «F,-!\n— Fa-s + Fa-2\n= < F3., + Fo..\n\n \n     \n \n\n? oo 6«C*SF = |\n\nn- a, + Fa.\nF, Pt) oy FE...\n\n= Ff cn e = J\n\nFF,\n\nF.:0\nira? n\n\nFo F.:0 F,= ]\nFe: En-s + Fa-2 mr. OD #«2C*F=\"»= ‘|\nFa: Bae i Fa-2 =]\n\nF,=\n\nF.:0 ss\nFp: n\n\nFy « =|\nes r..\n1 i n-1\nFr\nFy Fe : O F, = ]\nFe: ae e Fa-2\nFy~ Fy iD «*~r == ‘| F.:0\nFe: Eres + Fa-2\nFy 2 ay + t 4-3 Fe ? O i. = ]\nFn: n-s - Fa-2\nF, é F. + Fy -\n\n \n   \n\n \n \n\nBe\n4-1 F,=1\n| <2\nr , F i, + Ey\nF, oT 4-1 iso «F< i\nFa’ Bisa? Fs F. =O F,=|\na? Fy-s + Fa-2\n\nTu F.:0 F,= ]\nFe: Fa-s + Fa-2\n\nF, i Fas ¥ Fy.2\nSF Es + Fz Oo 8«C*r =»= ‘I\n\nre Fr-1 + Fa-2\nFy | Fy, pm\n= Fs “8\n: [| -=2 Fe = O F, ; l\nFr: nae oj Fa-2\n\n \n   \n  \n \n\nFy i Ey rr Fy.2\n> Fa + Fz\n: 2: + 1 F.:0 F,>|\nra: a - Fa-2 F.:0 F,7!\niw: ax + Fa-2\n\nfs: \\ F; | F.:0 F.-!\n\niw” Fry * Fa-2\n\nis ° Fy + Fy\nFS - 2:\nBait, 7 iO F,=|\nre: Pat + Fa-2\n\nfs ea + F3 F.:0 Rl\n\nre: fat + Fa-2\ni * Fs + Fy\noe h6U+l CS\n~ fe °O F,= |\nie: aan + Fass\n\noe he F.:0 F,=!\n\nre: Pn + Fa-2\nOo, |, \\ 2.\n\n \n\n= a. F.:0 F,=\ni .: fens * Fava\nO, l, Mi, Big: >, 3,\n:\n\n \n\n=, F.:0 Bia l\nE = Fa-. * Fa-2 ty oe\nA fey al Q Con\nre R- +o Prevows created by Jim Fowler clio AN Og created by Jim Fowler acrlie Mm NANO ig Ceig-] (em AN ON lg THE OHIO STATE UNIVERSITY\n\n© 2013, Jim Fowler"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/database-management/01/04_topics-and-assignments/01_topics-and-assignments-video-lecture.mp4", "id": 1591, "text": " Data Warehousing\n“| For Business\nIntelligence\n\nDatabase Management Essentials MODULE 1\nCourse Introduction\n\nLESSON2_\nCourse Topics and Assignments\n\nMichael Mannino\nAssociate Professor\n\nData Warehousing\nFor Business Business, School\nIntelligence\n\nTee oF aon DENVER HAN\n\\ Wi vn Student\n\nWELLS\n\n \n\n \n\nNORBERT\n\nCOURSE TOPICS\n\nIntegrity Rules\n\nEnrollment\n\n123 aan\n\n \n\n \n\n \n\n \n\nKENDALL\n\n \n\n1234\n\n \n\n \n\n \n\nS| 128-45-6789\n| 124-56-7890\n\n \n\n \n\n \n\n \n\n \n\n \n\n1234 [eowente | | COURSE TOPICS\n\nData Modeling\n\nEntity Type Relationship\n‘Symbol ‘Symbol\n\nPrimary Key BFC OfferNo\n\nOffLocation\nOfffime\n\nAttributes:\n\n \n\nRelationship\nName /\n«W)\n\nCOURSE TOPICS\n\nTable Design ASSESSMENTS\n\ne Graded problem sets for most modules\ne Primary part of grading\ne Peer review for each problem set\ne Associated quizzes for some problem sets\ne Ungraded practice problems for most modules\ne Practice problem sets for most modules\ne Similar to graded problem sets\ne Solutions and detailed comments\ne Coverage of highlights in some video lectures a COURSE TOPICS\n\nTable Design ®)\n\nUl,\nOS\n\nTOOLS\n\nORACLE\n\niM\n\nMySQL\n\nER Assistant\n\nFi WW |\n\n\\ i}\nHy WNW HHI]\n\nHH ilk TOOLS\nORACLE\n\nDy\n\nMySQL ER Assistant\n\noF « )\n\nV7 |\n\n.\n\n \n\nY | | I rh\nve aN) | 1) ee i\nWy \\ Hat Us —~\n\nNWA SUMMARY\n\ne Basic course on database management concepts and skills\ne Detailed course topics\ne Tools and assignments to develop and apply skills\n\n  \n\n@ e “\nGi\n\nV"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/database-management/02/05_transaction-processing-overview/01_transaction-processing-overview-video-lecture.mp4", "id": 1596, "text": " Data Warehousing\n—= | For Business\nIntelligence\n\nDatabase Management Essentials MODULE 2\n\nIntroduction to Databases and DBMSs\nLESSON 5 Oe\nTransaction Processing Overview\n\nMichael Mannino.\nAssociate Professor\n\n_ Data Warehousing\neS For Business ee em\n- Intelligence Apia exe Kio DENVER @\n\n@\n\nWHAT DATABASE TRANSACTIONS\nHAVE YOU MADE TODAY? ‘LESSON OBJECTIVES >\n\ne Provide an example of a transaction\nthat you use\n\ne Briefly explain key characteristics\nof database transactions\n\ne Explain the word “transparency”\nfor transaction processing services\n\n| ey\n\nNL . TRANSACTION MANAGEMENT —\n\nATM\n\ncee fil =—\nSe\nCy , Ni I\n; v4 i ‘ yr j\n\n\\ <\n\n(op - TRANSACTION MANAGEMENT\n\nEN\n\nxxx —\n= BoD\nw BUYING A CAR\n\n(Fel oe ~ DATABASE TRANSACTIONS ~\n\nCOS\n\n @ NO LOSS OF DATA REQUIREMENT LA\n\n\\\\\\\n\n \n\nii\n\n\\\\\ni\nHg\n] AS\ni \\\nae START TRANSACTION\nDisplay greeting\nGet reservation preferences from user\nSELECT departure and return flight records\n\nIf reservation is acceptable then\nUPDATE seats remaining of departure flight record\n\nUPDATE seats remaining of return flight record\nINSERT reservation record\nEmail receipt if requested\nEnd If\nOn Error: ROLLBACK\nCOMMIT yy)\n\nlj\n\\\\\n|\n\nim\n\nrH\nWas\n\n{|\n\n4\n\ncf\n\n \n\nHIN START TRANSACTION\nDisplay greeting\nGet account number, pin, type, and amount\nSELECT account number, type, and balance\nIf balance is sufficient then\nUPDATE account by posting debit\n\nUPDATE account by posting credit\nINSERT history record\nDisplay message and dispense cash\nPrint receipt if requested\n\nEnd If\n\nOn Error: ROLLBACK HT eh\n\n—— ;\n—————\n\n \n\nAi\nLCT\nME peat\n\n—_ TRANSACTION PROCESSING\n\nSupports daily operations of an organization\nCollection of database operations\nReliable and efficient processing of transactions as one unit of work\nNo lost data due to interference among multiple users\nRecover from failures without loss of data for completed transactions\n\n& | DBMS INTERNAL FEATURES\n\nConcurrency control manager\nRecovery manager\nTransparent services for application developers\n\n \n\noy INTERNAL DETAILS OF TRANSACTION PROCESSING ARE INVISIBLE \\\n\n|\n\n \n\nca\n\nii\nTTA Oe. LNs\ncc)\n| / / gh\nDAN HMO)\nCe A IN\n\nor yp D \\\n\n)\\\n\n1 \">\nTHE SUMMARY\n\n¢ Transactions are units of information work that must be processed together.\n\ne DBMS’s provide services that ensure reliable transaction processing\nwith no data losses from concurrent users and failures after completion.\n\noy ZZ\n\nLIF\n\nALLOWS\n\nEL\nLEA\n\nSS= A s - |\n\n \n\nA\n\ni \" it =\n\nHi\n\n \n\na i \\ RX\nXx\nl, i HT \\\nK~ \\\\\\\nwi ”\n/\nEY Can you identify a database transaction that you performed\nand indicate the types of information you provided\nand the actions made on a database\n\nto complete the transaction?\n\n \n\na"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/datasci/01_Introduction/09_Logistics_7-42.mp4", "id": 1663, "text": " ay of Wasp,\nN\nSs ais\n°\nZ\n\n%\n\nae\nScience\n\n \n\noy\n\n \n   \n \n\nPeering UNIVERSITY of WASHINGTON\n\nMy Background\n\nBS Industrial and Systems Engineering, GA Tech\nConsulting\nDeloitte, Microsoft, Siebel, Schlumberger, Verizon\nPhd, Computer Science, Portland State University\nNSF Science and Technology Center for Coastal\nMargin Observation and Prediction (CMOP)\n— Data Architect, Research Scientist\nUniversity of Washington\n— Affiliate Assistant Professor\nComputer Science & Engineering\n— Director of Research, Scalable Data Analytics\neScience Institute\n\n99\n99-01\n\n01-07\n07-09\n\n09-present"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/dwdesign/02_multidimensional-data-representation-and-manipulation/04_microsoft-mdx-statements/01_microsoft-mdx-statements-video-lecture.mp4", "id": 1753, "text": " Data Warehouse Concepts,\nDesign, and Data Integration MODULE 2\nMultidimensional Data Representation and Manipulation\n\nLESSON 4\nMicrosoft MDX Statements\n\nMichael Mannino\nAssociate Professor\n\nData Warehousing P\nFor Business Business School\na Information Systems Program\nIntelligence\n\nUNIVERSITY OF COLORADO DENVER Q\n\n@\n\nWHY IS MDX USED MORE IN\nGRAPHICAL TOOLS THAN DIRECTLY\nUSED BY ANALYSTS WRITING\nMDX RETRIEVAL STATEMENTS? fi A\nOi cal\n\n\\ \\ my , (\\ \\\n: \\\n\nil\n\ni Kr , i\n| \\ yy)\nA\n\n. Q\n\nLESSON OBJECTIVES\n\ne Explain simple MDX statements\ne Compare and contrast MDX and SQL\ne Gain insight into MDX complexity Ul\nUy\n\nCROSSJOIN OPERATION\n\noxo\n\n       \n \n \n\nEne Cored\nMoasures pens\n\nfe ean = etd\n1,501,751 12,658 ‘5,924 44\n\n1,749,782 15,424 | 62,426 os\n\n  \n\n \n\neg\n\nSELECT CrossJoin| [Order Status) [Shipped]. [Order Status]\n[Cancelled]. | [Measures] [Sales], (Measures) [Quantity] |) ON\nCOLUMNS ““ [Time] [2003]. [Time] [2003]. ON ROWS FROM\n\n[SteelWheelsSales] WHERE (Product). (Classic Cars] SLICER COMPARISON EXAMPLES\n\n     \n\n    \n  \n \n\n     \n           \n \n\n  \n   \n     \n   \n     \n\n       \n   \n     \n   \n     \n\n \n\nerry comers\nClee Peet\n\noon 652003 2008 2005 ioe Ce Eel ad\nPeet \"2762 | 160856705, Coes ‘4995017 | 2105\nTenens aos 5908 | 2771 Deemed a7 2e08 | S88\nloo 3935920) 2207 Cio or 22M | 562\ncoy au) 4300) 1368 Cr m2) 162) 837\ntren 1900) 1408409 Cie 6) TT\nChet 405507) 1st Cieeerr 200 ase | ser\nTere Tes 19864 | 4n16 Clee 32083676 | tert\n\n \n\noo\n\neee\need\n\n   \n\n    \n       \n\nTac pea ae ve) fee la\n\nTHREE enter sla Sea ae? an) | aN, Paulin Lt ea a te\nTS aa a ELAR ea ie)” TRS a aga\nfea talPaeibraamimerhares § «© ees inl (oer\nPerea dor 1 ale ta Celts tt ced ve\n\nUl\n«@) he\n\n4 BAN an Ss\n\\ a\n} \\\n[| \\\\\né WHINY ( A \\ ; )\n\n\\ UU\n«@)\n\nSUMMARY\n\ne Similar syntax as SQL SELECT statement\n\ne Axes specified in SELECT clause\n\ne Crossjoin operator to combine dimensions on axis\ne Slicer conditions specified in the WHERE clause\n\ne Tedious and complex language\n\noF vi\n\nat A\n\n \n\ni Se\ni VIR\n\\\nNY\n\\ f\\ i\nWi } \\\\\\ \"\nA\nt\nNN\nHN it\n\\ \\"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/01_getting-started-with-bluej/04_using-bluej-to-program-in-java.mp4", "id": 5480, "text": " \"Hello!\" Around the World\n\nUsing BlueJ to Program in Java\n\nDuke Code Organization in Java\n\ne Java is object-oriented\n© Code is organized in classes\n\n° java file extension\n\njava\n\nHelloWorld java\n\n© Contain methods Running Your Program\n\n   \n    \n   \n    \n  \n \n \n \n\n \n\nSource code Bytecode\nTere .\nCompilation\njava cuss\nHelloWorld java HelloWorld.class\nInport edu. duke.*; 00 01 62 63 64 05 06\npublic class HelloWorld { @eeeee CA FE BA BE 00 00 00\npublic void soytelto0) { o0e1e 54 65 73 74 41 72 72\n\nHae Hie non Fetes were Ae ey\nfp coemaoNRO => ge0s0 0 oo 3c 69 oF 69\n1 geeodo os #3 Gr 64 85 OA\n\nI 900050 090 OF 4C 69 6E 65\n\n} 990060 65 91 60 12 4C 6F\n\nooeo7e 6s 4 61 62 oc 5\n\nHuman-readable Machine-readable\n\nDuke http://www.programereek.com/2013/04/what-can-you-learn-from-a-java-helloworld-program/ Where Do You Write Code?\n\n¢ Programming environment\ne BlueJ\n\n* Good for novices\n\n¢ Focus on code, not editor\n\n¢ We have added features\n\nuke Created by kent ‘Supported by ORACLE S __Chrome File Edit View History Bookmarks People Window _ Help.\nSie\n\nveo dukelearntoprogra\n\nBuild Software Applications\n\nWelcome!\n\n“a\nThank you for taking our Coursera Specialization, Java Programming: An Introduction ta Software!\n\nIn tnese courses, you wil explore foundational concepts such as algorithm development, data representation, and debugging, using common tools such.\nThese pages complement the primary Coursera ste, providing resources specie to out course, Including an interacuve programming environment for J\nreferenced in our videos and assessments. Each course & separately linked below to 3 page containing Its specific adutianal content.\n\nWe lok forward to helping you learn to program,\n\n \n\nProgramming Resources for Each Course\n\n \n\nJava Programming: Solving Problems with Software\n\nSe eee aera eee a\n\nJava Programming: Arrays, Lists, and Structured Data\no.to.downioad the Java environment, examples, and data\n\n \n\noinententagi Principian of wateuaee ti Build Software Applications\n\nWelcome!\n\n \n\nProgramming Resources for Each Course\n\n \n\nProgramming\n\n2 Java Programming: Solving Problems with Software\n\n7 Java Programming: Arrays, Lists, and Structured Data\n\nPrinciples of Software Design\n\nUD Software 6 Chrome File Edit View History Bookmarks People Window _ Help:\nSie\n\nveo dukelearntoprogra\n\nBuild Software Applications\n\nWelcome!\n\n“a\nThank you for taking our Coursera Specialization, Java Programming: An Introduction to Software!\n\nIn these courses, you wil explore foundational concepts such as algorithm development, data representation, and debugging, using common tools sve\nThese pages complement the primary Coursera ste, providing resources specie to our course, Including an interactive programming environment for\nreferenced nour videos and assessments. Each course separately linked below toa page containing Its specific adtinal content.\n\nWe lok forward to helping you lean to program,\n\n \n\nProgramming Resources for Each Course\n\n \n\nJava Programming: Solving Problems with Software\n\nthe Java sovconment. exambles, and data\n\nJava Programming: Arrays, Lists, and Structured Data\no.to.downioad the Java environment, examples. and data\n\n \n\noantentantagi Prtnchplan of Sateiiiee ti Programming Resources for Each Course\n\n \n\nProgramming and the Web for Beginners\naan ronment and examaies\n\n7 Java Programming: Arrays, Lists, and Structured Data\n\n \n\nIE Jove Programming: Principles of Software Design 6 Blue) _ Project _ Ect Tools View _ Help\n\n   \n     \n    \n   \n     \n      \n   \n   \n   \n     \n\nect Resources\n\n[ning a Blue) Project\n\n4eos and Quizz\n\n \n\n+ Biued Project:\n+ Example text fe: animals\n\n‘Quiz: Compiling and Iterators\n\n+ Gxample text fle: sometie tat\n\nVideo: Tterating Over Files: DirectoryResource\n+ blued Project: Deader class, Using DrectaryResaurce @ Blues FZOCeg Edit ‘Tools View Help\n\n \n\n \n\nNew Project...\n\nOpen Project... 30 BlueJ: hellot\nOpen Recent »\n\nOpen Non BlueJ... ford\n\nClose sew\n\nSave #S\n\nImport... ®\n\nCreate Jar File...\n\nPage Setup... 038P\nPrint... xP iF az Se NaI tee SE a ea ee Se\n\nene BlueJ: hellot\n\n \n\n=\n\nNZ New Class...\n—>\n\n=>\n\n   \n\nCompile\n\name\n\nBiueJ: hellot\n\n \n\n \n\nZZ\n\n \n \n \n\nSource Code St ath RT eT tA ht th te ath\n\neee BlueJ: hellot\n\nZZ a\n\n   \n     \n    \n      \n\n   \n\nBiueJ: hellot\n\n \n\nNew Chass.\nSas\n>\n\nCompile\n\ninherited from Object >\nal\nInspect\n\nhellowort| Remove\n\n \n\n \n\nSource Code as ‘ives Terminal Window halo\n\n \n\nHalo - Indonesian\nDia dhuit - Irish\nCiao - Italian\nSAlt (konnichiwa) - Japanese\netasti2 (annyong-haseyo) - Korean\nHallo — Norwegian\nCzesé - Polish\nOla - Portuguese\nBuna ziua — Romanian\n3gpasctsyite (zdravstvujte) - Russian\nHola (oh-la) - Spanish\nHujambo — Swahili\nHalla - Swedish\navai (sa-wat-dee) - Thai\nMerhaba - Turkish\nBitaw (vitayu) - Ukrainian\nChao (jow) - Vietnamese\nHyl6 - Welsh\na gutn tog) - Yiddish) axv yb x\nSawubona — Zulu a Snene\n\n \n\n© www.dukelearntopragram.com!\n\nJava Project Resources\n\nDownloading and Running a Blue) Project.\n\n2! Within Blue), choose the Fie menu and select \"Open Project”\n3 Select the downon\n\n \n\nExamples From Videos and Quizzes\n7\n‘Video: Compiling a Program\n\n+ Bled Project:\n1 example text fe: a\n\nVideo: Hello Around the World in Action\n\n+ ued Project: ana\n1 Example text fle\n\n \n\n‘Quiz: Compiling and erators import edu.duke.*;\n\npublic class HelloWorld {\npublic void runHello () {\nFileResource res = new FileResource(\"hello_unj\nfor (String line : res.linesQ)) {\nSystem. out.printIn(line) ;\n}"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/python/01_chapter-one-why-we-program/02_lecture-materials/03_1-3-python-as-a-language.mp4", "id": 4439, "text": " a A\nPort La ““-\nF\n\naN /\n\\\n. a\n\n—\nDy 7\n(ee D>\n\n—\n—\n\n‘oe\n* a =e\n: os > i) i oe\nS\n\n= y/ | ‘ a\n\\ ie wg\n\nre tc) Lf,\nee 7 ~\n\nq iE = 7 bow Ogue.g\nIntroduction - Part 3 ato\n\nParseltongue is the language of serpents\nand those who can converse with them.\nAn individual who can speak Parseltongue\nis known as a Parselmouth. It is a very\nuncommon skill, and may be hereditary.\nNearly all known Parselmouths are\ndescended from Salazar Slytherin. ]\n1\n\\\nry\n4 a Sat\n6 :\nH\nfi\nf\ni\n\nS | RC Na na |\n\nGuido van cofih\n\n| os =\n\nie\n\nee\n\nCe ea Sa\n\nae\nid ; mien as ‘ Vs \\\ni\ny\n\nx\na\n\na \\\n\na aa } es\nen y _— | ey\n\\ oe os 4a ~~.\n\ny/ ; vr 2\n\nwy, =\nI = a y *\n— \\ . ———— J\nr eed if\n\n3 ‘a oe wy\ny ae\nPa. f 2 =\n\na\n\n‘ i]\n}\nf :\n\n= \"  ) — rt ana\n\n~ Up. / ; ,\ntt > — 7 : TA\n\noS\n\\ 2, a\n4 = j f\n|\na —\n\na —,\n\n3e\n\\\\ ae jog r eS :\nsll 43\nis\n»\n— \\ —- —\nas aaa) yt\nProd 2 \"5\ny y a a iS\n| =\n\n\\"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/python-programming/01_python-as-a-calculator/02_core-material-numbers-and-expressions/01_numbers.mp4", "id": 5696, "text": " ped talelan Nieiealel—i 6-3\nScott Rixner Python Numbers\nScott Rixner [- =| [| EI [| [1 ei il\n\nprint (\"\nprint (5232)\nprint (999999999999999999999999999999999999999.9)\n\nprint (\"\n\n# Infinity\nprint (\"Infinity’\nprint (\"= *)\nprint (1e500)\n\nprint (12500)\n\nprint (\"\")\n\n# Conversions\n\nprint (\"Conversions between numeric types\")\n\nprint (\" --=\")\n\nprint (float (3))\n\nprint (float (99999999999999999999999999999999999999) )\nprint (GRE(320)))\n\nprint (int (3.7))\n\nprint (int (-3.7))\n\n \n\n4,56372883832\n1.23456789012\n\nScientific notation\n\nSet32\n1e+39\n\nInfinity\n\ninf\nint\n\nConversions between numeric type nt (*intiasty\")\n\n \n\n  \n\nn(Eiose (3)\n(eapsagssagannasaecgs:\n\n \n\n399953})))"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/python-programming/01_python-as-a-calculator/02_core-material-numbers-and-expressions/02_simple-expressions.mp4", "id": 5697, "text": " simple Expressions’\nScott Rixner Prine (\"\")\n\nprint (\"Multiplication\")\nprint (3 * 2)\n\nprint (7.8 * 27.54)\nprint (7 * 8.2)\n\nprint (\"™\")\n\nprint (\"Division\")\nprint (@ / 2)\nprint (3 / 2)\nprint (7.538 / 14.3)\n\nprint (8 // 2)\nprint (3 // 2)\nprint (7.538 // 14.3)\n\nprint (\"\")\n\nprint (\"Exponentiation\")\nprint (3 ** 2)\n\nprint (5 ** 4)\n\nprint (32.6 ** 7)\n\nprint (9 ** 0.5)\n\n9.7\n5.8\n\nMultiplication\n6\n\n214.812\n\n87.4\n\nDivision\n20\n8\n-527132867133\n\nExponentiation\n8\n\n625,\n39131203087.6\n3.0"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/python-programming/02_functions/01_core-materials-functions/01_what-is-a-function.mp4", "id": 5701, "text": " Introducing Functions\n\n \n\nScott Rixner triangle. area = area trie le. aye aa bese ay,\n\n  \n  \n\n  \n\nOCG 4 vege fest"}, {"path": "C:/Tesis ISIS/videosLu/frontend/public/Coursera/python-programming/02_functions/01_core-materials-functions/02_calling-functions.mp4", "id": 5702, "text": " Galling FUNCIIONS\n\n \n\nScott Rixner »\n\nDemonstration of how to call functions.\n\n \n      \n        \n      \n \n \n     \n  \n \n     \n    \n    \n      \n     \n     \n \n\nLine 25: TypeError: useless() takes\n# Function that we can call\ndef useless (inputi, input2, input3):\n\nThis function takes three arguments and always returns 3.\n\n \n\nreturn 3\n\n# Calling the function\n3 useless(1, 2, 3)\n\n“ it\n\n15 # Calling the function and printing the result\nprint (useless (4, 5, 6) + 7)\n\n   \n\n  \n\n# Calling the function and assigning the result to a variable\n19 result = useless(7, 8, 9)\nprint (result)\n\naaa\nAy oosce\nBp cecteseiti\n\n26"}]