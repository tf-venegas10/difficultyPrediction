[
  {
    "path": "E:/Coursera/algorithms-part1/09_elementary-symbol-tables/01_elementary-symbol-tables/02_symbol-table-api.mp4",
    "id": 5151,
    "text": " Algorith mg kuma SF|u.|\\H< x I KI \\-..\\-\\v.«m,\n\n3.1 SYMBOL TABLES\n\n> API\n> elementary implemenlalions\n> ordered operations\n\nmm /alno u..=.-mu... .a.. 3.‘ SYMBOL TABLES Symbol rubles\n\nKey-value pzlr absuanlon.\n- Insert a value with specified key.\n- Given I key. search {or the corresponding value.\n\n  \n\nEx. DNS lockup.\nInsert URL with speciﬁed IP address.\n\nGiven mu. find correspanding ip address.\n\n    \n    \n \n\n      \n \n\nwww.zs.pvincelon.eﬂu izu I2 i3s.i i\n\n      \n \n     \n \n\nmm pmiczlon can i2s.i I2 IZBJS\n\n     \n\nwwwsyalzedu i3o.i32.i43 Zi\n\nwww.haN:m.edu i2s.io3 nmss\n\n     \n\nwww ximpxurmzum 2o9.osz.Is5.so Symbol tabla upplicuiions\n\n     \n\nn1wu.mmv ruuymw H? >4 Arr u\n\n        \n    \n\nmm deﬁmlmu .1.«.m.o..\n\n \n\ndvdmnavv\n\n   \n\n   \n    \n\nbook Index mm relevant pain nu ul pig: numlurx\n\n     \n\n   \n\nnu mm ﬁnd song to download name av Hang uamvulu I0\n\n   \n   \n\n           \n  \n      \n    \n      \n     \n\n«mm: Auaunl Izrnceu lrannclvoru uumnl number nummon mans\n\n     \n\n     \n\nweb scum rum mevam web ranges keyword Nu at page namu\n\n   \n\nvarlabk name\n\n   \n\nmmpnlel mm pmnerlmx a! “mum Iype and um\n\nvoulmq um mule lnlemzl mclnexs desllnaunn bu! mule\n\n       \n    \n\nnus «nu n> addvexx glven mu\n\n   \n\nmu n> addvnx\n\n       \n          \n \n\n   \n\nraven: ws «me mu given 17 «mm; n> Iddvus um\n\n        \n\n    \n\n«ma nmkm known wsmons\n\n \n\nDenomvcs om slrlnu\n\n          \n\nHI: mum mm ﬁle an mu mmm Ioczunn an dusk Basic symbol luble AFI\n\nAssoelatlve array abstraction. Associate one value wlth each key.\n\npublI( (lass SY<|(ey, value)\n\nsr() lH|NA.L\\1Hh“»’vV\"[t\n\n,- m M1lm[‘ttrw!uH't.MN.\nVurvrtm key/mm W. « mlutry rvuVH\n\nmy... ,-nu/..l.\\ thko,\nmu .y M v»nI\\..Ml\n\nma deleteoﬁey key)  kwmuJv‘«v.v‘m//NW’\nmtg... (ontams(l(!y um HUMIt4!\\.UJrt[>ut‘n'IHlHK>Y>\nboalean :s:..p:y(> H!/hN'\\h'trHfl«’\nnu sum vHvJ'.vu!L.\\ hllltlrll/V. wk\nIterahVe<Key> keys() 5 A'”HV.’7‘|Y~N‘”Yt’u\"'\\\n\nvotd FuK(KzY key, Vﬂue m)\n\nValue §u(Key key) Conventions\n\n \n\n- Values are not mm.\n- Melhod gut) returns nu'H wf key not present.\n\n- Method pun) overwrues old vatue wnh new value.\n\nmended consequences.\n. Easy to Implement contains().\n\npubhc boc'|ean con(aIns(K2Y key)\n( return gedkey) ‘ mm\n\n \n\n- can Implement lazy version of unezeo.\n\nnubh: void de1eu2(Kev key)\n{ put(key. mm): } Keys and values\n\nValue type. Any generic type.\n\n,=..uy rm:-mm U. AN\n\n \n \n      \n   \n   \n     \n \n     \n   \n \n\nKey type: several natural assumptions.\n- Assume keys are Comparable. use :omnar'eYo().\n- Assume keys are any generic type. use enuals() to test equality.\n. Assume keys are any generic type. use equals() to test equality;\nuse hash€ode() to scramble key.\n\nT owl! m mm.\n\nmay mm:\n\nBest practices. use Immutable types for symbol table keys.\n. Immutable lnjavaz Str1‘ng,Integer',Dnub1e. java.1‘o.Fi'|e\n. Mutable in Java: Strlngsullder, java.net.UR|., arrays. Equality list\n\nAll Java classes Inherll : method equI15(). Equals design\n\n \n\n\"Standard“ recipe for userdefmed types.\n- optimrzanon for reference equahxy.\n- Check against rum,\n. Chetk mm two objecls are ofthe same type and cast.\n- Compare each s£gmf<cant field:\n— if held us a primmve type. use ==\n— if held Is an object, use aqua1S()\n\n‘M\n\n(« w\n\n— If ﬁeld Is an array, apply to each entry <— J\n\n   \n\n|»_- NA! ,r .\n\n \n\nBest pracuces.\n- No need to use calculated fields that depend on ozher fiefds.\n- Compare fields mostby lokely to differ fsrst.\n. Make cmnpareTn() consistent with equawso.\n\n\\\n\nX uumm w/‘ulIH‘\\\\ x xx r<vyv‘*vr'n,\\/w rm Frequency counter implemenlavion\n\npublic (1155 Frequenzyﬁaunur\n{\nmum: snti: vmd .m'n(su-im,z(] irgs)\n{\nml minlen . In(eqer.narseIn((:rns[0]]:\n\n   \n\nSV<Sn‘mg, 1mgw it = new SY<S(rvng, lnteger>():\nmm: (!StdIn‘isEmpty())\nI\n\nStrum ward = StdIrv.r2adSn1'mz0: ‘.  g yw \n\nyr (won.1,|en9th() < mvrﬂen) zunnrm\n\n« (‘Sr.<on(umS(wurd)) s(.pu({v.ord, 11:\n\nuse SI pumom, ,r gexmm) . 1):\n}\nStrmq max = “\n\nsnputtmax‘ 0),\nfar (swag word : 5: keyS()1\nvf (51 qet(word) > §(.qe1(max))\nmax ; ward. R\nsmouz.pnn:ln<mx ‘ “ \" + sr.get(m3x)1:\n\n \n\n \n\nM 4 HHHI M\n,. 3.1 SYMBOL TABLES\n\nr AP!\n\nAlgorithms\n\nhurt//atwuovvmulunndu R Copyright © 2012 Robert Sedgewick and Kevin Wayne"
  },
  {
    "path": "E:/Coursera/arduino-platform/02_c-programming/03_lesson-2/01_lecture-2-1-basic-c-operators.mp4",
    "id": 419,
    "text": " University of\nCalifornia, Irvine 363\n\ngig\nQ\n\nt\n\nInternet of Things\nProfessor Ian G. Hams, PhD,\n\n \n\nI rII Module 2. Lessnn2\n\nLecture 2.1: Basic E Uperaturs Eunstants\n\n' Can use Matt 11: curnpﬂer directive\n\n7: u e At‘-1§‘,“'7 \"7,\n\n‘ Any Instance uf the string is substttuted at eurnplle time\n- Eharacter nunstants\n— Written as a singte character in singte quutes\n\n‘ ’ :WEﬁW.w“.‘,\"{\\'[1T.\",:'\n\n— Integer equat tn the ASCII vatue nf the character\n\n— Surne characters are nut easvtu represent (Le. belt) Arithmetic/Relatinnal Uperatnrs\n\n. +‘ ._ 5/\n\n' % is the mnduln nperatnr. divisinn remainder\n' Ex.5\"/uZ=L5%3=|]\n\n' +* (increment) . -- (decrement)\n\n0 ::4 (V >V <:V >=V I:\n\n° Ex. if (x < 5) Luginal ﬂperatnrs\n\n3.8. (AND), || (OR), ! (NOT)\nTreat arguments as 1-bwt bmary values\n\n— D \\s FALSE, not-0 IS TRUE\n\nif ((A == 1) && !B) uc University of\nCalifornia, Irvine"
  },
  {
    "path": "E:/Coursera/arduino-platform/02_c-programming/03_lesson-2/03_lecture-2-3-loops.mp4",
    "id": 421,
    "text": " University of\nCalifornia, Irvine 363\n\ngig\nQ\n\nt\n\nInternet of Things\nProfessor Ian G. Hams, PhD,\n\n \n\nI rII Module 2. Lesson?\nlecture 2.3: Lnups All Built lntn the \"Fur\" Statement\n\nin: main (H\ni\n‘\n\nint 1.-\ninitialuatiun terminatiun step\n\n5°‘ %\npr \n)\n) Break and Enntinue\n\nBreakjumps tn the end nf a fur,\nwhile, du, er case\n\nwhile (3: > 5) (\ny++;\nif (y < 3) bunk,-\nx++y’\n\n)\n\n[Iuntinuejumps tn the next\niteratinn at a lump\n\nwhile (x > 5) (\ny++,-\nif (y < 3) contjnun;\nx++;\n) University of\nCalifornia, Irvine"
  },
  {
    "path": "E:/Coursera/arduino-platform/03_arduino-programs/03_lesson-2/01_lecture-2-1-classes.mp4",
    "id": 428,
    "text": " University of\nCalifornia, Irvine 363\n\ngig\nQ\n\nt\n\nInternet of Things\nProfessor Ian G. Hams, PhD,\n\n \n\nI rII Mudule 3, Lesson?\n\nLecture 2.1: Classes Elasses and Members\n\n:1... x (\n\npublic:\n\nnu: n,-\n\nint mun: v) ( in old = m; n=v: zetuzn old: i\n\nL\n\nx viz:\nvnr. ,\nint x = vnr.ni(9):\n\n' ﬂeciaraticn cf a variable creates an abject\n\n' .|]peratnr used tn access members\n—Data and functiuns\n\n' Functidns can be defined inside the class Classes in Libraries\n\n' We dun't need to knew a let ahnut\nclasses\n\n° We will nut define classes\n\n' We will use classes defined in libraries\n\nclbeqin (mac) 7\nJ bagin(speed) ;\nprint (“Hello”) ;\nprint(“He1lo”) .' Uc University of\nCalifornia, Irvine"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/01_stl-and-the-game-of-hex/03_introduction-to-the-stl-library/02_1-2-new-in-c-11.mp4",
    "id": 761,
    "text": " rC++ §0E'C  ‘ 1 ‘e‘:*:\n\nNew in the C++ 1 1\nStandard\n\n4\\ \n\n\\\"'-ﬁr; 7\n\nC++ §6E‘€   '§?%%?i\n\nNew in the C++ 1 1\nStandard Example: enum class\n\na enum class Color{RED, GREEN, BLUE); Q\n. enum class Stop|ight{RED, YELLOW, GREEN);\n\no With simple enums these shared enumerators would be\nambiguous\n\no In C++11 they constitute separate type Stop|ight::RED is\ndifferent in type from Co|or::RED; both can be used in the same\nscope.\n\nA Si|Nii|%li|iII”l rC++ fer-C   2 \n\n \n\n  \n\nC++ for C Programmers, \nPart B: Overview\nModule 1.1\n\nKL enum class enumerator type\n\na The underlying type of enum classes is by\ndefault an int; this can be specified to be a\ndifferent integral type . / O / I / 1\n\n. enum class Colo RED, BLUE, GREEN);\n\no enum class Identiﬁer: IntgraI_Type( enumerator list};\n\nLu, :<a1a~/L /47. rC++ fag-C enum class enumerator type\n\na The underlying type of enum classes is by\ndefault an int; this can be specified to be a\ndifferent integral type . / O / I / 2\n\n. enum class Colo RED, BLUE, GREEN);\n\no enum class Identiﬁer: IntgraI_Type( enumerator list};\nT\n\nzfowl M  \n13LMi—-3 SHNll||}ll|ll V\n\n' C++ f@E'C Quiz: Define an enumerator\n\no Define a enum class that models three logical\nvalues — yes, no, maybe- whose underlying\ntype is unsigned and where yes>maybe>no\n\no —-— also yes worth 2 maybe’s\n\nSHNHI lllilll Answers:\n\na enum class WierdLogic :unsigned{\n‘J 4-\n. NO, // o \\\n0 MAYBE = 5,\n0 YES = 10\n\no }; // a yes is worth 2 maybe‘s\n\nSHNHI IIHIII rC++ EQEC"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/03_basics-of-inheritance/01_2-3-basics-of-inheritance.mp4",
    "id": 778,
    "text": " as\n\nrC++ Em“ C .\n\n1\n\nBasics of\nInheritance\n\nra Pohl\n\nPro ‘$50, skifl S531! ofEngme '\n‘ University 0! Calwfomia Santa Basics of Inheritance\n\no Inheritance is a Reuse Mechanism\n\no Inheritance uses pure po|ymorphism(to be\ndeﬁned)\n\na Inheritance imposes a type structure\n\no OOP = Inheritance\n\nsnmn lllilll V\n\n' C++ §@E'C \n\nBasics of\nInheritance rC’++ €93-C  \n\nBasics of\nInheritance Basics of Inheritance\n\no Inheritance is a Reuse Mechanism\n\no Inheritance uses pure po|ymorphism(to be\ndeﬁned)\n\no Inheritance imposes a type structure\n\no OOP = Inheritance\n\nSHNIII IIIIIII 7\n\nC++ fﬁﬁ‘ C §'3‘:\"{.».  ‘   \n\nBasics of\nInheritance Basics of Inheritance\n\no Inheritance is a Reuse Mechanism\n\no Inheritance uses pure po|ymorphism(to be\ndeﬁned)\n\no Inheritance imposes a type structure\n\no OOP = Inheritance\n\nSHNIH lililll Basics of\nInheritance The OOP Design Methodology\n\n  \n    \n  \n \n\n1. Decide on an appropriate set of types\n2. Design in their relatedness\n\n3. Use inheritance to share code\namong classes\n\nSHNIII IIHIII ré-++ f®E'C :”‘z“<..»s*‘;\"‘- \n\nBasics of\nInheritance Basics of\nInheritance A Derived Class\n\n0 Class derived from an existing class\n\noclass c/assname:(pub|ic|protected|private)°pt\nbasename\n\nﬂ  ' .\ng\n\n{ die/\\/v\\rr.9 (arr-\\\n\nmember declarations\n};\no Keywords public, protected, and private used to\n\nspecify how base class members are accessible to\n\n  SHN HI lilillil Basics of\nInheritance '5\n\n++ f®E'€ \"*2 \n\n \n\nBasics of\nInheritance Public Inheritance = subtyping\no 90% rule — almost always use public\ninheritance\n\no Then base class is the type of the whole\nhierarchy\n\na Private inheritance is LIKEA relationship-not\na subtype but inherits code/members turning\n\nthem private\nSHNHI lililll rC++ EEEC i\"\";xf..a«  \n\n   \n\nBasics of\nInheritance Public Inheritance = subtyping\no 90% rule — almost always use public\ninheritance\n\no Then base class is the type of the whole\nhierarchy\n\na Private inheritance is LIKEA relationship-not\na subtype but inherits code/members turning\n\nthem private\nSHNHI Illilll 'é++ f®E\"C  \n\n   \n\nBasics of\nInheritance point and duo\n\n- class duo(\n\na public:\n\nduo():first(0.0),second(0.0)(}\n\nvoid set_ﬁrst(doub|e d){firsi = 43;)\n\nvoid set_second(doub|e d)(second = d;}\n\ndouble get_ﬁrst(){return ﬁrst)\n\ndouble get_second()(return second;)\n\na protected: // intermediate data hiding —nb need forthis exampie\n\n. double ﬁrsi, second;\n\n0);\n\nSHNIH l‘IHll%[ 7'\n\nC++ EEEC E\"“;T:.»  \n\n \n\nBasics of\nInheritance\n\n \n\nB point and duo\n\n \n\nclass duo{\n\n7 1:m5>1<)t«.(c{49S T)\n\n. duo():first(0.0),second(0.0)(}\n\na void set_ﬁrst(doubIe d){first = d;)\n\no void set_second(doub|e d)(second = d;)\n. ﬁﬁﬁle get_ﬁrst(){return ﬁrst)\n\n.\n\nIe get_second()(return seoond;}\n/ intermediate data hiding —nb need forthis example\n\n9 rlftéz ‘*1\n” 02?“ v“«‘»c°3«7+.‘»+m+H Izmlz rC'++ f@E°C E\"z  ‘ : \n\n \n\nBasics of\nInheritance Basics of\nInheritance point and duo\n\n \n\n7 {cm 31$. (A495 T)\nclass duo(\n\npublic:\n\nduo():first(0.0),second(0.0)(}\n\no void set__ﬁrst(doub|e d){first = d;)\n\no void set_second(doub|e d)(second = d;}\n\n0 ﬁﬁﬁle get_ﬁrst(){return ﬁrst;)\n\n. Ie get_second()(return second;} 70\n\n++ EGEC 2\"; \n\nBasics of\nInheritance What did the program print?\n\npoint q;\n\nq.set_ﬁrst(3.0); q.set_second(4.0);\n\ncout << q.get_ﬁrst() <<  \" << q‘get_second() << endl;\ncout << q.length() << end];\n\nmy  .\\wwHw\n\n SHNIH |}Hlll Answer:\n\n03,4\n05\n\no Remember pythagoras UNIVERSITY OF CALIFORNIA\n\nNT H|Jl\n\n©2016 Regents of the University of California\n\n   \n\n.4.\n\n.a\n“an"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/03_basics-of-inheritance/04_2-6-c-feature-final.mp4",
    "id": 781,
    "text": " C++11 Feature: final\n\no What if you do not want a class to ever be a base class\nC++11 allows you to make if ﬁnal\n\nclass point3d finalzpublic point (//no further inheritance\n\npublic:\npoint3d():point(),z(0.D)()\ndouble length()( return sqrt(ﬁrst‘ﬁrst + second‘second 4» z\"z);)//virtual\nvoid set_z(doub|e d)(z = d;}\n\nprivate:\ndouble 2:\n\n}:\n\nuooouuoo\n\n- //nota bene: ﬁnal is a contextual keyword and can be an identiﬁer\n\n” SHVNLHI lilllll 'E3++ f@3'€   = *»= C++11 Feature: final\n\no What if you do not want a class to ever be a base class\nC++11 allows you to make if ﬁnal\n\nclassgtfad ﬁnalzpublic point (//no further inheritance\npublic:\npoint3d():poin!(),z(0.0)(}\ndouble |ength()( return sqrt(ﬁrst“ﬁrst + second'second + z\"z);)I/virtual\nvoid set_z(doub|e d)(z = d;)\nprivate:\ndouble 2:\n):\n\noooooouo\n\n- //nota bene: ﬁnal is a contextual keyword and can be an identiﬁer\n\n SHNHI lIH|Ll%l UNIVERSITY OF CALIFORNIA\n\nNT Hlll\n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/03_basics-of-inheritance/05_2-7-topics-on-inheritance.mp4",
    "id": 782,
    "text": " ,¢ -‘ax\n\n’C++forCP1-ogrammers\n\nModule 2.7\nTopics on Inheritance Topics on\nInheritance Topics on Inheritance\n\n0 Subtyping and Code Reuse\n\no Typing Conversions and Visibility\n\n- Abstract Base Classes\n\n. Multiple Inheritance\n\n0 Inheritance and Design\n\na Detailed C++ Considerations\n\na New C++11 features,eg‘ ﬁnal, defau|t,de|ete \n\nSHNHI IIHIIZ Topics on\nInheritance Topics on Inheritance\n\n. Subtyping and Code Reuse\n\n. Typing Conversions and Visibility\n\n. Abstract Base Classes\n\n- Multiple Inheritance\n\n0 Inheritance and Design\n\no Detailed C++ Considerations\n\n- New C++11 features,eg‘ ﬁnal, defau|t,de|ete \n\nSHNHI lllilll UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/05_inheritance-and-derived-classes/01_2-10-the-inheritance-mechanism.mp4",
    "id": 785,
    "text": " C++fo1-CP1-ogrammers \n\nModule 2.10\nThe Inheritance Mechanism rC++ fag-C  \n\n7//7e .37/var/z‘ance\n/V/ed/7a/7/5/>7\n\n \n\nI.‘ lnher\n\nﬂance\n\nmwmm rC++ fag-C   —   ;-=_\n\n77742 J}?/7e/‘/Zld/’7Ce ;  '\n/‘4¢3C/7Q/7/.5/>7 ‘ H\n\n  \n \n \n \n\nL lnheritanc\n\nam nﬁ My rC++ Em-C  :s_-» \n\n777a Lv/var/z‘c2nce\n/V/ed /7Q/7/5/>7\n\n  \n \n \n\nLT | C++ EQEC   \n\n777a Z37/7er/Z‘c2/ﬁe\nMed//an/5M\n\n  \n\nLL 777a D7/7er/‘Z(QI7Ce ‘’ \n/Wed /id/7/.5/>7 '\n\n \n\nLl IL /Wed/IQ/7/l5/>7\n\nLT El-+ f6E‘C  2.3:‘;\n\n77742 In/ver/z‘ance\n/V/ea/zan/5m\n\n  \n \n \n\nJ The Inheritance Mechanism\n\n- Means of deriving new class from existing classes,\ncalled base classes\n\n0 Reuses existing code eliminating tedious,\nerror—prone task of developing new code 777a In/var/z‘anc.e ‘  ‘V '5\n\n++ Em-C    \n\n7773 I/2/var/z‘c2nce\n/V/ed /Id/7/5/>7\n\nLj The Inheritance Mechanism\n\n- Means of deriving new class from existing classes,\ncalled base classes\n\n0 Reuses existing code eliminating tedious,\nerror—prone task of developing new code\n\n. Derived class developed from base by adding or\naltering code 7\n\nC++ f®E'C §”‘a'~:..‘aj'>;\";a ‘é*“v=\n\n777s In/zer/z‘ance\n/V/ed/Ia/7/5/>7 r(1++f@r€   \n\n  \n  \n\n7773 J37/7er/‘ﬁance s y.\n/V/ed /7d/7/5/>7 rC++ EQEC E‘; \n\n777a I/2/7er/Z‘ance\n/W8C /IQ/7/.5/>7\n\n  \n \n\nLT /Wed/IQ/7/.5/>7\n\nLT The Inheritance Mechanism\n\n- Means of deriving new class from existing classes,\ncalled base classes\n\n. Reuses existing code eliminating tedious,\nerror—prone task of developing new code\n\n. Derived class developed from base by adding or\naltering code\n\n0 Hierarchy of related types created that share code &\ninterface rC++ f6E‘C \n\n7773 J37/7er/Zla/7Ce (  »\n/V/sc/Ia/7/5/>7 { 5 b =\n\nL A base class: student\n\n. class siudent(\n\na public:\n\no enum year ( fresh, soph, junior, senior, grad);\no student(char‘ nm, int id, double g, year X);\n\no void print() const; /I??? What does this mean\na protected:\n\n0 int student_id;\n\n0 double gpa;\n\no year y;\n\n0 char name[30]; rC++ EQEC  \n\n777e Z37/7er/Z‘c2/ace\n/Wed /IQ/7/.5/)7\n\n \n\nLT 7”/7e L7/var/zkznce  \" A base class: student\n\n. class student(\n\na public:\n\no enum year ( fresh, soph, junior, senior, grad };\no student(char‘ nm, int id, double g, year X);\n\no void print() const; /I??? What does this mean\na protected:\n\n0 int student_id;\n\na double gpa;\n\no year y;\n\n0 char name[30]; rC++ €61‘ C \n\n \n\n-;o::;;__;a;“z1iv2;z£E“§ﬁ‘.‘« ‘\n\n777a J37/7er/Z‘anCe tf \n/V/ea/Ian/5m \"\n\n   \n\nLL 7773 —D7/78/‘/AZ‘Q,,Ce (‘  ‘q rC++ f@E'C   \n\n777:2 In/var/z‘ance (Y:  :7\n/Wed/Ia/7/5/>7 ‘ “ \n\n  \n \n \n \n\nL V\n\nC\n\n \n\n7778 J37/7er/ﬁance :1 I 70\n\n++ f@E'C \"’;\":.3\"_\"a\"‘;a \n\n \n\n7778 J37/7er/Z‘c2nCe  L’\nMed/zan/5/>7 '\n\n \n\nLT A base class: student\n\n. class siudent(\n\na public:\n\no enum year ( fresh, soph, junior, senior, grad);\no student(char‘ nm, int id, double g, year X);\n\no void print() const; /I?’?? What does this mean\n. protected:\n\n0 int student_id;\n\n0 double gpa;\n\no year y;\n\n0 char name[30]; Va\n\n++ fa:-C   \n\n  \n\n, ‘_ :K‘,;':‘'L '\n\n7773 I/2/var/z‘ance 9‘?\n/‘4¢SChQ/7/15/)7\n\n \n\nLT A base class: student\n\na class student(\na public:\n\no enum year { fresh, soph, 'unior senior. grad };\nan [7 student(char\" nmzlnt ia double g, year X);\n\na void rint ??'?Whatdoesthismean\no rotected:\n\n0 int student_id;\n0 double gpa;\n\n- year y; >44“?/‘\n\n0 char name[30];\n\n0): rC++ f®E'C '3:  L‘:\n\n7”/7e In/var/z‘c2nc:e '  A.\nMed/7an/5/>7 “ ' \n\n \n\n \n\nLT - Ky. A base class: student\n\n. I< :\n.  ¢o~gg;.«; —.f1<2.H\"\n\no enum year ( fresh, sophmior senior‘  \nCﬁ[7_ident(char’ nmilnt ia double g, year X);\nvoid rint @ //‘zﬁwhat does this mean\n‘\\ 9-7\n\nint student_id;\ndouble gpa;\nyear y;\n\nchar name[30];\n\n \n \n  \n\n \n\n): Q\n\nUIZI\n\na void print() const; //??? What does this mean Answers:\n\na void print()const; /7 '7\"U/\"\"!>U\\\n\no Const here means the this pointer —points at an\ninstance that cannot be mutated (changed)\n\n@ » vwc =\no It is useiip he compiler for const correctness"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/05_inheritance-and-derived-classes/02_2-11-a-derived-class-grad-student.mp4",
    "id": 786,
    "text": " C++ fmC  \n\nModule 2.11 \\}K\nA Derived Class: ‘\n\ngrad_student rc++ mg-C   \n\n4 _>e/*/1/ga/ C/a55~'\ngran/_.5Z‘aa’enZ‘ A Derived Class: grad_student\n\na class grad_student : public student {//public ~ subtype\na public:\n\no enum support ( ta, ra, fellowship, other};\n0 grad_student(char* nm, in! id, double g,\no year x, support I, char* d, char‘ th);\n\na void print() const;\n\na protected:\n\no support 5;\n\na char dept[10];\n\no char thesis[80];\n\nn ); rC++ Ear C \n\n\";:o?%:’;z1.:-viii I\nI‘ 3'\" 5‘ ‘\n\n/4 Der/s/ea’ C/ass‘ ' \ngran/_.5Z‘ao’enf .\n\n \n\n \n\nLT A Derived Class: grad_student\n\no class grad_student : public student //public ~ subtyp *\n\na public:\no enum support ( ta, ra, fellowship, other};\na grad_student(char‘ nm, int id, double g,\no year x, support t, char’ d, char‘ th);\n\n. void rint()const; \nD ‘Z’ (\n\n0 protected: wk\nchar dept[10];\nsupport 5: /  \nthesis[80]; /\n\na char\n\n_); 102 (2¢M/Lt. 7\n\nC++ EQEC i\"”: i.}_\"?é\"22 \n\n§Z‘z,{o/e/755 (3:\nGrczdade §Z‘ao’enZ‘5 A Derived Class: grad_student\n\n- class grad_student : public student //public - subtyp ﬁg\n\na public:\n\no enum support ( ta, ra, fellowship, other};\na grad_student(char* nm, int id, double g,\no year x, support t, char* d, char‘ th);\n\na void pnnt()const, f\n\n0 protected: ﬂu\nchar dept[10];\nsupport 5; z  \nthesis[80]; /\n\na char\n\n_); 107., ((,.,,.x; '5\n\n++ EQEC Z\":   ae\n\n \n\n4 Der/1/ea’ C/Q55-' ‘* \n5/‘Q0/_,.5Z(é{o/e/75 %‘ A\n\n \n\nLT '5\n\n++ fey C i\"‘;\":.:\"=  ‘ \n\n4 Derived C/Q55-' \n3/~aaL.5Z‘é{a/e/2Z( '\n\n \n\n_ r¢++ €63‘ C :E”z\"i.‘»f\"\"§\"Z2_ ? 5‘ 3*-.\n\n \n\n4 Der/vga’ C/a55-' ‘  ‘\ngran/_.5Z‘¢{o/enf « ->~\n\n \n\nLT 4 Ear/1/ea’ C/Q55-’ ~ 7’ ‘~ '»\n5/‘do/__.5f¢{a/e/7Z( ‘ '6\n\n++ E933  —*.*\";j‘;=:‘ﬁ:\n\n \n\n4 bar/veg’ C/ass-‘ (\"~  %\ngran/,.5Z‘ao’enZ( ‘ . gran/_.5Z‘ao’enZ‘\n\nLj 4 Der/vga’ C/a55~'  :\n3/‘QO/_..5Z‘é{o/e/’)Z‘ . “ 7 5‘ ‘V\nC++ EQEC  <o3;gI;\"’2a1:   ;a £3‘ . .\n\n- E '3.‘ {:5 \n4 Der/vgd C/ass-‘  5\njrao/__5Z‘ac/enf \n\n \n\n   \n\n_\\ A Derived Class: grad_student\n\n- class grad_student : public student //public - subtyp *\n\na public:\n\n. G’; ‘by\nc enum support ( ta, ra, fellowship, other};\na grad_student(char‘ nm, in! id, double g,\n\no year x, support t, char‘ d, char‘ th);\n\na void rint()const; \nP \n\n0 protected: ﬂy\nchar dept[10];\nsupport 5; z  \nthesis[80]; /\n\na char\n\n_); IDZ MAL rC++ fag-C   \n\n/4 Derived C/a55-‘\ngran/_.5Z‘ao’enf\n\n   \n\nk‘4_ lnheriting from the Base Class\n\n0 Derived class is modiﬁcation of base class that\ninherits public and protected members of base\nclass rC++ f6E'C 3*‘; \n\nSzizc/enf5 6: 7’.\nGradaccfe Sfadenfé 7\n\nC++ fay C \n\nV\n\n \n\n:0};13Q;\"’§21i?é;i‘. \nc‘ \"’ Q \"\n\n5Z‘ac/e/7f5 (3: ' \n\n6raa’ac<Z‘e §z‘aa’enz‘5 ; .-\n. ‘T\nﬂ %\nI, «A ' L\n\n       \n \n\n_ §Z‘ao/e/756 6:\nGraduate SZ‘aa’enZ‘5\n\n  \n\n_ V\n\n' C++f@§°€ :”=‘\n\n \n\n: :o.:;-_ga:’a§ is 2: ii ©E’§\\\n/‘ \\\n\nQ Q\n§Z‘ao/enéﬁ 6: L \n6/“Q0/z,{aZ(e k§Z(/,{o’enZ(5 4 ‘ ' rC++ §@E'C \n\n§Z‘4(o/e/7Z5 6: ‘  A\nGradactée SZ‘aa’enZ‘5 ‘ \"4\n\nLT VC++ Ea:-C   ‘\n\nSziza/enZ‘5 8: “\ndrag/dais Szzza/enZ‘5 lnheriting from the Base Class\n\n. Derived class is modiﬁcation of base class that\ninherits public and protected members of base\nclass\n\n. In grad_student, student members are inherited rC++ f@E'C §”;'::;'?;\"§a \n\n \n\n5Z‘A{c/<2/735 & ‘ \nGradactée Sz‘aa’enZ‘5 -. 5Z‘ao/e/765 & ‘T \nGraduate Sig:/enZ‘5 1 .. :++ EQEC .;'i\"‘€.T3f\"   ‘vi\n\n§Z‘ao/e/755 6:\nGraduate Siadenis lnheriting from the Base Class\n\n. Derived class is modiﬁcation of base class that\ninherits public and protected members of base\nclass\n\n. ln gradgtudent, student members are inherited\nn student_id gpa\nI name year\n\nsprint... 3-}1,_,4Q,,“;(' \n<(2\"“*R—9J*»4e-7§:; (v«MZ7()\n\n” ‘SW\nm lnnfbx Add new members in the Derived Class\n\no Derived class adds new members to existing class\nmembers\n\n. grad_student has three new data members and\nredefined member function\nI 5\nu dept\nn thesis\n\nprint() .. Va\n\n++ §e3°C \n\n \n\n£0}:;_«§l§”§21:?‘e§§E . . . ‘\nI .\nz‘; 3, C 7\n\nGrao/unite 5z‘aa’enf5 Benefits of Inheritance\n\n. Code is reused\no grad_student uses tested code from student 5 ii  ;= 33% W‘\n\nrC++ fag“ C \n(I  W ‘\n\n4  ‘\n§Z‘1,{c/e/755 & a} L\nGraduate Szzza/enzs =1 %\n\n  \n\nLT Benefits of Inheritance\n\n. Code is reused\nc grad_student uses tested code from student\na Reflects relationship in problem domain\na Special grouping grad student outgr h of real world\nand treatment of this group pg u')u]'A.\\_A_\" 7\n\nC++ E93-C  \n\n/4 Der/vga’ C/ass\"\ngran/Méiac/enf Va\n\n++ EQE C i\"“;\":..%j°‘;\"zz_ “ \n\n  \n  \n\n4 ﬁer/vga’ C/a55-‘ T \n\\9/‘ac/_#.\\5Zé{o/8/7% ’ ‘ '2\n\n/4 )er/.Vea/ C/Q55-’ (\": '-\n5/~ao/_.5Z‘ao’enZ‘ \"\n\n++ f@§'C 2\"; Sf‘;\n\n \n \n \n \n\nL ++ fer C 3'2\n\nVC § g: as’: ﬁrf-V‘ ’ ‘\n{ 3» F» -\n\n4 Ear/vga’ C/Q55-' { \ngran/_.5Z‘ao’enf 7\" Va\n\n4 Der/vga’ C/Q55-' T \n3/~aoL.5Z(é{o/e/7Z( —\n\n++ E63‘ C i\"\";‘:}§'9 :12. “ rC++ f6E'C 3'1‘;  \n\n/4 ﬁer/vga’ C/a55-‘ 91; ‘5\ngran/_.5Z‘aa/enz‘ ‘ “\n\n  \n\n \n\nLj Benefits of Inheritance\n\n0 Code is reused\n0 grad_student uses tested code from student\n- Reflects relationship in problem domain\n\na Special grouping grad student outgrowth of real world\nand treatment of this group\n\n- Polymorphic mechanisms allow client code to treat 4 Der/s/go’ C/ass‘\nﬂraa/_.5Z‘¢zo’enz‘\n\nLT Benefits of Inheritance\n\n. Code is reused\no grad_student uses tested code from student\n3 Reflects relationship in problem domain\n\n- Special grouping grad student outgrowth of real world\nand treatment of this group\n\na Polymorphic mechanisms allow client code to treat\ninherited class as subtype of base class\n\na Simpliﬁes code, maintains subtype distinctions V: 4 ﬁer/s/ea’ C/a55-‘\n\n  \n\n3/‘Q0/__.5Z‘é{o/e/OZ‘ Typing Conversions & Visibility\n\n. Publicly derived class is subtype of base\n\n- Variable of derived class treated as if it were base\nclass type\n\nc Pointer type pointer-to-base-class can point to\nobjects of derived class type\nc Subtle implicit conversions occur between base and\n\nderived type\n\n0 Difficult to follow what member is accessed if base and\n\nderived class overloaded same member name H\n\n_, —>s\\M~\\( \\ 7’p~’».»?l() 7\n\nC++ EQEC §”’:’:3‘f‘:“’;i ‘2=“w=\n\n4 Der/x/ea’ C/a55-‘\n3/‘do/_..5ZJé{dehZ‘\n\n   \n\n_ E-+ E61‘ C i.’\n\n  \n4 ﬁsh‘:/ea’ C/Q55’ \" $5\ngran/_.5Z‘aa/enz‘ Typing Conversions & Visibility\n\n. Publicly derived class is subtype of base\n\no Variable of derived class treated as if it were base\nclass type\n\n0 Pointer type pointer-to-base-class can point to\nobjects of derived class type\n\nc Subtle implicit conversions occur between base and\nderived type\n\n- Difficult to foliow what member is accessed if base and\nderived class overloaded same member name It\n\n-, —>s\\Mv\\( \\ 7’Iu’u‘l()"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/05_inheritance-and-derived-classes/04_2-13-virtual-function-selection.mp4",
    "id": 788,
    "text": " C++ forCProgrammers \n\nModule 2.13 \\‘,\\K —\nVirtual Function V‘ ‘ ‘\nSelection ‘, \"I ‘*\\ ,» rCr++ fG1'C‘::'%é:*.\n\nL//rﬁaa/ F./:1/7C Z‘/on\n53/ ed 5/on\n\n  \n\n \n\nL‘ rC++ Em C 2”;\n\n   ;= $E‘§  ‘\n\n7\n‘+45 5’\n\nL//rz‘aa/ FZZMC Z‘/on , .\nSe/ec Z‘/on \n\n \n\n \n\nL.‘ Virtual Function Selection\n\n0 Typically base has virtual function and derived\nhave their versions of function Va\n\nl//rZZ(a/ Fahd Z‘/on\nSe/ecf/on\n\n \n\n++ f®E'C 2”‘; <.:_-3 \n\n \n\n_ rC++ €93‘ C 2*‘; :o:;_ggu;[;a;   a erg F \n\n\\//rZaa/ F//Zncz‘/‘on q   5’\nSe/ecf/on ' é\n\n   \n\n_ Virtual Function Selection\n\n. Typically base has virtual function and derived\nhave their versions of function\n\nu Pointer to base class can point at either base or\nderived class objects\n\n0 Member function selected depends on class of\nobject being pointed at, not on pointer type Va\n\n++ E93 C \n\n \n\nL//riA(a/ ﬂmcz‘/on (5  Q\nSe,/ecz‘/on\n\n:o:_g§;\";as ?  w 33%  ‘\n:53\n\n  \n\n_ 7\n\nC++ €93-C    \n\nL//rZaa/ Fanazxon A’ 3\nSe/eCZ‘/on  \n\n \n\n_ rC++ f@E'C :'}i’i0}:;_igI§\"’§a1i?Eli'?i \n\n._ 5,’ 5\n\\//rZ./,(a/ ﬂmcz‘/on  '\nSe/ecz‘/on ‘ -L\n\n \n\n    \n\n_ Virtual Function Selection\n\n. Typically base has virtual function and derived\nhave their versions of function\n\n. Pointer to base class can point at either base or\nderived class objects\n\n0 Member function selected depends on class of\nobject being pointed at, not on pointer type\n\n0 In absence of derived type member, base class\nvirtual function used by default C++ €91‘ C i\":  i  =_: L‘ 83% \nI \n9‘? ‘A fa\n\nL//riaa/ FM/7C Z‘/on\nSe/ec Z/on\n\n \n\nL‘ Virtual & Overloaded Function Selection\n\n3 Overloaded member function is compile—time\nselected based on signature '2\n\n++ EMC 2“;\n\n:o.:_-;_;1;\":a1: %  2 ©E'S K %*\n_. , V ,\n\n“<39 \nI’ V\n\n \n\n\\//rZaa/ Fang z‘/on\nSe/ec Z/on\n\n   \n\nL‘ 7\n\nC++ fag-C  — ; \n\n\\//riaa/ Farr: 5/on\nSe/ed Z‘/on\n\n_ Virtual & Overloaded Function Selection\n\n. Overloaded member function is compile-time\nselected based on signature\n\n. It can have distinct return types rC++ E63‘ C i’2T:.‘a;-_=‘;”;a_    :2\n\n\\//riaa/ fund Z/on\nSe/ed Z‘/on\n\n_ Virtual & Overloaded Function Selection\n\no Overloaded member function is compi|e—time\nselected based on signature\n\nc It can have distinct return types\n\na Once declared virtual, this property is carried\nalong to all redeﬁnitions in derived classes\n\n- virtual modiﬁer not needed in derived functions 3! '6\n\n++ far C \n\n \n\n § 2:  33%  I\n. .é, ,.\n\n\\//rz‘aa/ amazon 9:» ’, #2\nSe/ed Z‘/on W \n\n     \n  \n\n_ Virtual Function Selection (2 of 2)\n\n(\nB b;\nB‘ pb = &b; //point at a B object\nD f;\n\npb —> print_iO§ //call B::print_i()\n\npb = &f; //point at a D ob'ect\npb —> print_iQ‘, Z/call D::print_i() ) \\//rz‘aa/ ﬂmcz‘/on 1. \n.§e/ed?/on ' '9:\n\n \n\nKT Quiz:\n\n- What gets printed? rC++ f®E'C  \n\n\\//rz‘aa/ F//and Z‘/on\nSe/ed Z‘/on\n\nJ Quiz:\n\n. What gets printed? Answers: Comments on the virt program\n\n- Different print_i() executed\n\n- Dynamically selected on object pointed at\n\n. \"Object sent message print_i and selects its\ncorresponding version of method\"\n\n. Pointer‘s base type is not determining method\n(function) selection VC++ fez-C   \n\n \n\nL//rZ‘A(a/ ﬂ(nCZ‘/on ‘N.  \nSe/ea?/on ' , é\n\n \n\nj Comments on the virt program\n\nDifferent print_i() executed\na Dynamically selected an object pointed at\n\n\"Object sent message print_i and selects its\ncorresponding version of method“\n\nPointer‘s base type is not determining method\n(function) selection\n\nDifferent class objects processed by different\nfunctions at run—time\n\nADTs, inheritance, and process of objects\ndynamically are essentials of OOP ‘k4,’?\n\n\\//rZ‘aa/ 5!/vdz‘/on \n\\§e/eCZ‘/on ’ '~\n\nEH far C   \n\n   \n\nL‘ rC++ E63‘ C §'i'::is:'3 3&2. ‘ ?E\"§E\n\nL//rz‘aa/ Fahd Z‘/on\nSe/ed Z‘/on\n\n \n\nL‘ UNIVERSITY OF CALIFORNIA\n\nNi Hill\n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/05_inheritance-and-derived-classes/05_2-14-confusion-with-overloading.mp4",
    "id": 789,
    "text": " C++ forCProgrammers \n\nModule 2.14  \\_\nConfusion with ‘ \" ' ‘ ‘\nOverloading rC++ EQEQ \"‘: 1 :'  \n\nCo/77345/on Lu/3/I\n01/er/Odo’//Z9 Confusion with Overloading\n\na Member function overloading and virtual functions\ncause mix-ups and confusion because overriding and\noverloading both are in play\n\nciass B ( /  _\n\npublic:\n\nN/inual foo(int); // \n\nvirtual foo(doub|e);\n\n Je,.s;».(.L3\n>: \\_, 64,. (2.5)\n\nclass D: Eublic B {\n\npublic:\n. . __ M\nMaw\"/_ , . 3-yu\\,4L... Con/Z45/on a2/Z/2\nOver/can//)5 Confusion with Overloading - 2\n\na int main()\n\n- {\n\nn D d;\n\n. B b, *pb = &d;\n\n. b.foo(9.5): //selects B::foo(doub|e);\n\n. d.foo(9.5); //selects D::foo(int);\n\no pb —> foo(9.5); //B::foo(doub|e);\n\n- >\n\n. Base class function B: :f00(int) overriden in derived\nclass\n\n- Base class function B::fo0(doub|e) hidden in derived\nclass Restrictions on Virtual Functions\n\n. Only non-static member functions virtual rC++ §6E‘C  \n\nCon/Z15/on cu/Z/2\nOx/er/Odo///5 Restrictions on Virtual Functions\n\n. Only non—static member functions virtual\n\no Virtual characteristic is inherited\n- Derived class function automatically virtual virtual\n\nkeyword not needed\na Constructors cannot be virtual \" \nI %“~C ‘L/‘3 ix“-out \\\no Destructors can be virtual ., \\ W\na. lreiucw/m wr/L}\n\nI UNIVERSITY OF CALIFORNIA\n\n©2016 Regents of the University of California ‘"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/03_hex-and-the-use-of-ai-and-c-move-semantics/02_class-constructors-and-the-move-constructor/02_3-2-some-further-constructors.mp4",
    "id": 791,
    "text": " C++ forCProgrammers \n\nModule 3.2 \\}\\\nSome Further Constructors * ’ \" Some Further \n\nConstructors\n\n \n   \n \n\nh‘ - ‘Ira |I\"6h|\n\nProfessor, aasirlivschooi 0! Engine ’ Some further constructors\n\n/~/um: - om -\n.. mm ‘L W‘.\nex llcit y_contaIner(T *b):my_contaIner()\n{\n\nI\nO\n. for(inti= 0; i <n ; ++i) Qmgﬁ\n- aiil = biil; 4 1 _M3,\n' ’—* I\n‘) Com\n. Suppress automatic coercion\n. Delegate construction — new C++11 '~ \n\nF siitiiIii:iiIi‘1\n\n} Constructor\n\n0 my_container(const my_container &b):my_container()\n\n- <\no for(int i = 0; i <n ; ++i)\no a[i] = b.a[i];\n\n- >\n\n0 Ordinary copy constructor —again with constructor\ndelegation V\n\n  Q :ﬁi\"{.v‘ é\"\"i ‘ ’ \" ’ ‘\n\nSome Further\nConstructors\n\n \n\nj Constructor\n\n0 my_container(const my_container &b):my_container()\n- <\no for(int i = \"<n ; ++i)\n. a[i] b.a[i]; ’f’( I S -7 (fig 7 \n0 } W‘\n. Ordinary copy constructor —again with constructor\ndelegation\n1- M5 cm/«W C T,» :2 ‘ C\"“‘ﬁ**\n\nW ~ 1: ‘f: q,:~;d.~7 ‘d?:AS”HNtT‘H‘\"I}’Rt[fi Quiz:\n\n- What are typical constructors for a class\n\n* snnnlnihliz rC++ f6E'C i\"”g»:.:_-  \n\nSome Further\nConstructors Answer:\n\n. Defautt - void signature\no Conversion constructor - single argument\n\na Copy constructor - const c|assType&\n\n§.,7V,.m M <2/vplnﬁ\n\nSHNHI I;HII‘z UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/04_monte-carlo-hex-program-further-advanced-c-topics-and-patterns/03_assertions-and-exceptions/01_4-6-asserts-and-exceptions.mp4",
    "id": 807,
    "text": " Module 4.6\nAsserts & Exceptions 7\n\nC++ f@E’C \n\nAsserts &\nExceptions\n\n  \n\nIra Pohl\n\nPvoiesso: Easkm School oi Engineering\nUniversity ofcalilornia Santa Cruz\nL “ ++ Ear C 6 :.o:;;;,a;’2z1s  an; at\n\n \n\nAsserts &\nExceptions Asserts & Exceptions\n\no How to test for correctness\n\no Ideally — you would have a proof that your\ncode works — and could avoid testing — which\nis expensive and finite\n\no Early CS professors such as Dijkstra and\nHoare worked on the logic of proofs of\ncorrectness through assertions\n\nSi|Nll| lllllll 7\n\nC++ EQEC '§\";%:.aj=‘z\"\"a “ \n\nAsserts &\nExceptions\n\n \n\nL‘ Asserts & 7\n\nC++ Em C   = \n\nAsserts &\nExceptions Asserts & Exceptions\n\no How to test for correctness\n\no Ideally — you would have a proof that your\ncode works — and could avoid testing — which\nis expensive and finite\n\no Early CS professors such as Dijkstra and\nHoare worked on the logic of proofs of\ncorrectness through assertions\n\nSiiiiiil lililll rC++ Em C  \n\nAsserts &\nExceptions Idea:\n\no Test a precondition\no Code to be certiﬁed\n- Test a postcondition\n\no If pre and postcondition are true the code is\ncorrect\n\nSHNHI lllilll 7\n\nC++ Em;-C     \n\nAsserts &\nExceptions Exceptions\n\nL‘ C++ Em‘ C 2'2   =-a\n\n  \n\nV  \"\n\nAsserts &\nExceptions Idea:\n\n \n\na/uwri‘ Y 7/ O\no Test a precondition\n\n~ s 1‘ ( 7\na Code to be certiﬁed J v ?A )<\\'\na Test a postcondition 7, 99.  jxj: =)(\n\no If pre and postcondition are true the code is\ncorrect\n\n* SHNHI’IiH|lZ rC++ Em‘ C  , \n\nAsserts &\nExceptions Idea:\n\n \n\nA/uwrf‘ Y 7/ O\no Test a precondition\n\n1; S‘ ‘I ( ‘O\na Code to be certiﬁed J ?A )<\\'\n\no Test a postcondition M jkj: :)(\n\no If pre and postcondition are true the code is\ncorrect\n\n“ SHNIH‘%I}HH”l Quiz:\n\n0 for (int i = 0; i > n; ++i)\n\na Does this loop make sense ?\n\nSHNHI IIHIIZ Old asserts - New C++11 Static Asserts\n\no Asserts are used extensively in C and C++\ncommunity — basically a form of if test + a\nprint + an abort\n\no Static_asserts added to C++11 allow\ncompiler to statically test conditions\n\n\" SHNHI lllllll Asserts &\nExceptions\n\n \n\nL‘ Old asserts - New C++11 Static Asserts\n\no Asserts are used extensively in C and C++\ncommunity — basically a form of if test + a\nprint + an abort\n\no Static_asserts added to C++11 allow\ncompiler to statically test conditions\n\n\" SHNHI lllllll Include <cassert> a C library\n\nassert\nvoid assert (int expression);\nEvaluate assertion\n\nlf the argument expression of this macro with functional\nform compares equal to zero (i.e., the expression is false),\na message is written to the standard error device\n\nand abort is called, terminating the program execution.\n\nit writes the expression whose assertion failed, the name of\nthe source ﬁle, and the line number where it happened.\n\nAssertion failed: expression. ﬁle ﬁlename, line line number\n\nSHNHI lllllll\n\nThis macro is disabled if a macro with the\nname NDEBUG is deﬁned.\n\n#define NDEBUG rC++ €61‘ C 3\"‘:  a *2‘ \n\nAsserts &\nExceptions Include <cassert> a C library\n\nassert\nvoid assert (int expression);\nEvaluate assertion\n\nlf the argument expression of this macro with functional\nform compares equal to zero (i.e., the expression is false).\na message is written to the standard error device\n\nand abort is called, terminating the program execution.\n\nit writes the expression whose assertion failed. the name of\nthe source ﬁle, and the line number where it happened.\n\nAssertion failed: expression. ﬁle fiiename, line line number\n\nSHNHI lllilli\n\nThis macro is disabled if a macro with the\nname NDEBUG is deﬁned.\n\n#define NDEBUG rC++ §6E‘C  \n\n \n  \n\nAsserts &\nExceptions\n\nL‘ assert Example\n\na void print (int* my|nt){\no assert (my|nt!=NULL); cout << *my|nt <<\n\nendl; }\n//precondition test\n\na int main(){\n\no int i = 5; int* p = &i; int*q = NULL;\n\no print(&i); //ok\n\na print(p); //ok ‘\n\n- v~m<q>: W A sum“ IIHIII Error Handling\n\no Use asserts\nu Exceptions should monitor — resource problems\n\nu Exceptions can deal with IO difﬁculties such as\nimproper input\n\na Exceptions should not be used as a “goto”\n\nSHNHI lliilll rC++ E03-C   \n\nAsserts &\nExceptions Error Handling\n\no Use asserts\no Exceptions should monitor — resource problems\n\na Exceptions can deal with IO difﬁculties such as\nimproper input\n\no Exceptions should not be used as a “goto\"\n\nSHNHIAIIHIII Asserts &\nExceptions 7\n\nC++ E93‘ C  ‘  5 :3\n\n \n \n\nAsserts &\nExceptions\n\n \n\nL‘ Error Handling\n\n- Use asserts\no Exceptions should monitor — resource problems\n\na Exceptions can deal with IO difﬁculties such as\nimproper input\n\na Exceptions should not be used as a “goto\"\n\nSHNHI IIHIIZ rC++ EQEC  i.._”‘;’;a.‘,.é‘;‘:\n\nAsserts &\nExceptions\n\n \n\nL‘ Error Handling\n\n- Use asserts\no Exceptions should monitor — resource problems\n\na Exceptions can deal with IO difﬁculties such as\nimproper input\n\na Exceptions should not be used as a “goto\"\n\nSHNHI lllilll rC++ f®E'C 2”‘: as: \n\nAsserts &\nExceptions Error Handling\n\n- Use asserts\no Exceptions should monitor — resource problems\n\na Exceptions can deal with IO difﬁculties such as\nimproper input\n\na Exceptions should not be used as a “goto\"\n\nSHNHI lllilll Va\n\n++ f®E'C     \n\nAsserts &\nExceptions Asserts & 70\n\n++ f(BE\"C §'3‘:’::,e‘;‘;’:a *\"‘-\n\nAsserts &\nExceptions\n\n \n\nL‘ UNIVERSITY OF CALIFORNIA\n\nNI H|Jl\n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/calcsing/Lecture 53 Absolute Conditional.mp4",
    "id": 835,
    "text": " ’ gem J:Rc~r a PI\\ ERQE Lo1\\I\\1:Rc~£ Pl\\ERC~.E Lo1\\I\\ERe£ m P!\\ I:RQ~.E\n\nZ<-*>\"?1%§E17‘%\n,, 0 an )\n\nW n l\n23-” 1n(1n*<mn>))\n\nien\": ‘f’-\"\":‘Z\n/l-0 1/rf+ ‘In +l QOI\\|\\ ERGE Pl\\ ERQE\n\n<»<:\n\nV\\ 1\n2\"” 1n(tr<(lr@n)))\n\nr\\=2 OOOOICCIOOOOOIOOIOIOOOIOCOCOOOOOIO ‘+u“£1§1\\M1\"\\‘° \nTﬁcn «u‘[1<;\\u1\"1a\\:L: \n1 ALTERN %TlNL3 AP:-x.IuBuTy:ﬂ? W K ‘\nuse or us: ALT LRNQ [Nb\nusmmrss: APPLI(ABLIT>’1£? A _, I _\nuse or usE=i’?i}::‘ ALT ERKN [Nb\nUSEFLLNESSS €§Z'E\"3}B”u3§§ikikik ,«u’E1x>\\vmNe\nuscrumzssz ifrikﬁr {TING\n\n:(_,,u wt\" «mm\nH O m <;osH(n§)\n\n96 H ‘\nEH’ 1n(ta(\\rin>))\n\n9° _ mi rf—:>n’+Z\n’|Z=D( \" {TING\n\nZ<-*>\"?1%§S7\"%\n,, 0 an )\n\n“’ u 1\n£3-U un(xnmn>>)\n\niﬂfj rf—:>n.’+Z\nA20 7/\\’f*‘1\\’l‘+l AT|NL:\n\nru cosH(n§)\n\nEH, 7e ww Zen ‘\n\nr|:2 (C1\\‘\\ 1:KC~[.§ Zen\n\nr\\=1 \"7E}7H\\’lTlOl\\‘ s‘E)W\\\\'WCv\\‘ .WZFH\\'\\T|O1‘\\'\n\nABSOLUTE T\nCONVERGENCE\n\n_\n© mzrnxrmolxl\nABSOLUTE\nQ\n\nCONDITIONAL G,\nCONVERGENCE\n\n|3n| ‘.‘1\\El{G£$ D1:Fn\\'m01\\|\n\nCONDITIONAL G,\nCONVERGENCE .WZ)-‘H\\'\\T|O1‘\\' DOES THIS SERES CONVERGE ?\n\nGIVEN\nsmusucs Ea» - 2 ‘an[\n\n(3 ) CDNVERGE? couvzwaz?\n\nDIVERGENT .‘ 5 A 8 I\n-at-I)\" =l-l+l-I+l-l+l-I+I-l+--- @\nIi\n‘$0! : 1;»\n\n@ eempm 1:. \nF. I-1+l-I+l-I+l-I+I-1+-~\n\nQ-—n\";—1,. ALTERNATING \n\n@ EQNDFFI «A ;  P\nF, y\nE»\nme\nA»\nWW6\n.m—\\bLn\n\n1?\n\n‘K0\n\n \n\n@ F\n\n\\ECAL\\_ n\nml’\n\nL\nJ\n\n\\..|—\n: I\n\nN\\- -¢|— 4|-\n+\n\nml’ IHZOREMI\nABSOLUTELY CDNVERGENT SERIES\nON BE  D AT WILL...\n\nTHESUMFEMANSCONSTANT\n\nNOT so FDR conpunoww ’\ncowvmcmr SERJES G CALCULUS: SINGLE VARIABLE\n\nRobert Ghrisl\n\n‘HIPS://\\\\’\\\\ “ .4..u».u-.. nrg/umrw/t.\\‘L~\\l!g Sciences ‘_ L‘ 1”\n12': E9’ Sciences"
  },
  {
    "path": "E:/Coursera/compilers/10 Cool Type Checking/10 - 4 - 10-04_ Self Type Usage (6m29s).mp4",
    "id": 1174,
    "text": " Compilers\n\n‘ ) Self Type Usage\n\nmmmmm en Self Type Usage\n\nThe parser checks SELF_TYPE appears only where a type is\nexpected\n\nBut SELF_TYPE is not allowed everywhere a type can appear:\n\nclassl inheritsl’ {...}\n~ T, T’ cannot be SELF_TYPE\n\n=:r_\nAttribute x\nT can be SELF_TYPE Self Type Usage\n\n3. let x :T in E\n0 T can be SELF_TYPE\n\n4. new T\n0 T can be SELF_TYPE aM,u:v~“\"\n0 Creates an object of the same”type as self\n\n5' m@.T(E1I\"'IEn)\n0 Tcannot be SELF_TYPE\n\nu ma Self Type Usage\n\n6. m(x_::l’) :l':{...}\n0 Onlyl’ can be SELF_TYPE l\n\nWhat could go wrong if T were SELF_TYPE?\n\n— c|assA{ z:omp(x : SELF_TYPE) : Bool {...}; };\n\nclass B inherits A {\nb : int;\n—7comp(x : SELF_TYPE) : Bool (  IAH); );\n\nlet x 2 A 4- new B In ...écomp( ; \n\nAlax um"
  },
  {
    "path": "E:/Coursera/compilers/10 Cool Type Checking/10 - 5 - 10-05_ Self Type Checking (10m00s).mp4",
    "id": 1175,
    "text": " Compilers\n\n1 ) Self Type Checking\n\nxxxxx en - Formal parameters cannot be SELF_TYPE\n\n- Actual arguments can be SELF_TYPE\n— The extended 3 relation handles this case\n\n- The type To ofthe dispatch expression could be SELF_TYPE\n— Which class is used to find the declaration of f?\n— Answer: it is safe to use the class where the dispatch appears\n\n2.: sE_sL1\nM(g,,4‘-5: c \n0,»«.c »- ea--$31.3\n\nAlex ma\n\nSelf Type Checking - If the return type of the method is SELF_TYPE we have:\n\n0.M'C F '50 3 To\n\nOVMVC F en I Tn\n-\\T0 5 T\n~'-> M T f) = (T,’,...,T,,’,SELF_TYPE)\n\nlsisn\n\n \n\n0:M;C ‘V eO@I'f(e1:-~-Ien) 5 To\n\nSelf Type Checking - Why is this rule correct?\n\n- If we dispatch a method returning SELF_TYPE in class\n___T, don't we get back a T?\n\nTo 51'\n- No. SELF_TYPE is the type of the self parameter,\n\nwhich may be a subtype of the class in which the\nmethod appears\n\nSelf Type Checking - There are two new rules using SELF_TYPE\n\n0,M,£ F self : SELF,TYPEC\n\n0,M,C F new§ELF_TYPE : SELF_TYPEG\n\nAlex Aiken\n\nSelf Type Checking Self Type Checking Self Type Checking SELF_TYPE is a research idea\n— It adds more expressiveness to the type system\n\nSELF_TYPE is itself not so important\n— except for the project\n\nRather, SELF_TYPE is meant to illustrate that type checking can be\nquite subtle\n\nIn practice, there should be a balance between the complexity of\nthe type system and its expressiveness\n\nAlex Am\n\nSelf Type Checking"
  },
  {
    "path": "E:/Coursera/compilers/12 Code Generation/12 - 6 - 12-06_ Object Layout (23m56s).mp4",
    "id": 1188,
    "text": " Object Layout\n\n00 implementation = Basic code generation + More stuff\n\n00 Slogan: If B is a subclass of A, than an object of class\nB can be used wherever an object of class A is expected\n\nThis means that code in class A works unmodified for an\nobject of class B Compilers\n\n(+) Object Layout\n\n»»»»» en Object Layout\n\n—— - How are objects represented in memory?\n\n'- - How is dynamic dispatch implemented?\n\nu Am Object Layout\n\n3 5\nOffset 9 4 8 12 16 20 E :2‘\n[4\nClass\nA A_tag C5‘) I _a_ E _3u'nK2n‘4:I§\nb\nB Bta 6 * a d ‘T F‘\n-J - — — - .ca.;.,.M§\nL\nC C_ta£ é * 2 3 9 3 Object Layout\n\n- The offset for an attribute is the same in a class and all of\nits subclasses\n\n— Any method for an A1 can be used on a subclass AZ\n' Consider layout for An <  < A3 < A2 < A1\n\n \n\nHeader A, object\nA, attrs. A129]-fen\nA’ ams A, object\nA; attrs\n\nAlex mm Object Layout\n\n0355A‘ Class C inheritsA(\na: |nt<A0,' ‘ _ ‘\nd:lnt<A 1; c‘lnt< 3'\n-9 f():|nt{a<-a+d); h()I'\"t{a<-3*“:\n); );\n\nClass BinheritsA(\nb:Int<— 2; - '3-7‘\n\n_..) W Inna ); —- '2 Considerthe dispatch\n\ng():|nt(a<Aa-b): eaf\n):\n\nAlu um Object Layout\n\n- To implement a dynamic dispatch_e._f_(_) we\n— Eva|uate_e, giving an object_>£\n— Call D[Of]\n\n- D is the dispatch table for x\n- In the call, se_if is bound to x\n\nu mm"
  },
  {
    "path": "E:/Coursera/compilers/14 Local Optimization/14 - 2 - 14-02_ Optimization Overview (13m37s).mp4",
    "id": 1194,
    "text": " Compilers\n\n‘ ) Optimization Overview\n\nam ma.\" Optimization Overview\n\n- A basic block is a maximal sequence of instructions with:\n— no labels (except at the fi n), and\n— no jumps (except in the last instruction) L: 4-\n\n/iii\n- Idea:\n\n— Cannot jump into a basic block (except at beginning)\n— Cannot jump out of a basic block (except at end)\n\n— A basic block is a single—entry, sing|e—exit, straight—|ine\ncode segment Optimization Overview\n\n- A contro|—f|ow graph is a directed graph with\n— Basic blocks as nodes\n\n— An edge from block A to block B if the execution\ncan pass from the last instruction in A to the first\ninstruction in B\n\n- E.g., the last instruction in A is jump LB\n- E.g., execution can fall-through from b|ockA to block B Optimization Overview\n\n     \n\nLt\n\nif-i < 10 goto\n\n   \n\nAlex mm Optimization Overview\n\nIn practice, often a conscious decision is made not to\nimplement the fanciest optimization known\n\nWhy?\n\n— Some optimizations are hard to implement\n\n— Some optimizations are costly in compilation time\n— Some optimizations have low payoff\n\n— Many fancy optimizations are all three!\n\n608“ \n\nAlex mm"
  },
  {
    "path": "E:/Coursera/compilers/18 Java/18 - 4 - 18-04_ Java Interfaces (8m38s).mp4",
    "id": 1214,
    "text": " Compilers\n\nJava Interfaces\n\n \n\nAlex mm Java Interfaces\n\n- Dispatches ®_f(...) where e has an interface type are more\ncomplex than usual\n\n— Because methods don't live at fixed offsets  '\ni >\n\n' One approach:\n\n— Each class implementing an interface has a lookup\ntable method names —> methods\n\n— Hash method names for faster lookup\n- hashes computed at compile time"
  },
  {
    "path": "E:/Coursera/compilers/18 Java/18 - 7 - 18-07_ Other Topics (14m28s).mp4",
    "id": 1217,
    "text": " Compilers\n\n‘ ) Other Topics\n\nAlex mm Other Topics\n\n- Java is well done\n— By production language standards, very well done\n\n- Java brought many important ideas into the mainstream\n—> — Strong static typing\n-—-> — Garbagecollection\n\n- But Java also\n\n— Jncludes features we don't fully understand\n\n— Has a lot of features\n :—\n\nAlex mm"
  },
  {
    "path": "E:/Coursera/compilers/9 Semantic Analysis and Type Checking/9 - 8 - 09-08_ Typing Methods (8m12s).mp4",
    "id": 1261,
    "text": " Compilers\n\n1 ) Typing Methods\n\nmmmmm en Typing Methods ° In Cool, method and object identifiers live in different\nname spaces\n\n— A method@ and an objectﬂg can coexist in the\nsame scope\n\n- In the type rules, this is reflected by a separate mapping\n\n_l\\_/I for method signatures H5‘- r¢,..H-\n% M(_c,_f) = T1,. . .Tn,TM)\n\nmeans in class C there is a method f\n‘% f(X15T1:- - -:Xn5Tn)1 Tn+1\n|J§_ _I\n\nTyping Methods O,M\nO,M\n\n \n\n<‘vM(_Ti,f)\n‘*7 T-£‘_|'i_rfor1Si£n\n\nO, M F eo.f(e1‘,  ,e,,): T;\n\n \n\n[Dispatch]\n\nMu um\n\nTyping Methods : (T1’r' - ~Tn'$E+1)\nTiSTi.for1SiSn\nO, M P e0@T.f(e1,  ,en):\n\n    \n \n\n[Static Dispatch]\n\nMu um\n\nTyping Methods ° For some cases involving SELF_TYPE, we need to\nknow the class in which an expression appears\n\n- The full type environment for COOL:\n— A mappingggiving types to object id's\n— A mappingﬂgiving types to methods\n— The current class;\n\nTyping Methods\n\nu Am The form of a sentence in the logic is\n\nExample:\n\n [Add]\nO,M,C |- e1+e2: Int\n\nTyping Methods\n\nu Aiken - The rules in this lecture are COOL—specific\n— Some other languages have very different rules\n\n- General themes\n— Type rules are defined on the structure of exgressons\n— Types of variables are modeled by an environment\n\n- Warning: Type rules are very compact!\n\n \n\nTyping Methods"
  },
  {
    "path": "E:/Coursera/data-structures-optimizing-performance/04_interfaces-linked-lists-vs-arrays-and-correctness/02_abstraction-interfaces-and-linked-lists/08_concept-challenge-drawing-linked-lists-second-attempt.mp4",
    "id": 1536,
    "text": " Linked List Implemenfoﬁonz\nConcep’rChc1||enge 2\n\nW Concept Challenge: Procedure\n\n- Pause Try to solve the problem yourself\n\n- Discuss with other ieorners (if you can)\n\n- Watch the UC San Diego leomers video\n\n- Answer the question ogoin\n\n- Confirm your understanding with our expicmotion public scauc void main(St:inq[] args)\nclass SLLNode<E> I (\n\nSLL“Qde(E) next, SLLNade<Integez> n0 =\n5 data, new SLLNcda<Integez>();\nSLLNode<Integer> n1=\npublic SLLNode() ( new SI-1-N°de<Inte9er> (1,110):\nu.1,,,,e.¢ : ,,.,u, SLLNode<Integer> :12 =\nI:his.daI:a = null; new sI..LNode<Im:egez>(2,na):\n; 1\npublic SLLNode(E chenaca) ( Whuvdoes the H5! at nodes look llke after muln runs?\n\nthis.data = themnza:\n)\npublxc SLLNode(E thebata,\nSLLNode<E> pzevuode) (\nth1s(theData) ;\np::vNode.next = this:\nthismext = prevNode.next; J}.\n\n, .\n\nJ/.f‘  7 7 ‘\n SI “ I\n» 3\n\n3\n\n \n \n\n?~ T , My I\n\n\\ snuludet) <\n,,.,. . nun,\n.4... . nun.\n\nsummer: thehu) I\ndntn anew,-\n\nSLYJIAGI :1 u..n.u.\nsu.I4udu<:> p=.~m=a.: I public snulcdel) 4\nclunnuxt - mu,\nm. a... . null.\n\n:\n\nmm suuuaem uuenuub :\nm. m. = ....o.:.,-\n\nFax.» sznlnau :1 u..n.u,\nsu.uua.q:> Pnvltad-I\nm-zmuuu),\nyxnvﬂndn nnxt = u.\ncan nu: . pr-Wad. n-It: x .‘\n'u'--\n' n\n3‘? 3\n\nI\n\nQ clan! su.Node<z> (\ns1..v..uu¢n¢> nlxt:\n2 an ,\n\n,..n,m snuled-K) <\nchannuxt - um,\num-.3“. - null.\n\n:\n\npm” sumaaem uzennu) :\nu... an = a..o.:.,-\n\n»\n\npxlhlxc sum :1 u..n...,\n\nsLuladu<1:> Pruvﬂad-I 1\num (thunu) , (\nSLLNode<Integer> no\n\nclass SLLNode<E> I\nSLLNode<E> next;\n\n  \n  \n   \n  \n  \n    \n \n \n       \n \n   \n   \n \n     \n\n \n\n \n\n5 data, new SI.LNoda<Inteqe\nSLLNode<1nteqex> n1=\nPublic 5,_,_N°de() ( new SLLNode(1‘m’1V\nthilnext nun, SLLNoda<Intege2> n2\nthiS_da:a null; new SLLNode(2 mu; .-\n; )\npublic SLLNode(E thebata) (\n\nthi.s.data - theData;\n\n)\n\npublxc SLLNode(E r.heDaI:a,\nSLLNode<E> prevﬂode)\n\nthis (:heDa:a);\n\nI:hi.s.next = pzevnode next:\n\npreVNode . next mus;\n\n(\n\n}\n\npublic static void main(St:ingI] atgs)\n\nr>(): SLLNoda<Integer> n2 = new SLLNoda(2,n0);\n\npuhlxc SLLNode(E I:heDaI:a,\nSLLNode<E> pzevuade) 4\nno I this(theDa1:a) ,-\npzevNade.next-. = nus.-\nthis . next = ptevllode . next;\n\n   \n \n \n\npzevllode\n\nM I!\n\nn2\nmus"
  },
  {
    "path": "E:/Coursera/game-development/04_designing-and-coding-gameplay-systems/01_programming-in-unity/02_unity-programming-concepts.mp4",
    "id": 2356,
    "text": " EEEEEEEEE BY\n\nBRIAN WINK] mcmmm s'rA'rEnr.H m\n\nUNITY\nPROGRAMMIN\nONCEPTS\n\n‘wr Evian Winn\n\n; Medxa &lnfovmat1or\\\nMnchxgan State Umverswty\n\n5AMEnEv.nsu.Enu OBJECT-ORIENTED THINKING\n\n> Everything is an object \n> Objects have properties  W\n(aka, variables) '”\n> Objects have methods \n(aka, functions) \n\nAA GAMEOBJECTS AS OBJECTS MICHIGAN snrznmx E\n\ncoMPo_NEN1's As OBJECTS\n\na mwmm —\n\n \n\nxfum. vTo 2% swi-)1\nlalhn nsmmnon\nV,-awn... ﬂu. , ~\nms...“ “T . - -\n..«...sa.«.. :2 ‘ -.,.a ,\n.....u. .3 x\n\\n-Ihnmwn :2\num.-rm. .....; '\n\n   \n\nno. a.....-. ».«.m........., a\n1 4 o... 1.. um: twin 3}\nT tmrmcmnxr o\nD A\no\n\n   \n\n\"MC MICNIGAN snvr: \\ nm E\n\nCOMPONENTS AS OBJECTS\n\n \n\n \n\n \n\nxiswsu vf. zjamyz\nIaﬂu own-“‘*‘\n‘nu.-ua. ﬂu\n(msmwm m »\nn.«.m.«u D\n.........\n\n      \n\nInn Ucnnwu\nmm rubs nmwmnyha\nmm»... a.\n\nnil\n\n \n\n\"\"*‘»....«n»..m..... .\n\nxivuunvf.\n\n’u»iu.u~..\n\nmxuu... Lou .\nlnoan-tau D\n\n. mm\nIn: mu... D\n‘ﬁn-\n\nu-—s.m.u-awn ST\n.:..m..nm. .\n\n     \n  \n \n \n  \n \n    \n  \n\nz *4 mm\n:2 mm.\n\n \n\n  \n\nM\n\n \n\n \n\n \n\nan Arxmrhvnle ».u. .....:...m _oJ\n\n7;-1 oauu.-nxvwusuin ﬁt\nv:umm.«.. o CLASSES MICHIGAN sure \\ nu . Hm \\ »\n\nCLASSES\n\n  Cocl< Object\nAg A\n\n \n\n(Jock Oass\n\nClock Object p MICHIGAN sTA1Eur.n\\Er: wv\n\nPREFAB = CLASS\n\n*4-sm. mmalu magi\n\nx»....¢ - an )2. an :a- o....- ..‘\n\n      \n\n        \n\ncmu.m»\nm-aw.» um\nxoumu\num um.\n\n» Emwnnnum\n\nCam Vi\n(mu m\nCum m\n(o n x n\nCum\n\n[vuI§NII1m\n\n» um-:.m.\n\n» c.mm¢.m.\n. z,.....a..\n\n. En=rWSvIIm:rx\n» c.mx.u..m MICHIGAN STATEHNM. spam\n\nPROGRAMMING\n\n55:6’ mcmmm sure \\ um Erwwrv\n\nSCRIPTS AS COMPONENTS\n\n   \n\n> Audio\nviscruns\n\nIQ IisI:TugQtMnmer\n> Texnnras SCRIPTS AS COMPONENTS\n\no lnspxtnv\n\n    \n    \n\n   \n \n\n \n\nU Cum Dian: -\nnu uumu Ta um. mu...» H\nVA tn-alum\n\n \n\n0.\nlumen x o ‘v o 19\n\n   \n\n>ﬁA-nib um. x[:|Q vq%_ z1—1u\nvﬁsalpcs sak xT[:, 4:1; zfyx\n\nIIs|:Tug2tMmI:r v|a_m..manm.¢<..,., 0.\n>E'rexwres scrim ‘-1.!-s|<T-rv«,|I=-vv I\n\n. \\‘\n1| public class BasicTargetMcver :\n\n \n\nMICHIGAN su-rsnm m\n\nANATOMY OF A C# SCRIPT\n\n‘using UnityEngine;\n2 usmg Sy5tem.Ca1'lect1cn5;\n\n \n  \n  \n  \n \n     \n    \n   \n \n  \n \n\nMuncﬁehavmu r {\n\npublic mm dnspm : true;\npublxc flea! spsnspeed = nun;\n\npmme Transfurm mover;\nvoid Startl) {\n\n// go: a reference La nus gameﬂbjczt‘\nmover = gameobyecmransform;\n\n, ans ram mmponenr\n\n}\n\nvom Update U {\nxf maspim {\n\n// rotate around L/we up ans :7! me game-Dbjeri\n\nmuver.RntatelVecmr3.up * spinspeed >« T1me.de1taTune); 5 .4.c»..G.\\..smm.\\,,\n\n \n\nEVENT-DRIVEN\n\nOther Events:\n\n1) Update Fixedupdate\nOnCo||isionEnter\nGame OnTriggerEnter\nOnMouseDown\nInltlallzatlon Event OnMOuSeUp\n1) Awake LOOP\n2) OnEnab|e \n3) Start 2) LateUpdate \n\n*4?\n\nhttp //docs umty3d com/Mama!/Executxonorder html REFERENCING GAMEOBJECTS\n\nthis.gameObject — gameObject\n\n(1\n\n'4:\n\nID. MICHIGAN suvsnm »\n\nREFERENCING GAMEOBJECTS\n\npublic Gameobject targetl; :|,_pUb“C Variable\n\nprivate Gameobject target2;\nprivate Gameobject target3;\n\nvoid Start 0 {\n// targetl :5 set 1n the edltur\n\n\"\"99\"-Fi\"°\"'E\"°\"Y\"’= Find it in the scene\nta rget3 . FindWithTag (\"Player\") : ‘\n\n// make the gameobjects znacnve (mv151b1e)\ntarget1.SetActive(fa1se):\ntarget2.SetActive(fa1se):\ntarget3.SetActive(fa1se): MICHIGAN su-rsnu »\n\nREFERENCING COMPONENTS\n\n. Cube DS|:lic V\nT39 llllgiud G Layzr Dclauli ‘ ‘ ‘\n\n1 gameobjecttransform\n\n \n\nvoid Update () {\n\ngamenbject.transform.position.x += 1;\n}\n\nvoid Update 0 {\n\ngamenhj ect.tran5form.‘|’rans'late (1,I,o);\n} REFERENCING COMPONENTS\n\ngameObject.GetComponent<TYPE>()\n\nIi}. MICHIGAN snnznm »\n\nREFERENCING COMPONENTS\n\nprivate Rigidbody rb:\n\n     \n  \n \n  \n \n    \n\nvoid Start () {\n// get a reference to the Rigidbody component\nrb = gameobject.GetComponent<Rigidbody>():\n\n// turn gravity on\nrb.useGravity = true; PROGRAMMING IN UNITY MICHIGAN surzwum. .n\n\n \n\nPROGRAMMING IN UNITY\n\nGood documentation (use it!)\nvhtt 2 unit 3d.com learn\n\nOnline Unity Community\n>http:/ unity3d.com supportzcommunity WHAT’S NEXT"
  },
  {
    "path": "E:/Coursera/hadoop/05_spark/03_lesson-3-job-scheduling-actions-caching-and-shared-variables/04_broadcast-variables.mp4",
    "id": 2479,
    "text": " Broadcast Variables ; Tf:‘E1?n’s?fe‘r-jl:J’s?t ?o.nécie per E Acuttar\n. Efficient peer-to.-peegr t’r’anSfe.r . Tfansifer-j L-J31 fo‘nc;j_e= per E .cuter\n. Efficient peer-to.-peer t7rariSfe¢r config.va|ue Broadcast variable example\n\nFor example large configuration dictionary\nor Iookup table:\n\nconfig = sc.broadcast({\"order\":3, “fi|ter\":Trué’\n\nconﬁg.va|ue config = sc.broadcast({\"ordér\":3, “fi|ter\":True}) \n\nconﬁg.va|ue conﬁg.va|ue"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/01_initiation-a-la-programmation/03_bases-de-programmation/02_introduction.mp4",
    "id": 5303,
    "text": " :_¢n'r1u\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit ei Jean-Cédric Chappelier “(WW 1IVIII‘1IIWIIHIIINIIH||lW|||l1|lWVlll1l|H\n\nIll}lllllllllllIINIIUIIIIIINIIlllﬂlllllllﬂ virtuellep\n\nC PU\nlllllllllllllllVIN||ﬂ|||l||N||llllllllllllll Il|’ll_I réﬂéchir au probléme;\nconcevoir Ia sequence d'instruc1ions\n\n   \n   \n\ntester Ie programme sur la\njmachine virtuelle\n\n   \n  \n   \n\nécrire un programme Java :3\npariir de cette réﬂexion\n\ncompiler Ie programme Java\npour créer un programme en\nbytecode I(|’ll_I rs-.-.-r.~_—.s:\n\n \n\n \n\nI-'-. I’-umx... 4 nubn: class Meuduorld\n\n«us... Is..- Sm Mu: duss ueuauorh:\n(\n§- pan: mu: ma IIain(St.ring|:| args)\n(\nI 51\nI\n)\n\n \n\nIn-an \\-—..\n\nr..._. mu n-.....4...\n\nll: class Nellauorld\n\n  \n   \n \n\nH: mm: Md IIain(StrinqD args)\n‘]_symq.o‘u¢.pr1nt|u;:m|o, prim‘);\n\n\\-as |u...'. um has um... um wbn: class Nellouorld\n{\n- pubuz walk Md lInin(Stringﬂ args)\n\nI ( 9:H==iw¢vI‘iM:l(lI¢'l' \"In\n1, ~ -‘ I|“.1o«.Ivr I\n, ‘$1\n\nin... lam... um ram...-\n\n \n\nwill: cluss Melwuorld\n(\n\npuma um: um nain(String|:| ms)\n(\n9yn:u.ouc.prin:ImrIh!ue., uur\\dl');\n\n   \n\n \n\nIII -.;mrm=.n- I(|’llI"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/01_initiation-a-la-programmation/03_bases-de-programmation/03_variables.mp4",
    "id": 5304,
    "text": " IIPIII réﬂéchir au probléme;\n\n    \n\ntester Ie programme sur la\nmachine virtuelle\n\n \n\n  \n\ncompiler Ie programme Java\npour créer un programme en\nbytecode Fm‘!\n\nopérent sur\n\n/'\\.\n\ntraitements  j\nV >\n\n$2,, , \\,ur_ _ \\Ia-P‘ \\o\\e\n\"' ‘4\"\"\"“\"“ L‘ ‘ Q Inﬂuencent ‘L\n\n \n\n'5, 5% .. L7.+\\_,_): +5 zo\n\n \n\n<S\\“‘”‘ S; :,o\n \\ =-‘3\nz\n\n‘1.«\\\\<:):-r SA-u ‘°v~\nShaw Ill’ll-\n\nUnﬁosséde 3 caractéristiques:\n- Sor—qui est le nom par Iequel la donnée\n\nest désignée;\n- Sorgqui déﬁnit de quel « genre » est la donnée\n\nconténue dans la variable; ?.::f. ¢ .».....x;«s\n\n- Sa- Par exemple, si la donnée est un nombre, sa\nvaleur pourra étre 123 ou 3.14 nu: clan Lesvmams (\npm: mm: val! nilI(StrlngE| ms) (\nin: and». . 4; Une variable non Initlallsée ne peut étro utlllsée.\n\nPar exemple: “Glue __._ \"\nﬁtarre\n_> int ncarrei\n:5 *\nIII-IIIIIQIII-II-IIIIIU:\n\ndonne une erreur a la compilation:\n\nvariable ncarre might not have been initialized\nSystem.out .print1n(nCarre) ; n\n.5\nn -\n\nint n\n\ndouble x 1.0 €V\\‘k‘{Q K‘\n\n\\> A: uM,‘,R_\n\n2:\n\n5% -my\nDéclaration de variables\n\nD'autres exemples de déclaration:\n\nintm= 1;\n\n            \n   \n \n\non peut déclarer plusieurs variables\nsimultanément. Il|’ll!\n\nFypes de variables\n\nLes principauﬂontz\n\n— int, pour les valeurs entieres (pour integer, entiers en anglais);\n— double, pour les nombres a virgule, par exemple 0.5\n\net aussi:\n— char: pour les caracteres (AIAZ etc.); ;7'W.’%€; .3 ‘J.’ 2’\n\n    \n\nLes pa in;r;:a\\ xx types éléinemai\n\n \n\n. mu n‘ has valeurz» -\npour le\n\n1 angigmsj\n\n   \n\nW31 I(V‘llI '.‘.\"\"!\n\nAffectations\nL'exécution d'une affectalion s \n\nGD\n\n(4) ..\nT 4\nr1Carre = n * 1'1; “\n\n‘F./C:J\\c En mathématiques:\n\n.—4>b=a+1\n\n_———~\n\n \n\nsigniﬁe que tout au long des calcul\n\nAutrement dil, quel que soit a, b sera toujours (!.ga !a > 1\n\nEn Java:\n\n \n\n'1'“! Qéclaration dej W\n\nll peut arriver que la valeur d‘une variable ne doive pas changer aprés\nPinitialisation. Dans ce cas, il faut ajouter Ie mot-clé final devant Ia declaration:\n\nfinal type identificateur = valeuriinitialei\n\nPar exemple:\n\n—~ final double E T\n\nDans ce cas, on ne peut plus modiﬁer la variable:\n\n   \n\nvITEssE_DE_LA_LUMIERE — 100; // erreur\n\na.w,r\\a)m-'."
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/02_structures-de-controle-1-branchements-conditionnels/01_semaine-2-structures-de-controle-1-branchements-conditionnels/01_branchements-conditionnels.mp4",
    "id": 5307,
    "text": " IIMI\n\nJusqu’ici, tomes Ies instructions des programmes étaient exéculées, el Ies unes aprés\nIes autres.\n\nLes structures de ccntrole permettent de changer ce comportement.\n\nII y a 3 structures de conlréle:\n- Ies branchements condﬂionnels,\n~ Ies itéraﬁons, at\n~ Ies boucles conditionnelles.\n\nNous allons commencer par la ui permet de s_a_u1gL\n du programme s cen nes ontrempies,etquiu1i|isenHe\n\nmot-clé i f. 44 (C.<2.~1>) { V\nBax V/Z/HE\n\nJ 2153 4\nBLUC Fm/55\n\n,, \\/KPH/5\n ID\nSys em.out.pnnc1n1\"vo::;e nombre est plus pent que 5.\");\n\nDelse\nSys em.ouv;,pnnt1n¢\"voc:e nombze est plus grid cu egal a 5.\");\n\nD 7-79 (/55- FEM\n\nLes accolades dellmrtent un bloc d Inslrutmons\n\n \n\nt, \n\nSys\\:em.out.px:1nt1n(\"Votre nombze est plus grand cu egal a 5.\"); Les choix imbriqués\n\nL'instruc1ion if suit donc le schéma:\n\n1f (conditionl)\n1;? ‘ @ vHu'£4-’\n(D\n\nii \"Emotions flgurant dans (es blocs sent absolument quelconques. ll peut done s'agir d'au1res Supposons:\n\n   \n\n1f 1x — Y) (\n1f 1)’ == 2) (\nsystem.out.pnnc1n4\"Les trans valeurs sont ega1es.\"),-\n) else (\n\nSystem.out.print:ln1\"seules les deux premleres valeurs son: ega1es.'')7\n}\n\n} else (\n1f 1x 2) (\n\nSystem.out.pr1nt1nl\"seules la leze et la 3eII\\e valeurs sent ega1es.\")7\n) else (\n\n1f (y == z)(\n\nSystem.out.pxint1n(\"Seu1e5 les deux dexnieres valeuxs son: ega1es.\"):\n) else (\n\nsyscem.out.pn‘n:1n(\"Les trols valeurs sont d1££exentes.\"i:"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/02_structures-de-controle-1-branchements-conditionnels/01_semaine-2-structures-de-controle-1-branchements-conditionnels/02_conditions.mp4",
    "id": 5308,
    "text": " IlPll_I I(l‘|lI E‘-I(_l’ll”_' IIPIII\nAHBHHDIII ‘ \" 1\n\nLbpérateur our tester si deux valeurs sont égales s'écril avec deux\nsignes ég\n\nUn seul sign.eprésen_\n\nPar example. si on veul tester si la variable 11 est égale a 5, il faul\n\nécrire: I\n\nif (3 == 3) ‘—\net non as: Y‘ ’ 5 .\nﬁe}:-zc cam-‘\négal é\n\ninférieur ou égal é\n\nsupérieur ou égal a‘\nI: different de\n\nOpérateurs cl lnt a: 1;\n\n1ntb—2: W\nrx\n\n \n\nKr“;\n1: 1a 1:) (\n\n-—~ system.out.print1n1\"cas 2\") ; A\né_\n\n   \n\n) else (\nsystem.ouc.prin:1n1\"cas 1\");\nfans;\n\nZT\n—-D1f12*a!-b){\n\nSysten\\.out.pr1nt1n(\"b est different du double de 3.\");\n\nl\n.—o\n\nafﬁche\n\nC35 2 ’’’’’’’ 1 K Les opérateurs logiques\n\nL'opérateur logique ! -\n\npar exemple, Ia condition ,\\ (“L\n\n1%\n\n‘J < b) font.\n‘_~L7§ §f\\<.<.\n\nestvraie si (a < 10) eslfausse.etfausse si (a < b) estvraie.\n\n \n\nNous verrons des example ‘"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/02_structures-de-controle-1-branchements-conditionnels/01_semaine-2-structures-de-controle-1-branchements-conditionnels/03_erreurs-de-debutant-le-type-boolean.mp4",
    "id": 5309,
    "text": " ' M\" Ears classiques\n\nLe test d'égaIlté s‘écrlt f, at pas5 “jg M\n\n~91f(a:l)//!!!€' {<P(q.::~O\n\nn'est pas accepté par le compilateur. System.out.prim:ln ( \"a van: 1\"); On peut initialiser des booléens é I'aide des constantes false et : rue.\n\nOn peut uliliser des booléens oomme des conditions. Par exemple:\n- on peul uliliser des opérateurs logiques (as, at I) entre booléens;\n\n~ on peul uliliser un booléen comme condition dans u a\n\n_>:nra=1,\n\n \n\nr} b:..;ledn\n\n     \n\nC\n9 bomeau d '7’\na I‘ GEN E\n4...;\nI L\n'7 ‘' Kg)’ ‘ +~uJ., M ‘ +_e‘\n\n-9 System.out.p:intln{\"e vaut true\");\n} ' M ’"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/03_structures-de-controle-2-boucles-et-iterations/01_semaine-3-structures-de-controle-2-boucles-et-iterations/01_iterations-introduction.mp4",
    "id": 5310,
    "text": " : ‘rm’ ‘ La boucle for\n\nUna boucle 2: r permet de répéter un nombre donné de fois Ia méme série d'instructions.\n\nPar exemple, si on fait:\n\n}\n\nle programme afﬁchera Ies carrés des 5 premiers entiers:\n\n_1uz(1n: 1 : 0; 1 < 3.-\n»;System.ouv;.pr1ntln(\"le carre de “ + 1 + \" vaut \" + 1 * i):\n\n++i)\n\n(\n\nIEPHI\n\ncarre\ncarre\ncarre\ncarre\ncarre\n\nde ivautﬂ\nde A vaut \\1_\nde 3 vaut J1_\nde 3 vaut 9\ndei vaut L6) M0?-Clé fo r\n\nIfPIlI\nCondition:\n\ntestée avant Fexécution de chaque tour de boucle.\nSi elle est fausse, on sort de la boucle,\n\n{Eu\n\n++L,' if“?/f/'\n\n \n  \n\n(\"le Carr de “ + 1 + \" vaut \" + 1 * ii;\n)\n\nDéclaration er initialisation: Incrémentatinnz\n\nn'est exécutée qu'une seule fois_ exécutée é Ia ﬁn de chaque tour de boucle. Elle permet\navant d'entrer dans la boucle de changer la valeur du compteur de boucle (ici. la\n\nvariable 1).\n\nRappelz ++i; ajoute 1 é Ia variable 1. Cette instruction\nfail Ia méme chose que 1 = 1 + , ; IfP|lI\n\nComma pour la 15, Ies accolades ne son! obligatoires que si plusieurs instructions\ndoivent étre répétées.\n\nSi il n'y a qu'une seule instruction, on peut ne pas utiliser d'acco|ades:\nf*:(.n' 1 =.'r;1 < :: ++1)O\n\n*7SyStem.Out.prlntln(\"i = \" + 1);\n\nO\n\nMais, toujours comme pour Ie if, il est conseillé de ga der Ies accolades:\nr::(.n', i = U; i < u; ++i]\nSystem.ouL.println(\": = \" + 1'): Q>_r(déc1a2:a\n\nboc\n_._\n\n)\n\n \n\ntion_et_initia1isa t:io1@ incriation)¢{\n\n- Si Ia condition ne deviant jamais fausse, les instruciions dans la boucle som\nrépétées indéﬁniment ! Afﬁchage d’une table de multiplication\n\nOn peui remplaoerz\n\nSystem.out.\nSystem.out.\nSystem.out.\nSystem.out.\n\nSystem.out\n\npar\n\n \n\n‘I\nLa variable i prend ici Ies valeurs d\n\nprintln(“5\nprintln(\"5\nprintln(“5\nprintln(\"5\n.println(\"5\n\nL\n\nmultiplie\nmultiplle\nmultiplie\nmultiplie\nmultiplie\n\n\\<A0\n\nnt'  155 10,- 3;i)(\n\nSystem.out.println(\"5 multiplie par\n\npar\npar\npar\npar\npar\n\nm m w M H\n\nvaut \" + 5 * 1\nVEUC\"+5*2\nvaut \" + E * 3\nvaut \" + 5 * 4\nVaut \" + 5 * 5\n\n\" + 1 + \" vaut\n\nu + 5 * 1); Que s'afﬁche-I-il quand on exécute Ie code :\n\n{—V {‘o.4\n’~‘>for(inf. i = O: i < 5; ++i) ( i\n\nSystem.out.print (i)_I + V\nif(ig2::o)(L€Aqaau\\47.. 4 Z\nI—|\nSystem.out.print(\"p\"); FL‘ ‘'4 P\n)\nSy5t:em.out.print(\" \"H\n}\nSystem.out.println():\n\nA:0p12p34p 5\"\n\n?\n\nB:0p1234\nC:012p34\n\nD2 Op 1p 2p 3p 4p"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/03_structures-de-controle-2-boucles-et-iterations/01_semaine-3-structures-de-controle-2-boucles-et-iterations/03_iterations-quizz.mp4",
    "id": 5312,
    "text": " I 16?“? 1 Que s'afﬁche—t-II quand on exécute Ie code :\n\n-a:>for(inL i = G; i < 3-, ++i) I\n\nforlinr, j = 0; j < i: ++j)(\nSystem.c:ur..print(j):\n\n)\n\nSystem.out.print1n (“\");\n\n-a>\n“$9\n*9"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/03_structures-de-controle-2-boucles-et-iterations/01_semaine-3-structures-de-controle-2-boucles-et-iterations/05_blocs-d-instructions.mp4",
    "id": 5314,
    "text": " -V(|’ﬂI:\n\nFOIll3li0lIS: IIIOGS\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier Il_|’ll!\n\nNotion de portée\nLa d'unevariab|e,c'es : * ' * * \" 7   r\"  :, :: ’\n, autrement tilt of: elle est déﬁnie, existe, a un sens.\n\n(1 != 0)@\n\n     \n   \n\nif\n\n      \n\ngag) '.‘i'.'.‘E Inm-\n\nPortée : cas des itérations\n\nLa declaration d'une variable a |'intérieur d'une itération est une déclaration locale\nau bloc de la boucle, et aux deux instructions de test et d‘incrément:\n\nforjffai; €31; @\n\nSystem.out .println@);\n\nA perm moi. an"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/05_tableaux-dynamiques-et-chaines-de-caracteres/01_semaine-5-tableaux-dynamiques-et-chaines-de-caracteres/02_string-introduction.mp4",
    "id": 5320,
    "text": " !(|’f_\n\nString: introduction\n\nInitiation 3 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier IEPHI Concaténation \"P\".\n\nLes concaténations de la forme String+char constituent donc un moyen trés\npratlque pour ajouter des caracteres a la fl ne chame.\n\nDe méme Ia concaténation char+St:ring permet |'ajout d‘un caractére en début de\n\nchaine.\nExemple : ajout d’un '5’ final au pluriel :\n\n   \n \n \n   \n\n's,e:.+,»~ \"\n\na String reponse = \"solution\";\n//...\n\n-9 if (n > 1) {\n\nreponse =\n\n}"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/05_tableaux-dynamiques-et-chaines-de-caracteres/01_semaine-5-tableaux-dynamiques-et-chaines-de-caracteres/04_string-traitements.mp4",
    "id": 5322,
    "text": " !(|’f_\n\nS tr ing: lfﬂilﬂlllﬂllls\n\nInitiation 5 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier IEMI Les char d’un String ‘Em.\n\n» Lnnstrucnon cha1ne.charAt(1ndex) donne Ie caractere occupant Ia posmon\nindex dans la String chaine\n\n> L’inslruction chge ‘ indexof (caractéére) donne la Qosition de la gremiére\nocgwe du char caractere dans la String cgagge, E13 Si caractere n’est\npas dans chaige\n\n» chaine1.len th donne |atai||e(c’est»z11-direle nombre de caractéres) de\nchaiuei. Attention : il y a une paire de parenthéses ; différent des tableaux!\n\nI 1 \"\nE,xe,r1mg: FD &c,;,‘.Li .\n-—)Strjng S1 = \"abcmbx\"; m\n\n   \n     \n\n—>int longggeur = s1.1engch(); // 6\n—7 char :1 :53.cnarAt@; // a\na char c2 =§_LcharAt(gogg\\_1_suI — 1,); // x\nam: 5 =E1’.3'ndexDf('}J_); // 1 G X /1\n\nas Les caractéres sont numérotés comme Ies éléments d’un tableau (a partir de 0) substring Im-\n\n. . -/T‘ I . t ‘ . ~ ~\nchame.substrmg(pos1t1on1, pos1t1on2) .donne Ia sous—chame comprise\nentres Ies indices de positionl (compris) et position2 (non-com ris)\nExample:\n\nzxastring exﬂye :¢§;‘&?éai;;sti’ti:ti6 ’e1;';\n->string racineﬂot = example. ubstring(4,16);\n\n   \n \n\nconstruit Ia nouvelle chaine \" coustzitutzion\". IEPHI"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/06_fonctions-methodes/01_semaine-6-fonctions-methodes/03_fonctions-passage-des-arguments.mp4",
    "id": 5326,
    "text": " -.\".\" \n\nF0lIl:li0lIS: IIESSEIEIE IIES arnumenls\n\nInitiation 5 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier I(1‘llI Le passage des arguments (1) ‘W\n\nConsidérons Ia situation suivante (pseudo-code) 2\n\nstatic void methode(Ty-pe v) {\n// traicemenc moditiam: v\n\n}\n\n// ailleurs, dans le programme principal,\n// par example:\n\nType v1 = .. ; // initialisatmn de v1\nmethode(v1);\n\n// V1 ESTAELLE MDDIFIEE ICI DU NON???\n\n \n\nEn programmation de fagon générale, on dira que :\n> |_'argument v est passe par valeur si methods ne peut pas modifier v1 2 v est\nune cople locale de v1.\n> Eargument v est passe par référence si methode peut modifier v1 ‘Le passage des arguments (2) \"«-‘*P~\"‘--\n\n    \n  \n \n \n \n  \n  \n  \n  \n \n\nll y a done deux \n\nscacic void method ) { // Type :\n// traitement modinan 'objet référencé par v\n// traitement modifiant v lui méme (réfétence)\n}\n\n// ailleur :\nType v1 =\nmethodeqé);\n\n//1. V1 estaelle modifiée 1:1’?\n//2. 1'objet téférencé par v1 est—i1 modifié\n// in?\n\nH\n-<:\n-u\n\n \n\n// iniualisacion de v1 F‘-\".\"-,-.\n\nPassage par valeur : type;\n\n \n \n   \n    \n \n\nstatic void methode(Type v) {\n// traitement modifiant v\n\n \n\n}\n\nType v1 = ..; // lnitialisa '\nmethods (v1) ‘\n\n \n\n:8 Si Type est un type élémentaire\nIa réponse a la question dans Ie code estC>N !! Type évolué : modification de I’objet référencé I-M!\n\npublic static void main(String[] args) (\n\nint[] tab = {1};\n\nm(tab);\n\nSystem.out.print1n(\" tab[0]= \" + tab[0]);\n}\nstatic void m(inI:[] x) {\n\nx[0] = 100; // modification de 1’obJet\n\n// referencé par :1\n\nSystem.out.print(\"x[0]= -~ + x[o]>;\n\n}\n\n \n\nL'exe’cution de ce iroiramme produit |’affichage 2\n\nLes modifications faites dans la méthode sur |’ob‘et référencé restent visibles é\nVextérieur de la méihode !\n(on a copié dans x Ia référence tab°’0intent sur la méme tableau.)"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/06_fonctions-methodes/01_semaine-6-fonctions-methodes/05_fonctions-definitions.mp4",
    "id": 5328,
    "text": " '.‘!’“!\n\nFOIll3li0lIS: lléﬁlliliﬂlls\n\nInitiation 5 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier Remarques sur |’instruction return (4/4)\n\nLe compilaleur doil étre sﬂr de toujours pouvoir exécuter un return:\n\nstatic double 1ire() {\n~> Scanner keyb = new scam:er(sgscem.in);\n%double 1: = 0.0;\no '\nSysteIn.ont.print(\"Entrez un nombr  ;\nn = keyb.nextDoub1e():\nwhile (E:\necurngf\n\n}\n\n \n\n‘W! IE|’flI_ mm; La méthode main Im-\n\nmain est aussi une méthode avec um ma\n\nPar convention, tout programme Java doit avoir une méthode main, qui est appelée\nautomatiquement quand on exécute le programme.\n\nIientéte autorisée pour main est 2"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/06_fonctions-methodes/01_semaine-6-fonctions-methodes/07_fonctions-surcharge.mp4",
    "id": 5330,
    "text": " !(l’fl-\n\nfunctions: surcharge\n\nInitiation 5 la programmation (Java)\nJamila Sam, Vincent Lepeiit et Jean~Cédric Chappelier Ill’llI La surcharge de méthodes : exemple '*‘P~'_\n\n  \n  \n   \n  \n        \n \n\n--7 static void affiche(inc x) {\n_.>sys:em.uut.p{nTt‘1n(\"encsex : \" + x);\n}\n-—*,~static void afficbe(doub1s x) {\n») sys:em.au:.p?iR1n(\"ree1 : \" + x);\n} A A\n9 static void arfiche(i_£_x1, i_xzt?x2) {\n.)Systemout.print1n(“coup1a : \" + x1 + ~_n + x2);\n\n}\n\n(Ax\n3_£;,1che‘(1/), affiche(1.’E)) et affiche(1, 1) produisent alors des affichages\nI eren S.\n\nH -4\nX¢,L\"~.1A.o\n\nz;o».1X:.: /1,4 I(|’llI if (tempsleu 2, mo) { UP\".\nleicore . (int) (me ' Dnints / temsaeu):\n\n \n\n \n\n \n\n}\nreturn lescorzi\n}\n// ...._..._..._..._..._.._\nstatic int saisie£tca1:u1()\n(\n\ndouble nbVaints . o.a;\n\ndo {\nSyste4n.nut.print(” tntrez 1: novrbre dz paints (a-me) :\nnbPaim.s - c1avier.nextDoub|eO;\n\n) vfnile ((nbPoints < 0.3) II (nbPoints > 1001));\n\ndome tenps - e.a;\n\ndo {\nSystem.out.print(” Entrez le temps de jeu (1-so) :\ntenus .. c\\uvier.nextDoub1e();\n\n} mm ((temps < La) ll (temps > 60.6));\n\nreturn score(nhPoints, tenvs);\n\n}\n\n// .._..._..._.....\nstatic void afﬁcheResu1tats(int scurel. int scorez)\n\n(\n\n  \n\nsystem.out.print1n(\" Resuuats ~\"\nSysterlI.aut.Drint'ln(\" Jouzur 1\n5ystem.nnt.Drint'ln(\" Jouaur 2\n\n\" 4 scorn);\n\" 4 score2): \"(WV"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/07_etude-de-cas/01_semaine-7-etude-de-cas/03_puissance-4-premieres-fonctions.mp4",
    "id": 5332,
    "text": " !(|'il!\n\nPuissance 4 : nremiizres lonclions\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier I TE>'fl' ‘ Fonction affiche '9\"!\n\nprivate final static int VIDE\nprivate final static int JAUIIE\nprivate final static int ROUGE\n\nn u u\n\n0;\n1;\n2;\n\nifatricne u pour une case rouge. x pour une case jaul\nstatic void affiche(inc[][] grille)\n\nfor(int[] ligpe : grille) {\nfor(int cellule : ligne) {\nif (cellule == VIDE) {\nSystem.out.print(‘ ‘);\n} else if (cellule == ROUGE) {\nSystem. out .print ( ' D‘);\n} else {\nSystem. out .princ ( 'x');\n}\n}\n\nSystem. out .princ1n(>;\n}\n}\n\ninc[] [1 grille = new int [6] E7];\ninitia1ise(gri11e); ! M’ I TE>'fl' ‘ Retour sur affiche \"'~\"\"\n\n// affiche u pour me case rouge, x pour mas case Jauns\n{\n\nSystem.aut .pxint1zI()}\n\nfor(int[] ligne : grille) { . \\' mg\n_uSystem.out.print(\" I\"); ‘M’ ‘II %\nfar(int cellule : Hg-ne) {\n\nif (cellule == VIDE) {  I\n\nstatic void affiche(inc[]U grille)  Q|WI700P\nI I I\nI I I\nI I I\nI I I\n\nSystem. out .pr1nc ( ‘_ ');\n} else if (cellule == ROUGE) {\nSystem. out .pxinc ( '0');\n} else { “\nSystem. out .print ( '3');\n}\nSystem.out.print(‘ I ');\n} _\nSystem. out .px‘int1n();\n}\n\n__4>\n_y Sys:em.ont.print\nior(int i = 1; i\nSystem. out .print\n\n     \n   \n\n11e[0].1ength; ++i) {\n+ i);\n\n}\n3SystsIn.ont.print1n( ==\\n\");\n\n}"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/07_etude-de-cas/01_semaine-7-etude-de-cas/07_puissance-4-methodes-estcegagne-et-compte.mp4",
    "id": 5336,
    "text": " wily\n\nPuissance4:mélnoIIes es tCeGagne el\ncompte\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetite1Jean—Ce'dric Chappelier E ‘ml?’ 1 Retour sur la méthode main '‘\"'~'''\n\nin cauleurloueur = mums;\nboolaan gagne;\n\ndo {\ndemAndeEtJoue(gri11e , couleurjoneur) ;\n\naffiche (grille) ;\ngagpne : estCeGagne(gri11e, couleuuoueur);\n// on change la cauleur pour 1a couleuz ds 1'autrs jnuenr:\nif (cauleumoueur == JALTNE) {\ncouleunloueux = ROUGE;\n\n} else {\ncou1eu.rJoue\\u' = JAUNE;\n}\n\n} um1a( Igagne); ‘F3’?!\n\nMéthode estCeGagne : Stratégie\n\n41\nI 9999000 V W Méthode es1:CeGagne\n\n// pour chuque case qux contient un pion de la bonne coulaur,\n// on compte lss pious de la meme couleur dun: 4 directions:\nif (<:t2u1euXCase == couleurloueur) {\nif\n\n// en diagonals, Vets la ham: et la droite:\n(compte(gri11e, ligne, colonne. ~1. +1) >= 4) H\n\n// harizonculamant, vars la drone:\n\n(compte(gri11e, ligne, colonne, 0. +1) >= 4) II\n\n// an diagonals, vars la bu at la dxoit .\n(compte(g1'i11e, ligne, colonne, +1, +1) >= 4) 1|\n// varticalement, vers 19 bus:\n\nEcompte(gI'i11e, ligne, colonne, +1, 0) >= 4)\n\n \n \n\n// si 1o nombre de pun: pour au moins me (195 dnractions\n// est an moms 4, la joueur a gape:\nICC“!!! C1119;\n}\n\n}\n)\n)\n\n// si on a parcouru tuute la grille sans trouvez au moins 4 pions\n// aligns, 1e juueur n'a pas gaym, clu mains pas sm:ore:\\\nreturn false; Méthode compte ‘M!\n\nstatic int compte(int[] [] grille,\nint 1igneDepart, int cammenepaxc,\nint dirLig'ne, int d$rCo1onz1e)\n\nint compteur = 0;\n\nInt ligme = lignellepart;\nint colozme : colonnebepatt;\n\n// on pan an la case (lignauaparc, ca1onneDsparl:) at on parcoun la grille\n// dans la dixeccion donnoe par (dirldggxe. dixcolonne)\n// tam: qu‘on trouve des pious da la meme couleuz que le pian da depan.{\nwhile (gri11e[1igne][co1onne] == gx-i11e[1igneDepa:c][colonnebepan] ea\nligpxe >= 0 an ligne < gri11e.1eng1:h an\ncolonne >= 0 222 colonne < gri11e[1igne].1ength) (\n\n++C0ll1}>t€\\11';\nligne ligne + djrmgne;\ncolonne colonne + dircolonne;\n\n}\n\nreturn compteux; IEPHI Retour sur la méthode estCeGagne\n\nif (ca\\x1euICase == couleunloueur) {\nfinal int; ngnenax = gri11e.1ength - 4;\nmm int colounehax — gr:i11e[1ig11e].1eugth — 4;\n\nif (\n// en diagonale, vers le haul et la dmite:\n(ligne >= 3 ac colonne <= calozmenax an\ncompte(gz'i11e, ligne, colonne, -1, +1) >: 4) H\n\n// hoxizoncalemenc, Vets la drone:\n(colozme <= co1onneMax km\ncompte(gri11e, ligne, colonne, 0, +1) >= 4) I1\n\n// en diagonals, vers le bas at la dxoice:\n(ligne <: ligneﬂax ea colonne <= co1oxmenax1 an\ncompte(g1'i11e, ligne, colonne, +1, +1) >= 4) H\n\n// vatticalsmsnt, Vets 1e bas:\n\n(ligne <= grillalength - 4 ma\ncompte(gz'i11e, ligne, colonne, +1, 0) >= 4)\n{\n\nreturn true;\n\nIﬂfl!"
  },
  {
    "path": "E:/Coursera/interactive-python-2/01_week-5-mouse-input-list-methods-dictionaries/02_week-5b-dictionaries-and-images/03_visualizing-iteration.mp4",
    "id": 5381,
    "text": " Visualizing Iteration\n\nJohn Greiner\n\n/\n\nJ retzxr. h-um] >. n ...a mum\n\ndef . 1)s_in_x:mga1(hn1)s):\nma. urn! . lxss Bf tnuan xnpuz mm\nxaguln n\n5:: mu m mu.\nxi .\\a_’n_xanga{b-)1):\nrend: -ppcndkh-111\nr&'.\\xl\\ raga):\n\n \n\ndef\n\nhnH:_X.-A_xIn§=Z (hulls):\nmm. Pm m mu) 1.. Mn, .5 g\n\n \n\n   \n\nK; V mz. in {Ill -zrn-5.-W}. no.2-:1. (7\n\n\"\"x5:u:r-5 .... hex m an )5 LY. 0.. dasxzed xnnga.\n\n \n\nInn: at: mm. c\n\nFrames mum;\n\n_(nnga nun!)\n\nmm. 160.5911)\n\n:...w.......- NiyS<n11RnmMII~lI|ll .. .. v 3.: .._.._.......«...m.\n- -.......... W »... .... an ., .. 0.. 4...... xnnge.\n..»,.... h-um] >. 9 ...a mum — nu ...a nun]\n\nrw E %\n\n BEGIN\n\n3 .. an in 5..\n. dzi . n,_..._.....,...h.u,..\n\n\"';x.x .... . 1... .. tnoau Anya: 5.... EDIE ..= ......... ..\n\n \n\nD\n\n     \n\n     \n\n \n\n   \n\n \n\nmm H Fumes or-nus\n. 5.. .. u .. 2...... _ n_\nH .__}___wb_m: ....... .......... tunccxan .._...,....au us\n. 3....» ..=.==..=m..m .5 ..._....9.\n..m mu , - .....m.. ..u._... nnaeubuxlsi\n‘*~ ’ ha»: \"um-. /\n\n. biHs_m_ra\\ge2 ./x.¢.....m.. ......_...,....m....u..\n\ndef ...u._..._....g.zu..u...\n. .e—,.... :5... fat .,.n .. ...n. .2 ;\n\n  \n\n_....g..u..m1 I\n\n \n\n   \n\n.g..-. ...n. .. .... -zru-5.-W). umox, nmm. nsmum\n\n \n\n:¢..s....... ... ..... ., S<:11 N... ... . .. .............\n\nc.....W ... M... u. Ml ..... ...». .. ...., .... ..4 W... 5.... ......... ..«m—. ..-ma...\n\n   \n\ncxvnn 4'. nu. ‘:2’: '=’, '1:' mm\n\n.......g. ——\na mum: bustcm I\n5. ..m.u=\n\nonly = ”\n\nEcx =n .. -Assays:\n\n...-a ~ cxPn:1x|=h}\n\n \n\n1 9,,“ .g.,.,¢, ~...=.a., .9, ..,.,\nL - mm hnlzen\n5.: a.=.,a.u\n\n:ln:g“'\n\n \n\nM Kay, \".1... ... cziuz . Inns“.\n.5 :h vlluuz\n\n;‘ dnsg x.,,\n\n~ \"ﬂccpdmi ~..7-,\n\n    \n\nmm ,.....g. an-my\n«. : Update m .9. mm:\n\n;c 3,: nainggtnsgh\n\nnan: .......q.\n\nnasazge .39\n\n1...; t._ux:(:ugY\n\no c...“ . m... ...a ... an =-xn-1-an m\nm... — .,.9;..,....=x...._:xmu= 9...,-,\nM ..m. */an\n\n   \n\n \n\n \n\n-vunt r..m.m\n4, ma, zoo)\n\n   \n\nmm vnxxnziqn\n\ns<mb\\4guu\ncxvmt\nMme\n\n         \n \n\nmu... ob}-cu\n\n \n\nmm“)\n\n(ﬁn-9\n\n'-=6 I-~=I' mm... mm.»\nluuuun «men\n\ndmsg ~=.~\n\nch ~..~\n\ntunznnn ,..._m.-an\n\nwho -1»\n\n:9..s..m.. _., M .y Sam M...\"\n\n.. llvI0|€~E|M\\rvV|nlSku\\V Vwxmn .... .m.y»...n............. em.».mm..~.w...‘......."
  },
  {
    "path": "E:/Coursera/interactive-python-2/02_week-6-classes-and-object-oriented-programming/02_week-6b-tiled-images/02_visualizing-objects.mp4",
    "id": 5387,
    "text": " Visualizing Objects\n\nJohn Greiner\n\n/\n\n4 def g.=_xx..m;\n, mm aa)E.x\n\n,, » .;...m, s;\n\nFramns\n\nElahni v.z,..;g.\n\nmu ‘\n\n \n\nPmml mm.\n\n«o\n\n \n\n:...w.... ... W ., San Rum\n\n \n\n~.....s».‘.wM....... ..n.M.. mm .a.ym..>....m.. m.‘.x.......4. II D\n\n \n\n  \n\nA class mm\n\n. 5,: _;m/um, =.m,......:\n\n..n.=ma. = m».«mm...:..;\n. def :u=_=:m:d(I=lE. inﬂux, M...”\nK ,.u =m.4m.au1 valua\n. def .,.=_=may.m, mm-\n\nmm. ..n.=me.ma.x1\n\n1 =ma;...;.. = n. 51\nm...m.,m,....,;\n\nm..m=maa...e..»\n\nFeinuﬂlll. in\n\n \n\n_t ,,..u_=.mm. In)\n\ngrin: ,,..,.._mx.-1m\nFun: I-9-=_=;mxdu7)\nprint. x..,.=_=mayo;\n\n    \n\nsssm\n1°\n.\nW\n=..m...$ ’_\\\n\n \n\n:...w.r— ... MAR » y... ... ». s....\n\n.. ;., mm... W.‘ W M...\n\n‘. N W Y... \"4 M... ’:n7mn »....m.... w...m.n... ."
  },
  {
    "path": "E:/Coursera/intro-programming/01_your-first-computer-program/05_introduction-to-selection/01_selection.mp4",
    "id": 5411,
    "text": " E\nSE’\nm§_>°3\na:slI 90\n..-\n-\n\ncode yourself ! SELEUION\n\ns1»\\ak~shuh n\nSelection involves the use of‘\nconditions to control the flo\nprogram and make decision THE UNIVERSITY UNIVEURSIDZAD 0R1-\nafEDINBURGH '\"‘\"’““’"
  },
  {
    "path": "E:/Coursera/intro-programming/01_your-first-computer-program/05_introduction-to-selection/03_conditions-within-selection.mp4",
    "id": 5413,
    "text": " E\nSE’\nm§_>°3\na:slI 90\n..-\n-\n\ncode yourself ! soomw ‘ , ‘ BOOLEAN WHATISYUURfAVOURITE[0l0UR?\nHow on) ISIUHNT\nWHY DOES AKEII LIVE IN EDINBURGH?\n\nWHEN IS YOUR PARTY? THE UNIVERSITY UNlVEURSlD{\\[) onu-\nafEDINBURGH \"\"‘““’"
  },
  {
    "path": "E:/Coursera/intro-programming/02_code-gone-loopy/03_birthday-card/02_birthday-card-cake-behaviour.mp4",
    "id": 5429,
    "text": " E\nSE\n<v?2°3\n O0\nEBII ».\n.:I\n\ncode yourself ! BIKIHDAY (ARI) PROGRAM\nBUTTERFLY DIALOGUE LJ S(m:>\\20mlneEmIav\n\n     \n \n\n s ...V illv V. ......\n\nmm: e/am Umukq\nh . SQ\n‘I45\n\n \n\nShine)\n‘ Iv . ,.\n-.\nV E\n§\n\n1:‘ E/GI SW... mm o\n\nE/GI Erzm 0 ...~ E... ... .....\n\nE‘-I Unmieo p . saws\n\n \n\n \n\n. .,y -. ‘\nNewspvre 6 / A Q\n1:2» \"W\nE73\". swm\n\nN\n\n. .,, ‘,4\nmwsome 6/QII\n\nHm‘ ‘\n\n.....w Sm. MWSPIM 371:”; ‘\n\nrim‘ ‘\nTI umm\n\n..i''..\n\nE/ﬁﬂ\n\n3\nE\n1\n—\nnj éam 0 Mn mv Va; A... ; +:::: 0\n\n \n\nSwlh WW 9 / «D a\n\nram‘ ‘\n3-H ...m~\n\n.35.\n\nE/ﬁﬂ\n\nI\nI\nI\n1\nTHE\n1\nI\nI\n_\n‘\n-\nZIE\nI\n1\n—9 {I3 Unwed p Q 54\"“\n\n..4,,.\n\nsome wsm 6 / «a I\nh\n‘I .08\nE72“. ..4,‘.\n\nSame: WW 9 / m g . M .. .\nSWK1 N¢WSpVﬁB o / m n 1*\n\nmm: 9 / mg Suaxehz OHM: in m. _\n\nBackdrop Library\n\nAI!\num:\nUvnwms\nWM‘\n\nﬂ nil ‘\n\nNam:\narm\n\nxx ﬂ ha,\n. 5} F. ‘ smw\n\nmu-«.4\n\n \n\nmy Am: mm Nb?\n\no-o -IOU/~ Jvﬂ\n\n«=1:\n\nmm. mm.\nmm mmav ‘ mm.\n\nIwanaunr\n\nE/é\n\n  \n\n-o (I Uuv W. mm 2134 ‘\n\nI-9 -IOU/\\Jv=\n\n \n\nIll! / \\ I = 4:\n,_ W\n\nW W.\nW, i __, THE UNIVERSITY UNlVEURSID{\\D 0R1-\nzy’EDINBLIRGH ”\"g““’"
  },
  {
    "path": "E:/Coursera/intro-programming/02_code-gone-loopy/03_birthday-card/03_birthday-card-extend-with-if-then-else.mp4",
    "id": 5430,
    "text": " E\n813'\n.u'é°8\n 0\nans: 9\n‘II\nI\n\ncode yourself ! :2 mm. 2 Omme mm\n\n \n \n\nvan-1 3+\n\n{-1 umzm F o [I1 Unwed\n\na.vu........\n\nPO\n\n-1+\n\nsum 2 mm em. 32¢.\n\na E:azazn........m»-4\n\n‘ .\n 325.‘\n\nSbmes\n\nﬂﬂ\n\nH-1 WW:   u‘ n $.11-vuvvuln-1 &+2€}{O\n\n{-1 um F o \n\nQED  I\" 883  5993 \n\n \n\nW, Wm o } ‘min ' mwsmue 0 / H\n\n_\n_\nw\n.._\n\nI Urviruud\n\n \n\n:5/an [I1 Urvxuw\n\nimzrsaon.-z..~....... a.+::..t\nI-0 ‘ ' , [I] Urmned {-1 Um-um 1- 0 \n\nmt’-Elna--nu-vpsuu ;+“ 0\n\nI’ I‘ ~\nI u M\n_\nW\nm\now.\n$3 Eaﬁaomvmvmu .1.-H:::o\n\n{I} Um-um Eﬂ1ETlQn..zq.y..n-.4\n\n   \n \n\nsame;\n\n''’‘‘!!i\n\n  \n\nE/an mane\n\n[-3 umuea 4! 9 ‘W\n\nK ,,,.... J.-#1:. até\n\n   \n\nsame,\n\n'11?!\n\n3/an m!'a‘:'.!u-a.-«nu.- a.+::::o\n\n[.3 MW . mm\n\n    \n\n \n\nway u. ywv\nnmnu!\nvmmlu 1\n\nsome: SDHV5 e / (‘A n\nF\"! '1'‘?!\n£73\": REED»:-vu-vm-an ‘mE,..,........... a.+::..o\n\n[-1 unwm O “\"\"‘\n\n-is 1*‘,\n“.4. .4‘ VERSION 2 /\n’u\\u\\3\n\nTHE UNIVERSITY UNIVERSIDAD ORT\n€f‘ED1NBuRGH ”'“““““"
  },
  {
    "path": "E:/Coursera/intrologic/02_Lesson_2_-_Propositional_Logic/01_2.1_Propositional_Logic_1_min.mp4",
    "id": 3161,
    "text": " Introduction to Logic\n\nMichael Genesereth and Eric Kao\nStanford University Session 2\nPropositional Logic End of video"
  },
  {
    "path": "E:/Coursera/intrologic/02_Lesson_2_-_Propositional_Logic/02_2.2_Syntax_7_min.mp4",
    "id": 3162,
    "text": " Compound Sentences II\n\nImplications:\n\n(P => rt)\nThe left argument of an implication is the antecedent.\nThe right argument is the consequent.\n\nReductions:\n(4 = p)\nThe left argument of a reduction is the consequent.\nThe right argument of a reduction is the antecedent.\n\nEquivalences / Biconditionals:\n\n(p©q) Propositional Languages\n\nA propositional vocabulary is a set/sequence of\nproposition constants.\n\nGiven a propositional Vocabulary, a propositional\nsentence is either (1) an individual proposition\nconstant or (2) a compound sentence formed from\nsimpler sentences (as previously deﬁned) and that' s\nall.\n\nA propositional language is the set of all\npropositional sentences that can be formed from a\npropositional vocabulary. Exercise End of video"
  },
  {
    "path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/02_variables-and-mathematical-operators/04_variables.mp4",
    "id": 5483,
    "text": " Variables\n\n.D..u.1.<e int x:\nint y: xw.\nct\nnn\n11 int: X:\n\nint yr mt x\nint y:\n\nDuke int: X:\n\nint y: int: x\nWm y\n\nn «I\nown int:x=4.'\n\n»inLy=6: y 6 ‘hm X\n\n=47\ninty=x+2:\nincz=y—x.- 4:\n\nint x\n\n \n\nDuke int x\n-hm y\n\nint 2\n\nx+2;\ny—x: 4:\n*x+2;\n=y—x;\n\nint x\nint y\nint 2\n\n \n\nDuke Duke v.\n\n+,\nmxy\n,_,__,\nxv.z\nmmm\n:11\n\n-b .\n\n \n\nDuke intx:4: X 4\n\ninty=x+2:\n'incz=y—x.- V ‘5\nz 2\n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/04_classes-types-and-for-each-loops/01_classes.mp4",
    "id": 5487,
    "text": " Classes\n\n.1.3,u.k¢ High-level concepts of classes and objects a\nt\n3\nD Object\n\nData + Code publxc class Point 1\nprivate int x;\nprivate int y;\npublic Poxnt(int startx, int starty) 1\nX = startxr\ny = stzarty;\n1\npublic int getX(J ( becuxn x; }\npumic int qetYH ( return y; )\npublic double d1stanCe(Poim: otherFt) (\ninc dx x — ocner1>c.get><();\n\n \n\nlnt dy — y — otherPt.getX().'\nreturn Math.sqrt(dx « dx + dy ~ dy);\n\npublic static void main(Strinq[] args) Dedaration ef\nPoint pl = new Point(3,4); astam;\nPoint p2 = new Point (6,8): methgq,\nSystem.out.println(p1.distance(pl)I main p3's x =5, which is 4 from me\np3's y = -4, which is 5 from me\nsqrt(I6 . 36)= 7.2\n\n \n\np1 = new Point(1,2)\np2 = new Puint(-3,0)\np3 = new Point(5,-4)\n\np1 .distance(p3)\n\n   \n\n1.3.t.1.1,<¢"
  },
  {
    "path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/04_classes-types-and-for-each-loops/02_new.mp4",
    "id": 5488,
    "text": " New\n\nDuke publxc class Point 4\n\nprivate 1m’. 2:;\n\nprivate Int y;\n\npublic Pointunt scaztx, mt starry) 4\nx = startxi\ny = staztyi\n\nI\npublic int getXH 1 return x; )\n\npublic in: geum 4 return y; 1\npublic double d1sr.anceLPo1nr. or.herP\\:) 4\nint dx = x — otherPt.getXA);\nin: dy -= y - ocherPc.getY(77\nreturn Math.5qrt{dx ~ dx » dy ~ dyl;\n\nI\n\npublic static void main1S\\:rin<!lJ args) (\nPoint pl = new Point(3,4);\n\n‘Pom: p2 : new PoJnc(6,8);\nSysx'.em.ouc.princ1n(p1.dis:ance(p27);\n\nJ\n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/04_classes-types-and-for-each-loops/03_methods.mp4",
    "id": 5489,
    "text": " Method Calls\n\nDukc puhllc class Palm’. 1\nprivate m: x.-\npxxvate xnt y;\npumm vomum: startx, Lnt starty) (\nx : 5La:Lx7\ny — starry;\n1\npunnc m: gezxn 1 return x.- ;\ngwunllc Jnt gecyn 4 return y; >\npublic double d1s(ance1Po1nt or.herE't) 4\nInt dx : x - uche:PL.qe(X().'\nxnt dy = y — ozherPL.qe:Y1)7\nreturn mazmsqzuqux - dx 0 dy - dy);\nJ\npul711c statxc mm ma1n1S:r1ng[] argsy (\nFoxm, p1 = new Po;nr,13,«‘n;\nPolnr. p2 = new Polnl (6,8);\nSy5:em.ouf..pr1nt1n1p1.d1s(anCc(pZH:\n\nDuke\n\n \n\n \n\ny 4\nX 6\ny B"
  },
  {
    "path": "E:/Coursera/java-programming/03_strings-in-java/02_finding-all-genes-in-dna/04_while-loop-syntax-and-semantics.mp4",
    "id": 5505,
    "text": " Improving the Gene-Finding Algorithm\nWhile Loop Syntax and Semantics\n\nDuke While Loops: Back to DNA Code\n\n0 While loop basics\no Syntax: grammar\n\n   \n\no Semantics: meaning\n\n0 Now can use to implement algorithm\n. Back to DNA\n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/01_implementing-the-caesar-cipher/05_counting-loops.mp4",
    "id": 5544,
    "text": " Implementing the Caesar Cipher\nCounting Loops\n\nDuke Concept Review: Loops, Indexes\n\n0 You've used different loops in solving problems:\no Finding Codons or Tags in a String\na while (true) (... break ...)\n0 Reading lines from a Fi|eResource\n- for(St:ing s : fr.1ines ()) L.)\n\n0 You've used indexes to access strings ~ f,\no \"cgatga\" .:i.ndex0f(\"atg\") ;   ‘i\n\no \"cgatga\" . substring (1 , 4) ;\n\n    \n\nDuke Accessing Characters in a String\n. The reverse of \"CGATTA\" is \"ATTAGC\"\n\n0 Useful in genomics to process strand this way\n0 Palindromes can be source of fun\n. Haman i<a6aH Ha 6aKna>i<aH\n. Alli trota la tortilla\n. Eh, ga Va. la vache?\n\n \n  \n\no Draw, O Caesar, erase a coward.\n\n. How do we create the reverse of a string??\n\nDuke F Indexing a String Indexing a String\nc Must understand for loop with three parts\n\nSeparated by semi~co|ons\n\nInitialization (happens once, before guard)\n\nGuard, evaluated before loop body\n\nIncrement, executed after loop body\n\npublic String rever-se(Str‘ing s){\nString ret = \nfor(int k=0; k < s.1ength();‘{\nret = s.charAt(k) + wet;\n}\n\nreturn ret;\n\n}\n\n \n\nD1415: For and While Compared Continuing with Loop Tracing\n\no Continuing with tracing reverse(”pit”)\n\n}\nDuke\n\nt\n\n-|—>|Pli\n\n-Dr\n\nS\nret \\ A-\nk 3 it 1‘ P\n\npublic String r‘ever'se(Str'ing s){\n\n5\nf\n\n1\n\ntring ret = \"“;\nor‘(int k=0; k < s.1ength(); k += 1){\nret = s.charAt(k) + ret;\n\neturn ret; \\ \n\nIdiomatic For Loop Idiomatic For Loop\n\no Many programmers use i as index variable\n\nfcr'(int i=0; i < s.1.ength(); i += 1)\no Many programmers use i++, not i += 1\n\nfor(int i=0; i < s.1ength(); i++)\n. Sometimes declare variable before loop,\n\nso scope extends to after loop\nint i;\n‘For'(i=@; i < s.1ength(); i += 1){\n}\n\n// can reference value of i here\n\n \n\nD.1.1.l<,<:"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/02_breaking-the-caesar-cipher/05_developing-an-algorithm.mp4",
    "id": 5554,
    "text": " Breaking the Caesar Cipher\nDeveloping an Algorithm\n\nDuke Counting Occurrences\n\nHi, do yll want a lollipop today?\n\nI own many good flavors,\nbut banana is outstanding.\n\n \n\na Code to scan text and increment counter\n\n{9,2,o,4,o,1,2,1,5,o,o,4,1,7,1o,2,o,1,3,5,3,1,2,o,3,'\n0123456713.. 14 232425\n\"ABCDEFGHL. O XYZ\"\n\n     \n\nDuk: Counting Occurrences with Code\n\nString alph = \"abcdefghiji<1mnopqrstuvwxyz\";\n\nintlj counts = new int[Z6];\n\nFor‘(int k=0; k < messnge.'lengi:h(); i<++){\n\nchar ch = Character.toLowerCase(message.churAt(k));\nint dex a1ph.index0F(ch);\n\nif (dex ! ~1){\n\n   \n \n \n\n  \n\n0 Scan message, if character is alphabetic:\n\n  \n \n\nu Find location in \"abcdefghijkimnopqrstuvwxyz“\n\no Use index to increment one of 26 counters\n\nDuke From Algorithm to Code\n\npublic String decrypt(Str.-ing encrypted)(\nCaesar.-Cipher cc = new Caesarcip-hex:();\nint-,[] freqs = countLetters(encrypted);\nint maxbex = maxIndex(freqs);\nint dkey = maxDex — 4;\nif (maxbex < 4) (\n\ndkey = 26 - (4-maxbex);\n\ne\n\nn Count 26 frequencies of 'a'—'z', 'A'—'Z'\n\ni.\n\no Find largest value, assume it's ‘e‘\nc Find distance from ‘e' which has index 4\n\nDuke u Use 26-distance to decrypt using encrypt! Values, Indexes, Details\n\no Array freqs has relationship between\nindex and value, freqs [8] is how many\ntimes 'i' occurs\n\n   \n  \n\na When looking for maximal value, return index,\nuse to find distance from 'e' or 4 as shift\n\n. Using the CaesarCipher class makes writing\nCaesarBreaker easier\n\n- Call methods that work rather than rewriting"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/01_introduction.mp4",
    "id": 5556,
    "text": " Object Oriented Programming\n\n. Java: Object Oriented Language\nc What does that mean?\n\nu Encapsulate code and data\n\nObject = Code + Data\n\n f ;Fields Familiar: String, lmageResource, \n\n- Familiar example: String\no Data: sequence of characters CTACGATGCCTGATGA\n\no12345s7B9a12345\n\no Code: indexOf, substring,...\n\ns . 1enqth() 15\ns . indexof ( \"Droqram\") 4\ns . indexof ( \"a\") 7\ns . indexof ( \"f\") -1\ns . :i.ndex0f(\"a\" . 8) 14\ns . startswith (\"duke\") true\ns . endswith (\"kind\") false\ns . substrinq (4 . 7) \"pro\"\n3 . tovpnercase () DUKEPROGRAMMING\n\n \n\nDuke Class = Type, Object = Instance\n\n     \n  \n\n  \n\ncharacters =\\_H e 1 l 0‘\nint indexOF(String str) (...}\nString substring(int beginlndex) {AAV}\n\n  \n\no Classes are types:\no Define what is in objects of that type\no Objects are instances of class\n\na Can make many (use: new) Why oo?\nOO O\n\n  \n\n. Why objects and classes?\n\n   \n \n\n0 Facilitate large programs\n0 Some basics here: fields, constructors, visibility\n\n. Java Programming: Principles of Software Desig\n\n1.3.t.1.1,<s:"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/02_rewriting-with-encapsulation.mp4",
    "id": 5557,
    "text": " Object Oriented Caesar Cipher\n\nRewriting with Encapsulation\n\nDuke ’ _ 4 . _CaesarCipher\npublic String encrypt(Smng mput){\n\nStringBui|der sb = new StrIngBui|der(input);\nfor (int i = 0; i < sb.|ength(); i++)(\nchar c = sb.charAt(i);\n\nint idx =n.'mdexo+(c);\n\nif (idx != —1)(\n\n \n\nHarAt(idx);\n\nsb.setChar/-\\t(i, c);\n\n)\n\nD kgeturn sb.toString0;\nu\n3 What Is Benefit?\n\no Same functionality\n- What is benefit of OO approach?\n- Easier to think of Cipher as logical unit w/ l<ey\n\nOld New\n\nmessage: FIRST LEGION ATTACK EAST RANK message: FIRST LEGION ATTACK ms-r FLANK\n\n B i l\n\n   \n\n \n\nElesutipher Caesarclphev\ncrow mom xoqxzn am, cI><i<:i cram :anm< xooxzn sxm cm<r—:\n\npuke"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/03_fields.mp4",
    "id": 5558,
    "text": " Object Oriented Caesar Cipher\nFields\n\nDuke CaesarCipher: Fields\n\npublic class CaesarCip|ner(\n\n  \n\npublic CaesarCipher(int key) (\naiphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nshifted/klphabet = a|phabet,substring(key) +\na|phabet.substring(O,key); What Does This Mean?\n\n. Every CaesarCipher has its own copy\na Can make different objects, different values\na Call method on object: use fields in that object\n\n  \n \n\n \n \n\n%CaesarCipher\nialphabet “ABC...\"\nisnmedmpna “QRS... \"\n\n   \n  \n\nCaesarcipher CaesarCipher\nalphabet \"ABC..\"' alphabet “ABC...\"\nshiftedAlpha “MNO... \" shif(edAlpha “ HIJ... \"\n\nDuke Summary of Class Concepts\n\n0 Class = Noun\n0 Method = verb\n\n0 Field = noun\n. Noun: Things that a class has\n\na Adjectives describe properties"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/04_visibility.mp4",
    "id": 5559,
    "text": " Object Oriented Caesar Cipher\nVisibility\n\nDuke Private\n\npublic Class CaesarCipher( Only code inside this class\n\nustring Eﬂphabet? can access private fieldsl methods\n\nEstring shiftedA|phabet;\npublic CaesarCipher(int key) (\n\nalphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nshifted/klphabet = a|phabet,substring(key) +\na|p|'\\abet.substring(0,key);\n\n} shiftedAlphabet has private access in Caesarcipher Why Private?\no Why private?\n\no Easier to just make all public?\n\no Abstraction:\n\n- Separation of interface + implementation\n\npublic Interface: What It Does\n\nprivate Implementation: How It Does It General Guidance\no Fields: private\n\n- Typically part of implementation\no Methods: depends\n\nn Things object does: public\n\n. Helpers: private\no Classes: public\n\na For now: always\no Constructors: public\n\na For now: always"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/05_constructors.mp4",
    "id": 5560,
    "text": " Object Oriented Caesar Cipher\n\nConstructors\n\nDuke Constructors: Initializing Objects\n\npublic class CaesarCip|ner(\nprivate String alphabet;\nprivate String shiftedA|phabet;\npublic CaesarCipher(int key) (\naiphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nshifted/Xlphabet = a|phabet.substring(|<ey) +\nalphabet.substring(0,key); Constructors: Initializing Objects\n\n    \n\npublic class CaesarCipher( E {alphabet _T,»'[A|B C \nprivate String alphabet; i5hiftedAli-“Tibet ‘i\"\"‘WiX Y \n\nprivate String shiftedA|phabet;\npublic CaesarCipher(int key) {\nalphabet = \"ABCDEFG-HJKLMNOPQRSTUVWXYZ\";\nshiftedA|phabet = a|phabet.substring(key) +\naIphabeLsubstring(0,key);\n\nCaesarcipher cc = new CaesarCipher(22);\n\nme"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/06_summary.mp4",
    "id": 5561,
    "text": " Lesson Summary: Object Orientation\no Object Oriented Concepts\n\n. Encapsulation\n0 Fields\n. Visibility\n\n- Constructors"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/03_gladlibs-stories-from-templates/02_using-and-improving-gladlibs/01_introduction.mp4",
    "id": 5568,
    "text": " G|adLib: Stories from Templates\n\no Ready to tackle modifying the GladLibs story-\ntelling program: learning while telling stories!\n\na All the pieces of the program are ones you\ncould write yourself!\n\na You'll start with a working program, and\nunderstand and extend the program\n\n   \n\na Class design, method design, understanding\nprogram limitations but reveling in telling stories!\n\na Creating re—usable story—tel|ing components\n\nDukc Structure of G|adLib.java\n\no Constructor initializes object\no ArrayList for nouns, verbs, colors, \n\n- Random object for generating random choices\n\n \n \n     \n       \n      \n\n. Read story template, process each word\n\na If <country> or <timeframes>s found: replace\n\nIn <country> a long time ago, nearly <number>\n<timeFrame>s ago, there lived a <co1or'>,\n<adjective> <anima1>. It so loved to sing and\ndance, but there was a <adjective>,\n<adjective> <anima1> named <name> that\nscared it so much!\n\no Print!\n\nDuks Stories from Template\n\no Running program generates stories\n\na One public method: makestory\n\nIn Ecuador a long time ago, nearly 105 months ago, there\nlived a yellow, jovial polar bear. It so loved to sing and\ndance, but there was a furious, angry rabbit named\nAlbert that scared it so mL£h! Reading Words and Printing\n\no Template read from file or URL, simply loop\nover each word, if <|abe|>, then replace\n\na Finding labels straightforward use of .indexOf\nand .substring, for <noun>! or \"<color>\"\n\no Printing story displays words in console\n\na Method uses parameterized line-width\n\no Could modify to print to file\n\nlprivate void print0ut(String 5, int 1ineWidth){\n' int charswritten = 0;\n\n \n\nPuke Instance Variables\n\no ArrayLists for each <noun>, <color>, \na Name variables appropriately,\n- Create and initlallze in constructor\n\no Need all of them to replace a word.\n\nprivate ArrayList<String> adjectiveList;\nprivate ArrayList<String> nounList;\nprivate ArrayList<String> co1orList;\nprivate ArrayList<String> countryList;\n\nprivate ArrayList<String> nameList;\nprivate ArrayList<String> anima1List;\nprivate\n\nprivate Random myRandom;\n\n   \n\nDuke Find Substitute for <co|or>\n\no Based on <<:o|or> or <noun> or use the\nappropriate list of replacements\n\n0 Choose vaiue from list at random in method\nrandomFrom, return for ston/-telling\n\na Both methods are private, used by sequence of\ncalls from pubiic method makestory\n\n. Argument passed to source is instance variable\n\n{private String randomFrom {\n\nint mdex = myRandom.nextInt(source.size());\nreturn source.get(index);\n\n}\nDuke. Initializing ArrayLists\nc We must construct and initialize many\ninstance variables\n\na Source could be URL or local directory\n\nin;i.tial;i.zeF:cm(\"data\") or initia1izeFrom(\"http: . .\")\n\n‘private void initializeFr*omSour‘ce(Str‘ing source) {\nadjectiveList= readIt(sour‘ce+\"/adjective.txt\");\n\nnounList = readIt(source+\"/noun.txt\");\nco1or‘List = readIt(sour‘ce+\"/color‘.txt“);\ncountryList = readIt(source+\"/country.txt\");\nnameList = r‘eadIt(sour'ce+”/name.txt\");\nanimalList = readIt(source+\"/animal.txt\");\n\ntimeList = readIt(sou rce+\"/timeframe . txt\"); ArrayList Instance Variables\n\nc To create a new label, <verb>, must create\nnew instance variable, e.g., verhList\n1 Modify code in two methods with verbList\no initia1izeFromSource\no called: GladLib constructors\no getsubstitute\no called: make-Story, frc>mTemp|ate, proce5sWord\n\nc Program documentation should include\n\ninformation on how to modify code\nD.u.k¢"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/02_earthquakes-programming-and-interfaces/01_searching-earthquake-data/03_relationships-between-classes.mp4",
    "id": 3248,
    "text": " Searching Earthquake Data\nRelationships Between Classes\n\nDuke The QuakeEntry Class\n\no QuakeEntry class is essentially a POJO\n\no Plain Old Java Object — but here cannot\ncreate object without all characteristics\n\no No default/parameterless constructor\no Immutable with getters() 4 7 I\n\no Reasonable .toString() method\n\npublic class Quakelintry (\npublic Location qetLocat:'.on() 1 . .\npublic double getDepth() (...\npublic String getInfo() (...\n\nl V\nl The Location Class\no Many, many contexts: beyond QuakeEntry\n\n0 Use simple, functional design for course?\n\n0 Use industria|—strength design for course?\n\n0 Well adopt Android class\no Latitude and Longitude\n\n  \n\no Initialize from source\n0 Distance from A to B?\n0 More than state/POJO\n\n0 Behavior!\nDuke Has-A and Uses-A Relationships\n\n. QuakeEntry object created by Parser\n\n- Location constructor cailed from OuakeEntry\nconstructor\n\n0 myLoz:ation is instance ﬁeld in QuakeEntry:\nHas~A relationship\n\na Location used in EarthQuakeC|ient\n\n  \n \n\nc .distanceTo(.,)\n0 QuakeEntry used in EarthQuakeC|ient too\na getMagnitude(..)\n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/02_earthquakes-programming-and-interfaces/02_filtering-data/02_interfaces-to-avoid-duplication.mp4",
    "id": 3254,
    "text": " Avoiding Code Duplication\n\n0 First: look at two filters\na See similarities Idea: Parameterize—How to Filter\n\npublic ArrayList<QuakeEntry>\nfilter(ArrayList<QuakeE'ntry> quakeData,\nFilter f) (\nArrayList<QuakeEntry> answer : new ArrayList<QuakeE'ntry>();\nfor(QuakeEntry qe : quakenata) (\nif —> <\nanswer . add (qe);\n)\nLew,“ answer; But how do you make Filters with\n\n) different .satisifes() methods?\n\n   \n\no Generic method: parameterized by Filter\n\nDuke. Compatible Types\n\npublic ArrayList<QuakeEntry>\nfilter(ArrayList<QuakeEntry> quakeData,\nFilter f) {\nArrayList<QuakeEntry> answer = new ArrayList<QuakeEntry>();\nfor(QuakeEm:ry qe : quakeData) (\nif (f.satisfies(qe)) [\nanswer.add (qe):\n}\n}\n\nreturn answer;\n\nFilter f = new MinMagFilter(4.0);\n\nArra List< uakeEntr > la: e uakes = filter(list, f);\nf = I\n\nArray 1st< ua e n ry> s a o ua es = filter(list, f);\n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/02_earthquakes-programming-and-interfaces/02_filtering-data/05_summary.mp4",
    "id": 3257,
    "text": " Filtering Data\n\nSummary\n\nDuke Interface Summary\n\nFilter f = new MinMagFi1ter(4.0);\nArrayList<QuakeEntry> 1argeQuakes\n= filter(list, f);\n\na Type compatibility: use class as interface"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/03_earthquakes-sorting-algorithms/02_sorting-at-scale/06_summary.mp4",
    "id": 3269,
    "text": " Sorting at Scale\nSummary\n\nD..u.l<,e Comparable/Comparator Summary\n\na Two ways to define ordering on a type\n\n0 Comparable:\n\n. Natural ordering on own type\na thingl . compareTo (thing2)\n\no Comparator:\n\no Ordering on another type\n\nc <:omparator.compare(thingl, thingz)\n\no Can use either with Collections . sort ()\n\n \n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/04_n-grams-predictive-text/01_generating-random-text/08_interfaces-and-abstract-classes.mp4",
    "id": 3275,
    "text": " Generating Random Text\nInterfaces and Abstract Classes\n\nDuke Developing an Interface\n\n- Common method signatures in Interface\n\n   \n\nrllu\n\na Name interfaces starting with is common;\nwe create lMarkovMode| with required methods\n\n- MarkovZero, MarkovOne, MarkovTwo—each\nimplement interface; methods already there!\n\npublic class Marwwo TI\n\nprivate String in)/Text;\nprivate Random mykandom;\n\npublic MurkovTwo() {\nmykandom = new Random();\n\n}\n\nDuke Interface: Utility and Flexibility\n\no Write methods that use Interface\n\n   \n  \n   \n \n \n\npublic void r‘unMode'l(IMar'kovMode'L markov,\nString text, int size){\nmar-kov.setTr'uining(text);\nSystem.out.print1n(\"running with \"+rnurkov);\nFor(int k=0; k < 3; k++){\nString st (size);\nprint0ut(st ,\n}\n}\n\nWlrkovlero mz = new MarkovZero();\nr‘unMode'l(m2,text,800);\n\nMarkox/Two m2 new Mar'kovTwo(\nrunMode1(mZ, text , 800\n\n  \n   \n\nDulsﬁ Software Design: Open-Closed\n\n. Open for extension, closed to modification\n0 Don't change tested/proven code!\n\n- Interface provides flexibility\no Add new, general MarkovModel class\na All orders 1,2,... implements IMax:kovMode1\n0 No change to existing code! eg., runMode1\n\n. Implement efficient version with HashMap\no Avoid re—scanning for 'th' follows\n\n- Still use existing code with no change!\n\n \n\nDuke. Abstract Class\n\n- MarkovOne, MarkovTwo, MarkovMode|\nclasses share state and code\n\n    \n  \n \n \n\no Each class has random number generator and\ntext in instance variables mykandom, myText\n\no Duplicated helper method getlrollows (key)\no Capture commonality in Abstract Base Class\no Relies on object-oriented concept: Inheritance\n\na Used extensively in java.uti|: AbstractList, and\nAbstractMap\n\nDuke AbstractMarkovMode|\n\no Class marked as abstract\n\na Shared state is protected, not private\n\npublic abstract class AbstractMar‘kovMode1\nimplements IMarkovMode'|. {\n\nprotected String myText;\nRandom m)/Random;\n\npublic AbstractMar‘kovMode1() {\nmyRandom = new Random();\n\n}\n\npublic void setTr'aining(Str'1ng text) {\nmyText = text;\n}\n\n \n\nDuke Abstract and Shared Methods\n\no At least one method marked as abstract\n\n   \n    \n \n\n0 Must be implemented in subclasses\n\n. Shared helper functions protected\n\npublic abstract class AhstractMarkavMode1\nimplements IMarkovMode'|. {\n\n// state and shared methods here\nabstract public String getRandomText(int numChars\n\nqArrayL\"Lst<Str\"Lng> getFo1'|.aws(String key){\n code not shown\n}\n\nDuke Extending the Base Class\n\na When base class extended, get access to\nprotected instance variables and methods\nfrom super class\n\nc Also implement interfaces of base class\n\na Can have instance variables as well\npublic class Mar'kovModel extends AbstrdctMarkovModel\n\nprivate int ‘\n\npublic MdrkovModel(int order) {\nmyorder = order;\n\n}\n\n// more code here\n\n \n\nDuke Implementing Abstract Base Class\n\no Implement the |MarkovModel interface\n0 Supply default functionality when possible\no Avoid duplicating state and code\n\na Subclasses extend AbstractMarkovModel\n. They implement |MarkovMode| too!\n\n0 Interface the same, client code doesn't change\n0 Some methods are abstract\n\n. getRandomText implementation changes"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/04_n-grams-predictive-text/01_generating-random-text/09_summary.mp4",
    "id": 3276,
    "text": " Generating Random Text\nSummary\n\nDuke Markov Text Generation\n\no Developing a sequence of related classes\nhelped in understanding new concepts\n\n  \n \n \n  \n   \n\nu Predictive text is the basis for machine learning\nand autocomplete functions in search and\nmobile phones\n\no Related classes led to designing and\nunderstanding interfaces and abstract\nclasses\n\n. Familiar context helped with extending desig\n\nD..u.l<¢ Interfaces in Java\n\nc We used the same names for methods\n\n   \n  \n   \n\no Allowed us to reuse client/testing programs\n\n- MarkovTwo and MarkovOne used same\nmethod names as Marl<ovZero\n\no Extended to interface lMarkovMode|\na Powerful technique, extensively used in Java\nc Extended to Abstract Base Class\n\no Capture common code that can't be captured\nin an interface, also extensively used in Java\n\nDu1,<:"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/02_mainstream-java/02_understanding-exceptions.mp4",
    "id": 3291,
    "text": " Mainstream Java\nUnderstanding Exceptions\n\nDuke Exceptions\n\nHandling exceptions: try, catch, finally\n\n    \n  \n \n\nException propagation: when you do not handle\n- May require declaring “throws”\n\nThrowing exceptions: when you discover a problem\n\na gexceptionsz print stack trace\n\na Tells you about problem"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/02_mainstream-java/03_handling-exceptions.mp4",
    "id": 3292,
    "text": " Mainstream Java\nHandling Exceptions Handling Exceptions: Try/Catch\n\ntry {\n\nURL myURL = new URL(someString);\n//code that uses myURL\n//e-.g., connects to it and reads data\n\n)\n\ncatch (MalformedURLException mfe) {\n\n//code to handle the error\n\n-’>\n\no Exception is thrown\n\n- somestring = \"b|ahb|ahb|ah\"\n\n \n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/02_mainstream-java/05_throwing-exceptions.mp4",
    "id": 3294,
    "text": " Mainstream Java\nThrowing Exceptions\n\nDuke So What Can You Throw?\n\na Technically: any class that extends Throwable\n\n  \n\no Typically, a class that extends Exception\n\n. (Exception extends Throwabie)\n\n- Java has many bui|t—in exceptions\n\no ArraylndexOutOfBoundsException\n\nString|ndexOutOfBoundsExecption\n\nNuiiF‘ointerException\n\n|OException\n\nDuk: You Can Create Your Own\n\na Java's exceptions: generally sufficient\n\no Need something else?\n0 You can make your own class!\n\n0 Just extend appropriate exception class\n\n \n\nDu.k.,e"
  },
  {
    "path": "E:/Coursera/learn-to-program/01_python-variables-and-functions/03_variables-and-functions/03_visualizing-assignment-statements.mp4",
    "id": 3335,
    "text": " Visualizing Assignment Statements\n\njennifer Campbell and Paul Gries\n\n2* Wm: mm mm mas Mr!’\n\n \n\nnew 1 haggy 1 {mg x mm 1 lykenuc 1 mm.\" SUV 1 Ms: zumgreimnsmn\n\n»«..»m..ea Fun\nFirmnav \\ Nnanazm I memmzed mmm. \\ snuira van! \\ qzd \\ Knwers mu... /‘ m that his bustexamled\n-. nut Hm x. mm.\n\n«W x ‘:.g wow-m .,..¢...=.a\n\n    \n\n_ I Frames «menu\n= x . 2 IIunnm¢1';u‘J ..,\n= 7 I 3\n\nmm . gm\n\nv. 1. Evaluate me expression on We m_;h(o1|IIe\nIn produce a value. Th 5 yam. has a msmory\naddress.\n\n2. sum um memory aﬂdruss no In. value an me\nvannhleon «he left uﬂhe —.\n\n \n\ncm-rm um\n\nmmm; vxsuihziuam (V-(I Ir-eﬁenevale um‘ mm awvrand snaruvm um fa rewt . bug‘ Dam-xm-unit\nmm: min . Mala-ovatswnmn M M emmllnuntssed m p».muengm..n..n.: The mignmsm gammy“ ﬂanges me value M 3\n\niunrm: e :7: wariahle.\n\nmmmm; vmnllnmn »« vawmaae. mm. m 5eneraaecrna«1ooae‘bullun alxzveanu Dane the rzsunmﬂ\nmm M Vnmyaurwalsolat Mun z». nmnunn mum Diumeius ., named\n\nmmgmmmsuumgmmu human; mm .m....m..‘. Imnnrlsamlnn M W m. mum;\nmndulasmzv a. mum Mm‘ Kmamnns‘ a....m, mm; mm unmg, ,9... mam. .,.y.m, mm, re,\nm.\n\nmu nuuunm mvbe mm M mermmmmm ma. mm nut m.m.:m..g\n\nlam xna  »...w.gus. m vinmvau m usermsmsswms :nu :um:axm\nn<m\\nna\\ announumenxs (‘mm mm. and amid adrlrrsswm I1: ken: V“/axe? my m. Vsrnvmevan ;...»...m\n\nCnwnqr-I m znnrzals mum Au ngms rnserved"
  },
  {
    "path": "E:/Coursera/learn-to-program/03_booleans-import-namespaces-and-if-statements/02_if-statements/05_structuring-if-statements.mp4",
    "id": 3350,
    "text": " Structuring\nif statements\n\nJennifer Campbell and Paul Gries n..m.~..mu mm. mm mm in\n\n  \n\nI precipitation = True °\"\"“‘\n\n2 mipemure - -a mun-1\n\n, Yru:\n-4 If preclpﬂanonz mm\nas ur temperature > 9- a\n\n5 9V\\nt(‘BrIrI£ your imorelln! )\n\n7\n\n5 iv prmpmum. and temperature > u;\n\n2 wiM.(‘BrIrIE your Wlﬂrelli '>\n\nmm:\n0\n\nEl E7! Strum\" !\n\n_ IV»! nut mgbuszexuuua\n—...n.m,.....,.m.\n\n \n\n \n\n1., 9.... M visuailzzlhvi, an mm mm». min mum Ila-xv: mu 3.... mm mu. Va mam . buy. an m. nu\nﬂung mm . my amt an-mv. VII an mu adarsed W Dh\\llD¢F®VVIﬂE \".2\n\nCunraeunhad cud: 1 \\\n\nn.nm.m..s..su.m...» WI mmewage. an m x;.......m.»...4 mi mum. .m.e.m pm me mm;\nNrmwoe i...mum.um= Imus z». ».=.;»:m my» Dirimtlus mew\n\ngmmgmmnm mamsmmm inlbGﬂm.3.1 Mm nmm Fulﬁll‘! mum Ind nu We no. m. mm-9\nmam mlv u in-amen mm mam illleuma, mam nolvﬂi mm DSMI. mun, aomm, ransom. re.\nmy\n\nNave 3 uumnw NW5: me am» mmrmnammtm an halo a gm nut its sad: :2 mm\n\nM r- Omen‘:\n\n   \n\n\\ |1re(1D1tat1on mu\n\n1 umverature - mm...»\n5 ‘IN:\n\n4 If preclpltaunw mm\n5 yr temperature > e- .1\n\n«, nrmwarcn: your ul|bre\\|i!‘)\n\n7 else:\n\n2 pr1nt(‘Hur ymlr mm; and mm man’)\n\na\n\nxu H vracipitaucn and lemperzlure > 3:\n\n:1 pr1M('Brinl your umbrella! ')\n\nx2 ehf precipitation‘\nhr1nt('HeaLyour ngog an-_a gtnzgg gum’:\n\n   \n\nmm\n\n‘fan. Tm Progvim trvrnlvukd rmka. bun\n—. Mn: um r..msumm.u\n-o nut ‘WI! In um.\nPmgrxm IMAUIAR\n\nWear your mm; and wvnter (oat!\nNear your boots and mum coax’"
  },
  {
    "path": "E:/Coursera/learn-to-program/04_for-loops-and-fancy-string-manipulation/01_fancy-string-processing/03_str-indexing-and-slicing.mp4",
    "id": 3352,
    "text": " str: indexing and slicing\n\nJennifer Campbell and Paul Gries Python 1.2.3 4v:.2.3 d06E6d90f5§. R9: 10 2012, 1 mm. a posman wmm a sling\n\n423456789ID|||1l3l4lS\n\nLearn to Program\n\n.|e.|s.\\4.|3.|1.|| .10 .9 .3 .7 4 .5 4 .2 .2 .|\n\n \n\nu um 5 ’ »> new\n.m.\n\n»> 5|9:l6]\n\n'Pragram‘\n\n>>> lI9.lelI1sH\n\n-program‘ Index a pasman wmm a smug\n\n?» 519:; snoeamsmng cﬁaslxlngivmnasmrl\n\n>f§°gf?'gl hm hm mcludmg an and index\n\n.I_e_m, m. Smnqs ave wmmulable. They cannot be changed.\n»> 5;:\n\n‘Learn m Yxogram‘\n\n»>.n:a1 0V23456789IlJ|||1|3|4|5\n‘earn tn‘\n>>>s|1-B] Learn to Program\n'e.u'n to‘\n»> H-1 31 -I6-IS-M-I3-|1»|| -I0 J? -3 -7 -6 -5 4 -3 -2 -I\n'e.:xn co‘\n\n»> .\n\n‘Learn to Program‘\n\n»> gm . 'd‘\n\nTxacehzck {most recent. can use):\n\nPile ‘-<,,y nanny)-, ma: 1, in qtadulv\ngm : a-\n\nTypeﬁrru '52:‘ oblccl. dues not lllppuzz item assignment\n\n»> suns] run‘\n\nTrlczblck (most recent ell! lull):\n\nm. \"<pyshel1r1l)>\", line 1, m <1nndu)e>\n§I9:l5l ' ‘Iun‘\n\nTypeszrcr: '51:!‘ objects does not support. new: assxgnment.\n\n>>) s|:5l t 'ed‘ 1- 5[5:I\n\nlearned to Pxagzam’\n\n>>) 5 I 5I:5l 4- ‘ed’ 9 5[5:]\n\n»> s\n\n‘Learned to Program‘\n»> \\"
  },
  {
    "path": "E:/Coursera/learn-to-program/06_for-loops-over-indices-parallel-and-nested-lists-and-strings-and-files/01_parallel-lists-and-strings/01_for-loop-over-indices.mp4",
    "id": 3364,
    "text": " for loops over indices\n\nJennifer Campbell and Paul Gries , Mmnmw\nPython 3.2.3 (v3.2.3:3d06E6d90£55, Apr 10 2012, 11:25:sn\n\n>\n\n[sec 4.2.1 <npp1e xuc. nu11a seas; (dut 3); on dazvin\nType ”:epyxight\", \"credits\" or \"license(}\" tax mare info\nxmatxon\n\n>>> s ‘|bccde1!ggh'\n\n>>> in: 1 in rnnqe(len(s) - 11:\n\npx)nt(1)\n\no\n1\n2\n3\n4\n5\n6\n7\n9\n9\n>\n\n>>> :aunc_adjacent_repeats|‘ahccde!!qgh'}\n3\n>>>\\\n\n \n\n   \n\ndef cuunt_adjacent_repeat5(3]\n(arr) .> inc\n\nletuzn the numce: as occurrences of . cnarncter and\nIn Idjicznt character bexng the name.\n\n>>> count adjacent r:peIt:|’abccd:!!ggh‘l\n1\n\nrepeat: — o\n\nIn! 1 1» xanq=llen{!)\n1: s[1] —A s[1 . 1\nrepeats - repeats o 1\n\n \n \n\nreturn xepaats\n\ni3ﬁ:av'ﬁ\\7 ‘ ‘ wmmm\nPython 3.2.3 (v3.2.3:3d06B6d9v£55, Apx 1a 2012, n:25:5n\n\n)\n\n(sec 4.2.: (Apple xuc. build sees; (data an on datwin\nType \"r:cpyxigIu:\", \"credits\" nx \"lir:ense(}\" fax more info\nmmtmn\n\n»> s ‘|bc::de!!ggn'\n\n>» in! I. in nnqeueum - 1;:\n\npnntu)\n\no\n1\n2\n3\n4\n5\n6\n7\na\n9\n>\n\n»>\n»> r:aunt._adjar:ent_repear.s| ‘abccdeflqgh’ ;\n\n3\n\n»> lu:s'rm1'r\n>»\n\n»> L . y.', ‘b‘, '0',\n\n»> shx&_le£t[L)\n\n)?)'pI§n§(L? _ ‘ ‘\n\nI n , c . d , A 1\n\n»>\n\n \n\n     \n\ndef 5hxft_lefLl):\n(nu) .> mm-ype\n\nsmn each ucem HI 1. one posnmu to the 19::\nand shaft :11: first new to the 1:»: pcnnun.\n\nPrecnndizxon: 1:-nu.) >n x\n\nEirst_iLem = mu]\n\nm i m mngeu, len(L|y:\nLli - 11 - mu\n\nLl-ll - first-._itesn\n\ndef count. adgacencirepeatslsy:\n tun _> int\n\nReturn me nulbex of occurrences at . cnancux and\nm ndjacent charncner bexng the sane.\n\n>» count_.:dJncen:_rep:xt.s( 'Ib::1:de!lggn‘ )\n1\n\nrepeats ~ a\n\nfor 1 m xanqe(]en(sy _ 1;:\n\nn s[il -- .-sli + 1\nrepeats = repeats » 1\n\n \n\nreturn reneats >m........m.... mah mm.“ mm:\n\n \n\n \n\n. nu smu_|u!|LI. mm :\n7  um) ~> Ilonﬂyne\n\n3 mm v... mom.\"\n\nI: smfx can mm H! l on: pnsmon to the tel zinnuvc m \"\"\"—“\"‘“\n3 m smn the um n... u. the us: mm; ...,,~. E W,\n\ns ‘r\n\nr Premmﬂunn: |en(L) n 1\n\n,5 \n\n9\n\nin nrszgmu = uel ‘.‘f.\"'\n\nn\n\n2 for 1 m rangell. |:n(L7)'\n\n:2 Ln 7 n = ml\n\n:4\n\nms Ll-ll - ms:_ue..\n\n25\n\n \n\n17 mm; = |‘a'_ 'n' 'c’_ -.m\n:3 uv1M(sMft_|lft(\\:(ters))\n19 _IaL\n\n     \n\n \n\nmm.\n\nfa... »7..:} Fmvlmurmuurnd ;-,....,> |.1M>>\n\n_ m m: naswsrerawted\nCnextnnunueculr"
  },
  {
    "path": "E:/Coursera/learn-to-program/07_tuples-and-dictionaries/01_tuples-and-dictionaries/03_type-dict.mp4",
    "id": 3380,
    "text": " Type dict\n\nJennifer Campbell and Paul Gries »> asnAto_grnue\n\nrm‘ an, m: an, 'AZ‘: 70)\n\n»> for assignment; In asn_:u_qn.d=:\npxintussxgnment)\n\nA1\n\nA3\n\nA2\n\n»> for assiqnluemc m asx-._m_gmae=\npnnuasn_zo,qnde|usiqnmen:1 >\n\nan\nso\n7n\n»> fur assignment .\\n .sn_:u,qndg:\n\npxinqassignmentz, un_eo_gzaae[ass;gnmenc1;\n\nAl so\nA3 90\n\nA2 7o\n\n»> a ~ 0\n»> lentdy\nn\n\n»> d .('.pp1e‘ : 2, s s;\n»> run, 2” = xnnnnn\nTraczhuck (Inn: recent cnll um:\nY1): \"<pyshe)1ﬁI9>‘, lxne 1, 11: <||Indu]e>\nam, 211- ‘bnnan-'\nTypesrzo unnashable type: ‘Inst’\n>» am, 2»! - ‘bannnn\n»> d\n((1, 2»: 'banana‘y 'app1=‘: 2, 5: 5)\n»>\n\n \n\n \n\n \n\ndxcl‘ Pvmorvs mcnanary mu\n\n(keyl : vaxuel, key: : value},\n447' kelm: vuuem\n\nKeys mus1 be unique Values may be dup1ica\\ed\nmum Slmml\n\nm eomams\nan remuve\n\nJenxuuu 1* vemm me numbevol kuy—vaIu: pulls m\ndict.\n\nDlrninnariss am mulable.\nDnmananes are unmmn.\n\nKeys lIIus| be immutable\n\n‘m 41 n1 4‘"
  },
  {
    "path": "E:/Coursera/matlab/06_selection/01_lesson-5-selection/02_selection.mp4",
    "id": 5621,
    "text": " INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB‘ if—statement\n\n.~ Most common selection construct: if—statemenI\nExample:\n\nguess_my_nu-ubez (x)\n\n \n\n'\\n'):'\n\n \n\nBegins with control statement\n\n5.; keyword followed by a condition\nEnds with statement:  I\nIn between: statements to be executed if and\nonly if condition is true A\n' J H :,...m ‘ .m_,,,_,‘.\n\n \n\n \n\n     \n\n   \n   \n\n& ‘ E. II  g,..u.m\n\nMa 3... 5... J‘‘\"'“' >'-“”' “”\"'\" i«— ......m.. .... n... ...... mu\n\n. . .,,....u. “M. ....m.‘._. . .......h M\n\n\\/ \\ a a _ ‘ . W . n-mm . pm. . Wﬂm . fnr'1|1ulnVvI1Eumrwr1gMVRMAH/ll .  , DC ~ .\nW, . gm. .;..,,....,,mu.Wm. .$ umuwm . ,  .\n\n,-~~‘ GUu\\mv,m4MI>evm . W. \n,_ ummbwmwmm ; WW2m,.(,.,_m.‘m ..\n,_ 33;; ;;,;:;;;,;;-1:33;; , VVUIKH    V1; HVVKV  ,,\n\n» guess_ny_mnm<r\\n\n\n., um, n mm» ‘\n\n_', J H ‘,m..M. ‘ lIAIlV&'j[_/—\n\nM‘ M S___ 4:...“ . ,,.w.. :.m.~.§ __,\n. . .,:....«. M... ...,._,d._.¢\n\n    \n\n   \n\n, .1 a _, .  , mm . am. .  . fnr‘1|wlu‘vr|gumrmm4nHhMAV|/ll . W.“ , as .,\n m. m . “W wymun/DLIuM»L>u<.mel< J/\\HJ\\I\\n V . \\\\mx\\yyv.v .\n,-~~- GUu\\mvM4MDQV:1 . W. \n\n,3 °;;;;7;;;_;:\"m‘*;;;3_W7m ; ;..m;.m «m,.,_mm.; .\n\n,_ 335;: ;;—;g;:;r;;;~_;g;—;; ; ‘ Wm [mnyuus M w\\K))(» m rwmu M 1.\n\n» gu.s;,»y_mmm\n\n., W. Ff mmm\n\n» w|urS§_rVyJ\\wnK>\\-H7?\n\n(nwvqxaxw V.“ queccvd W M...,‘\n,._ >, w J an «;~_‘:V Law W1-1;-fw\" L w  gnaw 3\n\n~:«°:\"*-.\",...«. _,... ...,..m._., '\"':-'f ':“ :;:‘.~~*-\" \"...:‘\n\n«‘-I_u:;W«>A~ - z-:3: m:;~uw:“;|'z:wym    W . , Mw..‘  .\n,; »::;:_M:;;;33_WM ;  .\n\n,_ 335;; ;;,;:;:;,;;;~_;;;,;; , VVUIIH [mvwmls   V‘;  Wrv ,,\n\n» guLvsS_ny_rNnrn<r\\3)\n\n., W. V! mmh(‘V{G‘\n\n» m.,ny,.m;mzy\n\nLn/ujxaxy V.“ quwa my mm\n,._ >, Condition: false\n\ncontrol\n\nstatement \\‘ if—e|se—statement Condition:\n\nfalse 3 J g::::.;w..=.:;::;:~;‘ L w \n\n...n.,,_,._., .\n\n \n\ng,.m.m ..\n.......... ... :22. h...... .3...\n\n ' m..mm.,.,m . \n       m\n\n' S3§1f'21Z§2'Z.‘C'Cf.’fl‘.’Z'i2 \" I <7\n\n \n\n.u..‘ X<-‘I\nVp*|MH Vluv hywmw\n\ndin 9\nmumu M W V‘,  \\\\ ,\n\n» qucssjwm mm»\n\n., W. », Nmm\n\n» ,.m,wW.n»\n\nrnwqxanw Van qwccoa my mrmm‘\n\n>, qua» m mm»\n\n«.7. V)'V1ly Im «A nave Wm\n\n., Dues‘. mmm\n\nLnmzruu‘ M mm W mm\n,._ ..\n\n>\n\ng a _ ‘ . |\\\\rv\\ . h'rpHm . 9,...” . .mmn.m . Kar‘1|wlu7vngv.\\mnvmgMWRMAHJII . Ymmuh r .1;\n\n«mm m.m..‘\\ W ,H.,,(V  ‘.,..,(, W ,, WOlKSDa(e\nName . um\n\n  \n\n1f x = A2\n» fprinU(‘Congvats‘. vuu guessed my number!\\n');\n- else\n\nfnr1IItfl‘TLm mg. Yry agam.\\n')\n\nCommand Wmdow ®\n\n>> gu2ss_my_numher(3)\n» guess_my_numher(D)\n» guess_my_nu...uert2)\n\nCongrats! You gues my number! “'“‘*  ® 7\n\n \n\n \n \n \n   \n    \n   \n\n:9 3; :22: ;_,.. =.:;::’;:' L Ir   ..r\n. . ‘MI’ W. ..W.__ -2-M ~.~::::r~--~ 'r.:-\nV . aa-‘ mm,n-m.w.n.”..”..m..m.m.;.m.m..y.w.m,Wm..4.u.,..Vmm,..\\..m ’._\n\nmi-ma aum_ny,mnmu\n.~ x , 4:\n\n«Wm m..m.. W .M.,‘.  VH1\nM\n\nVnrnnx nu/hm Vuzgm . »\n\n \n\n‘l|4r\\»'wnyVnuml»4v)4:::E': .2\n\n   \n\n \n\n» ~1un;sJ\".v_rmnc:r<5>\n.. W, Ky mom\n\n» ¢uu.,ny,W.».¢7»\n\nmmw Van WM M, W...“\n,, quuw, VNMKVU\n\nNut nuhl, K/ul J l1D<)<,<)uA’53\n\n» uw.«,m mm»\n\nnW.w Ynq guuseu W rm-whnr‘\n». W, W mm an\n\nYuu van m Mm\n\n» gu.sW_n.m.u»\n\nVan mg. m aqan-. Lead Vnstructorz Mike Fitzpatrick\n\nCUWCLNUW deslgﬂl Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas"
  },
  {
    "path": "E:/Coursera/matlab/06_selection/01_lesson-5-selection/03_if-statements-continued.mp4",
    "id": 5622,
    "text": " INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB‘ ., J H 4...“. x\n\n \n\n\\«4‘I gap\n\n. W.‘ '\n1- .:.y_.r,m..\n\nr- 25:3 33 2E3.,.I,Y§ilI.“,l1 SJ\n\n  \n\nKIMWHM & E _,\n\n.m._,;._,,— .\n\nL; tr  um.,n .3\n\n....-..m -.. ...... hm...\n\n“\"\"A.‘J~_>._« -\n\n‘ .‘.n..Wu..q -nu  ..-m.w». ,..m.m\n\nW. KM w,..._..,.m»\nn q ,, .\n..mm Sumhv/. x.\nmm. 7»\nemu n .\n«Wm nmmax, a-,\nn.>LV1\\)t , 1‘\nVprnnxvl \\uc>ﬂa..\nM UV’ 7 :,\nmum .m.m.\nany mm 1;\nmm ‘. 5\n«mm m.‘.,.«. a\nHJY mac , 1,\nmm ‘. D\nwnmn F MIR). 1.\nmu». 1.\n(mm n 1\n41>uMHSmm4v(.l.\n<uv_wP* . 1\ndie\nU day,lyDt 1\n\n.,mm .m ..,.u ,‘ ,,\n\nm.\n~wm W» ., A ....._‘\n\n \n\n \n\nYnn :VaY\\. m mjam\n., qu(,,.»~ Hun-DCVMX}\n\nmu m... My W...\n\n|V\\rr\\ r wrvvrm . man. . 'MUﬂLu\\nAn1\\ . far'1|1ul4vVvﬂEumrmrw mum... . Mm. r as\n\n y.\n\nA‘\n\n+\n\n   \n\n9; 1 Jm\n,2.“\n3m\n\ngues5_my_numhev.m\n\n \n\n1 day_aLwcekm\n[function day_uf_weekln)\nif n : 1\nfprmtf{'Sunda‘/1'};\nday_type 2;\ne\\se1f n = 2\nrpnnm ‘Monday, * >;\n\n \n\nday_type : 1;\n\nelself n :\nfprmtH'TuesdzY\ndaLt)/De 1:\n\netsen n ._ 4\nrprmm Hednesday,‘};\naay_:ype 1;\n\nuser n : 5\nfprmtf('Thursday,\naamyne 1:\n\nelsen n 5\nvprsnzfwrmay.\n\n   \n\n   \n\nrpnnm ‘Saturday,\n\n   \n\ndamyne ;\nelse\nfDr1ntf('Nmnber must be from 1 to 7.\\n'P:\nreturn\nand\nif day_type 1\n\nfprJntF(' whxzh :5 a week nayxnp;\nelse\n\nfprxntF(' wmch ;s a weekend day\\n‘);\nend ‘I’ J In\n~:« D-:~ 5': ’f.'.Z'?‘ ' \"Eff\nV K, i a, _ \n,‘._.‘w\n\nr- ¢.y_.r.m..\nr- 253$ 22 ?E2.,.I,Y§lil.“,2 J\n\n  \n\n4...». V\n\nA\n\n\"M 1- 5- J ......w ..L... .......\n.... ,1‘ ._., _, . ...... *=\n\nlhrn , wrvvrm . mm». . mm  . fnr‘1|1ul:vvvﬂEumrwng ».uM.</um: . mm r .1;\nV Lmvvmwm }'Hl§v\\mmuuvnI' ‘J/\\HJ\\B W\n\nmun W. mzunm um-.m wr>....m+\nW. KM m,m_..,.xm'\n4;nnxH sumw. :,\n7.\n\n \n\n«Wm n.m.\\. a-,\nn.>LV1\\)t , 1‘\n\nmm V, :\nVprnnxvx \\ua>aa».\naw Wilt V 1.\nmm; M W.\naanwrr 1;\n\n5\n\n \n\n \n\nvvmmu vm.‘-um. a\nHJY W 7 1;\n(‘\\)k’]4V|r D\n1(>v|MHF um. 1.\n.mm , 1,\n\nmm n 1\n1y>m\\4A<mmw.l.\n\n \n\nmm» . 1\n(ls:\n\n4.,..m.m..,‘, W [k M ‘. M “ y,\nn M W 1\n\n1/mmn .m‘ ‘n-«run\n.u.\n\nhymn! »<h)(h A541 mm, mm» M\n\nmmm. mun .5 A ...k nay\n\n,, div .7: «(Kl zw\nNmhrr W In W“ . U) 1\n\n \n\n\"\"'~M' L v v»; 1\n\n  \n\n   \n\n   \n\n \n\n \n\n \n\n«I J In <::_‘:_ vwﬂ mj‘_‘::”\"‘ L Ir  a..11..1.11 3\n11.. 1.1 1... A‘ '- Xv .1....111. 1.11 1.1.1. .,,1.1.1. 1.1.4\n. . . 2,...“ *1... ...._1_1m_. . . 1.... 1...\nV —. a a -1 .  1 11-111111.11111.1..  . 111.1..111111.11.11111111.1... 1  1 11 1 1\n11 1111111.. .  1111111.11111u11111111,11..111. 111111111 . 1 1111.111. .\n; ~~-~ 1111,1111111111,111 1..,.11,....111 1 1111. 1.11.\n,_ 4» ~'mw=e;gWm 1 1111-111 ¢.1,11_..1.1111 -.\nP1111111” I , MW,\n;;;;;;;1;:;M;1;1_x;;;;1;3 1 11111111 511111111. 1,\n1  11  11 ; I\n1 11.11111 11.11111. 1,\n1 1111,1111 = 1,\n1 11111111 111111,.\n1. 111.1111 — 1,\n11 1111.11. 1\n11 11111111 111111111.\n.1 1111111 11\n11 1111.11. 1\n11 111111111 1111.1.1.1.. 1\n11 111,111.11\n.1 1111.111, 1\n11 111.11111.1.,.1,\n1. 111.1111 , 1.\n11 111.111 1\n11 111.111.  1.\n11 111,11»...\n11 11..\n11 111.111.111.111  .1-1111.1 111.\n11 \n21 ~ HdJYWl>t x\n11 11111111 .111111 1.11\n11 .11.\n1. 11111.11 11111.11\n\n1.11.5111. much .1 1 .111 111\n\n,1 1111111111 11\n111111111111 11111 11 1 A:\n\n \n\nM. mm % , ,,\nM“ ' ”\"' m.~.'.4\n ' ¢.,,n._.,,:;\"; -.\n\nu...» my numbvv  2 'H ‘ ’”'““\" 5“‘\"“\"> ‘v\n\nr-mm W /'\\AMDQV_»aI\\u>H Sm\n\n \n\n \n\n; mum \\uc>na\\.\n.. xnmvvv — 1.\n\nu aw ‘. .\n\nu mum M W,\n\nn mu» 1;\n\n.. mun ‘. 5\n\nn ummu m.‘.,m. a\n\n.5 mm». , 1‘\n\nn a,q.«‘., D\n\nu wvmvu s M. 1.\n\n.. am». 1,\n\nin mm n 7\n\n2. Vl>v|u\\4A ~.mw, a.\n\nn <1ayJ17>e , 1\n\n11 (ls:\n\n1» , «Wu. mm.  ‘ Kk M ‘. Vrv 1».\n27 .v M mx 1\n\n2: mu-1H HHVHV my (‘/57\n\n1. ug.\n\n;. ﬁnunnw »<h)(h A541 mm, mm» M\nn UM\n\nmmm. mum .5 .1 W nay\n\n,, div .. «(Ink zw\num” ms! In Vu/u \\ U) 1 A:\n\n    \n   \n\n \n\nM. mm } , ,,\n\nyd\" ”\"'m.~_'.4\n2  .  ¢.,,n._.,,.;\"; -.\n/» 33;; \";“:—:‘_:2\";;—:‘_:j;::—;: . .;;.‘...‘  ,.\n\nw..1ma.yT.mn .5 .1 W nay\n\n,, div .. «(Ink zw\nNmhrr ms! In Vu/u \\ U) 1 A:\n\n    \n\n   \n\n \n\n \n\n \n\n,..m. W.“ i , _,\n..r- - -~ £112.;\nV ., a a _  , mum . Wm. . Mn. . ;.m.u..,..,g..mmmm.“ .  y as ~ .\n.m..m... _  |;1wvu:y.w;m Um/n.IurM»L><4<.me W  ‘Y/\\HJ\\I W a , ‘.m.\\,‘.. .\n; ~~‘   5.. .,» mm . W. \nL w w mu .  d.,_.._....xm -.\n, HM<u_rvWJmMl>orm I M W‘\n335;: ::—:‘_:2\";;—:‘_:j:::—;:j . .-mm W.../. a.\n\n5 «mm ...m..\\, 1-,\n\n, Mm,» = L\n\n. mm H 3\n\n9 ..,mm mm»,\n\n.. my W I 1.\n\nn mu ‘. .\n\nn mum M W.\n\nn «Wm 1;\n\n.4 awn ‘. 5\n\n.5 vvmmn u.‘.‘.,.~. x\n\n.5 aw W V 1;\n\nu c\\:m4ur D\n\n.5 mm. s HI/‘iv 1.\n\n.. “mm 1,\n\n1. Wu n y\n\n1. wmux  1.\n\nn «W». , 1\n\n1: as.\n\n2/» «W... W...  [K M ‘. Vrv 1 “ M\n\n21 H M W .\n\nIn V/Nu-1H .m ‘ H W \n\n1; .u.\n\n,. “mm  ., ¢   M\n\n \n   \n\nmmaayi mun .5 A W W\n,, an .7: mod zw\nNuwhrr W In Warn \\ U) 1 A:\n\n    \n   \n\n \n\nM. mm } , ,,\nM“ ' ”\"'m.~_'.4\n2  .  ¢.,,n._.,,.;\"; -.\n/» 33;; \";“:—:‘_:2\";;—:‘_:j;::—;: . .;;.‘...‘  ,.\n2, HWIX ;.\n\nmmaayt mun .5 . Wk nay\n\n,, ﬂay_aI mm\nNu'wl7(rrmslM1u/u\\\\u 1 A:\n\n    \n\n    \n\n \n\n \n\n,..m. W.“ i , _,\n..r- - -~ £112.;\nV ., a a _  , mum . Wm. . Mn. . ;.m.u..,..,g..mmmm.“ .  y as ~ .\n.m..m... _  |;1wvu:y.w;m Um/n.IurM»L><4<.me W  ‘Y/\\HJ\\I W a , ‘.m.\\,‘.. .\n; ~~‘   5.. .,» mm . W. \nL w w mu .  d.,_.._....xm -.\n, HM<u_rvWJmMl>orm I M W‘\n335;: ::—:‘_:2\";;—:‘_:j:::—;:j . .-mm W.../, a.\n/-  W  Sm ; 7\n5 «Wm Hmvnm, a,\ny M.” , L\n. mm M 3\na mum ‘nod-1.,\n.. my W I 1.\nn mu ‘. .\nn mum M W.\nn «Wm 1;\n.4 awn ‘. 5\n.5 vvmmn u.‘.‘.,.~. x\n.5 aw W V 1;\nu c\\:m4ur D\n.5 mm. s HI/‘iv 1.\n.. “mm 1,\n1. Wu n y\n1. wmux  1.\nn «W». , 1\n1: as.\n2/» v.,m..u Nu-mm   M ; “ 7 “ 1.\n1: W\n,5 .. awwe 1\n2, .W.n  V) ¢ Wfk \n1; ..,.»\n\n.. an .u_.«m u\num.’ M. be Hm . m 1\n\nmmrrmen m=.¢» av wvuife mum\nErrar m day ..v -5! am 1.,‘\nH m.w,rw< ~ n I v a ca <;j'*‘~ vw mj;~im' L I:  w..m.,. .3\nNa W ,.. 4 - » ,K w tmumx .. ......W.,. turd\n...,,..m. ﬂ... MJLLJ . ....... ...\n; an °' «av vv . W..m a.,_.;_....xm - .\n,-  nurvberm I _, H\n,. 33:3: :;—;:g;;;—;;;:;g;r;; 3 Qwmxﬁ  x,\n\n7 =1‘\n\n9 ﬂaunt! \n\n.., WW}.\n\n.. ‘, .\n\n., aaywrm L\n\n.5 mjyw 1. \"\n\n.5   1,\n\n.; 3%.“. 1,\n\n1, (hr\n\n27 ,.W,.x .\n\n7;    »\n\n,. M.\n\n \n \n   \n \n \n  \n\nmwm 'UH:'|N av MIHJD c a.w_.m\nM. W‘ a-y,vL»\\«w .1»\n\n,¢ ¢a,,xyn. .\n\n., u.y_.,r‘.(m N\n\num, W In Vu/u x m‘? if—statement summary\n> if—e|seif—e|se—statement:\n\nconditional\nblockl\nconditional\nb1ock2\n\nconditional\nblock“\n,‘S3\n\nblock Lead Vnstructorz Mike Fitzpatrick\n\nCUWCLNUW d€Sigﬂ1 Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas"
  },
  {
    "path": "E:/Coursera/matlab/06_selection/01_lesson-5-selection/05_nested-if-statements.mp4",
    "id": 5624,
    "text": " INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB‘ Nested if—statements\n\n> Here is another version with nesting:\n\nfL‘CL;On ultinnte_queation_naz:ed2(x)\n1: x <: I2\n;: x 2: A2\n\nEpxintE[‘Wnu‘ wnu nw:wor»n .ne 5ne:L‘o1.\\n‘7\n\nfyrin£f{‘Tuo Lmall Txy ugu;\n\n\\:\\‘)7\n\ncad\n\nfpx1n€f(‘Tuu bAg, Trv . 13 \\n’); Lead Vnstructorz Mike Fitzpatrick\n\nCUWCLNUW d€S>gﬂ. Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas VANIIIIIIIHLI‘ V UNIV? H’o| I ‘V’\n\nVIDLW"
  },
  {
    "path": "E:/Coursera/matlab/07_loops/01_lesson-6-loops/02_for-loops.mp4",
    "id": 5628,
    "text": " INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB‘ Loops\n\nThe loop Is a new control construct that makes it\npossible to repeat a block of statements a\nnumber of times.\n» We have already used loops without knowsng it:\n>> n = 1:5;\n» total = sun-(n);\n. MATLAB uses loops internally both to compute\nthe result of the colon operator and to compute\nthe sum of the elements of the vector 11 above.\n\nImplicit loop Execution\n\nSet total to 0\nSet n to 1\nExecutt Add n to\nequals 1)\n\nSet 71 in Z\nExecutt Add 71 to\nequals 37\n\nSet n to 3\nExecute Add :1 to\nequals 6)\n\nSet n to 4\nExecute Add n to\nequals 19)\n\nSet n to 5\nExecutt Add 71 to\nequals 15)\n\nPrint total\n\nof a loop\n\ntotal (tomi\n\ntotal (total\n\n \n\ntotal (total for~|oop\n\n. MATLAB implementation using a for—loop:\n\ntotal = 0;\nfcw n = 1:5\n\ntotal = total + n;\nerr;\n\nEpzintf ( ' :0-:31 ecyal 5 Sd\\z1’ , total) ; 4 a» J  2 _. v;-ff-_'_‘__ _g:;~:;: ‘: ,.._.m.. 2,  I\n\n.....u.n,:...u.»... 5.. -1\"‘ ~' ..,.._gm... Mu \"\"'”\"\n\nW. . . Dru ........ ,c.......... _‘<..(...... . . .\n\n.» V 3 2| » Ultk » mwam V nvarbux . wnmmmm» » (nmmmv>'VG«1uVrvvmw-rjwwxh mun v mmm. v Vexuv-HI; ~ yr\n. W.  .  \nfwwm 1 Ywuvvmv >u'unlu|V(NY .\n ; 13» —:N\n;r-=«-mm . xuut — (Dl4\\ . \nL  71! § \n.Wm,_m 3 .W..‘    ....‘.., mnajm » Drnnhox » My Dtxnmeuu » Comvulevwosvam rug wm. mrua » Tum\n‘ E .1 m E/IVIZDIJN/DH1pbDX/MYDOCLIMEIIIS/CUIUPIIIEI Praqvammmg mu MATLAE/Tulonals... (9 x Workspace\n\n \n\n  \n\n \n\nwmmmpm - + Nmu Wm\nmmcuon smncuprm I EN 5\n\nO ‘ xotal 0\n‘ Var n = J\n\n \n\ntotal mm . n:\nand\n(nrinm ‘mm equaxs ud\\n',ma1):\n\n \n\n \n\n» 5um)ntup15)\ntuta\\ annals :5\n» summ-mun)\n(ctal eauals 55\n» summupuaa)\ntutal equals sasa\n» sImnntu|I15l\n\n2 tntal = o;\n\nx~.I<>>I ﬁt J '3 ;m.m,. , W_,,. .\n\n__ D_ W M». » ..m.. mm , 3 .\n\nW “S m..m.n\n\n....\\..m.. M ..n.... W4...“ Mann!\n\n \n \n\n \n\n. . ,_...w. _r... m.w,__, . . MCOKK ..\n, , 5 ,3 __ W... . Mnamv , M... . MyA)5<mnrrvn . (nvmynvv>'vuqvmnmnnw\\(hMAH-Wr n..m. . m..ra.‘ ~ »\n:.m.»u..m . gnnm .‘....‘_.,m.~.W..‘ 74,»):  Wm...am....m.mmm. Vmumx. ..a»...m .\n, ...... gumwhalm .  W\nI mww MUM wnnlunﬂll\nM.....m.k...‘. , W, ,\n,-;;;-hvhy .m,m\n, _“~[_“‘:vm uzut r.,u\\‘.‘,\nmm W\n\n::<»m....m vwm lulu .¢.Ww ,m.n\n\n     \n\n,, §um\\Nw4>r\nu1L.4\\ <q4a\\s 1;\n,, W.‘ me»\nmm mm ~,\n,, ;umnKAp4l6ﬂ>\nnu.” mm/\\: sass\n., «,m..mm\nLam u‘\nlat-1| mm u\n».» V Parts of a for—|oop\n\ncontrol statement\ntotal + 11.’ — body\n\n \n\n£pn.ntE(‘ .:\\~ ‘ n nm...L;  7‘ ,tota1)r Look, Mom, no colon!\n\n. Here is another example:\n\nUS: = runaway: u assigns a row vector of random numbers\n\nW x = list\n\nm x > 0.5\nspnnm .\n\n \n\nzpumn\n\nmadam number 0.141590 is small.\nRandom number 0.121750 is small.\nRandom number a 9157¢a is large\nRandom numbnr 0.792210 in 1.11.\nRandom number 0.959490 is uxg. Example revisited\n\n» Notice that we do not need the list variable at all:\n\nrm x = undu,s>\n\n   \n\nm x > 0.5\nfprintf{‘.‘.n “ H, :\n\nelse\ntpnnm .‘im.<Zr\"v nuvbz: ,. _‘ :.‘.1‘ . w ,x)\n\nma Observations\n\n. The values assigned to the loop index do not\nhave to be\nIntegers,\nregularly spaced. or\nassigned m Increasing order,\nv In fact, they do not have to be scalars either:\nThe loop index will be assigned me columns of the array\n» Any other control construct can be used in the\nbody of the for-loop\nmsratements\nother loops\netc. at J -.m..k. ¢ ‘.7. <\"\"'’'‘’'“ l‘\"’\"‘‘‘“‘' T ..,..n... = =*‘“”\"‘\n: __ W -:(_m_ b;,_ S\" .,W..... :......“.. W ;M_ 3 l..........,...\nM. . . W. ...,... dc....~...... ¢(..(...... . . . 9....\"\n,  /_ B ‘  \n\n1. Wm M , J H ;,mM,\\\n\n. ‘ 3 z» .\nu.‘,_.m.‘\n‘. W.\n\n \n\n; Wm M\n\n \n\nIAVMI mm,\n\n‘mm! _, ;. i .\n\nIf F.\n\n \n\nWm\nW»-v  I--M v 7- .   Mm:-A W.\nW. MW” --s- . mw\n\nmm H)“ .m_¢m»\nhsx , randilﬂl: . ,\nVar x nu\n»» . , . 5\nmmm mm MM, , .«\nuse\n\nme» xx .»\n\nmnmw.m\n\nI 5' J ,3 ;m.m,. , m..H,,. . D._ E 9 M Q\n\n        \n\n   \n\n \n\nnu aw 5. Accra». - “mu. ummn <1. ; 4 .,..4,.mu Kunmue Kw -\"'’°\" ., L... V q...\n. . Hm. WWII MWJ . §<_,m-m(uvv¢ .......\n;~;;;»_v;m 3 ..;.,,.mu.m: ‘ ‘ \n\n;:c.,wm.m , my ’ ' >\n\n;“:q~'~‘~ x— vm.‘..ux.Wm\" mm M _\n\nr. ::.::M 2 \n\n- «:5.\n\nh K». Value\n[o.a147.o.9oss,o.127a.o.9134,o 324]\n5\n\n \n\ntor of random numbers\n\n\\arqe.\\n',x)\n\nsma11.\\n',x) W .L mm a\n\n5' J H _'.FvmM:) . m,..‘_,;.,‘ .\n\n \n\n \n\n   \n\n     \n\n     \n\n     \n\nrm :2.» 5... -=vm». . 4“... (.,....m <5 :4 ‘ u..¢..m. (unlmue in -\"\"’°” mum“ ~ on\n- - - _.m. . W. . MW; 3 . U.w,.. .......\nV ‘ 3 z. rt/«ax»/M1ra|f“'UVIDHM»MvUc«<mmnnvklvwpwvvvntqmmmunqwwlhMAHAVv W ..‘.\\..m T .\n:.‘.,..M.‘ . ‘,‘.‘...W..,.‘,,‘..—..   .\n- ~-M W . ‘ W. \n4 Wm ,  .mm» .« ‘  w..mmo.mm.mm\n;:;;;;~k~m 3 us: , ,.mn.m: ‘ ,  . M . 1- am\n,_ kg-m‘ ., 0., Ant\n.,_‘;;mw~»->~ 5 V. : .. . . ..s\n.,,,,,,,,,,_m 3 d)cVur1nr\\>hnnm ‘ 7 ..\n'.‘‘‘:‘>r‘;~~ 8' ‘Ymwlﬂ Rwwdurv W M ‘\nm.m.;.w..‘... .\n- Mrs)“\n\n/ K». 5' J H _'.FvmM:) .\n\n \n\n        \n\n;:;;;-hv~«~m 3 ..;.,,.nm.m= ‘\n;g'm~»r~ 3, .Wm mm W\n\n(y'uFHv:\\Vm.‘a.»\n\n_ N r_;‘mn.\n\n/ K».\n\n \n\n \n\n1 M M\n_. hymn\n\n.,._m.,..\n\n \n\n \n    \n\n.«\n\n. . Wtwor an\n\n \n\nW Ml)» u/mo mu D9134 mm ..=.m. - ...;.... am‘ ‘It ,1 , _,,__,M ,m..,n<.m.\n\nif 3 H _-,m..“.. V‘ ‘‘,..,L. Q ,, ,L._y..m G\n\n          \n         \n\n \n\no,.. 5... ....\\..m. mm. Slaw  ~ au-\n- - _...w - ..r.. - MW‘; - g,....;.... 9......»\n- — a 2. , rt/«¢v\\>N/NjnvrA)v/IBM:»Mv|)¢<mv1<nlvrknmpmrvvvaqvnwn WVKHMIUAVV  ~ »\nm....;.a.‘ . 5 mm  r»-umm.w.1,n  r   .\n- mm mm . ‘ W. \n7 mm 1  . ..mm» .1 .  ,wmmo.mm.mm\n2. u : 5 , . ~ 5\n, 3 ‘.5. , randllﬂl: ‘ . P\" 1. um\n_+-e-mm 4, (UV! hat\nI, InAk[)umu\\e)m S ,_ , _ ‘ _ 5\n,\\;”~;;mm 5 Vunnxfk mm  J .t  ..y\n lbxlm ’ N“\n_  2, ywm Rm,  '1 .\\  ,u\n(urwMvu:\\vm:an .\n. « , 5. vr 9 rd ~:‘::::;.  “:21,” v  am-~\n~.. :2... 5‘ » a I v .......m. M M... _,..._. Mm\n. . _,..‘... ‘mwkd . . Mvmu u...\n\\( ‘ 5: RI , » W. . mnajm , mum. . wucmm.» » (mm‘m«mmr.w.n-.«.m . Vulm .3 Vnwrl/I1 ~ L\nn.m.rr,«.‘ . [Minn .,w.w.m‘.;,.W.M,mm-.mW..‘».‘! . ‘  ~\n- mm W. . W. \n_ f;wv;_~;w‘ M 1   ..M_m» »\na\"‘.‘.”kIL‘m”.‘.m ‘ ‘W ‘M\n\"‘'-*-w 2 \" ‘«3Tn3w..m ........ \\1 ,, m . \\n‘ H\n~::m.....m , my 9- r\n§3Q;gf‘;'t” xr Ynwxnlffkxvuwurv M. ., ‘. M.‘\n\n   \n\n-\\u ,3.\n\nRnunnm  . exnzx .< hﬂqr\nHarman mm m 9n§7~I1 ,5 me.\nmm rmnixr o my .5 3V'J\\\\.\nmm  0 9mm ,. um.\nmm H1/M)¢V . swzvsa .5 hvqa\n,, mm workspace\n1 1 r \n\\ rand_:ha:k.m ‘ Ioap_xes«.m Nam“ Va“-e\n\nkunccion Loop_test(N> E\n- tntal : 03\n\n- for 5 : ma\n\n- n\n\nn : n + 1:\n\n- total : total + N\n\n— ml\n\n- fprin(f('Yo(a1:‘-d\\n'.(wtaUi\n\n \n\ntnmumwhww-a‘\nI\n\nCommand wmdow re\n\n» rand_check\nLu 5;\n\nRandom number 00514724 is large.\nRandmll number 0.905792 is large.\nRandmll number 00126957 is small‘\nRandom number 0.913376 is large.\nRandom number 0.632359 is large‘\n» mgm\n;._ » J H  ,  ,m. w ,5 mm L,\nI V,    um * a «  MM W. SW. ..V.V.\n. . ..‘H\\7I4I ,VV... V_V,u,_J . . ....V.. V.\n« g A _ V WV‘ > M7173]!!! V UV/‘DIM: . MVUB(uW1t7vlV V VVVVVVVVV»-nsa»VVVVVVVV.V~VVnmum V VUKIIHVVM V Vmwm ~ L\nEUVV\\’l5aﬂU . ZHIHH .VVVV.VV..,.VV V  Mpiuu   . X  .\n3 mu V. .  VV. 4 W. \n,,‘f;;3;_~;M M V   AUUVLWQKYNV .\n:7;;:_j;f;; V 133 , V N\n3 \"|‘;DAk\"ElUHD‘E)HV 5 7‘ V . V, 1 '\n,W,,\"M 3 M V.VV.V , lD(i\\ . IV.\n';u>-7:-~*~ V VVV.VVVV.  V‘ H\n\n \n\n \n\n\\.V :V.\n\nKJHUKVM  VV exnyn L4 hﬂqé V\nVV.VV.VV 7! ‘Mk? V. gm»: )5 VINE.\n\nKnndvm 7V\\Vv>B(‘F 0 H5987 )5 VVVVV.\n\nRMVHUM H\\Nl)(‘V VV M3370 V. VJHKV\n\nRiuﬂam HA/N)4V V .V.VsV A5 \\iV(]B\n\n,, VV.VmV\n\n., VVV. mus»\n\n2\n’ V\n5\n‘luln\\ 7»\nV. “V 4 * J  9 J ;’2:Ii';‘.'.1. :i;”fZ‘.TLi — \n;: ~.~ °-.~  \"zr.\" ..:.::.. dz........... ' \"N am\n\n» -M H z . m.m.m\nmu —v(nr. V. FdIrm— use.<mm;aumr).om J\\4vDn(um=*-n ‘L npuls-rF‘:nL1IaImmn Workspace\n\n\\ m,.,_,.. H» Mame: me\n\n1 rfuncmn f : fibn(n) E #5“ 5\n\n2 - if ( ~1sscaLar(n> H n < 1 H n w fix(nH ;' \" 15%‘-5-5-21\n3 - errwr('n must be a posxnve 1nteger1'); tliv I5-5-7-B-Bl\n4 - end Hw\n\n5\n\n5 .\n\n7 .\n\nE ' .\n\n9 - f(ii) = f(i1»2) + an-1);\n1a - end I\n11\nCommand Window 6)\n\n» u : [5 4 3\n\nB2]:\n»v:[s57asl:\n>>w=u-v\nw:\n\n \n\n0\n» for 11 — 1:Lengtn(u>\nw(ii) : u(n) - v(ii);\nand\n» .4\n,,, :\n\n1,5» low. . N...’ M...‘ 1 ,, ,.\n\n\" J u ,;m.-M. m..‘.‘,,.,;.  V 5%. WWW\" _,\n\n   \n\n..« Inlumnt  .,.. .,....M. W\n\n. .  ,... WW“ . . W\n.¢.‘;;‘;f‘: .  ,, w \n‘W KruALnmuk~\\ m ‘\nW,\"\n\n \n\nn—a\n\n  \n \n\nttmmm\nN... mm. “' 5 H 33:1“: .  (.:;|“‘ '' L1 V “*3 BI'*\"*““\" 3\n\n-.. a... .... J >“ ~' 3k V v .......,».,  ..... §:‘AlurK: lurur-4\n\n. . .:mu- W... w..um_, . . Alvuuq\n\n- » a 2 , ..,\\....,..._.».n...m..m.m.n.\\.(.m.,p,L.,..mm..‘.»mm.. \\’umvuh>|umnﬁG .\n\n;.m.mm. ~ xfkusm .,m,«.mm u,...»..MW . . .\\.m..‘.,\n hbum . W. \n‘3~-aw . vmun/mr:»muLvH _ cu s\n*r=v»~w-mm 2 .  »<, 7!‘ Fun 2» man\n:¢;;;;;;; 3, ' rrrnri MU U J M.“ -nmnnt ‘i, iv .;;|7V,:,n\ngr--M 5 HIV 1.\nytnnﬂlruxm ,, W, ,\n;W..,m , ,0,“ W\n,,3r;vj_gM 9 Hm rm—2v-mu.‘\nV. uuml may HY ,\n\n| \\w«m.u;\nMIN 7 mm g  M $3.; :a:,,.‘.,, \n_,;;;;;¢;;-W my  5-\nmm. ‘\"\n,,,_,\\.w..*x\n\ni§I1Ti:.‘;Z“m\"’\n\n \n\n(umvwr .vm<,:m\n\n \n   \n\n \n\n,. M ; .. 4 x x n\n,, V 3 an\n0 1 u\n.. V:/r .. n u-nwmn\n.4‘. nun — mm\n,, A,n1n;L\\|6‘3‘H ’\n3 u\n. 2\nin m\n2 mm\n:5 . MATLAE R20l4b\n\n \n\np 1 mm: Q pg E . 2 J.\n?]GoTov Cnmmenl 3/3 3 B {R IE L‘3JR\"\"S\"\"°\" LL?\n\nIruknmnrs W\" \"‘“\"V\"\" Advante Run and\n‘HM v lndem  L‘, V Time\n\nmam eon nkuxmrnts mm\nzpajm » Dropbox > My Documents » Compuler Programming with MATLAB » Tutorials » Lesson as\n\n% Edllar - /Users/ﬂtzpajm/Drophox/My Documents/Computer Programrnln... Workspace\n\n \n\n \n\nf\\bu.m mu|.m + N‘\"“‘\n\n1 » [row col} 2 size(A); Q1 DA\n2 » for r = 1:row \"\" D\"\n3» forc:1:co1 F3?\n4- P(r,C| =A1I',Ci *A(I’,Ci; - '3”\n5 ~ and HIV\n6 — end taw\n7\n\nCommand \\N|VIdOV\\\n\\\\ 1: /1 n e 1! ? J H    L; b  g,..n_...n 2\n\n \n\na.. M ......W. W. M. 3...“. ....,.\n. . .,.... ,‘..... Mw.__, . . ...... w-\n, . .1 a _  . mm.” . W...“ .  . fnmpmnVu)gummmqw\\lAMAVVAII m...,... . ....M¢ .\n\nn 3 V Ixbo/W mum ' L...“ IAN!’\n\n,~-W Hvw ml} : mm. :1 ~ \n\n‘,.\\unvn,mnr'\\ ,,, , , ,  :. A\n\n; nlpmhm ..,. z m‘ U.‘ 5\n\n,g:;g‘-;_1;;-“W mm YV,1\\VA\\v‘KY :; ‘ ‘\n\n«$.23. m 7% fl.” §\n\nL    ; . 54 « I21\n\n‘mu-Wm .5» sun:\n\nLrmm ,. u nu ev\n\n  \n\n(Aw vwwm, .\\ W. .\n,, M ; x. 4 x x 21\n., V 5 an\n\n \n\n,. Mr .. — . mam\n.m W.» —mn: PK rmm\n\n__ 1%,. m\n»§I1\"m“m1‘;§2\"'\n\n;.m.»  N ,. L,\nW...‘ .E V _,\n\n“\"‘\"lﬂe.‘._«\n\n2, ... W.\n\n-.....m.. ...\n\n[rw new : u/ell]:\nv., . 5 1 W.\n\n \n\nmu ..‘.,.»\n\numm\n\n \n\n \\\\mL/1:.\n\n \n   \n\n. Acmrmn\nMIN 7 mm -fJl:i\n\n‘\"'wI-u- ; w  WW .,>\n\n \n\n \n\n \n\n.7.” -W\"  ‘W ‘E  .»...‘..  W. Wm ..A..\n. W. W. m.w” . . Alvmm “\n,.1~«=w-v ,, M An“ : ..,,.m;\n‘Y::f;;:;;-Mm ., mm «.,.‘.M.‘.»\n\n \n\n.. Vav .. — \\ nmvknxm\n.4.. uun—v(m.\n\nmmumu\n\ns 2\n\nm m\n\n \n\nLu,\" 3\n\n:. mm\nM sun}\nM A] new [5 Editor — /VUsers/fltlpajm/Drophox/My Documents/Computer Prugrammin... (v) x\n\njvibum ~ mul.m 1+‘\n\n1 - [row ﬂit] = sizel/U:\n\n2 - for r = 1:row\n\n3 — for c = 1:cn1\n\n4- E(r,c) =A1r,c) =orMr,c);\n5 7 ‘ end\n\n6' end\n\n7\n\nCommand Wmdow\n\no -1 1 o\n» far 1: = 1:1ength(u)\nw(11') = ulii) — ms);\nend\n\n0 -1 1 o\n» A = randi(10.3.4)\nA =\n\n9 1e 3 10\n\n \n\n \n\nWorkspace\nName A Mm» \\( w....3,;,,._~  D E Wm__M\n\n \n\n93:1‘:\n\n,(.m.. ,,L.,y.~ (unwnem/5 ,, .\n\n \n\n     \n\n.. M -. lulu-nu  Iuna-I  ..,.\n. . . __....  ....ww . . M. ...\nV « u an , r |/\\\\-u . 4‘...-am 7 nvm>4>1>x . .<yomm.m V (mm. Ywowuuuwmnmvm-A/UL/xn r mm‘, . “Siva.   . ,\n I . (rm: ml!  H \n“ta-<xkv;=wV . mm ,/.u.n my (\\ ~ m.\n- ;;:;:,... n\\ my  5\n\"':)r:d>:‘§:n‘:km\n\n \n \n\no x a\n,, .9. .. 1 mvgmm\n-Am , mu) , mu:\n\n., . .‘.‘.mu,:.u\n\n’ 9 m 3 m\nto 1 D 2\nu run 9 ma\n4 ; nu ma\n.)\"\\U‘\n\n'u we 0 mu\nm 4'; 15 . 9 J 519.11, 1m....3,;.,._~ d V E\n\n.. 1.1 1.. -<--- -  WM 2- 1 ........  .1... W...\n\n. . . 5...... “.11.. ......w,‘1d . .1...“\n\nV , .1 a , 11,..1.11.1...1m,11.a11.,..14,».,11m..1111.111.,.1.m.1W..1.1M11m1.11..,1.1,.1.1»m.\n\n  \n\n \n\n   \n\n1..m..1111.1 41111.». 111.111.1,.m;1,,m.w11111.11-1111mn.1.1,m1,,.m\n'_ 1.” mmm .  .  W 1111\n,}w~m I 1 1111.11.11 11111.1. .. H-‘ ~ 11 W ‘X\n. W’ M 17 1.11 1 1,11. V -» A w\n_  , 111 < 1 ml  1 11.1, W111. \n‘ w-wwm . 111.11 41.11 . 11,  _ HVI 1 11.1.11. .11\n,w=-W-~v'~~ 1 11111111 V: g   2* '~ 1\n_-mm ., .11 ,1 1 o...,11<.,1W. .\n11.11,... 11 , M 5 .11. 1 1.11111 .\n3 11,1.” 1 -1 111.111\n.111\". ;. 1111.1 1.1.. xv\n ,—,~ 11. 111,11 ‘HM!/IH .1\nn:..n1,m1m\n1 \\um1nlu|1m Wm: M\n( ‘_ 4 1.1111111. 03:»\n1 ,1 1 1 \n»v¢r .1 11.11.1111 rw1.1m.,. ~\\M\n.1111,11.11,11111: ,\\.‘,.,,_ A.,.,\n\n9 1 1 n 5\n.,1 .1.1.11111,:..1\n\n’ 9 .1 1 1a\n1» 1 1 1\n.1 1» -a ma\n4 1 1111 111\nM11\n\n'11 we 1 111\n1» 11 11 1 J u~\"\"\"*‘ ~ ‘\"\"‘~»M'  9‘.  3\nI .,.. W.   W s  .u..., I Kw-ml 3.. \n. .,.... W. »...ww - . W. _\n5...;..\"; .ue«A\\,\n“ 5.,“ \"Lu\n .«......‘,,m\n\n; »  ,. , x kmgnvlul\n;\n“-r=-WW-‘m $ rarmm M“ H M\n\n.m) mm mm\npm!\n\ncnﬂ ,‘ I\n\nW mum. an\n\nmu! N:\nM (‘mu m\n\n2\n5 Command wmdow\n\n \n   \n   \n\n \n\n1 . ‘ mu.m‘ + W‘ D 1 D 6\n—— _ V . ‘ 5A—AAA44444444444444444444441i »\n;_ figgwrcnll ;m<N~ _ ,,;.,r .1engmu>\n3 fprintf(‘Work1ng on row xa...\\n‘,r>;\\ \"2\" : “(m ' \"‘“\"\n4~ forc=1:col :2\n5- e(r,c> —II(r,c> a<A(r,cH — J‘\n5 - fprintf('(\\d m\\n'.r.c>; \"' ‘ _1 1 9 _5\n7 - end .\n3 _ Va\" :>/A ram(1a,:.4>\n9 ,\nW 9 10 3 10\n'10 7 6 2\n1 1 10 10\n>> P : AAA\n\n51 103 9 100\n100 49 36 4\n4 1 100 100\n\nB1 100 9 100\nlea 49 :6 4\n4 1 100 100\n>> mul\n(1 1)\n(1 1)\n(13)\n(1 4)\n(1 ‘H ,_, ,, _, .\n.,,=.... Q...” 3; X _,\n\n‘7.\"\"..' \"'“,\"‘“\" \n\n.'_A r H. WW\n-IW) .1. ,,.,,.. ....\n\nzmm u.s..m,.m,. nmmu 1Vw'Hn\"u\\\\m7H..\nan}; -«\n\n,, u n\n‘avhvaxgqn M I u 2;\n‘_.,...m,m ; W M W 5; :1\n_.W'~*~~ ., “mm . V.\nI ....m.m.m t M 3 ;;\n“mm s rmm m‘h ,\n‘cuuﬂlvnk N ,, G :1\n“ (3 n\nu 2;\nHAILHQAHU1  u 1,\n.»\\..M u 1;\n,.m.. M ,. rm\\\nMud mm.\" Iuvhvm a.‘ N74 \\\n‘ .Mm.m u n\nu 2;\nu an\nn u\nvmr-um: an 713.! 2\n(2 n\n,2 n\n42 1:\n(2 .;\nVufkmq (/1 W. 1\nn n\n.3 2:\n(2 J;\n11 u\n\n»-,,x Jsevs > ﬁkzpajm ) Dlophax » My Docnmnnls > CompI)lerP(cgr2mrmng mm Mnua > T..mm:; > Lessun as\nE) (J Edlmr - /usus/nupzjm/orophmgnﬂoacumam:/cam...\n. ﬂbo.m >r mum x aslerlsksm\n\nnauaunnunu\n\n \n\nfur\n\n  \n\nnln :\nfor nn mm»\nfPrintf('x‘):\nenu\nfprxntr('\\n'):\n\n®x\n\nW ,_\n\n»\n(1\n(1\n(1\n(1\n(2\n(2\n(2\n(2\n(3\n(3\n(3\n(3\n»\n\nWorking on raw 1...\n\n(1\n(1\n(1\n(1\n\nWarking on raw 1...\n\n(2\n(2\n(2\n(2\n\nWorking on row 3...\n\n(2\nK\n\n \n\n \n\nmul\n1)\n2)\n3)\nA)\n1)\n2)\n3)\n4)\n1)\n2)\n3)\n4)\nmul\n\n1)\n1)\n3)\n4)\n\n1)\nZ)\n3)\nA)\n\n1)\nP - . :1 a _y...\\.,\\ . W.” . mm . Wm.‘ r m,.u..‘mmmmmm..m...‘... . ...\\.m.\n\n.4m.m rusemh'/‘uw«L)n:ahnKMvu ’nv'vm) \nr7|l\";\":7 /mﬂm avveruxvrv ml\num\num. -«\nVnrnn W U“\n\n3,\n\nu u\n., “mm . V.\n,,\n\n....m.m. m\n\nM, u n\n\n, M (1 1;\n¢..¢.,..k N M, ’°\"\"‘ ‘ ‘ ' (2 an\n NY A; .;\nmm (2 1)\nmm (3 1;\n  u U\n»-,..»,.m.m u 1;\n1-t<v1h( M ,, M\nW mm:-n wvhnu an W. x\nn 1)\nu 2;\nu 3)\nu .1\nHarlow H’! 71).! 2\n(1 n\na 2;\nu 3;\n(2 .,\n.m..‘, (/71 W. 2\n4, 1)\nr2 2;\n(2 1)\nu 4)\n\n71)) Lead Vnstructor Mike Fitzpatrick\n\nCUWCLNUW design Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas"
  },
  {
    "path": "E:/Coursera/matlab/07_loops/01_lesson-6-loops/04_break-statements.mp4",
    "id": 5630,
    "text": " INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB‘ H .3.W.. m....@;. I ,5: WWW R\n\n,:.m. . .0mIu- =m...A . , M M\"\nWV: . __..... ....m_J . ....... “nu\n\ng a _ raw. , mm , w..»~.. . MvDAh4mu\\l\\ . KmdltullxI>ux4MmAmvV|4w\\'4\\MAVLABA MW» r .w,u.,\n\n \n\n \n\n   \n\n rank . .«.m.‘. mm. mW,m,m..\nmm H mm ....u...‘...‘...‘. t WM\n' ,.WM . \\‘» mp», .. M...“ ,...m.. .. .........., 1\nL  , V E,__,,,\nt :'“:;ximp:nm 5 .m\\e ‘n . Knrwmrcznxmjar M. rnd:rv§S‘|H V m\n,,j;;;W~~ 7 u.mm»\\.\\ e,\n\"(manilnvvlm :, \n7.. 17;‘;  N u  Exvnk 1\n:.'*‘~;\"” 12 -.7, ., m»m}.»mnI;u‘ \" '\nL '»3:;u;'Tm ,. ,,  mum > mu\n V‘ .5 max‘\n.; ‘ rcazmjsun , ‘\n;.\nZ} 2......“ ‘\n15 'ar 1)‘ 1 \\cV4\\-yradmusr ‘\n:7 ., ‘.M,.M-.u > m\nZA D...“\n2;’ VWLI |ﬁVEdImr—/Users/ﬁtzpajm/Dvopbox/MyDocuments/CorrugurerPmgramm... an x\n\n4 nusE'ﬂ\"‘\n\n‘ agprcx sqmn KreakExamn|es.m \\_-L‘\n\nvqzxunplu uf suppiﬁrauinder of neratinns W\n\n \n\nxx Example 1\n95 Skwmng 15 accumphshed m me while comma,\n'15\n, while 11 < tengmrreaaingsr as. reaaingsmr c ma\n:2ad.i.ngs(ii) : a; —\nii 11 + 1:\nend\n9»; Exuwle 2\n\n95 Skwpxng xs acumpllshed wxth a break statement.\nfor 11 : ]:length(readingS)\nif reaaingsm) > we\nbreak:\nelse\nreaaingsui)\nend\n\n \n\nend\n\n9:9. Example 3\nx Shows that ror—1oop xndex retalns 15 last value\n95 after the loop 15 exlfed. 1:‘; slnular to Example 2,\nx but nmxts the setting of values to a and prxnts the\n’s mdex of the hrst reaumg above ma.\n\n, for 11 : meng:h(reaa1ngs)\n\nif readingshn > no\nbreak:\n\nmm\n\n \n\n: um\n\nf=s>>\\ H .3...4..... ......W;. I ,5. WWW .,.\n\n,:.m. . ,,..... =m...A . , M M\"\n.... . __..... ....m_J . ....... .....\n\n.. a _ W... . huwn. , 9...... . ............... . :..........>W..........m.-.mm.. W...» . ..........\n\n \n\n W... . 1...... ~.,....  W... \n’ I   ,.  .  .................. . W ».\n,  .. ......, .. ........ ......... .. ........., ..\n\n.  am... .\n- ...... .. M s\n\n:‘:v=-g;-W1»-m ...;. ., . .m............. M.  ., \n.  *‘”\"*‘” ....a........ a.\n\n \n\n \n\n   \n\n   \n\nV;.....\".. M M W‘\n:_ M;-mm ..  9...... .\n:.\"“‘;:\"~ .3  .. . .W.....»....;..‘ \"\nL V»;;;~;;;m .. .. W-—.m.... > ...\n —‘ .5 M...\n.; I ...m..... , ‘\n..\n2. .». 2......\n1.  .. . W.-..........\n1. W...\n29. .... (B x . .n.mu» NJ\n\n   \n\n14 mm: — /Users/fitzpajm/Dronbox/My notumenxs/campuxer Programm\n\n \n\n \n\n_i_pas5um.m V avnrcx sqn.m U KreakExamp|es.m L+ 115))‘\n1 -as Exnuplns of slapping rq-sum of nu-ations\nZ\n3 vs Example 1\n1 ’£ smpmg 15 accmnphshed 1n the wink: conamon.\n5 - 1;\ns - , while 11 < 1engtnrreeu1ngs> as. rean1ngs(11> <: we\n7 - :2ad.i.uas(ii) : o; I -\na - 11 11 + 1:\n9 - end\n1|!\n11 9:91 Example 2\n12 96 Sklmnng 15 acumpllshed wxth a break statement.\n12 - for 11 : 1:1engtn<reaa1ngs>\n14 - 1: reaa1ngs(11> > m\n15 - break:\n15 - EISE\n17 - reea1ngs(11>\n18 - end\n19 - ' end\n28\n21 X’: Exainwle 3\n22 1 Shows that for—1oo|7 Index retams 15 last value\n23 1 after the loop 1s emea. !t‘s slmxlar to zxeu-ate 2,\n24 1 but aunts the semng of values to a and prmts the\n25 -1 mdex of the flrst readmg above we.\n25 - 'fnr 11 : ]:‘.engm(readings)\n27 - 1r reaa1ngs(11> > m\n23 ' break;\n711 . and 6- J :1 32”“ v“ t ‘\"\"'::/U‘ _ Ir *5 amm ‘?\n.... ﬁrm 3... » ‘ '*\" ~’ \" — - 7* ..~...n.. M M. > Mr-ml\n. . .  _‘F1nI' ....w,_4 . . M...\n' ,.,_ 1 . E....\\..\\ .4 ».......w Vkldlhﬂll .y ........w. . mmm\n. W\" 2 mm.-»...‘q»u\n.‘°*'‘\"‘“‘‘\" 3 »:,..\\.x 35 9:: n no u n so gs m m 17\n,  s ., M I ml .0. 3, X: ,5 4; 9, 3,. \n_ :,..:;..m.,1.m. 5 -mxle ,, ( lernglnlrrzdkngﬂ .. ,...w4... ¢ ...  ‘.\n, ,j;;;W\"~~ 7 ,m...u..» »,\n1-  H! u  mm 2\n .3 ,; Hm.:m.W,‘ ‘ '\n .3 W:\n.7  ,\nZ) mm\n:5 ‘W n‘ 1 \\U\"?\\'»r(ad)N1sr V\n2: break‘ ‘\nIa MATLAB R2014b\n\nV|EW\n[) .L \\\nL2_, Runksection K9’\n\nBreakpomts Run Run and {Run current section (3€Enter)\n1\n\nV V Advance T\nBREAKPOINTS RUN\n\n   \n\n> Computer Programming with MATLAB > Tutorials > Lesson 06 >\npbox/My Documents/Computer Programm... 6:‘ x Command Wind\nm BreakExamp|es.m + >> rng(0)‘ V\n\n \n\nping remainder of iterations U readings =\nColumns 1\n86 9E\n\nplished in the wh11e condltion. Columns 12 J, J E. _]nm1m.. m...._¢;.#_ b ,5 WWW .?\n\n.... ﬁrm 3... 1“”*'* ‘ ~’“\"\" \"“”'\"\"—- - 7* M M... mm Mm.\n\n  \n\n \n\n \n\n          \n\n. M. _‘F1nI' .....m,__, . WM.\n. g a _  .,‘..w.m.‘.W-«mm..m...‘.‘. , ..\\..\"n.,\nLu  hrdm . m   -W.,n.  Wfm ‘. '14 HI’ n W\n W  .,..n...‘..‘...‘. . >>rW§7I\\ ....mg\\;,.mn...m\n . 9......\",4».......w.‘.m. .y . mam\n\n 3 ..z...... 35 as n as H n 3a 52 m m 17\n\n.  - - m....m », )(('JV.»H3Vmﬂ  Um   mm .7 ‘Waugh 72\n\n,-~'w~~ s  m m 3. :55 1; 4; 9/ X4 W)\n\n. :'“:Ex0v\\p:e\\m 5 .m\\e .. < u.»w.¢,..mg u. rnainngslxn ., ,2. ..  .\n\nI I... .W,.m. 7 ma....u..» o. mamas\n\n.f°_gM . X) ..... :m.,.-Wm:\n\n vm . rnﬂ u ., u w . . a W m WA 1/\n\n_ W; .2 Enlunm :7  m\n\n,_.\"“\"““ n -,-,sx..nw 1.,» m ,. 35 1. 4, w x. m\n\n .2   “ “ ‘ . \\,._.,‘\n\n .3 ,. mm-mam).\n\nt .m,m,m B Wk;\n\n W W\n\n.; ﬂ mmm.‘ ,\n2. 2....“ ‘\n16   um-.r(.m.;s,\nu ., ‘.m.,mmu > m\nZ3 W.“\n2-)— NH] Command Window\né pass-,m.m \\_avvgx,sqrl.m ‘ Kr=akExamnIes.m 1 +1 » rng(0); readings : rano1(1.0s,1,20)\n\n \n\n \n\n \n\n1\n\n1 9.4. Exavlnlus of skipping ranainder of ituratinns W readings :\n\n2 Eolumns 1 tnrougn 11\n\n3 11 Exam: 1 B6 96 14 96 67 11\n4 ’s Skwpmg 15 accompllshed 1n the wink: conomon, columns 12 tnrougn 20\n\n5 - 11 : 1: 102 101 51 as 15 45 K\ns v Jmite 11 < Lengtnrreaningsr 5.5. reaningsuib <: 100 » readmgs\n\n7 - n:aa.1ngs(11) : 0; _ readings :\n\n21 - 11 ' + 1: Columns 1 tnrougn 11\n\n9 - end 0 0 0 0 0 0\n10 Columns 12 tnrnugn 20\n\n11 v. Ex-pl: 2 102 101 51 as 15 45 K\n12 x skxvnmg 1s acunpushed with a break statement. I: >>\n\n13 - for 1:length(readings)\n\n14 ~ if readingshi) > 100\n\n15 - break; 1\n\n16 - else\n\n17 - readingshi)\n\n121 r end\n\n19 - end\n\n20 I _\n\n21 xx Ex/anml: 3\n\n22 1 Shows tnat for—1oop Index retams 15 last value\n\n23 1 after tne loop Is exlted. !t‘s s1nu1ar to Example 2,\n\n24 1 but onuts tne semno of values to 0 and pnnts tne\n\n25 1 Index of the nrst reedmg shove 100,\n\n26 r for 11 : \\engm(readings)\n\n27 - 1f reao1ngs(11> > 100\n\n221 - break:\n7:: . mm -wv\n\n \n\n \n \n \n\n \n\n    \n\n““ 3 '=' 1.13;.  Jilin,‘ ~ ' '5 W“\"“‘““ '7\n.... ﬁrm 3... » W — - ......n.. M Iwuni ._.,.m..,. um.\n. . .  _‘F1nI' ....,u,__, . . Altllll “nu\n    . F \n. ‘“\"\"‘” s .‘ ; , 1w\n, ;;=;:;;-‘gum a mug ., . m.;um.a.n.m L‘ raid gsun H m u,\n, Imam \" _v m..g.n.,u_.‘x :», _mI1!m maumy: mvmn—s\\2m\n-u,m.«.~.m q ,M\"*'- dz m M U\nV.  ‘_ W... mm — ,.m.n.m.‘\n,_ WM‘ u -.u 5...“. 2 mm» m\nL vvww 12 .s..»W. »..m.m..‘k.u..‘,‘..» ‘\\'eV)‘\\l w._»~.m, ,...4m,rmmns,mm,\n,,.'~“*;\"” 13 'DV ,. K . u»w..,..mm.;.;\n,,   .. ., ,.m;...; > m\n M ,3 mm\n.7 ra21!AD9§4uY\n.3 \nZ} 0....”\nzs ’aru‘ ‘A\\A\"\"7\\'»r(aﬂ)m1sr ‘ ‘\n:9, 1- J u~3\"\"\"“\" v ‘\"'\"'WU‘ _ r E mm... 3‘\n\n»\"”*\" ' vim\" \"“\"*\"\"é - * ......... ..n M... Wm... aw:\n\n \n\n \n\n      \n\n..... . __n... ....m,__, . ......\n.. a _  ,  . 9...... .  .  ..w........... , ..\\.......\n N... - /.....   Wm... .. M .. \n-  W  .  .,................ . » N97!) .......\\; ,.............\n . . s....... .. .........., .s....... ..  . m......\n,—  1 ....m . M... ..\n . .z.-.... 5. 9. .4 .. .. .. M s. ... :02 .7\n A  _ ...  , ....,.......-.m...m.\n.““\"\"‘\" s H5} in ... 3. .2 .. 4; .. s». m\n.\"\"\"W‘=‘m . .m... .. . .m............ M.rniI! ;..... ., ... ,. \n, 7'--\"~~v‘~~~ . ..........».. . : a, m......,\n. M . .. ; .. .. ....,..., .  ..\n,_<«~-w~vw ., VH3 .. . . . . .. . . m m. ..\n_ ww  .. .....m., .7 -W... ..\n,_.‘'‘‘‘‘'“‘ .. -..s...... ... .... .. .5 .. 4, 9. .. ...\nL  .2 n........ ...  \\VV7VH‘¢' ..».......,........s....g.\nA »~~Hv~~ ..  .. . . ..m............. M»... ;\nL   .. .. ..»..x........ > m Knhwvs . mm. ..\n .. brcuk. .. 05 .. as 5. .. .. .. ... ... .7\n .. ..,. KDHIVVS .2 Viral?\" ..\n.. ......»,.4... ... .a. .. .. .5 .5 q. .. ...\n.. PH?‘ ....\nZ} 5......\n15 .. ...»ex-..........\n2. .. .....,..,«.... > ...\nZ5 W...\n2-. ..... .g....4.... \\(  W. ;.\n\n,:.~.... . toﬁiiav =...m-.. . .\n\n    \n\n \n\n    \n\n.... ~_mI- ..,.m___,\n,~v~~~~ I znhmncl .....»..\n,;5;-;7;_;~;;\" . .:...,.... as 9.; .1 as .1 .. .a .n. m .7\n ;  “ » ‘ . m ... 3. ., .5 .5 9. W.\nI :lu:;xnmp:¢\\m S M .. . ..,g...m...m. ., ,.....w5.... .,  ,.  ..\n,,j;;;W\"~\"~ _. ...a.»....,‘. e. rc::.:nu5 W W\ngw-a-mm . HM ‘ . ., u . . 0 a . ... m ..\n, wvww .2 rm... .7 ‘WA/\\M]7V7H\nMM .. \\Exv¢\\eZ m .... ax ., ., 4, 4. .. ...\nL w=m~w .2 .s........, »m..,.................... -M... .‘,n...:. rudmq: r.......s...za.\n '~*‘;:”” .3 'DV .. . . \\U|3!Mrtid)m1S) .m.n.. ;\n  ,. ,. ,.......,g.... .  ..7.m .  ,.\n,'=~-twm .. brcuk. .» as .4 as .1 .. an 5. ... H1 .7\n ..  mm .2  Zn\n.7 ,....,..,§....  ... 5. .5 .g .5 .. .. \n.. mm . M... ..\n2.  . . a . . 0 . .... W7 .7\n2. _ .  .  m .0. 5. .5 .5 .5 .7 .. ....\n.. K7  . U I-»\\\n.5 ,, ]\\(’7V?l‘vVtid)VV§X)\n2. .. ,.m..... > W.\n:9 xx example 1\nx Sklpplng 15 accompllshed In the whlle condltlon\nii: M\nwhile ii < lengthfreadings) as readings(ii> e: 100\n\nnanﬁngs(ii) = 0\n\nii i + n\nma\n\n \n\nx Examplt 2\nx Sklvbing is acomplished witn a break statement\nfor ii :1engtn(readings)\nif readings(ii) > 100\nbreak;\ne1se\nreadings(ii)\n\n \n\n \n\nend\nend\n\nxx Example 3\nx Shows that f0r~1ODD index retains 15 1ast value\n\nx after tne 1ddp is exited. It's similar to Example 2\nx but um\\f5 tne setting of values to 0 and prints tne\nx index of the first reading above 100\n\nrdr \" 1:1engtn(readings>\n\nif readings(ii> s 100\nbreak:\n\n \n\nad\nad\nfpr1ntf(‘F1rs( reading above 100 is at lndex xd.\\n', iin\n\nas 9s 14 9s\nCo\\umn5 12 tnrougn 20\n102 101 51 as\n>> readings\nreadings :\nEclumns 1 tnrdugn 11\n0 0 0 0\nCvlumns 12 tnrdugn 20\n102 101 51 as\n\n2 Eofumns T cﬁrdugﬁ 1‘!\n\n67 11\n15 45\n\n0 0\n15 45\n\n» rngr0>; readings : randi(10s,1,20>\n\nreadings :\nColumns 1 tnrdugn 11\nas as 14 as\ncetumns 12 tnrdugn 20\n102 101 51 as\n>> readings\nreadings :\ncoxumns 1 tnrougn 11\n0 0 0 0\nColumns 12 tnrougn 20\n102 101 51 as\n15))\n\n67 11\n15 45\n\n0 0\n15 45 ‘c’ J «:1 “7‘(‘\":\"\"_ *W_ (_;”\":::\"~\" r \"5 .,.WW L?\nm .7.“ 5... » ' *\" v‘ — I ' M M... ._,...,.. mm.\n. .  W. ,...ww . Altllil VH-\n5 \"\"\"\" :um.uu wxwltvuxxmxq» I AklxumIVE\\vn t ‘ » r/mm voamn9\\= ranmnnml EM\n. g«<~:;..n..,:..m 5 M. ., . .mm,m.m LA.rL'iI1)nu§HH « .2. ., wwluﬂ\n,_W-‘Mm -4, N16 u . 2 u n e u w m m 1/\nWm 11 -.m..u.z m um ,. 35 1, 4, -47 n m\nL we-‘~<~ .2 \\».wm »,‘m,..M.m. vhw-AL -aw. ..m.m vumnq:—mnm()uS.L1o\\\n7-D\" '‘'‘m 1: brrak. as 06 u vi. 57 u an 55 in M‘ U\n-~~‘~~>-~ H. W (uh/vs .2 mm\" 2.\nu Lnmmis 1 mauzn u\n\nn .mAI' ’\n:1 -.‘..mm . ..,w‘ W.‘ van .‘ mum VVYVY‘\n\n\\\nIx “ “ H  W. .4 ‘\n25 ‘B711 amunmam‘ l H .;...7...  _,, ,.. A . B “E.\n\n,z.».».. - -¢.cu.- {annual -1. , 4 ” amww )\n.... _,.... mm“ -:~  W“ m::‘\n\ng a _ 7.>...7....... 7.............................. .....7.7..........-..7....... ........7..\\.....7\n\n  \n\n \n\n    \n\n 7.... . ./,r...7 .7...-.,7..7..»,,77... 7.. \nI mm   .....77......... . » 77.... 7........; 7........77..\n' ,. . . 9...... .. ........ 7...\"... .7  . 7...... —\n,7-«Wm . 7...... 7......\n,;5;:;_;g;~ . ......... .. 9. .. .. .7 .. .. 7. ... ... .7\n 7  ... ... 7. .7 .5 .7 .7 .. ..\n, -mm-mum . ..... .. . ..7._,...7......7.. .. 7........... ., ... .. W...\n7'--W-WWW 7 7.....7.7.,. «. 7....7..,\n,. W . .. ; .. .. ......., . - 7.... ..\n,_r«~¢-M 7 .... . . . . . . . . ... 7.. .7\n_ W» .. ......, .7 \"Wk/HIV‘ 7.\n,_w-W‘ .. -75...... ... ... .. .7 .. 7, .7 .. ...\nL  .7 .7.....7... .m..,,...7....  -77.... 7.......,77......s,.....\nA v->=;‘~~~ .7  .. . . .......7........ .....7.. :\n,_ wd. .. .. 7...7....... . ... 7...... . .77.... ..\n,\"\"»~r-M .. .7... .. .. .. .. 77 .. .. .. ... ... .7\n .. H»: ...m .. ..7.... ..\n.7 7.......,..... ..7 ... .. .5 .7 .5 .7 .. ...\n.. ... ,, 7......\n7. ....... . W... ..\nZ} .-.z........ 7 0 .7 . . . . . ... .777 .7\n.. 7  7,    ...........7......\n7. .. V‘ . kwh‘ .  .7. ... 7. .5 .5 .5 .7 .. ...\n..   . . . . . 7 » 77.... 7......” ...7...... . ...\nzs .. ...»7.-.7......7.7 ....m...7.7......\n77 .........\\,.,...>... .. 9c .7 .. .7 .. .. 7. ... ... .7\n2. .7... .7.-. .. .77. 7.\n7., VNI ‘.2 .7. 7. .5 .5 .7. .7 .. ...\n.. .7. A.» + J '=\"‘CI1;‘f:.J;1ii’f.*,‘ -> *2 w~~«~~ 2*\n~.- “:~ *-: ¢.‘. . W . ....mU  ':\"  \n\nA ..‘..Ezx‘§nT.,m\n\n \n\n, tnrmvlr -\n\n \n\n“.3! . “ , .\n.m\\e .. . mgn.»m.nqs; M. m..m;m.‘ V m\nn..a.».,»m e,\num ’\n-.-,m..7m\n\n!ar .. 1 \\m.ma.m;\nmm’\nm.m;m.‘ ,\n\n \n\nV» mm. ;\n\ngm Hut W W ‘MK: rrV)‘m~ , W W,\nW.» UM W |\\ um .. 5 »..‘..,, ,, mm. ,~.\n\nmu D1)l* W \\c'.vu1 .- M5 M7 Dv1wn*grm\n'ar 1) u 1 m.g«i.4mam.;sv\n\nH .m.Mm.. . ma\nmm.\n\nmm W. van , .‘ ‘, m.\n\n \n\n» nvgmr ...m\\ : ramlnlnmi 1m\nmmm\nrnnnmcl muqhn\n\n55 so u as u u\n\nmz m 3} xx: 15 4;\nraangnws ,\n\nKulwuv, . .»W.n u\nn 1: u . . e\nmm, .7 =.‘.W.m In\n\n.. mm ymm , ranmxiusmlm\nrrauxnac ;\nmm . \\nn:u-Va n\nLnhmrs x2 tnmuqn 1u\n1n7w\\ 3! us as -s\n,,m.m;\nwaumm:\n\n(alumni . uvmqn n\nu e e a » 0\nLnlmms H Vtrmlqh 1?\n\nIn M 51 as )5 AS\n» mm w..m ; ra/mun: . 1.‘\nmzdyvu)\n(nmvmc . .»...m u\nan 9c ,4 an m u\n1-12 m s. as 15 ..v.\n\nya\n\n9/\n\n97\n\nno\n07\n\n52\n\n2.\n\nix\n\nm\n\nm\n\nm\n\nm\n\nm\n\nm\n\nm\n\n.92\n\n \n\n17\n\nu\n\nn at 3 Id ‘-7’'‘”‘‘‘‘\" ‘'’‘‘\"‘‘’’’J ' B *5.‘ .a_....«..... L‘\n\nr . ./5.... _.... ....mL_, :\" \n\n5 , .. a A ..><...........................n..5.......5........................-.W...............5......\n\n \n\n \n\n \n\n \n\n      \n- mm  .............. . » ...... ........: ........5-_...\n' ,. .  ........ .. 5........5 ._..... ..  .. .......55\n7...... 2 ......5. ....5...\n,;;;;;;_;g;~ . ..,-,.... .. 9. .. .5 .7 .. .. 5. ... ..z .7\n 5  .. ... 5. .5 .5 .5 .7 .= \n. \"\"“*=“'>‘M 5 ..... .. . ..............g.. .5 .......5..... 5, ... ,. W. ..\n . ......,.... 5. \n...... . .. ; .. .. 5...... . ........ ..\n,_wu-mm 5, UM . . . . . 5 . . ... .5. .7\n_ W  .. 7...... .7  2.\n,_.\"~‘~‘ .. -.-,5.....7 ... .5. 5. .5 .5 .5 5. .. ...\nL  .5  .    . . . .. .,....... .».....5,........5......\n,,—.W~\"~ .. .. ..(.............5. ......55:\n».=~~«~ .. ..  ...5.... 5 ... ....w.. . ....... ..\n .5 brcuk. .. 5. .. .5 .. .. .. 5. ... .. ..\n-wwv .. .5. ..,....s .. thmuqh 2.\n.. ............, m7 ... .. .5 .5 .. 5. .. ...\n..  ,, ........\n.. ... ........ :\n.. ......5 . mrmqh ..\nZ} ..E....... . . . . . . . . ... ..7 .7\n.. .5........ ., .....,,, ..5:  ..................\n2. ..........7, ..7 ... s. .5 .5 .5 97 .. ...\n.. ....,.,.5....- .. 55...... ..5....,;........5....\n.5 .  .. .. ....- .......  ... mm...\n.5  .. .. ..................5. rnhmni . .....5. ..\n2. ................... .5 9. .5 .. 57 .. .9 5. ... ... .7\n2. break. mm... .7  7.\nza— ... ... ... 5. .5 .5 ...5 .7 .. ...\n2.. .........   ...   .,.n, ,,.x..... ........5 ...........,...\n.2 .........\n\n.......5 . nvmqh ..\n.7 5. .. .2 m .. 7. 55 -.5 «.7 ..\n\n....... .. ......;. ..\nas 9. An .. .5 4. .2 an .5 mi. \n\nu a» a ‘W:  ;:::::‘:‘.\\:;:t”*'''* L\n\n \n\n \n \n\n \n\n \n\n. -um ﬂucuam x .,w-u Znuwmvox .\n. , ga_ rt/>zurhuwmrDuwl-uxrMylwuuueuluv(mnuuluPwoqmvmuvwwvhWUMIAVuunuhrLawmvnar 7»\n.::“:::.::‘:~ ; -.5‘;-*3?‘ . ,,  ‘ \n1:-M‘-M s .‘ ., _)::;n‘:. ,. .5 .s A\\ .7 .. m\n. :‘~;;-W;-M~ 5 M ., . .m...‘,4...w ... mmm.‘ ., mu w,‘,my~:\n-c..¢.mm ' \"='-“ v 0 a . u 0 o a m m u\nA‘ W W  lg rm‘ (nhnvv: .2 mm\" 1:\nA WW”, 3 ~=x-vvw ‘ » W.» m...m : r.m.n..,. MS!\n\"‘ \"V 1m m 5; x5 15 .15 9/ xm m\n:2   \n\" a 19 u n u as u w m m 1/\n1' “ 5*-v‘= ’ , mm, m -mm ya\n19 ' “\"“ hm rmauv abcvz mu )5 ..x mm :-\n‘ . M u 4. an '13: i».......... ;~‘::_:-L‘ —;';'f~\"\"\"\"\n. .....«. m........ 5 \"‘ .».... swam... .\nV ;a_  ..........,..,W,,,m_.,,M,,n,,\n ; ..  ......,......._ 5 ;;i.ﬂg;.g~;~,\n\n . E......, .. W... ......... ..  Wm , WW ,,\n\n..;::::_;;‘:\" 3 -5-Egan W _ ‘ J ..,...... .. ..,.......\n\n:__...,.,,. § H L __.:;W.:. ,. .. .s .. .. .. ...\n\n. :‘°-;;-W;-t~~ . mule ., . .,.....,......... .. m.......... ., ... ‘_,_,W§\n\n-c........m ' \"='-*‘ . o . . . 0 o a m m\n\nA   ,3 W‘ W... .2 1...... ..\n\n‘VHMM ,, .t ,2 M7 ... 5. .5 .5 u .. .. ...\n\n D .3.‘-.‘»_ ‘ ‘ ‘ “  ‘ ’ ‘ »;..... ,.......m........,....\n\n .. .. ..U....,........ ‘;D;u;\";mW,,\n\nn.......,.m \" '''**‘‘‘‘**'‘'-‘>'““ s. 96 .4 a. w .. re 52 .n. m\n\nWW1... W “ “W. ......... .7 v>.v<mgh ..\n\"’ \"\" ‘III In 51 X5 .5 .15 9/ M m)\n.. .K.......... , ,‘ \n;g M \"M m...»«..\nS ,“Ex_v‘E) n 1: u I u as u w my xm\n.. ,s..,.,.......,,..,-W ‘§;;\"\">,;j\"\"g;*\"‘7§5 ,5 0 ,, A, m\n.. Nlm W W  ,,........ .. ‘W... ,..W,,,........s. W\n.. .... D'V)\\~ Vt     mm_\n.‘ ........,,.........W... . Mm ‘W,\n7' \" ’\"“\"k\"3‘““ ’ \"\" Enlwm) 12 mrwun 1a\n\n.2 9. .. ex .4 .. .3 .5 9. ..\nrum...» .1 a.......:u\nas 9. .-. 3.1: 4. 9. .. an\nmm. M... -/Wu ma .. .. .....». 2».\n,._»\n\n..\n\n..\n\n.. ’|1IU|N gun Wulrlvmoev mm..m~m.wawm..m...r.n.m\nH ﬁg WWW _W,_, _,,_‘W_,,__‘ L z.W.,.».wm‘.m.m‘.m.‘.-‘.‘., . H m 5.;-m\n\n5:\" W 3:74. n..J...... i\"'\"“’\" .24.. §»w.,.. W\n\no .. 2 . A ....‘.W an_..p.m....‘.W.4mmmmnW\n\nmm  V1 vemsmoernmeuuhons\nV J 2: _  , m...m , Duwlnn . mua.m.‘.\\ . CmvuwiuPux\\wvmvmI4w\\'hM/\\VLJ\\IA mm. r .4 \" W V\n\nI \"-'““ IMAM.‘ W Jltwl/A\\1.Hm I Aklxmvsﬂaxm t E\n\n_ gm-wv‘~\\~~ ,L..m.,m.‘ =», \nr.‘L:1“t:;i.r  ’\n\niumuln\n\n emu 7\n\nL no-«M aw ,, 1 Acrwletrcadxngsl ‘\n\n..;  M ‘ ‘;;;;;~¢ -- >\n\nrnumgshn ,\n\n:..m.. 2\n\n \n\nC.§§’.§“,C‘i §‘?2‘2(-' ‘.2\"3'-‘T’ §3I§'$’§»L75II7‘§‘1.§' ” 'W\"< \"WW ‘ *\"““\"“-?\"\n ,, ‘. . lcrugn-lmadmqﬂ ‘°»r\"* :,  \".,, 5, ,,\n\n\" ’”\"‘:‘1\"“‘ ’ ‘\" Enmmv) 12 mmmn 1a\n mm  mm )5 .. W 9\n\nTim r -   ... ‘  ‘ '~\"~\">> '~“-\"«~='~m‘\"'*\"\"\nan x . ‘ IV! ,. .m. mm,\n\nmm.» . \"umqh u\n52 9. 13 a1 54 us\nKNmm> 11 uwmm ya\nnru !(’MlHA\\ HIKNL ma .. .. 1“ X 7». Boxsumm 1w.U.r..n , ....u..,..u.m\n‘A ExIU\\es of skiwirll rmlinoer of ilerntions\n\n-.a sx-nu 1\n\nv. smbmg Is accomplxshed m we mu conduhnn.\n— n = 1;\n— -mu: u < tengmrreaamgsb as reaoxnqshx) c m\n— rgaaunﬂslh)\n— n . n . 1;\n— and\n\n \n\nsa. ax-cu 2\n-. Sklppmg .5 acumphshw mm 3 braak starevrznr.\n— for n lennmlreadxrwsb\n— n readvlqshll 1 m\n— brwk;\n— us:\n— reaumgslm\n— znd\n— gm\n\n\\n ax-cu 3\nx. Shams that fnr—|o-up: Sndex retams 15 last mm\n\\ um thz aw 15 exltzd. rm suvn\\ar tn Examine 2,\n\\ um nuts the settmg of values to a and prmts the\nx. Index uf mg hrs: reading mm m.\n- for 11 . .\\zI\\gth(readIngs)\n- 1: ma1..gsu1) ) we\n\n \n\n \n\n \n\n \n\nEumnlu aimpnma mm auurumnans \n\n0- -0 c 3 A Lacanon Comput:rxlwmgrammmgxzomlMCZOMAYLABIYule:\n\n:..4m«;m,; . .1;\nand\n\nawn. 2\n\nsammmmm mm mums mmm. -1: m. law xumu nuxmnmn Eumpll 2, m.7....n\nm. mm mm. In 0 mm mm: m. mu-xuvm um remlrw Abave mo\n\n \n\nm .. . ..gu.m..m.,»\n1: nndxr nun > me\nmm\n1...:\nm.m.uw.m mm. mm mm .. .. mm .. m‘, U).\n\n \n\num .1.......q mv. mu .~ .{ xudex 21\n\nmadlngs\n\nColumns 2 mmngh 11\n\nas as 14 as 57 11 an\n(olumns 12 (hmunh 2a\n\n  \n \n\n52 m1 m2 :7 nu I as w... M. ..m..:.u..m.4,m.m.m..,..‘.n.\n\nw....‘... _W...‘._...‘ [xmyvVe\\uV\\k»yryvmqnvnam4Aeva‘\\lIun-mx . ‘El [1 g\n\n’\"“\"\"‘\"‘ —~.......‘.‘ (941\nzm....m L\n\n-m. H-......... -m Xnw-n-Ia\n\n. . :; , A mm KDMDHVV1U!VV\"UamrmN]V/D-MM»/AIMAVKIK ulmw\n\nY ». J a _ VA/>u»rhl:uIHYrDwuul|mrMv[Vu(Iuueul\\A(mnuulewDu2qMnmuvu\\w\\'4\\MAVMIt Wm.\nkurewnrﬂx - /mm» ,mmm.,mv,L.m.wmW..m.m.m».m.‘.. .~,\n-mu  U VUIHA1. M”. ....u...‘...‘...‘. t ‘\n\n_ _*._m . 5...... M ......w ‘...m‘ .y |lA’V41\\HAlh\n\n:..-an 1\n\n: :;:;;;;¢;w~~ .‘m‘..J;. . A:r'9xMmanvu1x) K raid gsnn  mu\nWm \"M rramm1.HH »,\n   \n:_ “;~p“:‘M_‘ ., mu.)\nzw-~H~~~ am‘: am-u..W,“‘\n.,»;;,gg;;-_ M ,, ,;m.,m > WU\n\nmmgm.‘\n\n \n\n: ;L:'§.:r: :::“,.¢.:;':¥ KTLZ‘;2.J‘3”I.M’.i77F:‘t.f' :;_3;;;': «W = ~~w-W->\n.a;“::~.»; a:;:;;;;;:;‘;‘;~  W\"    5, ,,\n\" ’;f:;E““‘ ’ ‘\" Enlwvv) u tvrmuh zn\n ;,,3:'.t,.:?:q .;;  ..:‘m:2.\n\nMd\n. 1 r mm  W .‘ mm 7! u ”‘\"”‘”’ '°““‘\"“\"\"\"“\"\"\"’“‘\nvnrwl . . x. M W,\n\n52 3. .2 «:1 54 w\ncum v \\ma\\mh In\nan 91; 4‘! M 1: 4.\nrum .‘..».M mm m ,. .. )w:\\*x 10.\nA» MATLA\n\n \n\n    \n\nAPPS EDIT PUBLISH VIEW\n1: Bulleted List Preformaued Text\nQ Hyperlink ‘I U\nI Italic i; Numbered List 1__; Code\nSave Secllan Section V 2 ...u,., L.1-.x ‘ Publish\nv with Title M Monosplced 9, Image i Display LaT¢X v\nFILE INSERT SECTION : INSERT INLINE MARKUP INSERT ILOCK MARKUP PUBLISH\n\nuj\nxi ¢ I? E L4] » Users » fitzpajm > Dropbox > My Documents > Computer Programming with MAT1\nI Q Editor - /Users/fitzpajm/Dropbox/My Documents/Computer Pr\n\n. \"“\"\"*‘ I I possum.m I approx sqrtrm I BreakExamp|es.m I +\n3] BreakEXampIE5.I’\\lmI V’ \" _ '\n\n   \n\n1 9s’. Examples of skipping remainder of iterations\n2\n3 9%. Example I.\n4 9s Sklppmg is accompllshed 1n the while condxtion\nS - ii = 1:\n6 ~ while ii < 1ength(readings) && readings(ii) <: 10‘\n7 » J:ead.1'.ngs(ii) = 0:\n8 ~ ii = ii + 1:\n9 ~ end\n16\n\n11 vs Examnle Z H kg as 3... iwm ;.‘.......‘ _PvrVwIrvu'V(IYuV\n\n       \n\n \n \n\n. ..m. n-......_’7 .»»... 2wm.,..\n. g a _   W\n . “.,.WW»‘,..n».‘ 4:  am...”  .\n. ‘ , ,_,M_,‘ _ m.w......m..\n , r- .: e . a u a 9 a m w 17\n 2 an, mm-2: mW.mm.ma\n 3' \"“'-WV\" m m 5. as ,5 4; m M m\nWm,” - ‘ ~».w— ))H\\/H”) ,.m.W‘m,u.s.~.‘\nA—.‘..m.Wm. ; ' ‘break. rem»: ‘ ‘ H]\numm W ' \"W xx. 94; u as M u Jr: as nu 102 17\n :  \nV. m m ,. X: 1. 4, W M m\n\"muVm \" » H'wh1.rlr\\\nu M” Enlmvw . .W. n\n:- ::wnd,:nnxm Enlwvv) .2 mm. In\n” ..rrvI:mhVv.\\Admv5 r.)nﬂ)(1ﬂ5‘i.2M\nH-«Ih\\\\I)(\nLnhmrvs . ..,m» n\nas M; u as 51 n W 5. m ‘.07 .7\nLahmns ,2 mm. Al\nm m 51 as .s .5 «7 g.» m\nM. mm  m .5 i‘ xmkx 9.\n,, mm.  : mm.u.mm\n,....m:\nKnlmux . WH/\\/IV! u\nEnlwm .2 mm. IE\nhrs! mm mm m .5 .. mm ze.\n.> m. .= ,m.m,s,.y\nxx w m .5 55 75 2» ,7\ngnu-4/41 474 any\nn 55 as 91 as w 2, :7\n3192 4'! 7'4 93 M , as\nnzaeaaasnknuu t\n. . ,_» Command dow\n7* Dussumm 1 aonro:,sqn.-m l_mak:xampIes.m ‘ Bal1Kreak.m i 1- 1 '*§:{C§.:5'] mm 9 H\n1 - for ii 5ize(A.'H W 9 9 3 9 9 9\n2 - for J] :%]'5ize(A.2} columns 12 through 20\n3 ' ‘f A ‘?ij3? ° 102 101 51 55 15 45\n2: WEN“-J1’ ' - » rng(0>; readings : randi(105,1,20>\n5 _ brEEk_ readings :\n7 _ and ' columns 1 through 11\nas 9s 14 9s s7 11\n5 ' d 9\"“ columns 12 through 20\n9 ' 9“ 102 101 51 55 15 45\n1“ >> readings\nreadings :\n\ncolumns 1 cnrougn 11\n0 0 0 0 0 0\ncolumns 12 through 20\n102 101 51 55 15 45 K\n,5 rngr0>; readings : randi(105,1,20\nreadings :\ncolumns 1 cnrougn 11\nas 9s 14 9s s7 11\ncolumns 12 through 20\n102 101 51 55 15 45 1\nFirst reading abuve 100 is at index 9\n)) rng<0>; readings : randi(100,1,20>\nreadings :\ncolumns 1 through 11\n52 91 13 92 s4 10\ncolumns 12 cnrougn 20\n95 9s 49 51 15 43 H g) g, ;l;::: ’_W_m ;lwVklrd|47 ,:1..w.,...‘ L\n\n   \n      \n\n   \n\n. umrn 3...... Z zu....m.. .\nV.gz_ VA/sup? .7\nI N-~~ ., mvvl/7  »...r.m ..;..M‘ .\n. . ,, M H ‘ (alums . mm 11\n.,,,m r~;;r—”s~p“;m2, u . n a u e u a m m 17\n..m....W W _ _ Q mm .7 Y! mm\n»wm.m ’ \"“ ’? m m 3; xs )5 4: av x. m\n._,,,,,_m H AHA.yH «, )>vhq\\H) .m.W=m.n.u.sx;«‘\nA n......«...‘..m rm“ mm;\n» .._u.W,m _ ‘ - n..m . um.» H\nmm am an we .4 us 57 n J0 ax m m 17\n- «,...«.... M ., *\" Kvlunm .7 Vwmwh ya\nr.W....m '\" m m 5. :45 1, 4, 97 an m\nr- \"$3.. rcamrvgs ,\na pm” (mums . - H/HIV! n\nmum . 1: a a . u a w m In) 17\n'-,wva_:»eo<m |:n\\wv: .2 vmmnzu\n‘“”\"‘“°\"' ‘ ..m.m‘v..m) r.mamus‘L2e\\\n\nlnhmrs . mm 11\nas u u as 5: n we SA m :07 17\nLnwvms .2 mm Al\nm m 51 as is As «: 5. m\nnrsx «um um: mu .5 .. xmuvx 9\n,, m.,w mm, , nnmriuumm\nreadings :\nKnhrmvx . ..‘...m. u\nmm .2 mm. 2a\n\nm. rcmanq um nu .; .. nan ze\n., mm .= .W.m,s.a»\n\nR\\ w \\n 16 55 75 7» R7\nan 1. 9/ 41 4 :4 4 .-.4\n:3 s: as 91 as 1% 72 :2\n91 9. 4»: ,~: 9; 5, . as\n53 96 au 95 M2 n 1» . command dow\n7* Dussumm 1 aonro5_sqn.m l_mak:xampIes.m ‘ BadKreak.m i 1- l '*§:{C§.:5'] mm \" H\n1 - rfor ii size(A,'H W 0 0 3 0 0 0\n2 - for J] : 1'5ize(A.2) columns 12 (hrou n 20\n3 ' if A‘‘?iji? ‘: 9° 102 101 51g 55 15 45\n‘ \" I “ll-JJ* = - » rng(0>; readings : randi(105,1,20>\n5 ' 5 ‘Eb k_ readings :\n3 ' end '93 ' columns 1 through 11\n' as 9s 14 9s s7 11\n5 ' d 9\"“ columns 12 through 20\n9 ' 9“ 102 101 51 55 15 45\n1“ >> readings\nreadings :\n\ncolumns 1 cnrougn 11\n0 0 0 0 0 0\ncolumns 12 lnrougn 20\n102 101 51 55 15 45 K\n,5 rngr0>; readings : randi(105,1,20\nreadings :\n1 columns 1 cnrougn 11\nas 9s 14 9s s7 11\ncolumns 12 through 20\n102 101 51 55 15 45 1\nFirst reading abuve 100 is at index 9\n,9 rng<0>; readings : randi(100,1,20>\nreadings :\ncolumns 1 through 11\n52 91 13 92 s4 10\ncolumns 12 cnrougn 20\n95 9s 49 51 15 43 aa :1 u  v k _ v E .a..m..._n \n\nhis cum SM: / \"\"‘ ' \"“’\"\" 9 5‘ my»-1. lam nu...‘ um.“ um»:\n\n. . . ,/_..... ‘,.. »...mL_, . . W...“ n...\n\n-~-A   :.u..w ........».n ; -v W -- w -v u A >= -- - H\n  ne,Y 102 m 5. as .2 .5 91 K} m\n\n.  2 ‘Wu’ 2» ,,\n\n«‘;1.‘m\\..‘?n ‘ -‘ “MN <— \"v .m.nq.\n\n.‘.,..__,u 1 Nuw — -‘ — mm Y mm» )3\n\n.,,W_W.W ; «'~«m__ 0 u n D 0 n w o m m n\n ; MN m m  5» .5 4, .1, 5‘ m\n\n.  w w , .. mqkﬂl.  1 m,mm,x,zu)\n\n M  .  H\n\n (v\\.mn: Y2  1.\n\n»:,\"lTS,7;£Lm Kn): rmdml] mm mu) ., M W. a,\n\na2axua2(.<1a1x5‘.%a/xs\n(olunru 17 .....m 7.\nq. -46 A9 M u 41 In 5.» ».\nFun .«...w abuvr mu\nrrnszkuw ._mmm\n\n   \n\nso Ix In :7 4 74 4 m\nu ., 9. a. as N 2; 3,\n9; as w w 9: D5 5 as\n\n., mm.\nA\n» u . g 0 u . u\ne u M .1 4 /1 4 59\nu H as an as :4 ya :2\n9. -.4: .9 79 9; .3 . 9»\nu an Kn as as n In A ‘i J H u.Kmthk« ,  ,._‘ . _ _ ,‘_ U...  Q\n.. u... 5.\" »<‘*'\"‘* ' MW\" ‘W E I A ....,.... (W... 5., 4W\" ....N. . q..\n- - - >_-Mm . we - '“**m:._. . m...;m ......~.\n- A n _, y M... ,  . awe. . My , L.m.wW.., mmm» V n.. . J\nL  - hum   W nm Iu- M.{u  Zrm, ‘..;.r.‘.m  .\nA ~-=-  H    5V 7!! ..u....... . ,, Mali‘. A mm: .5‘\n _.. M .=\\u,¢rnn . A\n,, MW 1 W” m .. .5 u 5. vs 7. n\n , .‘.m,,,,< 9. we 13 91 .2 < 74 4 B0\n_‘:;°I;~;‘\" . M4,; .. , n 5» 95 u-. 5. 1. 71: VI\n_,.r —- '1‘ . M 9. as 4? Va 9; as 5 25\n 5 man, u «s 3. as u n 1. .\n,,  ~ ~ , ‘ M ,. mam\n,‘;(r».»n4e-k , 5 W W /- MATLAB R2014b\n\nPUBLISH VIEW\n\nQ   step I\" Function Call Stack: B\n\n‘ Step Out\nBreakpoints Continue Srep  Badﬁfgak v } Qu it\nV Emu‘ N Gursar Debugging\n\nn 1\nI smxvolnrs \\ mzauc h\n\nncuments V Computer Programming with MATLAB > Tutorials > Lesson 06 |\nCommand Window\n\n   \n \n\nrox_sqn.m i >> rng(0); A = rand\n‘ize(A,1) A =\n\n= 1:size(A,2) 81 10 16\nr(ii,jj) <= 90 so 23 97\n\n13 55 95\n91 95 49\n63 96 80\n>> Badﬂreak\n)5: K>>\n\nA(ii.JJ') 5 0\n\nVbreak; a J u ‘~:\"'*‘*» «W [ ‘\"‘~'j:-M ' _ w 9‘, ‘~:‘‘'‘;  H\nas an SM: 1 \"\"“ V‘ ' V 3 ' -«wan (Mum: sup 4 L“ ' ...,N.. ~ mu\n. . . ..w.. V... mm“, . L....W ......~.\n.‘ ,. 11 _, . ..... .  . D-uxrbﬁx , Mm“, . LAVvImumnw\\::wmH/l|’L/nllr r...m V nbr T. .\n‘I ~-7 H —V\\>\\>\\)«v' ;.M..m, m....M. . _;;_' ;v w r> ->« H w ~\n ,. Y/>-  . mm,” . ;> \nm,’.,_,,,.,“ 1 ‘WM 9 1: Is :5 si 7. 7. u\n— l\\(NI\\l<m ‘ \" *‘;'vH*f 9\" ae xx 97 :2 4 74 . 59\n1 V -uvu -* — n 55 as u as w u :2\n; «~=m_, 9. vs a 79 9: us 5 vs\nsum . R :5e§7s7na7\nL’ W  ,; W 90 1:4 .. . ,1 . .9\n«Wm H as u; as :9 Ix 12\n,. ,W,,W 9. ‘A ,9 91 .. . 9,\n M as an as 6! 17 .. .\n»»,”l§¢,7;}ZLm e n a :5 -3: 7» n :2\n\nu 55 2» on In an xx :3\nu as in w 91 55 5 -as\nas an an as as 17 m »\n\n \n\no w . 0 0) re 7. 52\n99 72: 97 :7 4 7. 4 an\nu :3 9. 91 Ms J‘? 2:! 3;\n‘H a: M 15 93 as 5 as\n.3 as 3. 9. M 11 .. ‘\n\nan 13 In .1 4 7, 4 no\n3. as 4’! 79 9: as s as\nm as .. -u in 17 1. .\n» a . . 0 u 7. n\n90 A)! 97 ., 4 ,4 A M\nu ss 95 : as an 2; :2\n9. as .-.. u ‘M (.3 . 3';\nu as H as 65 n m 4\nA /., K» HE J H ;.m.m.. , m...._,,. . H D E WWW 5\n\n,:.~..,. . gm... mm. 7: . 4 .\"__N_ M W\" gm” hw-\n\n    \n\n \n\n \n\n. ..‘. . __.‘.. . ..... m __, . Alovu\nV g a _ .u>.‘.,WW,pm..m..m.‘...kw.“.W.WW..‘Wm.V  .»\nW  rad, .   ‘.‘.p.m.».w.. ..  .mm,. m.W.» .\n-mm m WWW. .,._n.W..‘ mmw W.‘..m “ ;; 3 ;; ;3 Sr; 3 ,3 *3\n7“\"”\"”' I I mm-H ‘ . 1: a n . 7» 7: V\n. ‘”‘\"‘““\" x u —\\ .,«.,z‘ 4 , ,_ 1 »\n. {‘J;,';;f;;‘ . ,. /un.rH <, an 35 if 31 «E ..s ‘.1 1. 33\nA-.‘.....m‘..m * “H H‘ “v 31 as :0 ya w: 5; 3 as\n' lvnkFxvuyr\\e\\m E N“ V 5: W In as an n m z\nr  .' ;::;;‘  ” ~\n‘ “““\"““” ~ we 93 12 J .2 3 ,3 ’3 25\nI  \"  n 5; « .. as 19 1». 3,\n ;; : gum g. 9. 4; ,4 93 0, 3 .1.\nU.n..mm B W W a 96 au as ER n 1. 4\n ;;  u 9 . B u 9 0 3;\nA ‘.T.\"m7‘Q.‘m‘\" )3 s: as n 35 )9 2: xx\n.. ax .. 7.; m 55 3 -as\n‘ u 96 an as as .1 m .\nB . u . .. ., u q\n-a» 2. ‘V7 .7 . 7. . 5;\n,3 .. y, '11 as .9 23 31\non 95 1‘! Va 93 -35 s as\nu 7. av .; A 74 A M\nas 9; 1; ya ax ca 3 as\n. ¢ 2 2 . . a .\nB 5 W 41 4 M . (49\n)7 55 as 91 as 39 7, :7\n5, y, 4'! W as .. . g.\n5; as so as as .7 .. t\n. . F_ » Lead Vnstructorz Mike Fitzpatrick\n\nCUWCLNUW d€S|gﬂ1 Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas VANDERBILTVUNIVERSITY\n\nVl  IFISIRSTITUTE\n\nDIGITAL\n\nLEAR.N|NG \nET."
  },
  {
    "path": "E:/Coursera/nlp/06 - Week 3 - Text Classification/6 - 3 - Formalizing the Naive Bayes Classifier (9_28).mp4",
    "id": 3759,
    "text": " Text Classification\nand Na'I've Bayes\n\nFormalizing the\nNaive Bayes\nClassiﬁer Bayes’ Rule Applied to Documents and\nClasses\n\n-For a document d and a class C mu mumy\n\nNa'I've Bayes Classiﬁer (IV)\n\ncMA,, = argmaxP(x,,x2,...,x\" |c)P(c)\nCEC my my\n\n/~ Multinomial Naive Bayes Independence\nAssumptions\n\nP(x,,x2,...,x,, lc)\n\n- Bag of Words assumption: Assume position doesn't\nmatter\n\n- Conditional Independence: Assume the feature\n\nprobabilities P(x,|cj) are independent given the class c.\n\nP(.\\-,....__\\-,, |c)= x |.c)-P(x1 |c)'P(.\\‘3 |c)°...°P(x“ lc)\n\n§.j—:— ‘j K; v\nMultinomial Na'I've Bayes Classiﬁer\n\nCMAP = argmaxP(x,,x2,...,x,, |c)P(c)\n(‘EC\n\ncm, = mgmaxP(cj)n P(x I cg\n\n \n\nj—\n\n‘EC .\\'EX Applying Multinomial Naive Bayes\nClassiﬁers to Text Classiﬁcation\n\npositions <— all word positions in test document\n\ncw = argmax P(cj) H P(x, |c_/.)\n\nL'|E( iE]m.\\'iIirm_\\' Text Classification\nand Na'I've Bayes\n\nFormalizing the\nNaive Bayes\nClassiﬁer"
  },
  {
    "path": "E:/Coursera/object-oriented-java/01_welcome-and-project-overview-visualizing-data/02_object-design-constructors-instance-variables-methods/04_core-defining-classes-and-creating-objects.mp4",
    "id": 3842,
    "text": " Classes and Objects in\nJovo Visualizing\nGeospaﬂal\nData Computer Science is...\nThe science of using and processing\nlarge amounts of Information\nto automate useful tasks\nand learn about the world around us\n(using a computer) Easy to write‘\nEasy fé mdintcgzln\n\n‘Easy to debug Visualizing\nGeospatial\nData Mop\n\n‘ ’ Shape\n»_ \" N Locoﬁon\n\nCobr\nWindow\n\nr  and plenry more objects E; A class is a type of data\n\nQ-‘An object is one such piece of dafa*\n* with associated functionality Concept of location\n\nLoiitude: 32.9\nLongitude: -1 17.2 Defining a Class\n\n‘C\nLL-L public class Simplenocation\n(\n\npublic double 1: Constructor:\nP“’°“° “°“”‘° “Method to create a new object\n\npublic Simp1eLocation(doub1e lat, double lon)\nI\n\n         \n \n\nthis latitude =\nthis.longitude =\n\nlat;\nloni Keyvov/o;rd:\n‘ this public class simplenocation\n. 1- In ﬂle\n\npublic double latitude; 5* Simp1¢Location.java\npublic double longitude;\n\npublic simp1eLocation(doub1e lat, double lon)\n(\nthis.1atitude = lat:\nthis.1ongitude = Ion;\n\n)\npublic double distance(SimplaLocation other)\n\n(\n// Body not shown\n\n) Creating and using objects public class LccationTester\n\n(\n\npublic static void Ina.i.n(St:ing[] args)\n\n(\nSiInp1eLocation ucsd = '§\\\n\nnew simp1eLo<:ation(32.9, —117.2);\nSiInplaLocation lima =\nnew SinIp1eLocation(-12.0, -77.0);\n\nSystem. out.pnnt1n (ucsd.distance(lima)): % javac *.java\n% java LocationTester\n6567.659"
  },
  {
    "path": "E:/Coursera/object-oriented-java/01_welcome-and-project-overview-visualizing-data/02_object-design-constructors-instance-variables-methods/05_when-i-struggled-objects.mp4",
    "id": 3843,
    "text": ""
  },
  {
    "path": "E:/Coursera/object-oriented-java/01_welcome-and-project-overview-visualizing-data/02_object-design-constructors-instance-variables-methods/06_core-overloading-methods.mp4",
    "id": 3844,
    "text": " Classes and Objects in\nJava\n\nMore details: Overloading methods public class Simp1eLocation\n\n(\n// Code omitted here\npublic double distance(SimpleLocation other)\n\n(\n// Body not shown\n\n)\n\npublic double distance(doub1e otherLat,\ndouble otherLon)\n(\n\n// Body not shown\n\n) Overloaded methods in pracﬁce\n\nsize(800, 600, opmvau;\nmap = new UnfoldingMap(I:his, 50, 50, ‘I00, 500,\nnew Google .Goog1eMapProvider()) ; Over|<\n\nsize(80\nmap = n UnIoldingMap\n\np.‘.b1;c Dnfo1d1ng24ap[p:cce5s.\\r:g.c :e.p;.p_c1e: p,\nfloat x,\nflea: ;,\nflea: ~\nflea: qr ,\nI-Lk:s:rac:MapF:cvx:1e: prcvlderp\n\nCram: :1 new map \\\\ uh specxﬁc posmon and dnmensxon\n\nParameters:\n\np » The mam apple!\n\nx — The x posmon ofthns map\n\n-; » The y posmon ofthns map\n\nmm: — me mdth of thxs map\n\nnew‘ : -The henglu ohms map\n\np de: — The map nles pm\\ xder to use\n\nmm //unroxamgmaps avg/Juvodod public class Simplenocation\n\n(\n\nReturn type is NOT port of the method signature.\n\nOverloaded methods CAN have different return types.\n\nChanglng the return type is NOT ENOUGH for overloadlng. I‘"
  },
  {
    "path": "E:/Coursera/object-oriented-java/01_welcome-and-project-overview-visualizing-data/02_object-design-constructors-instance-variables-methods/07_core-public-vs-private.mp4",
    "id": 3845,
    "text": " Classes and Objects in\nJava\n\nMore details: Public vs. Private By the end of this video you will be able to...\n\n- Describe what the keywords public and private mean and\ntheir effect on where variables can be accessed\n\n- Explain what etters and setters are and write them in your\n\nclasses double latitude;\ndouble longitude : public class I.ocationTester\n(\npublic static void main(String[] args)\n(\nSimpleLocation ucsd =\nnew Simp1eLocation(32.9, —117.2);\nSimpleLocation lima =\nnew SimpleLocation(—12.0, -77.0),-\n\n \n\nSystem.out.println(ucsd.distance(lima)) 7 (\n\n \n\n// Body not shown public class SimpleLocaI:ion 1 ¢' 1\n(\nprivate double latitude;\nprivate double longitude;\n\nRule of thumb: Make member variables private\n(and methods eiiher public or private) Meinm\nPublic: for-world use\nPrivate: helper methods public void setLatitude(double lat)\n{\n\n \n\nif (lat < -180 || lat > 130) (\nSystem.out.print1n(\"Illegal value for latitude\"):\n)\n\nelse"
  },
  {
    "path": "E:/Coursera/object-oriented-java/02_memory-models-scope-and-starting-the-project/03_memory-models/05_core-drawing-memory-models-with-objects.mp4",
    "id": 3854,
    "text": " Memory Models\n\nPan‘ 2: Objecfs By the end of this video you will be able to...\n\n- Draw memory models for reasoning about variable values\nfor object Type daia\n\n- Updaie memory models To trace The sioie of The variables\n\nin Java code i Primitive types vs. Object types varl\n\nucsd\n\n52\n\npublic class SimpleLocation\n\n(\n\nprivate double latitude;\nprivate double longitude;\n\n \n\nThe heag\n\n \n\nlatitude\n\nlongitude 1nL varl = 52;\nS1mpleL0Cat1on ucsd;\n\nucsd = new Si.IIIp1eLoCation(32.9, —117.2),'\n\nSimpleLocation lima = new Simp1eLoca\\:ion(v12.0, —77,0);\n1ima.latitude = -12.04;\n\nVal 52 The heag\nlatitude 32.9\n\nucsd\n\nlongitude -117.2 ﬁe‘\n\nlatitude\n*3»\n\nlongitude -77.0\n\nlima"
  },
  {
    "path": "E:/Coursera/object-oriented-java/02_memory-models-scope-and-starting-the-project/03_memory-models/08_support-memory-model-drawing-example.mp4",
    "id": 3856,
    "text": " Memory Models\n\nSupport Vxdeo By the end of this video you will be able to...\n\n- Draw memory models for reasoning about variable values\nfor object and primilive lype data\n\n- Update memory models to trace the state of the variables\n\nin Java code sun 1eLccat1on ucsd new leLocat on(3 17 ),\nSxmp1eLocat1on kumamoto = new SiInp1eLocation(32.0, 130.0);\nucsd = kumamoto:\nkumamoto = ucsd;\n\n \n\nﬂu mgwac\n\nW‘ Sxm 1eLocat1on ucsd new\n\n   \n \n    \n\nIn lelacat an (3\n\n  \n\nJenn/do 329 Q‘ mmuac 320 Q‘\n\nmnguudo H77 Iongwce 1300\n\n1‘ ?\nx kumamoto =\n\nmmudo\n\nmgnuao\n\nT\n\nI177\n\nhmudc\n\nlovgiqcc\n\n  \n\nH0\n\n1300 new\n\n   \n\nLonguudo H77 Jongwcc V300\n\nT Sxmp1eLo<:ation ucsd = new Simp1aLacation(32.9, -117.2)?\n\nSxmplel r~ non kumamoto = new Simp1eLocation(32.0, 130.0);\nucs!» kum oto\n\nlamudc 32 9 \n\nmgumo\n\n   \n\nxomumv\n\n   \n\nWong wee mm-uac ‘ammo\n\n‘ >cngm,ae mug mac\n\n \n\n. Sﬁvnkncuonwvn . nu.-mw.wu.,m... :1 -' :1\nru.:v| . mun \\oAa{vo'\\V¢-n'yYu:1r (\n\nmy ( \\Vul\\ w.- m. (K . M; . (\n3w¢A\\t.u4a\\|o:v A v.; V ... \\up§ela(n:Lmn(SI e. m 1;‘\n\nx.»ox.m.. .0. .,-.- . VOA M-:~lo1u<uemn(!] e,1)u u).\n\n \n\n \n\n     \n\nXy\\ . .».: :r\\nz!rs( HS; . .x‘ Y: ..-.. mm W.» - . M s....m.m.\nam... r:uI17I\\Hl\\r*( x...,—.m, » . . . \"V leuwao . . .wu.ue > . ..-. vv\n\nCoo-snmﬂ xx -\n\nhoax:-tcrx \\.l’IIV‘4Iu\n\nn..m.;w. an 70 sv .=ucw.~».»«(«.\n\n-l.V\"1’.I'l'd- o<-vo~M.-nrwnvu.\nnun :1 a. .cvu\\L..rxe ua a\nlmwmm J! n. lanmvudn my a"
  },
  {
    "path": "E:/Coursera/object-oriented-java/02_memory-models-scope-and-starting-the-project/04_scope/01_core-introduction-to-scope.mp4",
    "id": 3857,
    "text": " Variable Scope \\\nL ,, ,2\n\n  ‘ publxc class sxnspxamcacxon ¢-\n1\npub“: down h There are 6 variables In Ihls\n\npublic mum, code. Can you llnd them?\n\n \n\npubuc ssmp1u.ocauon(doub1a\ndouble\n\n \n\n(\n\npumm class Locntxonf-star\ntnss.1a:x:uda - nun; (\n\n\"-M5-1°\"9i=“d° \" 1°\"1n7 puxzuc xzauc vom uumxstnnqll\n) l\n// Mon cod. nan\n\n(12.0. -77.0): public class Location'l‘e=tez\n(\n\npublic suuzc void nuin(Stxi.ng[] ugs)\n\n«\n\né‘ smpxeno uon mm. =\non(-12.0, -77.0).- pubnc class Sxmplabocntton ¢-\n\n‘ H There are 6 variables In Ihls\n\npublic dmxbla\npub“: mum, code. Can you ﬁnd them?\n\n \n\npubu: SSmpla!.ocat}.on (double\ndouble\n\n \n\npublxc cla1I Lucalzonfcltur\nthxs.1a:x:uda - latxn; (\n\nthis-1°\"91=“d° ' 1°n1h-‘ pubuc uauc vmd nuAn(SLn.nq[]\n) l\n// Mon coda hnzn\n\n-77.0): public Simplenocation (double latln ,\n\ndouble lonln)\n\n( Doesn't find II, so looks In\n\n  \n\n     \n   \n  \n\n \n\n¢-\nL‘ longi was lord calllng object scope\n)\n13': latitude\n1i\"\"‘:| longitude\nmaln's scope this\n\nconstructors\nscope :9:"
  },
  {
    "path": "E:/Coursera/object-oriented-java/04_inheritance/01_welcome/01_module-introduction-inheritance-and-polymorphism.mp4",
    "id": 3884,
    "text": " Object Oriented Programming\nin Java Coda ht mu Inoduh:\n\nIcznon . java\n\nltudnnmjuvn"
  },
  {
    "path": "E:/Coursera/object-oriented-java/04_inheritance/02_inheritance/02_core-extends.mp4",
    "id": 3887,
    "text": " Inheritance in Java public class Person Person\n\n \n\n( String name\nprivate String name:\n\npublic String get-.Name() ( return name; ) \"5't'r,-mg getNa,.,e()\n}\n\npublic class Student extends Person |\n\n( Student\n\n) Person\n\nString name\n\nstring getuame ()\n\n/\\\n\nStudent Faculty\ndouble gpa double salary\n'E(6.}i§1'é' 'c}'e'€éi>'ziT) \"\" ' 'E{c§.3£,'1'é'}}é'€s' 2551-‘; T\" no Common Code\n\nString name\n\nstring gecname 0 Diverging Code\n\n  \n  \n\nStudent\n\ndouble gpa\n\ndouble ge1:GPA() What did we want?\ni.Keep common behavior in one class\n\n2.SpIit different behavior into separate\nclasses\n\n3.Keep all of the objects in a single data\nstructure"
  },
  {
    "path": "E:/Coursera/object-oriented-java/04_inheritance/02_inheritance/04_core-reference-vs-object-type.mp4",
    "id": 3889,
    "text": " Inheritance in Java What did we want?\n1.Keep common behavior in one class\n\n2.Sp|it different behavior into separate\nclasses\n\n3.Keep all of the objects in a single data\nstructure Reference C\ndoclslom\nvelonnco typo\n\n     \n \n\n \n     \n \n\n   \n\n  \n \n\n(01? Hit\ndecisions:\nobloci typo"
  },
  {
    "path": "E:/Coursera/object-oriented-java/04_inheritance/02_inheritance/07_core-visibility-modifiers.mp4",
    "id": 3892,
    "text": " Inherifoncez\nVisibilify Modifiers\n\nHit: By the end of lhis video you will be oble lo...\n\n- Use oppropriole visibility modifiers when writing\nclasses Less Restrictive\n\nMore Restrictive Less Restrictive\n\npublic\n\nprotected\n\npackage can access from same class\n\ncan access from same package\n. Lose access by\n\nprivate\n\nany subclass\nMore Restrictive : pxotected x;\nE Y-\n; _px-ivate z;\n\n{I Sample Othex.-1  [ Othet2\n public an  ‘ te‘\n\npublic w;\nprotected 2:;\n.‘_ptiVa Rule of thumb: always use eithet\n\npublic or private\npublic less Restrictive\nprotected\npackage\n\nD'iV0?9 More Restrictive"
  },
  {
    "path": "E:/Coursera/object-oriented-java/04_inheritance/03_polymorphism/07_core-abstract-classes-and-interfaces.mp4",
    "id": 3904,
    "text": " AbsTroctC|c1sses and\nInterfaces By the end of this video you will be able to...\n\n- Use the keyword abstract\n\n-Compare \"inheritance of imptementation“ and\n“inheritance of interface“\n\n- Decide between Abstract Classes and Interfaces Person — Campus Accounts\n\n-Add method \"monthlyStc1’tement“\n- \"Person\" objects no longer make sense Person — Campus Accounts\n\n-Add method \"monthtyStatement“\n- \"Person“ objects no longer make sense\n\nHow do we:\n\n1 Force subclasses to have this method\n\n\"I Stop having actual Person objects\nKeep having Person references\n\n:1 Retain common Person code\nAbstract classes! Absir-act\n- Can make (my class mbsircxcf with keyword:\n\n1A., ;:._.. \n\n   \n \n\n \n\nL: ’  \" * ' 3I“.’.‘.:\".‘:\"\"'I.7[) Person — Campus Accounts\n\n-Add method \"monthlystatement\"\n- \"Person“ objects no longer make sense\n\nHow do we:\n\nN Force subclasses to have this method\n‘.3 Stop having actual Person objects\n\n'5 Keep having Person references\n\n4\nN\n\n \n\nThen use an Interface! Interfaces\n\n- lnlerfoces only define required methods\n-Classes con inheril from multiple lnlerfczces .ed 1.’)\n\njava. La.\n\nndmv I’? 0'5 narv\nH115 om»-» <— (“p\n\n'!'mn, C-qvza; rr), g-u:m.~r r;-~.:.n n.\n\npmlar .1n:ir:'ar\" ;nr :\"r>.\".p'x:rTr>( F. o i; H Dczixxcrl . . .: z'.paxabLr:\n\n_n»:x:-«me java. La /1;\n\n< > means Generlcs / / Dcilxcfl 1.’)\n\n   \n   \n   \n \n\npa:<ane\n\nxi IL\nrn, g-1-. H'l\"I’ r\n\n\"\"_D'nzl'fr>( E13 I,‘\n\n \n\nWhy have this lnterface?? 1:1 java.lang.\n\n \n\nc-«me java. La,\n\n \n\n \n\nr.«\\:m> r~ <>':; nare\n\nF: 11' tI.;s 0l7'v:\"\n\n  \n\n:\" y: n\n\n \n\nrn, g-z-.1rnr rhan n.\n\nD ;\n\n\"-0.\"_:1’xzn'Tr>( F. n public int compax'aTo( Person 0 ) (\n\nretuxn th::3.qor,?.'a:1e() .romprneTn( mqettiamel) :4:-I5 . implements Compa:abJ.e<Person> :‘\n\nmm nam.;;\n\n.1519\n\npublic int compareTo( Person 0 )\n\nMM .~omp:neT.n.( n. Abstract class or Interface?\n\n-If you just want to define a required method:\nInterface\n\n   \n    \n    \n\n-If you want to define potentially required methods\nAND common behavior:\n\nAbstract class _ . ’)\n' ullx .\n\n \n\n 1.  define C {',\"j\n\n \n\n, , . V ‘\n-I‘ y. JV\\/OI): '0 mt: as oofenr  ‘(,1 “cm x. gm\n\nAND ..ommon behevrvz\n’ use"
  },
  {
    "path": "E:/Coursera/object-oriented-java/05_guis-responding-to-user-events/02_event-driven-programming/06_core-listener-hierarchy.mp4",
    "id": 3914,
    "text": " Listener Hierarchy :xHI ex \n\nL‘!\n\nEON ‘H ' By the end of this video you will be able to \n\n-Describe nheritcmcerelotionshi sed in the\n\ncourse so for\n\n- Distinguish between inierfoces and classes in this\nhierarchy <<1r‘.'L-:'.a::c>> e\nMousebistener Keylastener class <‘1n5ti1dFL3\" <<;nte:iGce>>\n\nMousenistener KeyListener tvrf\n\nMous3Listenet\n___________________\n\n   \n\nHagﬂi thButton\n\n   \n\npublic void mouseP:essed () (\n\n)\n\npublic void mouseclicked () (\n\n)\n\npublic void mousekeleased () (\n\n) <<51nV -:-:1,m=>>\nMouselixstener public void keyPressed () (\n\n)\n\npublic void keyTyped () {\n\n)\n\nKeyLi:tener\n\npublic void keykeleasad () (\n\n) . ,;.~.,;: , ». > . void onﬂanipulation (\nEventiistene: ”3PEV°m'- °V°nC) ( <<;nrr;r:t -c» void onnanipulacion (\nEvenuistane: MapEvent event) ("
  },
  {
    "path": "E:/Coursera/pgm/Lectures/Week 1 - 03 Template Models/04_Plate_Models_20-08.mp4",
    "id": 4027,
    "text": " Probabilistic Representation\nGraphical\nModels\n\ntLIawt_eL/I9,<1'§'3\n\n“$41; 2») “Ma. +5?‘\n\n \n\nTemplate Models M W{!\\ode|ing Repetition 3% Dnyhrvz mug. Nesfed U\nPlates\n\n(_ovJ (.\n\nffu ; r nnnnnnnnnn Ir Overlapping Plates Explicit Parameter Sharing\n\n \n\nnnnnnnnnnnn Ir Collecfive Inference\n\n \n\n\\u’ ..\n\n \n\n|)u5>0v-x naug- \" Cl\neasy / hard low / high\n\nDamn: KoHu Collective Inference\nT \\ F’\n\n \n\nown\"; mg. A\n\n \n\neasy / hard\n\nCollective Inference\nT\n\n‘Luv!\n%~’\n~~.3e,“?4‘-\n\n-Z easy / hard\n\nCollective Inference\n\n0'0 [3 def [J 3 Man\nIIIIIHIHIII ea5V / hard\n\nnce\n- Infzre\ncouec*\"\"”\n\n’\n§ J\n43\n13/“?\nE7 J\n[j ’\n. P25’\n'56 J\n-’l«C7{/ j\nZ J\nin J\nQ\n13'‘? easy / hard\n\n3\n\nCollective Infere ce\n\nnmjnnQUn{unn‘Q”n'Un\nin»: t\nIIIIMIHIIIIII Collective Inference\n\n   \n \n\nA\\ .1 j\nJ  j\n'- \"'4-,,____ . av“-3-I\n‘ ‘-\".*_-.___ ‘ :1 j\nj D...“ ' ' \"\"_\" :1 j\n\"'~_- . (3 j [K\n_ ' < JG & f\nj I\"~‘.'.'... \"*3 Z\n_ ' E} j\nma\" [2 j\nE“ j\nI. _\n1\neasy / hard low I high\n\n[mm KoHu P/lcﬁi Dependency Model\n\n- For a Temglafe variable \n— Template parents ﬂ;):,’Bm(U,,,)\n\n(I.\nHi /ale) l:(<,.)‘%0 M 5 TV» _’__j\nCg LA 3’ ‘Hal Pvkﬁ\n\\_ \" H-»..r3(;)\n+w,I.+. '*as\"<a~#» cm\n\n3cPD P A | B1,..., B\n\nnnnnnnnnnn n 6l:\\)\\aGrgl:) Summary ”\"“”*\n- Templatelfor an infinite set of BN5, each\ninduced by a different set of domain objects\n\n- Parameters and structure are reused within\na BN and across different BN5\n\n' \n\n- Models encode correlations across multiple\n\nobjects, allowing collectiv i erence\n\n- Multiple \"languages\", each with different\ntradeoffs in expressive power\n\n \n\nDnvhn; Kc Izr"
  },
  {
    "path": "E:/Coursera/pointers-arrays-recursion/01_pointers/02_pointers-conceptually/03_pointers.mp4",
    "id": 5643,
    "text": " Pointers\n\nC Programming pgsxi\n‘VP/A’ ..\nincv’ ’,\nint ‘G / kii\n,*p’’’\n*q\nqgp:"
  },
  {
    "path": "E:/Coursera/programming-fundamentals/02_reading-code/01_variables-and-expressions/04_declaring-and-assigning-a-variable.mp4",
    "id": 5672,
    "text": " Declaring and Assigning a Variable\n\nC Programming in: x;\n\nint y; lnt Y int x ‘Pm X\n\nint y\n\nx+Z;\n\nintz y~X; z\nt\nn\ni u n\n\n9\n+ ..\n1*’"
  },
  {
    "path": "E:/Coursera/programming-fundamentals/02_reading-code/04_conditional-statements/03_execution-of-if-else.mp4",
    "id": 5677,
    "text": " Execution of if / else\n\nC Programming mt f (mt x, int y) (\n1: (x < y) (\npr1ntf(“x < y\\r.”)7\nreturn ,1 + ><7\n)\nelse I\npnn::’<“x >: y\\n\"H\n1f (X > 8) 1\nreturn y + 7,-\n\n)\n\nreturn x — 2;\n\nlnt maln (voldl 1\n\n \n\nJnt a — t (3, 4):\n\nHit b — . (E. 5):\n\n o,-  \n> x<,,"
  },
  {
    "path": "E:/Coursera/programming-fundamentals/02_reading-code/05_loops/03_while-loops.mp4",
    "id": 5679,
    "text": " while Loops\n\nC Programming um g(1nt a,1nt. 1:) (\nint total = a;\nmule (a < bi (\ntotal += 3?\npr)ntE(”a=id, >.»=w\\n~, a, by;\n.3“,\nhr’?\n)\n\nreturn total.’\n\nxnt mam Lvrndj (\nint. x = <;(2, 9);\npr)ntfl”)<=id\\n\", x1?\nreturn 0;"
  },
  {
    "path": "E:/Coursera/programming-fundamentals/02_reading-code/05_loops/06_equivalent-for-and-while-loops.mp4",
    "id": 5680,
    "text": " Equivalent for and while Loops\n\nC Programming int mainwoid) ( int mAin(void) (\n\nSn:y=l; m:y=1;\nint-.n-3; intn=3;\nfor (inI:i—l7 i<n7 1++)( (\nv=y-1; inti=l;\n) while (i < 11) ¢\nreturn 0; y = y - 1;\n) i++;\n)\n)\nreturn 0;"
  },
  {
    "path": "E:/Coursera/programming-fundamentals/02_reading-code/05_loops/09_execution-of-continue.mp4",
    "id": 5682,
    "text": " Execution of continue\n\nC Programming mam\nvoid prxntﬁemaxnders mm )0, Ant m, )n( n; (\n\nint 3 )0;\nwhile (3 < rm<\n\n \n\nIf (3 : 0; (\npr1ntfl\"Cannot dnndc by 0.\\n\"}',\n\nCont 1 nuci\n\n)\n\npr)nLf[“‘¢d mod ta = mxw, n, 3. I11 n:\nn.,\n\nAnt mam lvcld} (\n\npm.m,ndem.2. 4. 5.-, T\n\nreturn 0;\n\nmud — 9\n\n \n\nI ' W\n((lvu'uH d‘\\id€ UV U\n@ 5 mm 1 vs 2\nKWIUK1 3 1» L\n<, M: s m /\n\na my"
  },
  {
    "path": "E:/Coursera/programming-languages/03_section-1-and-homework-1/02_video-lectures/02_rules-for-expressions.mp4",
    "id": 4266,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nML Rules for Expressions (Seen So Far) A very simple ML program\n\nThis program has integers‘ variables, additxon, Iﬂexpresslons‘ Vess-\nthan, subtraction‘ and calling a pre-deﬁned funcllon\n\n(« 3;\n\n \n  \n\nval 1,’ = 34.‘\n\nval 5 = 17;\n\nval 1 = (x + y) + (y + 2);\nval c; = z + 1;\n\nval\n\nval\n\nJay-—\\Inr son Expressions\n\n- We have seen many kinds of expressions‘\n34 true false x el+e2 e1<e2\nif el then e2 else e3\n\n- Can get arbitrarily large since any subexpression can contain\nsub5ubexpressions,e1c.\n\n- Even! kmd of expression has\n\n1. Syntax\n\n2. Type-checkmg ru\\es\n- Produces a type or farls (with a bad error message ®)\n- Types so far int bool unit\n\n3 Evaluation rules (used only on things that type-check)\n- Produces a value (or exception or Inﬁmte—\\oop)\n\n \n\n.V3n—\\lar 2013 Dan omsmu Progamunng Lnnguages 3 (‘~ This 1'5 a comment.\n\n    \n\nThis 1'5 our first program. “\"')\n\nval x =_34; _ _\n(\" statwg EnV'|r_‘DHment: x ' mt ¢)\n(‘ dynannc emnronment: x —v> 34 ‘)\n\n$31 y = 17; _ _\n* statu; em/'H_‘onment. x : mt, y : 1nt ‘~')\n(‘~ dynannc em/1ronmen(: x ——> 34, y ——> 17 =)\n\n1\\--- f1'rst.sm1 Top L8 (SML)\nva'| y = 17 '\nva1 z = 70 .\nval q = 71 '\n\n \n\nva1 abs_of 2 = 70 : int\n\nva1 abs_of_Ls1'mp1er : 70 : int\nva1 it 0 : unit\n\n— x <\nva1 it\n‘ €\"? x\n\nVa 1t = true : boo1\n\n \n\nfa1 se : boo1\n\n      \n \n\n1\\‘~‘*- *sm1* sot L21 (Inferior-SML: run Comp'Hat'ion) A slightly tougher one\n\nWhat are the syntax, typing rules, and evaluation rules for\n\nconditional expressions?\nD\n\nLGTS write It OU1. ..\n\n \n\n.V3n—\\lar 2013 Dan omsmm Ymgmmnnng Lnnguages (Text) syntax:\nif e1 then e2 e1se e3\nwhere if, then, and e1se are keywords and\ne1, e2, and e3 are subexpressions\n\nType—check1'ng:\nfirst e1 must have type boo1\ne2 and e3 can have any type (1et's ca11 it t}, but they\nmust have the same type t\n\nthe type of the entire expression 1'5 a1so t\n\nEva1_uation ru1es: _\nf1rst eva1uate e1 to a va1ue ca11 1t v1\n\nif it's true, eva1uate e2 and that resu1t 1'5 the whcﬂe expressia\n«en's resu1t\n\ne1se, eva1uate e3 and that resu1t is the who1e express1'on's res:\niU1t\n\n1\\——- tmp.txt A11 L15 (Text)\nwrote c:/Users/coursera/Deskto/tm _txt\n\n \n\nI Now you try one\n\nSyntax, type-checking rules, and evaluaiion rubes for Jess-than\ncomparisons’)\n\n \n\nymacar mu Dan Gmssman Yuogmunnng Lnnguages x"
  },
  {
    "path": "E:/Coursera/programming-languages/03_section-1-and-homework-1/02_video-lectures/10_let-expressions.mp4",
    "id": 4274,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nLet Expressions Let-expressions\n\n3 questions‘\n\n- Syntax. ‘ lfét -.111: 233. bin a 6336:\n— Eacnhi is anybindrng ande is any expression\n\n- Type—checking‘ Type—checkeachb.1'. and 2 II’! a static\nenvironment that inciudes the previous bindings\n\nType of whole iet-expression IS the type of e\n\n- Evaluation. Evaiuate each hi and e in a dynamic environment\nthat includes the previous bindings.\n\nResuit of whole |eI—expression is result of evaluating a\n\nI3n—Mar 2013 Dan omsmm Pmgmunnng Lmiguages 4 _ va'| x = 1\n1|’!\n\nd (‘let va'| x = 2 in ><+1 end) + ('|et va'| y = x-2-2 in yvl end)\nen\n\nE\n\n1\\--- 1et_ex ress1'ons.sn'l Bot L16 (SML)\n\nstandard ML 0 New_:Iersey vll0.74 [bu1”|t: Tue Jan 31 16:19:10 2012]\n- use>\"1et_express1ons.sm1\"'\n\n[o emn? 1ec_expresswns.smiJ\n\nva s1\"|y1 - fn : int —>1'nt\n\nva'| sﬂ'|y2 — fn : unit ~>1'nt\n\nva'| it = O : unit\n\n- s1'11y2 O;\n\nva'|1't=7.1'nt\n\nl\\““- *sm1* (Inferior-SML: run Comp1\"|at1'ovI) W/7at’s new\n\n- Whats new is .1 ,,'e' where a binding is in the environment\n— In later bindings and body of the letexpression\n- (Unless a later or nested binding shadows it)\n— Only in later bindings and body of the letexpression\n\n- Nothing else is new‘\n— Can put any binding we want, even function bindings\n— Type—check and evaluate just like at “top-level\"\n\n \n\n.V3n—\\lar 2013 Dan omsnm Ymgmuuimg Lmtguages 6"
  },
  {
    "path": "E:/Coursera/programming-languages/03_section-1-and-homework-1/02_video-lectures/11_nested-functions.mp4",
    "id": 4275,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nNested Functions Any binding\n\nAccordmg to our rukes for Vet-expressxons, we can deﬁne functions\ninside any let-expression\n\n. 1 _t _.l§yI;Ba2 ..._ij: jg; e enéj.\n\nThis is a natural idea, and often good style\n\nxmxcar zmz Dan omsmau Pm;-muunng Languages 2 Stanar ML o New Jersey v11o.74\n\n- use’\"nested_Functior}s.sm1\"'\n\n[oﬁzemng nested_Funmuns.sm1]\n\nva count = Fn : ‘int * ‘int ->1'nt'|‘ist\nva1 countu _From1 = fn : int -> int '|ist\nva'| it - (57 : unit\n\n- countup_ﬁ'om1 7; 4 _\nva'|1t = [l.2.3.4.S.6.7] : 1nt'|1st\n— »\n\nProcess sm'| finished\n\nStandard ML of New Jersey vll0.74 [bu1”|t: Tue Jan 31 16:19:10 2012]\n— use>\"nested_Functions.sm1\n\n[oﬁwemng nescea,runmons.smf]\n\nva countu _From1 = fn : int -> int ‘list\n\nva'| it = (S7 : unit\n\n— count;\n\nstdIn:2.l~2.6 Error: unbound var1'ab'|e or constructor: count\n\n- countun_from1 7;\n\nva'|1't = [l.2.3.4.$.6.7] : int'|1'st\n\n].\\“\"- *sm1* fun countup_ﬁ“oml(x : int) =\n\n   \n\n‘let\nFun count (from : int) =\nif fro\nthen x\n_ e'|se from :: count(fr'om+].)II\n1n\ncount(l)\nend\n\n].\\--- nested_funct1' ons .sm1 A11 L7 (SML) } New Jersey v11o.74\n- use \"nested_Funct1'ons.sm1\"'\n\n[0 ening nested_«=uncu’ons.sm1]\nVa? gountu _from]_. = fn : int ~> int Hst\nva'| It =( : umt\n\n— count;\n§t ' -2.6 Error‘: unbound varialfle or constructor: count\n- countup_fFom1 7;\n\nva'|1't = [1,2,3,4,5,6,7] : int1isc\n\n- k\n\nu‘I t: Tue Jan 31 16:19:10 2012\n\n \n\nProcess sm'| finished 4\n\nStandard ML of New Jersey \\/110.74 [bu1'|t: Tue Jan 31 16:19:10 2012]\n- use’\"nested_Funct1ons.srn1\"'\n\n[oliwemnq nested_Fun(t1ons.sm1]\n\nva gountu _from]_. = fn : ‘int -> int '|ist\n\nva'| 1t =( : umt\n\n- coI_mtup_from1 7; 4 _\n\nva'| 1t = [1.2,3,4,s,6,7] :1nt'|1st\n\n— count;\n\n§gj;n:3.l~3.6 Error: unbound var1'ab'|e or constructor: count\n\n     \n \n\nl\\“\"- *sm1* Bot L33 (Im‘er1'or—SML: run Comp1\"|at1'orI) Nested functions: style\n\n- Good style to deﬁne helper functlons Inside the functionsthey\nhelp If they are’\n— Unllkelyto be useful elsewhere\n— Llkely to be misused If available elsewhere\n— Llkely to be changed or removed later\n\n- Afundamental trade-off rn code design‘ reusmg code saves\neffort and avoids bugs. but makes the reused code harder to\nchange later\n\nl;;\n\n \n\n!3n—\\lar 2013 Dan omsmm Pmgmunnng languages 5"
  },
  {
    "path": "E:/Coursera/programming-languages/04_section-2-and-homework-2/02_video-lectures/06_useful-datatypes.mp4",
    "id": 4287,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nUseful Datatypes Recursion\n\nNot surprising\nFunctions over recursive datatypes are usually recursive\n\n \n\n    \n \n\nfun\na ’e 1e of\nConstant ' > i\nI ljegab ' ~ (efwal e2‘)\n\n  \n\n_> (eval 21) + (eval 22)\n\nI Add\n=> (e~.:.'a,1 e1) * g§va1 e2’)\n\nI M_u1t:L -.'Ly( 1,\n\n \n\nhr-—\\(ar son mu Gmnnmu Pzogmxmmng Language: mu.-u...a.a-u. Recursion\n\nNot surprising\nFunctions over recursive datatypes are usually recursive\n\nfun\n\n \n\nc e ‘e of D\nConstant 3'. ’\n\n  \n\n(ev'a1 e2l)'\n_> (eval 21) + (eval 22)\n=> (‘ev_.'a;1 e1) * (eva-1 e2‘)\n\n \n\nI Mu1t1p1y( 1 ,»\n\n.VarI—\\lar zoiz mu Glonflllﬂl Pu)gmn\\uuiig Llmgiiagcu Qnr\\u1:e1'c.n\n\n    \n   \n  \n           \n\nnumer_o _as e \" exp —> mt =‘-\ncase e of _\nConstant 1 => 0\n\nNegate eZ number_of_adds e2\n\nAd (e1.eZ) 1 + number_of_adds el + vIumber_of_adds e.\nMu‘lt1'p'|y(e1,e2) => number_of_adds el + number_of_adds e2\n\n  \n \n \n\nI\nI\nI\nva‘l examp'|eAexp : exp = Add (Constant 19, Negate (Constant 4))\n\nva1 examp'|e_ans : int = eva'| examp1e_exp\n\n  \n \n\nexamp'|e_addcuunt = number_of_adds (Mu'|tip'|y(examp1e_exp,examp'|e_exp))\n\n \n\n    \n\n-\\—-— usefu'|_datatypes.sm'| Bot L34 (SML)"
  },
  {
    "path": "E:/Coursera/programming-languages/04_section-2-and-homework-2/02_video-lectures/13_a-little-type-inference.mp4",
    "id": 4294,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nA Little Type Inference uncaught exception Error\nraised at: .. coInp1'1er TopLeve1 interact eva1'Ioon.sm‘|:66‘19—66.27\n\n. /comp1\"|er TopLeve1/1nteract/eva'|\"|oop.srn1 244155\n\ncomp1'1er TopLeve1 interact eva11oop.sm1:296.l7—Z96.\n\n \n\nProcess sm'| finished ‘\n\nStandard ML of New Jerse¥ \\/110.75 [bu1'|t: Sat sep 29 12:51:13 2012]\n\n— usev\"type_1'nferen<:e.sm \";\n\n[0[lJen1ngttyp$_}-nfe1r;enceIsrrﬂ] ‘ t k _ t I t\nsum, r1p e n 21m:  1n 1n —> 1n\n\nva'l fu'|Lname1 _ fn : {ﬁrst:str1'ng, ‘lascstring, midd'|e:str1'ng} —> StI\"a\n\n    \n\nint ‘— int —>1‘nt\n\nva sum_tr1'p'le2 - fn : int 1 ‘ ‘ I\nstr1ng, ‘lastzstrmg, m1dd'|e:str1ng} —> St!\"a\n\nva'| fu'|Lname2 = fn : {ﬁrs\n\nVa part1:a'|,sum = fn 2\nva'| part1aLname = fn : 1rs\n\n   \n\ntr1ng ast *r1‘ng, midd'|e:'a} —> strina\n\nVa} it = O : unit\n\n     \n \n\n1\\“‘*— *snI'|* Bot L42 (Inferior—SML: run Comp1'\"|at1'un) (*-' these functions are po1ymorph1'c: type of y can be anything ’~)\n\nU-'1'n,'. int ‘ int —> ‘int ’~)|\nfun p’art1'aLsum (X, y, z) =\nx + z\n\n   \n    \n         \n \n\nfun part1'aLname {f‘irst=x, m1'dd1e=y, '|ast=z} =\nx /\\ \" \" A z\n\n   \n\n—\\~~» type,inference.sm1 Bot L47 (sML) uncaught exception Error\nraised at: . compi'Ier TopLeve1 interact eva1'loup.sm1:66‘19—66.27\n\n. /comp1'|er TopLeve'|/interact evaT|oop.srn'| 24455\n\n. compi1er TopLeve1 interact evaTIoop.sm1:296.l7—296.\n\n \n\nProcess sm'| finished\nstandard ML of New Jerse¥ \\/110.75 [bui'|t: Sat sep 29 12:51:13 2012]\n— use \"type_1nference.srn “;\n[oglzening type_inference.sm'|]\n\nsum_tr1p'lel fn 2 int -'\nva'| fuTLname1 _ fn : {firsto\n\nint.” int —> int_ _ 1\nstring, ‘lastzstring, m1dd'|e:str1ng} —> stra\n\n  \n\nVa sum_trip'le2 - fn 2 int *' int.‘ int —> int‘ _ I\nva'| fu'|Lnamez = fn : {ﬁrst:str1ng, iastzstring, m1dd'|e:str1ng} —> stra\n\nVa partiaLsum = fn 2 intf a “~“ int —> int ‘ ‘ ‘\nva'| part1aLname = fn : {F1rst:str1ng, flastzstring, m1dd'|e:'a} —> strina\n\nva'| it = 0 2 unit\n\n      \n \n\n1\\“‘*— ‘*snI'|* Bot L43 (InFerior—SML: run Campi'|ation) (*-' these functions are po1ymorph1'c: type of y can be anything 9)\n\n(*1'nt ‘a K in: —>1'nt ‘)\nfun part1a1_sum (X, y, Z) =\nx + z\n\n         \n    \n         \n \n\n   \n\nfun parv:1'aLr\\ame {f‘irst=x, m1'dd1e=y, '|ast=z} =\nx /\\ \" \" A z\n\n   \n\n—\\——~ type,1'nference.sm1 Bot L48 (SML) o emng typegn erence sm ‘ ‘ _\nsum_tr1p1el fn mt * 1nt_* 1nt —> mt‘ _ I\nfu'JLnarne1 = fn : {f1rst:str1ng, ‘lastzstnng, m1dd'le:str1ng} ~> ‘ I\n\n \n       \n    \n    \n\nsum_tr1'p1e2 = fn 2 ‘irgt 1'nt_ int —>1'nt‘ ‘ I\nfu'|Lname2 _ fn : {f1rst:str1ng, \"lastzstrmg, m1dd'|e:str1ng} —> stra\n\n. k . . .\npart1_a'|_sum = fn 2 ‘Intf a -1‘nt —> mt ‘ _ _\npart1a'|_name = fn : {f1rst:str1ng, ‘lastzstrmg, m1dd'|e:'a} —> Stl“|I'\\a\n\n1‘t_= O : unit\n— ﬁ)arfl:1aLsum_(3,4,5);\nva 1t 8 2 mt _\n— Yar\"t1aLsum‘(3,\"h1\",5);\nva 1t 8 2 mt\n— part1aLsum (3,5,\"h1\"');\nstdIn:4.l—4.23 Error: operator and operand don't aclree [tycon misrnatchl\noperator dornam: jnt *' jnt *' int‘\noperand: 1 mt ‘-' mt ‘-' strmg\n1n expressmn:\npart1'a'|_sum (3,5,\"h1\"')\n\n \n    \n  \n \n\n       \n  \n     \n \n\n1\\“‘** *sm'I* Bot L55 (Inferior—SML: run Comp1'\"|at1'on) ('-‘-‘ these functions are po‘lymorph1'c: type of y can be anything ‘~‘)\n\n(*-'1'ntI _'a ~1'nt —>1'nt '-‘-')\nfun part1a1_sum (X, y, Z) =\nx + z]\n\n \n      \n\n    \n\n    \n        \n \n\nJame {f‘irst=x, m1'dd1e=y, '|ast=z} =\n\nfun partj\nx A ' A z\n\n \n\n—\\~~» type,inference.sm1 Bot L49 (sML) Unexpected polymorphism\n\n- Sometimes type-checkerxs “smarterthan you expect\"\n— Types of some parts might be less constramed than you think\n1- Example. If you do not use somethmg It can have any type\n\n(* int * ’a * int -> int *)\nfun partial_su|n (x, y, z) =\nx + z\n\n(*(first:strinq, last:strinq, middle: ‘a} -> string*)\n\nfun partial_name {first=x, middle=y, last=z} =\nX A .. .. A Z\n\n- Th|S is okayl\n— A more general type than you need rs always acceptable\n— Assummg your functron IS correct, ofcourse\n— More precise defimtion of “more general type\" next segment\n\nyanarar 2012 Dan Gmsmuu 17u)gmmmmg Languages 4"
  },
  {
    "path": "E:/Coursera/programming-languages/05_section-3-and-homework-3-and-course-motivation/02_video-lectures/10_why-lexical-scope.mp4",
    "id": 4313,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nWhy Lexical Scope Why lexical scope ?\n\n3 Closures can easily store the data they need\n— Many more examples and Idwoms to come\n\nfun =fny=>y>x\n\n  \n\nfun (5\ncase xs of\n[J ‘> []\n1 :; => if f x\nthen x: : (fi1ter(f,xs))\nelse fi1ter(f,xs)\n\n \n\nfun 1\nfun ..—.\n\n  \n \n\nfilter (greatex:'.l'hanX ~1, xs)\n— filtex:(fn :: => x > n, xs)\n\n.Va1~—\\I(4r zon mu r,..m;.:«x; Pms\\'.m|u;m2 x.«;.g.;am Does dynamic scope exist?\n\n- Lexical scope for variables is deﬁnitely the right default\n— Very common across languages\n\n- Dynamic scope is occasionally convenient in some situations\n— So some languages (e.g i Racket) have special ways to do it\n— But most do not bother\n\n- If you squint some‘ exception handling is more like dynamic scope.\n— raise e transfers control to the current innermost handler\n\n— Does not have to be syntacticallyinside a handle expression\n(and usually is not)\n\n \n\n!3n—Mar zoiz Dan omsmm !7mgmmuimg Lmiguages 6"
  },
  {
    "path": "E:/Coursera/programming-languages/05_section-3-and-homework-3-and-course-motivation/02_video-lectures/15_partial-application.mp4",
    "id": 4318,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nPartial Application Unnecessary function wrapping\n\n \n\n- Previously learned not to write fun ‘: .. = g x\nwhen we can wnte val : = g\n\n- Thxsislhesamethingwlm fold (in (z:,_) => x+y) 0 In\np\\aceofg uz\n\n!;m—\\lar zmz mu ommmu Progmmuung Languages 4 => pre1cate x are se ex1sts prewate xs\nva'| no = exists (fn x => x=7) [4,11.23] (* fake \")\n\nva'| haszero = exists (Fn x => x=0) (”~ int ‘list —> boo‘! ’~')\n\n  \n\nva'|)incrementA'|'l = List.rnap (fn X => x + 1) (“1'nt'|ist —>1'nt'Hs=\n‘t s.\n\n     \n\n(*” ‘library functions fo'|d'l, L1'st.ﬁ'|ter, etc. a'|so curried: “~)\n\nva'| removezeros = L1'st.f1\"|ter (fn x => >< <> 0)]\n\nput hac in the actua1 y—necessary wrappmg or an exp'|1'n‘t\n\n(* but 1? {cu get a stran?e message about \\_/a1ue restmctmn ,\nr\\on—po'\\ymorphic type \"~)\n\n(\" doesn‘t wqrk forlreasons we wqn't exp'|ain here (more 'later) ¢)\n(‘-' (on'|y an 1ssue w1'|'| po'lymorph1c functions) ”~)\n\n(* va1 pairwithone = List.map (Fn x :> (x,1)) “~')\n_\\,m,\n\n    \n\npart1'a'|_app'|1'cat1'on.sm1 54% L54 (SML) The Value Restriction Appears @\n\nIf you use partial application to create a polymorphic function, it\nmay not work due to the xx: U’ ,u:“c‘.\n\n \n\n— This should surprise you: you did nothing wrong © but you\nstill must change your code\n\n— See the code for workarounds\n\n— Can discussa bit more when discussing type inference\n\n.V3n—\\lar 2013 Dan Grossruan Pmgmmimng Languages va remove-Zeros = LISE. 1 ter\n\n \n\n(‘X but if (mg get a strange message about “\\_/a'lue restriction\",\nput hac in the a(tua'| y—necessary wr‘app1ng or an exphnt\nnon—po1ymorph1c type ’~‘)\n\n(* doesn't work for reasons we w9n't exp'lain here (more 'later) *)\n(‘= (on'|y an issue wi'|'i pvﬂymorphic Functions) *‘~')\n\n  \n\n(\"va'| pairwithune : List.map (fn x :> (x,1)) (’~ 'a1ist A> (‘a ¢ 1':\nsnt) hst *)‘~')\n\n \n    \n      \n    \n    \n\n(* workarounds: 4*)\nFun pairwithone xs = List.map (fn x => (x,1)) xs\n\n  \n\nva‘l pairwithone : string ‘list -> (string * int) ‘list = Listimap (fa\n=n x => (x.1))\n\n(== this Function wqrks Fine because resu'|t is not 01 marphic v-v)\nva1 1n<:rementAndPa1rw1thone = L1st.map ﬁ\n\nwt L71\n\n  \n       \n \n\n   \n\n\"~ partia'|_app'|ication.sm'| (SML)"
  },
  {
    "path": "E:/Coursera/programming-languages/05_section-3-and-homework-3-and-course-motivation/02_video-lectures/16_currying-wrapup.mp4",
    "id": 4319,
    "text": " \"‘ Programming Languages\n\n....m.sru xs.v5)\n\nW (_W» Dan Grossman\n . z 3.; ass’....:;.i;:2:ti:s?:.,, 2013\n\n \n\nCurrying Wrapup fun currykf x y = f (><,y)\nfun uncurry f (x,y) = f x y (’—' uucurry Foo *)\n\nrun other__curry r x y = r y x\n\n(\" examp'|e ‘~')\n\n(‘~' tup'|ed but we wish it were curried ’~)\n\nFun range (1',]') = if 1' > j then E] e1se 1 range(1'+1, j)\n\n \n\nva'| countup = curry range 1\n\nva'| X5 = countup 7 (\"‘~ [l,2.3.4.5,6,7] *')\n\n    \n\n—\\—-— curry1'ng_wrapup.sIn1 Bot L8 (SML) L)\n\nEfﬁciency\n\nSo which is faster’ tupﬁng or curmng multrple-arguments?\n\n- They are both constant-time operations, so rt doesn't matter in\nmost cf your code — “p\\enty fasr\"\n\n— Dun’t program againstan implementation unm ‘rt matters!\n\n- For the small (zero?) part where efﬁciency matters:\n— It turns outSML/NJcompnes1up|es more efﬁcrenﬁy\n\n— Bm many otherfunctronal-language Implementationsdo\nbetterwith currymg (OCaml, F#, Haskell)\n\n- Sc curryrng is the “normal thing” and programmers read\nt]. -> 122 -> t3 -> t4 asa3-argumemfunctlonthat\n\nalso aHows pamal applrcatiun\n\nI3n—\\lar mu Dan Grossruan Pmgmmsumg Languages 3"
  },
  {
    "path": "E:/Coursera/programming-languages/06_section-4-and-part-a-exam/02_video-lectures/03_ml-type-inference.mp4",
    "id": 4334,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nML Type Inference 4}\n\nRelation to Polymorphism\n\n- Central feature of ML type inference‘ it can infer types with type\nvanables\n\n— Great for code reuse and understandmgfuncttons\n\n- But remember there are two orthugonat concepts\n— Languages can have type Inference without type variables\n— Languages can have type variables without type inference\n\n \n\nJmacar 2013 Dan omsmm Pmgmmumtg Lmtguages 5"
  },
  {
    "path": "E:/Coursera/programming-languages/06_section-4-and-part-a-exam/02_video-lectures/09_signatures-and-hiding-things.mp4",
    "id": 4340,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nSignatures and Hiding Things In general\n\n- Signatures\n\n  \n  \n\nsj.gna'l:'I:i}:\ns:i:g’- ﬁypés ,9,:. _:.y\n\n— can inciude variables, types, datatypes, and exceptions deﬁned\nin moduie\n\n1295. eirfd.\n\n- Ascribing a signature to a module\ngtgicucﬁnre\nistructfbzndings n\n\n \n  \n\nV}\n— Module Wlll not type—cneck uniess it matches the signature,\nmeaning it has all the bindings at the right types\n\n~ Note: SML has other forms ovascnption, we wiii stick with these\n[opaque signatures}\n\n \n\n.Van—\\lar 2013 mu Gmnniau Progmimnuig Lmigliages 3 va'| pi = MyMathLib.ha'|f_p1' + MyMathLib.ha'|f_p1'\nva‘|Dtwenty_e1'ght = MyMathL1'b.doub'|er 14\n\n   \n\n        \n\nBot L2 5\n\n \n\n- signacures.sII'l\ns1gI_1atur'e MATHLIE =\n519\nva'| fact : int ->1'nt\nva'| ha'|f_p1' rea'|\nva'| doulﬂer int -> int\nand\nscrucgure MyMathL1'b : MATHLIBI\nVi-11 p1 = 3.l4lS9265359 ' r'ea'|\nva'| twenty_e1'ght = 28 : ‘int\nva'| ‘it = () : unit\n\n(sML)\n\n \n\n1\\\"\"~ *sm'|‘ Bot L13 (I«IFer1'or~SML: run Comp1\"|at1'on) Hiding with functions\n\nThese three functions are totally equivalent‘ no client can tell which\nwe are using (so we can change our choice later)‘\n\nx.*2:\n\nx+‘x-\n\n \n\n_= xxy.\n\nDeﬁning helper functions iocaliy is also powerful\n\n— Can change/removgfunctions Iaterand know it affects no\nother code\n\nWould be convenient to have “private” top—Ieve| functions too\n— So two functions couid easily share a helperfunction\n— ML does this via signaiuresthatomif bindings ,\n\n.Van—Mar zoiz Dan Gmssmau Ymgrmuniuig Lmiguages Example\n\nOutsldethe module, MyMathLib . doubler ws simply unbound\n— 80 cannot be used [directly]\n— Fairly powerful‘ very sImp\\e Idea\n\nsjgnatgzre '\n\n \n  \n  \n\n \n\nstructure\nstruct\nfim \"\nval ’\n\nJar-—\\hr son Dan (xm)~n|.'«n Pu)gmn\\um|g Languages 5 va'| pi = MyMathLib.ha1f_pi + MyMathL1'b.ha'|f_p1'\nva1 twentygight = MyMathLib.doub'|er 14\n\n~\\—-— s1'gnatures.sm'l Bot L25 (SML) ‘ Programmmg ganquages, Dan Grgssman, Jan—Mar Z013 7’\n(* section 4: s1qnatures and Hid1ng Things *)\n\n     \n   \n    \n       \n     \n  \n\n  \n\nsignature MATHLIB =\n51\n\n \n\nVa fact :_'nt ->1'nt\nva1 ha'|F_E1 : rea1\n(‘V31 dou Ter 2 int —> int *)(* can hide bindings from c1ients ’)\n\nend\n\n  \n\nstructure MyMathLib :> MATHLIB =\nstruct\nFun fact x =\nif x=0\nthen 1\n215a x ‘ Fact (X - 1)\n\n            \n      \n   \n\n \n\nV31 ha'|f_p1' = Mat|1.pi / 2‘o\n\nfun doulfler y = y + y\n\nva1 eight = an\n\n-\\~<~ signatures.sm1 Top L22 (SML) strucgure MyMat L1 2 MATHLIB\nva'| p1 = 3.l4l59Z55359 ' rea'|\nva'| twenty_eight = 28 : int\nva'| it = () : unit\n\n    \n     \n     \n   \n\nProcess sm'| finished\n\nStandard_ML of New Jersey v1l0.75 [bu1\"|t: Sat Sep 29 12:51:13 2012]\n~ use \"s1gnatures‘sm'| \"'\n\n[opening signamresmij\n\n[auto'load1'ng]\n\n[Hbrary $sMLNJ—aAs1s/bas1‘s.cm is stalﬂe]\n[a_um1oaaing done] _\n§1qEa§ur'es.s 20- 37 Error: unbound var1ab'|e or constructor: >\nsdou ‘ler 1n gatﬁ Mymathﬁb doub'|er\n\n  \n\n \n  \n\nuncaught exception Error\nraised at‘ 129-59’Te:/I9Jgve1/intsrac:/§v§11901 sm1'66 19,-ﬁg\n/comp1\"ler/TopLev§'|/interact/evaTToop‘sm 4.55\n’ 92L [1 rLt_eLa_c,t1e,\\LaJJ,o9\n\n   \n \n\n  \n \n\nm1 : g5‘17—295_.=\n\n  \n\n. *snI'|* Bot L32 (Infer1'or—SML: run Comp1'1at1'on)\nSvntch to buffer (defau'|t s1 natures.sm'|): auto oa mg\n[Hhrary $sMLNJ—aAs1s/bas1's.cm is stah'|e]\n[a_uto'|oad1'ng done] .\n§1%atu§g ' 7.20~2_7 37 Error: unbound var1ab'|e or constructor:\n=dEu7er 1n gafﬁ MyMathLTb duub'|er\n\n  \n\n \n \n\nuncaught exception Error >\nraised at: /comp1;'ler[T9uLeve'| 3nteract[g1a1'|q9g.sm1:66.19-66.2]\n\n‘ comp1Ter/TopLeve'| jnteract/evz-171700 ‘ ﬁT:44.55\n\n comQ1'_'ler[f[g1Leyg] /]_ntera,§t/eva]_'|_9oJ).sr_n] : 296. 17-2963\n\n     \n\n  \n\n17use_\"signatures.sm'| \" '\n\n[opemng $1 natur s.sm1]\nsigvature E-\n\n \n\ns1g\nva'| fact int -> ‘int\nva'| ha'|f_p . rea'|\nend\n\nstrucgure MyMathL1'h : MATHLIB\nva'| p1 3.14159z65359 : rea1\nva'| ‘It 0 : umt\n\n   \n\n1\\\"“~ *sm'|\" Bot L34 (Infer1'or~SML: run Comp1'1at1'on) L;.\nExample\n\nOutsldethe module, MyMathLih . doubler ws simply unbound\n— 80 cannot be used [directly]\n— Fairly powerful‘ very simple Idea\n\nsignature '\n\n \n \n  \n\n \n\nstructure\nstruct\nfim \"\nval\n\n.VarI—\\I3r son Dan (xmnnum Pu)gmn\\um|g Languages 5"
  },
  {
    "path": "E:/Coursera/programming-languages-part-b/02_section-5-and-homework-4-first-module-with-racket/02_video-lectures/17_defining-streams.mp4",
    "id": 4370,
    "text": " Programming Languages\n\n» Dan Grossman\n:: E...f'iE?£1.i?:§r?%s?S?3m 201 3\n\n \n\nDefining Streams Streams\n\nCoding up a stream in your program is easy\n— We w\\|\\ do functlonar streams using pairs and thunks\n\nLeta stream be a thunk that when cal/edreturnsa parr,\n' (next—answer . next—thunk)\n\nSaw how to use them, now how to make them...\n— Admmedly mind-bendmg. but uses what we know\n\n!nn—Mar 201; Dan Gmssnrauyvogmmmnng Lmrguages #1ang racket\n\n \n\nDuemn: mm: mm IDVVKQV .' ~.' muqﬂbl r.\n\n \n\n#1ang racket\n\n; 1 1 1 1 1 1 1\n\n(deﬁne ones (‘lambda O (cons 1 ones)))\n\n;(deﬁne ones—reaHv—bad (Cons 1 ones—reaHy—bad))\n(deﬁne ones-bad (\"lambda 0 (cans 1 (ones-bad))))\n: 1 2 3 4 5\n\n(deﬁne (F >0 (cons >< (Wambda 0 (f (+ x l)))))\n(deﬁne nats ('\\ambc‘a O (‘F 1)))\n\n‘(deﬁne nats\n\n(Wetrec ([f (lambda (X) (cons >< (Wambda 0 (f (+ x l)))))])\n(1ambda (f 1))))\n\n; 2 4 5 15 .\n(def1 ne powers—of—two\n\n(Wetrec ([f (Wambda (X) (cons >< (Wambda () 0‘ (\"\" x 2)))))])\nUambda (f 1))))\n\nDuevrm: hnguagevmnv my 9 n 9 a.m,_mm,.k- warm‘\n5“. gr Ma ‘mm 1... M\n\n.mm,m.m5..‘. mm... 3.‘. .n\n\n#1ang racket}\n\n \n\n.m:.»..,.' V “mun ».«.m.,,.,u',.\n\n;11lllll\n1\n\n(deﬁne ones (‘lambda 0 (cons 1 ones)))\n\n;(dehne ones—reaHv—bad (Cons 1 ones—reaHy—bad))\n(deﬁne ones-bad (‘lambda 0 (Cams 1 (ones—bad))))\n\n;1234s\n\nWelcome to V: version 5 2.1 [3m}.\n\nLanguage. rac el, m mory Vimll 128 MB\n> oneybad\n;‘<procedurezowes-bad>\n\n> (ones—barD\n\n   \n\nDuevnn: hrvguagtﬁmm mmzev m"
  },
  {
    "path": "E:/Coursera/programming-languages-part-b/03_section-6-and-homework-5-second-module-with-racket/02_video-lectures/02_datatype-programming-in-racket-with-structs.mp4",
    "id": 4378,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nDatatype-Programming in Racket With Structs Attributes\n\n- it : transparent is an optionalattnbute on struct deﬁnitions\n\n— For us. prints structvalues in the REPL ratherthan hiding\n1hem. which is convenientfor debugging homework\n\n- it unutable is anotheroptionat attribute on structdeﬁnitions\n\n— Provides more functions, for example:\n‘ ' ran\n\n      \n \n\n   \n  \n\n— Can decide if each struct supports mulationwith usual\nadvantages and disadvantages\n\n- As expected, we will avoid this attribute\n— moons isiust a predeﬁned mutable struct\n\n \n\ny;.n—\\iar zoiz Dan omsnm Ymgmuuinig Lmiguages 5"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/03_object-state.mp4",
    "id": 4399,
    "text": " \"‘ Programming Languages\n\n.a;up<m1{(I xs.v5)\n\nDan Grossman\n2013\n\n(r “V (_.,n,.; v\n\n \n\nObject State Aliasing\n\n- Creating an object returns a reference to a new object\n— Different state from every other object\n\n- Varrabte assignment (e.g., x=y) creates an alias\n— Aliasing means same object means same state\n\nL}-\n\nxmarar zmz Dan omsmau Ymgrmuumtg Lmtguages 3 # Progrjamnnng La_nguages, Dan Grossman, Jan—Mar 2013\n# secnon 7: Object state\n\nc1ass A\ndef ml\n@foo = 0\nend\n\ndef m2 x\n@foo +«= x\nand\n\ndef foo\n(ﬁfoo\nand\n\nend]\n\n-\\—-- object_state.rb TOE L17 (Ruby)\nt\n\nwrote <_:: /use rs/can rsera/Des op/pr'og1ang—fi1es/‘lectu re_mater'i z\n\ne a1s/ob e:t_state . rb ob)e:t_state .m\n\n1 A.new\n= A.nEw\n\n-_-x # Progfammxng Languages, Dan Grossman, Jan—Mar 2013\n# Sect'Ion 7: Object state\n\ndef ml\n@foo = 0\nend\n\ndef m2 x\n@foo +«= x\nand\n\ndef foo\nh\nan\n\nend\n\n-\\--- objeCt_State.rb Top L14 (Ruby) o)e:t_st.-Ae. n,\n\nA.new\nA.new\n\nx # Progfammxng La_nguages, Dan Grossman, Jan—Mar 2013\n# sectmn 7: Object state\n\nc1ass A\ndef ml\n@fou = 0\nend\n\ndef m2 x\n(ifoo\nend\n\ndef foo\n@foo\nend\n\nend\n\n-\\--- ohjeCt_State.r‘b Top L10 (Ruby) o ]e:t_State. rb\n\nA.new\n\nwb(ma§n):ooz:a> y A.new\n-> #<A:UxSfaBb8>\nx\n\n.fau\n\n> x.m2 3\nundeﬁned method ‘H for m'1:m'1c1ass\nublact sta(a.rb:]0:1n m2‘\n(vb)\n(:/Ruby)93/Inn/1rb:l2:w <ma1n>'\n1’rb(mavI):U07:D> x.m1\n\n>9 N # Progrjammng La_nguages, Dan Grossman, Jan—Mar 2013\n# Sect'Ion 7: Object State\n\nc1ass A\ndef ml\n\nI\n2715\n\n-\\--- object_state.rb Top L6 (Ruby) > x.m2 3\nundeﬁned method ‘M for m‘ imass\nob}e(t_s(a(e.rb:]0:1n m2‘\n(1rb):&\nC:/Ruby193/bin/1rb:l2:1n <ma1n>'\n\\rb(ma'irI):DU7:0> x.m1\n—> o # Fr‘Ogr_‘amm1ng La_nguages, Dan Grossman, Jan-Mar 2013\n# secnon 7: object state\n\nc1ass A\ndef 1'n1't1'a11'ze(f=o§\n@fao = f\nand\ndef ml\n@foo = 0\nend\n\ndef m2 x\n@foo += x\n@bar = 0\n\nend\n\ndef Foo\n@fao\nend\n\nend\n\n-\\—-- object_state.rb TDEtL5 (Ruby)\n\nwrote c_ : /Use rs/can rsera/Des\n\nop/pr‘ag1ang—f1'1es/1ectu re_materi a\ne a1s/ob eCt_state . rb load “ob]e:t_state.rIz“\nobJ'ect_state‘rb:¢6: warmng: a'lready in'u:ia'Hzed cunstant Dansjoe\n\n1r17ma1n :u24:u> y\ny\ny.\ny\n\n.fuu\n\n1rb(ma1rI):0l9:0> ‘load \"ob)e:t_state.rb\"\n\nobjec:,s:aze.re:¢6: warmng: awready inuiahzed canstant uamsgxce\nq\n\n;;<A:ox293s9sa Mo\n\n»rb(ma1n):a21:u> qfoo\nw A.new(19}\nMo 9>\nw.foo\nw.m2 7\n\n->\n1r17(ma1rI):U25:D> w.fo # Progr_‘amm1ng La_nguages, Dan Grnssman, Jan—Mar' 2013\n# Secnon 7: Object state\n\n\\:1ass A\ndef 'in1't1'a11'ze(F=Oﬂ\n@fao = f\nand\ndef ml\n@foo = 0\nend\n\ndef m2 x\n@foo += x\n@bar = 0\n\nend\n\ndef Foo\n@fao\nend\n\nend\n\n-\\--- object_state.rb Top L5 (Ruby) Class constants and methods\n\n- Class constants\n— Syntax: s\\ar\\wilh capital letter‘ e.g., Foo\n— Shou\\d not be mutated\n— V|S|b|e ouiside class C as c: :Foo (unlxke class variables)\n\n- Class methods (of Java/C# static methods)\n— Syntax (in some class C).\n\n\\de_f ’\n\n \n \n\nendr\n— Use (of mass method In class C):\nC Enéthﬁithame (arqé) ‘\n— Pan of \\he c|ass,no1a panwcularlnstaoee of It\n\n \n\ny;m—\\var son mu Gmnnmu Vmgmmmmg Languages 5 def M x\n@foo += x\n@@bar += 1\n\nend\n\ndef foo\n(ﬁfoo\nend\n\ndef ar\n@@ ar\nend\nend\n\n# exampie uses\n=begin\nA A.new\nA.new # different object than x\nx # alias to x\n.foo # get back nil because instance variabie not initialize:\n\n.mZ 3 is error because try to add with nil object\n\n.m1 4! creates @foo in object X refers to\n\nfan #1remember, x and z are aliases\nobject_state.rb 45% L65 (Ruby) > ‘load \"ob)e(t_state.r\no|7J'e<t_state‘rb:46: warmnu: a‘! ready in1tia'hzed canstant Dansjve\n> (me\n\n1rb(ma1rI):O20:U>q A.new\n~> »<A:ux29zs9ss F\n\nIrb(ma1rI):021:0>\nw A.new(19)\nElfo 9\nwfoo\nw.m27\n\nw.foo\n\n1rb(ma1r\\):O25:O>c1 (mew\n,> »<c:ox2szacns\n\nc2 c.new\n@fLm:D>\nc.rese:_bar\n\nc1.m1 7\nundeﬁned methud ml‘ Fur .v<c:cx2a3a:bs rm;\nfram (wh):2s\nmm C:/Rub)/193/t:1n/1rb:1Z:1n <m:.nn>'\n1rb(mair\\):U3o:0> c1.m2 7\n\n> 1\n\\rb(mav\\):U3*:O> c2.m2 9\n—> 2\n\n1r‘b(ma1‘rI):U3z:0> c2.b x : A.new\n= A.new # different object than x\n= x it alias to x\n.foo # get back n1'1 because instance var1'ab1e not 1'n1't1'a11'ze:\n\n.m2 3 # error because try to add with nil object\n\n.m1 4! creates M00 ‘in object x refers to\n\nfoo # remember, x and z are aliases\nobject_state.rb 45% L58 (Ruby) xrb(mav\\) :02\n~> ;:<A:ox293a9ss we\n\n1 rb(ma1r\\):U2J.:0> q.foo\nA.new(l9)\n\n>\nC.reseI:J7ar\n\nml‘ Fur N<C:0x283;\\:bS @fm7— >\n\nfrom (1rbJ:25\n\nfrom C:/Rubyl93/bun/1rb:l2:1n <m:nn>'\nxrb(ma1n):u3o:u> c1.m2 7\n»> 1\n\n2\n1rb§ma1r|):033:0> c1.fou\n\n>\n1 rb(ma1 H) :U34:O> :2 . fen\n_> 9\n\n1rb(ma1r\\):U35:0>"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/04_visibility.mp4",
    "id": 4400,
    "text": " \"‘ Programming Languages\n\n....m.sru xs.v5)\n\nW (_W» Dan Grossman\n . z 3.; gm ¢:1.i;:::%:::?z.,, 2013\n\n \n\nVisibility Method visibility\n\n- Three vis/‘bi/inesfor methods ln Ruby‘\n— private only available to object itself\n— protected‘ available only to code in the class or subclasses\n— public available lo all code\n\n- Methods are public by default\n— Multiple ways to change a methods vlslblllly\n— Here IS one way...\n\n \n\nxmacar zmz Dan omsmau Ymgmmulmg languages 5 Method v/sibi/ities\n\n \n\ny..,.,\\m zen Dan (vm~~n|.'m Pmgmnumng Izmguagcx One detail\n\nlfm rs private, then you can only call it via 11: 0I’m(args)\n— As usual, this IS shorthand for selﬁ’}m \n— But for private methods, only the shorthand Is allowed\n\n \n\n.Van—\\lar zmz Dan omsmau Pmgmmnlmg Lmtguages x"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/07_class-definitions-are-dynamic.mp4",
    "id": 4403,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nClass Definitions are Dynamic Changing classes\n\n- Ruby programs (or the REPL) can add/change/replace methods\nwhile a program is running\n\n- Breaks abstractions and makes programs very difﬁcull to\nanalyze, but It does have plausible uses\n\n— Simple example: Add a useful helper method to a class you\ndid not deﬁne\n\n- Controversial in large programs, but may be useful\n\n- For us‘ Helps re—enforce “the rules of OOP”\n— Every object has a class\n— A class determines its instances’ behavior\n\n \n\nymxiar 2m 1 Dan Gmssmau Pvogmmnung languages _ vb mavI):Onl:ﬂ>\n\nA\n\nmy-Am 1m. hm (nn«».yu.'«u mu .mvmin2 x :|n2\\nuc- 1rb(m.:nrI):ﬂD2:u> x Myxanona1.neu(a.\n\nVm—\\hr Jun mm mm. .m.«n vnm-munm inxnmnze Vm—\\hr Jun chss Fxxnum\ndef\n\nse1F + se'IF\n\n> end\n\nmam) :o22:1 end\n\nSyntaxirrcr: (1rb):20: syntax error, unexpected ‘.-, expectwng\nseTF . 531?\nA\n\n(irb):22: syntax error. unexpeuea keywm-a,end, exveennq Send\nfrum c /Rubyl93/bin/1rb:l2:1n <ma1n>'\nVrb(mavI):U2 > chss F1xnum\nwrb(ma1n):UZ def duutﬂe\n: se'lF ~ se'|F\nend\nend\n\n»rb(ma-m):u2a:u> 3.:'lass\nFwxnum\n3.doubVe\n\n42.doubIe\n\nmu (‘VYU\\’-HUI“ Pros mmins x. The moral\n\n- Dynamic features cause interesting semantic questions\n\n- Example.\n— First create an instance of class C, e.g., x = c.new\n\n— Now replace method methodm in C\n— Now call x.m\nOid method or new method? In Ruby, new method\n.»\nThe point is Java/C#/C++ do not have to ask the question\n\n— May aliow more optimized method—caiI implementations as a\nresult\n\n.Van—\\lar ml 1 Dan omsmau Piogmmunng Lmtguages 4"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/14_subclassing.mp4",
    "id": 4410,
    "text": " \"‘ Programming Languages\n\n....,mru xs.v5)\n\nW (_W» Dan Grossman\n . z 3.; 82$’.;..:1.i?:2:f§s?§?:m 2013\n\n \n\nSubclassing c ass Pom: _\nattr_accessor :x, :y It defmes methods x, y, x=, y:\n\ndef 'im't1'a11'2e(a,b)\n(ﬁx 3\n(‘Y\n\nend\n\ndef d1'stFromorw'g'in\n\n:ath.5qr‘t(@x “~‘ @x + @y * @y) # uses instance var1'ab'|es\nEll\n\ndef d1'stFromor1'g1'n2\n\nh‘;|ath.5qr‘t(X * x + y *1 y) # uses getter methods\nEl’!\n\nand\n\nc1ass co1orPo1'nt < Point\nattr_accessor :co1or J! ccflor color:\n\ndef '5nitiaTize(x,y,c=\"c1ear\")\nsupeE(x,y) Jlkeyword super ca115 same method in superclass\n@co1or = c\nend\nend\n-\\—-- subc1assing.rb 8% L24 (Ruby)\n\nwrote c : /Use rs/cou rsera/Desktop/prog1ang-fﬂes/1ectu re_mater1' a\nea‘! s/subc1ass1'n - _ rb . p.ca1or\n. undefxned methad ca1or' For #<Pu1nt:0x26792d0 @x\nfrum (irb):7\nFrnm C:/Ruby193/bwn/1rb:12:1n <ma1n>\n\nirb(ma1n):O08:0> p.:1ass\n\n> PU1ﬁt\n\n1rb(ma1n):009:0> cp.c1ass\n\n.> CUTDFPDIHC\n\n1rb(ma1n):Ol0:0> :p.c1ass.superc1ass\n\n> Pa1nt\n\n1rb(main):011:0> cp.c1a5s.superc1as§ksuperc1:ss\n\n_> object\n\ncp.c1ass.superc1ass.superc1as5.superc1ass\n\n1rb(ma1n): : cp.c1ass.superc1ass.superc1ass.super:1ass.superc1ass\n\n.> H11\n\n1rb(ma1n): : p.1s_a7 Pu1nt\n\n> true\n\n1rb(ma1n): : cp.1s_a? Po1nt\n\n.> true\n\nirb(ma1n): : cp.1s_a? Cu1arPu1nt\ntrue\n\n1rb(ma1n): : cp.1s_a? Paxnt\n\n'> true\n\n1rb(ma1n): : :p.is_a? Object\n\ncp.1nstance_uf7 Pa1nt\n\n1rb(ma1n): : cp.1nstance_uf7 Ca1orPuint An objecthas a class\n\np = Point.new(0.,0)\n\ncp = Co1orPoint.new(0,0,\"red\")\np.é1ass\n\np . class . superclass\n\ncp.c1ass\n\ncp . class . superclass\n\ncp ..c_1ass . superclass . superclass\n<:p.is_a? Point\ncp.insktance_of? Point\ncp.is_a? Co‘1ox:P6int\n\ncp. nstam:e_of? Co1orPoint\n\n \n\n- Usmg these methods IS usually non-OOP style\n— DISBHOWS other Ihtngs that \"act hke a duck\"\n\n— Nonetheless semantics Is that an Instance of ColorPoint\n“Is a\" Point but Is not an “mstance of’ Point\n\n— [Java note instanceof is hke Ruby's is_a?]\n\nIa!-—\\I3r :on Dan Kuosxnmu Pwenxnluaulg ‘.'(l\\§l|)3EL‘> 5"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/17_method-lookup-rules-precisely.mp4",
    "id": 4413,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nMethod-Lookup Rules, Precisely - Look up instancevariable @x using object bound to self\n\nUsing self\n\n- self maps to some “current\" object\n\n- Look up class variables @@x usmg object bound to se1f.x:1ass\n\n- Look up methods...\n\nmnacar zmz Dan omsmau Pm;-mummg Languages 4 Optional: static overloading\n\nIn Java/C#/C++, method-Iookup rules are similar, but more\ncomplicated because > 1 methods in a ciass can have same name\n\n— Java/C/C++. overriding only when number/types of\narguments the same 1}\n\n— Ruby same-methodvnamealways overriding\n\nPxck the “best one” using the (static) types ofthe arguments\n— Complicated rules for “best\"\n— Typecnecking error If there is no “best”\n\nRelies fundamentally on type-checking rules\n— Ruby has none\n\n.V3n—\\lar zmz Dan Gmssmau Pm;-mmunng Lnnguages x"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/03_section-9-and-homework-7-second-module-with-ruby/02_video-lectures/08_interfaces.mp4",
    "id": 4423,
    "text": " Multiple interfaces\n\n- Interfaces provide no methods or ﬁelds\n\n— So no questions of method/ﬁeld duplication when\nimplementing multiple interfaces, unlike multiple inheritance\n\n- Whatiriterfaces are for:\n— “Caller can give any instance ofany class implementing I\"\n\n- So callee can call methods in I regardless of class\n— So much more ﬂexible type system b\n- Interfaces have little use in a dynamically typed language\n\n— Dynamic typing already much more flexible‘ with lradecffs\nwe studied\n\n \n\nymxiar ml 1 Dan Grmsniau Yrbgmlmlhltg Lnilguages s"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/03_section-9-and-homework-7-second-module-with-ruby/02_video-lectures/09_optional-abstract-methods.mp4",
    "id": 4424,
    "text": " Programming Languages\n\n» Dan Grossman\n‘ .-:3 z;.,:~.a¢::.;::§:t%s3s?z.,, 2013\n\n \n\nOptional.‘ Abstract Methods No interfaces in C++\n\n- If you have multiple inheritance and abstract methods, you do\nnot also need interfaces\n\n- Replace each interface with a class with all abstract methods\n\n- Replace each “implements interface\" with another superclass\n\n80. Expect to see interfaces only in staticallytyped OOP without\nmultiple inheritance L:\n\n— Not Ruby\n— Not C++\n\nJmkklar 2013 Dan Gio>5n\\au Vvogmixlinmg Languages"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/04_section-10-final-exam-and-course-wrap-up/02_video-lectures/06_subtyping-for-oop.mp4",
    "id": 4430,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nSubtyping for OOP .'self/ this is special\n\n- Recall our Racket encoding of OOP-style\n\n— “ObJects\" have a list ofﬁelds and a list of funcllons that take\nself as an explicit extra argument\n\nso If self/ this Is a function argument, ls It contravanant?\n\n— No‘ It Is covenant: a method In a subclass can use ﬁelds and\nmethods only avallable ln the subclass‘ essentlal for OOP\n\nclass A (\n\nint m()( return 0; )\n)\n\nclass B extends A {\n\nint x;\n\nint m(){ return x; l\nl\n\n— Sound because calls always use the “whole object” for self\n\n— Thrs us why codlng up yoﬁr own objects manually works\nmuch less well In a statlcallytyped languages\n\n.Van—\\lar 1012 Dan Gmssnmn Yrogmmuung Lmlguagcs -"
  },
  {
    "path": "E:/Coursera/python/07_chapter-five-loops-and-iteration/01_lecture-materials/01_5-1-loops-and-iteration.mp4",
    "id": 4465,
    "text": " . P'Yl'HONI-‘Oil\nLoops and Iteration — Pan 1 EVEWBOHV\n\nBreaking Out of a Loop\n\n' The break statement ends the current loop and jumps to the\nstatement immediately following the loop\n\n' It is like a loop test that can happen anywhere in the body of the\nloo\n\n  \n \n       \n \n\n  \n\n \n \n\nwhile True: > hello there\nline = input('> ') hello there\nif line == 'done‘ >finished\n51%“ ﬁnished\nprint(1ine) > done\n-—.. , ,.\nprzn one. ) Done!\n\n4-/--D Loops and Iteration — Pan 1\n\nwhile True:\nline = input(‘> ')\nif line = ‘done’\n\nbreak\nﬂint (line)\n\nprint( 'Done! ')\n\n \n\nNo\n\nprint('Done')\n\nPYFHON FOR\nnvsnmaonv . mrmon 1-‘on\nLoops and Iteration — Pan 1 EVWYBODY\n\nFinishing an Iteration with Continue\n\nThe continue statement ends the current iteration and jumps to the\ntop oft e loop and starts the next iteration\n\nw ile True :\n\num = inpuu i) v)“‘ > hello there\n\nif 1ine[0] == 'ii' : hello there\ncontinue” > # don't rint this\n\nif line = ‘done’ : 1. > print this!\nbreak print this!\n\nprint (line) ,_7> done\n\nprint( 'Done! ') Done!\n\n4-/--D Loops and Iteration — Pan 1\n\nwhile True:\n/ line = raw_input('> ‘)\n\nv\\if lin3[O] = ‘#‘\ncontinue\nif line = ‘done’\nbreak\nprint(1ine)\nprint( 'Done! ')\n\nt/-9\n\nprint('Done')\n\nWruoN FOR\nnzvmwaopv"
  },
  {
    "path": "E:/Coursera/python-programming/02_functions/01_core-materials-functions/04_local-variables.mp4",
    "id": 5704,
    "text": " 5  V511 5 ' Wu\nScott Rixner offset: = 22\nnmlcxyliez = 5 / 9\n\ncelsxua - ltahrenhexc — omen « mumpnez\nStun’. nude gunman. , fahxenhexc,\n\nomen, mumpxm, cums»\nxecuzn celsxus\n\nullperatuxe = 95\nconverted fahzenheit tcicelsiusuemperacuxeb\n\npz)nC1\"Fahren.be1l: temp  tazpexatuze)\nDuntﬂcelsxus temp. , com/erced)\n\no Vanables aenmu inside a funcnon are local to\n0 that functiwn\n\nfahrenhext - 27\n\noffset 2\n\nmultivhex = 19\n\nCelsius = 77\n\nnnnwnem: , fahrenhext, offset.\n\nmuluplxex, celsxusv\nnewtanp = :anzenr.eu_m_ce1s:usu2>\npr1nC1“a§:ex:“, fahxenhext, offset.\nmulcxplxer, eelnus)\n\nDx1r:c1\"xesul\\'.:\", newcesnm\n\n \n\nmsme\n\nfunct m\n\n95 32 mssssssssssss 25.0\n\nFabxenhen: camp: 95\ncexsms cam: 35.0\n\nbefore:\n:nsxae\nafter.\n\nzesulcz\n\n27 2 19 7\nfunctzon:\n27 2 19 77\na.o\n\n7\n:2 :2 :2 55555555555: o.u"
  },
  {
    "path": "E:/Coursera/python-programming/03_logic-and-conditionals/01_core-materials-logic/02_logical-expressions.mp4",
    "id": 5708,
    "text": " mm: r 1\n\n0 menu mo\npz)nC1“Log)z:a1 mum\nnun: 4\"-—-———\">\nDnnuvaluel and valuel)\nPunttvaluel and va1u.e2D\npzn:C(Valne2 and vaxuezr\n\nPnnu“ I\n\nI lngual on\nDr;nc(\"Log1ca1 am\nEnact\": in\npxmuvaxuea ox vaxuen\nprxnctvalnel ax valuez}\nEnnttvaluez or veluezl\n\npunu\" )\n\nvalue; . True\nvalueé True\n\npzxnchlalnez oz Hvalual and valued) ax valuelﬂ\n\nTrue False\n\nmama: No’:\n\nFalse\nTrue\n\nLogical mm"
  },
  {
    "path": "E:/Coursera/python-programming-introduction/01_beginning-to-program-in-python/07_lesson-7-introduction-to-loops-the-while-loop/01_introduction-to-loops-the-while-loop.mp4",
    "id": 5727,
    "text": " Introduction to\nLoops - the \"While\"\nLoop a ma.» >.\"~ »o- x-.\n- W.‘...\\_...,.,........_......._... .. .-.=.._\n\nnet m...n_.._...m.,.u‘..;,\n«. §.m.,,m\nem._m.. mm x 11\n\na».num.x. 7: rm,..u.»a..m._mm. 'n('V\\1lV‘u\n\nAH 15;; I1e'(HEl7(r\nV Yr-mu 2 4 s . Mu ta .. xnvrecule 4\". in K e/nrﬁrung )7!\n.. v1h.]l}b1V\" mm 4 m. «...» linens’ —m.»..n , .»..m~\nKm: mz. . m. M. W\n. -n ,\nK‘/I’ W .. .. .wm.(.) ,\n\n -19%: .p........ . >v!V‘,\\'h'.rv[)rv »\"\"’\\'<W““* >\n\n... um)-lc-7171: mm ~ .  1,. .0: m. «M\n.)'w 'vl-§M)'IK>In71.Ill>9F\n~~x-;F;;(;:[-m_ '71 my (Mud)\n\nmo \n\nmm <§/Assn.-. n J M a ma.» >.\"V >0-1-. M,\n- U.‘...\\_...,.,........_......._...\n\n“. me D .3 mm; a. >351 hr: /1\n-u..,,». (\"E hue xwv\n“ . 2\n.m\\- (I  K\n=.,.u;:..m x\nmm\nmm m no \\. ..,u.\nwm:um. V‘\n\n.;m_» .;m.yi hr -.3 § 2 -, I ;~\n\n 5M,..Mu\n\"\" '..§§u':f.'_-.23:\n:L;:§?i.LW,\n\n.n.:.c.\n\n.. .-.=.._\n\n. m...._u\n.11 (SI) (mm. mm\n1. 9 x 7 ss 32:\n\nin m]"
  },
  {
    "path": "E:/Coursera/rails-with-active-record/01_introduction-to-active-record/03_metaprogramming-in-ruby/03_ghost-methods.mp4",
    "id": 4610,
    "text": " am. John Nanlxlru lbnhnvlivi ms .u «g». mm: in this lecture, we will discuss...\n\n<> Ghost methods Nonexistent (Ghost) Methods\n\n<> Question: lfa method is and it's ‘ , was\nit really called at all?\n\nirb(main):0@1:@> class V ass; end\nnil\ns b(main):002:0> some_c1ass SomeC1ass.new\n#<SomeC1asS :0x007Fb5SZae1c8D>\n\\rb(main):003:0> some_c1uss.i_don exist\nNoMethodErr'or: undeﬁned method ‘ dont_exist' For #<SomeC1ass:0x0@7FbSSZae1cED>\n\nFrom (m7):3\n\nfrom /Users/kalmanhazins/.rbenv/versions/Z.1.Z/bin/1rb:11:m ‘<mmn>' method_missing. .. method\n\n<> Ruby looks for the method invoked in the class to which\nit belongs\n\n<> Then it goes up the ancestors tree (classes and\nmodules)\n\n<> If it still doesn‘tﬁnd the method, it calls\nz\"~t hrzt ::_. «,1 :_u method\n\n<> The defau|t: .~1m1 , 1 ,—.,1,~; implementation throws\nH I . '}v ' v 1 Overriding method_missing\n\nclass Mystery\n\ndef melh d_mL.ss1nu nmma, ’dxgsV\nWm Loulung fox. “\nputs “\\\"|H:ne:ho:1>\\\" um-. plrula (Na:qs.]o1n(',') M W-\n\npurs \"Sorry , n. u on vacnzxnn. \nyum \"Endad up m unthod_mislinq\" it olccgqxvrcnc\nand\nand\n\n \n\n.,u]v:_nysL-:1‘/(\"Ibc\", 1* M do \\<H5Mé'L\np\\.7’~' \"And mg answer is‘ warm-. w\nAnd\n\nLooking for\n':o1ve_7.ys:e;—y\" um patams (abc,I2312J7 v\n\n> Sorry He 1; an vacazzoll\n\n— :> And the answer )5 Ended up in method nussmg Ghost Methods\n\n<> r-e<:h:=«:l ::.;::.3 .3 r ; gives you the power to “fake” the\nmethods . .We Can Do This!\n\nrequi:e_re1a:u/e 'store‘\n\nclass Reportlngsystem\n\n    \n\ndef xnitialize\n@sto:e : storemew\n\nWhy do we care to use\n\nand .. .. 7\n\ndef me:noa1_m;ssmg(name, ‘args7 Super here’\nsuper unless @s:ore.respond7c;~2 (name)\nestaresendtname)\n\nand\n\n  \n\nend\nrs : Repoztinqsystem. new\n\nputs \"Hxs.geL_piano_desc) costs #4(rsAjetipxanoiprice.to7s.l]usL(7, 'n'))\"\n: => Excellent piano casts 120.00 Summary\n\n<> Ghost methods allow you to call methods as if they are\nthere even though they are not\n\n<> Method behavior can be defined at runtime, for example\nbased on database columns existing or not!\n\nWhat’s Next?\n<> Introduction to Active Record © The Johns Hopkins University 2015, all rights reserved"
  },
  {
    "path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/03_object-oriented-programming-in-ruby/01_classes.mp4",
    "id": 4717,
    "text": " am. John: Nanlxlru lbnhnvlivi mu: m «,1». mm: 7 Lr-mw 10\n\nClasses\n\n\\H‘vm1n.‘m:v In 7.‘.\n\n \n\n%'\n\n|<m\\.~ Homxw\n\nmm H» n»Uu ‘.m,:n13.m self\n\n<> At other times, using self is required\n- Ex. - When it could mean a local variable assignment\n\n<> Outside instance method deﬁnition, self refers to the\nclass itself . \\( m.:\n\n (name, agevar) 1: CONSTRUCTOR\n@name — name Why do we need\n\nse1f.age agevar 2: call the age: method self here?\nguts age\n\n(new_age)\ngage ' new_age m ; newjge :\n\npersonl , Person. A 4 ‘ t, 11) x: :> 13\n\nputs ‘ , t: :> My age is 13\npersan1.age — 7:” rx Try to change the age\n\nputs person1.age at :> 13 (The setter d1dn‘t alluw the change) Summary\n\n<> Objects are created with new\n<> Use the short form for setting/getting data (attr_)\n<> Don't forget self when required\n\nWhat’s next?\n\n<> Class inheritance and class methods e 11.. John: Hupklns Univnrxity 2015, all rights ruorvad"
  },
  {
    "path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/03_object-oriented-programming-in-ruby/02_class-inheritance.mp4",
    "id": 4718,
    "text": " am. John: Nanlxlru lbnhnvlivi mu: m «,1». mm: Class\n\nlnhernance\n\n \n\n|(M\\‘\\H0\\'H\\1\\‘ In this lecture, we will discuss...\n\n<> The “||” operator\n<> Class methods and class variables\n\n<> Claiheritance var = var || something\n\nclass\natt r_reader :age\natt r_accessor : name\n\ndef (name. age) If CONSTRUCTOR\n@name _ name\nse1f.age = age It can the age: method\n\n9”“ O I H t\ndef (new_age) nyse rrmifhe rs\n\n@age I 5 it default\n(gage = new_age unless\nand\n\nend\nperson1 = sun.new1\"Km\". 130)\nputs person1.age 2: 5 Ldefaultiw\nperson1.age = 10 r: change to 10\nputs person1.age 1: :~ 10\nperson1.age = 200 # Try t0 change ta 2%\nnuts person1.age tr => 19 (sum) Class Methods and Variables\n\n<> Three ways to define class methods in Ruby\n<> Class variables begin with @% Class Methods and Variables\n\nclass\n\ndef (var) It 1. Usmg self\n\nt1'mes__ca11ed; var It 2;\n\nend\n\nC133: :r 2. Using << self self oufside of\n@<._at1mes_ca11ed H: a; c<=_n1mes_ca11eu += 1 '“9'”‘°d \"P-f_5\"5 *0\n\nend Class obgecf\n\nend\nend\ndef (var) at 3. Outsme of class\n\ntimes_cal1ed; var an 3\nend\n\n# No instance created.‘\n\nputs MathFunct1ons.doub'Le 5 # => 10\nputs MathFunct1ons.trip1e\n\nputs MathFunct1ons.times-V Class Inheritance\n\n<> Every class implicitly inherits from Object\n- Object itself inherits from Basicobject\n\n<> No multiple inheritance\n- Mixins are used instead Summary\n\n<> Class inheritance lets you override parent's behavior\n<> Class methods do not need an instance of object in\n\norder to be called\n<> Class variables begin with @ @\n\nWhat’s next?\n<> Modules e 11.. Johns Hopkins Uninrsity 2015, all rights rssurvnd"
  },
  {
    "path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/03_object-oriented-programming-in-ruby/04_scope.mp4",
    "id": 4720,
    "text": " am. John: Nanlxlru lbnhnvlivi mu: m «,1». mm: Scope\n\n\\n'vm1a.‘mnhw\n\n \n\n®\n\nk )tN_~ Hnwkwx Scope\n\n<> Methods and classes begin new scope for variables\n\n<> Outer scope variables do not get carried over to the\ninner scope\n\n<> Use local variables method to see which\n\nvariables are in (and which are not in) the current\nscoge \"at p V1 EXCEPTION THROWN — no such variable ex1sts\nv1 * ‘\n[1 V1\np 1oca1_variab1es\n\np v1 if => o\"*<ide\n\nobj r MyC1\n\nobj.my_met: ~ => inside\n\n8) => [:\\/1]\n\np 1oca1_variab1es # => [:v1, IDDJ]\np self at :> main Scope — Constant\n\nMy/Constant '\n“nuns Myconstant it => Outer Constant\nMytanstant : *\n\nPuts ’ ’ puts Myconstant if => Inner Constant\n\npulfs Myconstant # => Outer Constant\n\nTest::Test2. .what_is_pi :3 => 3.14 '1 EXCEPTION THROWN — no 5UCh variable exlsts\n\np V1\n\np 1aca1_variab1es\np v1 #3 => outside\nobj — Myclass.‘ .‘\nobj.my_method :: => insme\n\n8) => [:v1]\n\np 1oca1_variab1es :2 => [:v1.\np self it :> mam Scope - Constant\n\nw L\nMyconstant *\npufs Myconstant it => Outer Constant\nMytanstant : ‘ ~ ‘ ‘ ‘\n\nputs Myconstant 3: => Inner Constant\n\npufs Myconstant 3: => Outer Constant\n\nTe§t::Test2. —, '.what_is_pi # :7 3.14\n\nI! you see some unusual\nbehavior CHECK your vuviahle\nnames to! upper or lower case Scope: Block\n\n<> Blocks inherit outer scope\n\n<> Block is a closure\n\n- Remembers the context in which it was deﬁned and uses that\ncontext whenever it is called Scope - Block\n\nclass Banmccount\nattr_accessor :id, :amount\ndef init1aL1ze(id, amount)\n@id d\nQamount = amount\nend\nend\n\nEanWu:*’nmt.ne|rl(123, 200)\nB3nkAccount.new(321. 100)\n\nacctl\nacct2\nacct3\naccts\n\nBankA(:0LmL.neW(421, «1ee)\nlacctl. acct2. acct3]\n\ntotal sum = a\naccts.each do |eachAcct|\n\ntota1_sum += eachAcct.amount\nend Block: Local Scope\n\narr = [5, 4 1]\ncur_number 10\narneach do |cur_number|\n5ome_var = 10 # NOT available outslde the block\nprint cur_number.to_s + \" \" at => 5 4 1\nend\nputs # print a blank line\nputs cur_number # => 10\n\nadjustment\narr.each d number;adjustment|\nadjustmen\nprint \"it mber + adjustment) \" # => 15 14 11\nend\nputs\nputs adjustment :7 => 5 (No? affected by thc blotk) Summary\n\n<> Methods and classes start a new scope\n<> Constants maintain scope\n\n<> Blocks inherit outer scope\nCould be overridden\n\nWhat’s next?\n\n<> ‘ ccess Control © The Johns Hopkins University 2015, all rights reserved"
  },
  {
    "path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/03_object-oriented-programming-in-ruby/05_access-control.mp4",
    "id": 4721,
    "text": " am. John: Nanlxlru lbnhnvlivi mu: m «,1». mm: ii?\n\numm Huvm» Access Control\n\n<> When designing your class — important to think about\nhow much of it you will be exposing to the world\n\n<> Encapsulation: try to hide the internal representation\nof the object so you can change it later\n\n*><> Three levels: public, protected and private Encapsulation\n\n— (speed, comfort)\n@rating speed comfort\n\n# Can't SET rating from outside\n\n@rating\n\nputs Car. ( , .).rating # => 20 Specifying Access Control Access Control\n\n<> public methods — no access control is enforced\n- Anybody can call these methods\n\n<> protected methods — can be invoked by the\nobjects of the defining class or its subclasses\n\n<> private methods — cannot be invoked with an\nexplicit receiver\n\n- Exception: Setting an attribute can be invoked with an explicit\nreceiver Private Access\n\n‘ (age)\nse1f.age ‘ age # LEGAL * EXCEPTION\nputs my_age\n3 puts self.my_age # ILLEGAL\nif CANNOT USE self or any other recelver\n\nPersomn ‘.( 1:) it :> 25 Summary\n\n<> public and private access controls used the most\n<> private methods are not callable from outside or\n\ninside the class with an explicit receiver\n\nWhat’s next?\n\n- Introduction to Unit Testing 9 Thu John: Hapldns Uninrsity 201 5, all rights runrvnd"
  },
  {
    "path": "E:/Coursera/technical-support-fundamentals/06_troubleshooting/04_course-wrap-up/03_congratulations.mp4",
    "id": 5840,
    "text": ""
  }
]