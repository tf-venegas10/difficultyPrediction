[
  {
    "path": "E:/Coursera/algorithms-part1/06_mergesort/01_mergesort/03_mergesort.mp4",
    "id": 5138,
    "text": " Algo r  [h [n 5_ KuI.L|u 5. ...,m .. A w 1;. \\'|\\' \\\\.'.u.\\|v\n\n2.2 MERGESORT\n\n> mergesorr\n\nllllululll \"m\" > bolfom-up mergesor!\n- > soning comp/exily\n\nAlgonthms\n' '\" \"\"\"\" > comparators\n\n» srabiliry\n\nmw /mm u..mm..... gm. Two classic sorting algorithms\n\n  \n\nCritical components in the world’: compuulional infrastructure.\n\n- Full scientiﬁc understanding oftheir properties has enabled us\nto develop them Into ntgcticai system sorts.\n\n. Quickson honored as one of top to algorithms at 2am century\n\nIn science and engineering.\n\n  \n\nMergeson. [this lecture]\n- Java sort for objects.\n- Perl, c++ stable sort, Python stable sort, Firefox Javasmpt. \n\n  \n\nQuicksort. [next iedure]\n. Java sort for primitive types.\n- C qsort. Unix. vlsuai C». Python. Matlab. Chrome Javascript. 2.2 MERGESORT\n\ny margesorl Margosori\n\nBasic plan.\n- Divide may into two halves.\n. Recursuvery sort each half.\n\n. Merge two halves.\n\n  \n\n        \n       \n        \n     \n \n   \n   \n \n     \n    \n\nm»«rM£xc:sonvzxAnn>\n;a:\\l’H«.vU[fcy1u|(n5\n\n...m,v-.»‘.u A 2 2 l M p v x\nAEEEECLMMDPKRSYX\n\n \n\nL 2\n\n    \n\n        \n\nMugtson muvhw\n\nHIS! Dtcd!\n\nof a\nInput! on the\nEDVAC\n\nu....a.._.. Abslracl in-place merge damo\n\nGoal. cwen two suned subarrays a[1o] to a[mid] and a[mI'd+1] to a[hi].\nreplace with Sorted subarray a['la] (0 a[hi].\n\n \n\num: suhnnqy cxhauurd mm «mm ollvrr\n\nmu T Merging: Java implemenlation\n\nprint: static ma merge(comparab'!e[] a. Comparable[] aux. m In. in: mid, m: M)\n(\n\nzsser(1'sSor(ed(a, In, mid): m»mnmuou- ma mm smtad\nassert 1'sSart2d(I. midu, In , , urmL)nmLww: a[mvu~L .m] sowed\n\nfor um k 10, k <_ 011; um)\n\n \n\n \n\nmix] and: “’“‘\n1nt1=1o.)= mm:\nfor um k - Yu, k (B h1;ku) V‘:-vm\n(\nIf‘ (1 > mvd) alkl - Au)<Llq.].\n:15: if (1 > M) .1[k] nuxhn].\nelse 16(1css(nuxIJ1.nux[1]>)a[k] Qux[]A«]:\nmg and V’ AHXLHJ.\n9\nas52rl1'sSart:d(i. In. hi): ’ \\)us(<nmi‘Lvon «Ho hw] smleu\n)\nm . mu 1\nMuAuLoa|u;-as:\nk\n\n.anAcuIL~: Mergesoﬂ: Java implementation\n\nmm: chu Mum\n(\n\nyvivnu mm mm —m(. 3\n( /‘ as hzfnra '/ }\n\nmvau sun: void snrztcoivirlbllll a. caunarabl-[I an. In In. in M)\nI\nat {In <~ la) mum:\nnu ma - lo . (M - lo) / 2:\nsort (a. aux, lo. mm):\nSun (a. aux, mu. m):\nM£rg¢(a. aux, la. mm, hi):\n\n3\n\nDub“: mm mm IorK((olInlr|b1a[l -J\n(\n\nm . nut cwmmra ngm];\n\nsorm, aux. 0. Llﬂlﬁlh - 1):\nI\n\n \n\n) Mergesori: vruco\n\n \n\nM “w';=‘.,x,xvv‘\\\"“v:\n:nc:;ouv:x.»»>;[\nmergeh.\nmergeh‘\nm«>Ig9(.1,\nmergeiu‘\nmm.‘\nmer9e(a\nm£Y9h(-3.\nmarque‘\nmarque‘\nmum‘\nmerqeu‘\nIWEPKKKA‘\nmar9Q(a‘ \\\nmer\"Je(d. ..\nmvrgx-(.1 U\n\n \n\nA\nAEEEILAHM\n\n \n\ncm\n_A3m\n\nmu av merge vexum for mpdown mergesevl M eeeeeeeeeeeeeeee on Merg eeee 0: animation\n= Mergesori: animation\n\nsu mndown .:.-nu\n\n\\\n\nMw m.. wrung 4»-um»., (Q7 vtrgc xnrl\n\nnul m urdnr rrrrrrrrrrrrrrrr on\nA algonmmrmsmon\nj movder\nV j mr...mu.mv\n' 7 nulmurdtr Mergasori: animation\n\nsu row): \\(|V\\EH rlrnn\n\nA HIQDVIINIVDDXWHDH\nI  j ,...,m.,\nl  } j zuvramxuhaway\nnnlmarder\n\nM19/'/mm mruﬂﬂ .u;¢.mm (OI nmrqa $OV| Mergasori: animation\n\n:::::::::::::::::::: ., Mergesorl: animation\n\n \n\nsu vr\\(r~r—\\nr|rL1 Hm-In\n\nMw  xnnvvﬂ m.,...m w. rmrgv: SUV!\n\n>\n\nalgonmm Doxmon\nm mder\n\ntuvrml mmw\nmu m ardnr Mergesoriz empirical analysis\n\n  \n\nRunning nme estimates:\n- Laptop executes IOI compares/second.\n- Supercomputer executes IOU compares/second.\n\n    \n      \n          \n       \n    \n    \n\n \n\nwvrvns-n‘. 0.‘ Mn) '4‘\n.um.v...,., mm. HM mm VI ivwHunv Hutu. W, N W .,m,,‘\nname mum 2.5 hours 3| 7 mu mxnnt n mum; H4 mm\n\nsuper mmm Vxecond Iwnek muaul wshutt Ivuhml\n\nR\n\nBottom line. Good algorithms are better than supercomputers. roams! Improvements\n\nMergesorr\n\ny mam. ‘H.\n\n  \n\n-‘I$I1Ig(;é::tm>m\\r\\1:r$(h.1|?: svmHest Hem m S2-(0nd mm\n- 1:4:-1p: for p.x:u.:I1y mdered .5rv..av;\n\n \n\n.nM.g‘a . io . on —1o)/ 2;\n' >1§0I‘K,(A, aux. 10, may:\n\n\" .s:..-v, 9. 4... Wu vm\nwf um.;ga:m.m1, a[mC])) return:\n\nmergzh. aux, 10‘ mm. m):\n\n) Mergeson: practical improvements\n\nL mm.-.1» mu mp, “ Hy» .1.u.m.~,uwev Save ume (bu: no: space)\n\nby swltrhmg ms ml? of the mum and auxiliary array m earh rerurslvv rall\n\n.7--Wm mm mm ne.«m-mmgmmu ._ Lammabweu ._ nu la, nu ma. VVL m)\n(\nmm m. \\ ma.»\nrm» (Mu x , lo: . <_ nu kv-4)\n«\nu <. , mu; m — u-v1\nemg .r u -. In) ‘ Lu W4‘\neise)f(\\ess(a‘.1LiL-D) m — n L \" ’\nelse Lu — u»J:\n\n)\n\nu\"wa\\e smut vma 5urL{Lm-A><\\vab\\:U .‘ Lnvrpav*a\\:\\eLJ aux H11 19‘ nu x..;\n4\nn (M ¢, 101 vewv'\n\n \n\nnu ma Va . um 7 ya; / 1.\nsunk ‘ V0. men\n\nsoy\". :. , , mxdvl‘ rm,\nvernal. . H). m, rm)‘\n\nJ . Mergasori:\n\nvisuulizaiion\n\n \n\n, ..mnII1l|\n, ‘.u\\|l\\|l\n.n.nIIAHllMm\nmull\nmull\n..m:umnI\\II\n‘ .....mumI\\IVHIIHIIIIWIIWII\n...mII\\\n‘..nl|\n.“..‘..x|IHl|\nmill\nMIN\n‘..‘.uuuIIll1\\\nmulmlllllllm\n..‘..m.u. uxImuIxmInIIImIImI\\IIn|\\||\\H 2.2 MERGESORT\n\nr mergesort\n\nAlgorithms\n\nx‘.__. )\\\\\\V.‘-,\n\nmxv » ralwu u..=..mm. .a.. Copyright © 2012 Robert Sedgewick and Kevin Wayne"
  },
  {
    "path": "E:/Coursera/algorithms-part1/06_mergesort/01_mergesort/04_bottom-up-mergesort.mp4",
    "id": 5139,
    "text": " 2.2 MEIGESORT\n\nw\n\n.I.‘: 11\n\n. i , r bottom-up mergesort\n‘Algorithms ‘\n\ny\n\nM. . r u Bonom-up margewrl\n\nEaslc pun.\n- Pass through array, merging subarrays ofsize 1.\n- Repeat for subarrays of size 2, 4. s. 15. \n\nml\n7\nn v\n\nBottom line. No recursion needed! Bonom-up morgesarl: Java impiemaniulion\n\n  \n\nmm chss Hergclu\n\nI\np.-mu mm cum;--m[) Inx;\n\n  \n\nnv-Ivan static void ltW|(COIDlrIb|I[] In in ‘lo. 11!! mid. Mt M)\n( /' as before \"I 1\n\n  \n\npubh( mu‘: void sur:(cn-parm-[1 a)\n(\nnu u . mzngxn:\naux - new (amparzIz12(N];\nfa! (em 51 - 1; 51 < N: 51 . mg)\nfor mu la - oz xa < N—sx: la +. smz:\nmergeh. 1o, ms»). HaI:h.nn'n(1oos1osz~l, M»:\n\nR\n\nBottom line. Concise indus!rial~slrengIh code. a you have the space. Boﬂom-up mergeson: visual lrace\n\n2.|.|IlIIl|III|\":|n|.|.|.|II.|.|||||II ..I.I:I\n’..||n||II||II||uI|..||.uI..||II||..II..|| I\n2..|I|lllrIII|||l..u||||...n|I|,.IIII|| ..|I|\n‘“..IIIIIII|||||\".....u:IIII|||\" ....mmIII\n:1.......mIIIIIIllllllllllmm .......uu 2.2 Mskssspkr\n\nv bohornrup mergesorr\n\n;\\]gr>ril’h|n.s\n\nmm w\\g>~I L> wv mm rdz 2.2 MERGESORT\n\n> boﬁom-up mergesorf\n\nAlgorithms\n\n» .\\‘_. )\\>—A‘~\n\nmw : mun u..n...;...,,. .a.. Copyright © 2012 Robert Sedgewick and Kevin Wayne"
  },
  {
    "path": "E:/Coursera/algorithms-part1/07_quicksort/01_quicksort/05_system-sorts.mp4",
    "id": 5146,
    "text": " 2.3 QUICKSORI\n\nAlgorithms\n\n> system sons\n\nx .\\ ..,‘ M ax \n\n».mm.>e.4 ., .mm..m¢.s.. QUECKSORI\n\nAl'VV ‘ II\n\nM L.“ J! ‘.»,um_ Java lyslam saris\n\n  \n\nArrays.sor(().\n- Has different method for each primitive type.\n\n- Has a method for data types that Implement Comparable.\n\n. Has a method that uses a Comparator.\n\n. uses tuned qulcksort for primitive types; tuned mergesort var objects.\n\nimpart java.utH.Arrays:\npmte em: Strlngson\n\nI\npubliz nut: vutd -tn(s:riw11 we)\n(\nsmngn . - smxn.remsmn¢s()1:\nArrays.sart(a)'\nfor (in: i . :t<n:1.o)\nsedmxau-1n:In(a[13):\n\n \n\nQ. Why use different algorithms for primitive and reference types? Sysiem sun: Which ulgorilhm in use?\n\nApplications have diverse attributes.\n- Stable?\n- Parallel?\n- Delerminlslid\n. Keys all dlsﬂncl?\n- Multiple key types?\n. Linked list or arrays?\n- Large or small items?\n- Is your array randomly ordered?\n- Need guaranteed performance?\n\n \n\nmany more zambwnalioni 01\navtrmutux rm aiavnmmx\n\n   \n\n  \n\nElementary sort may he method of choice for some combination.\nCannot cover all combinations of attributes.\n\nQ. Is the system sort good enuugh?\nA. Usually. Soriing summary\n\n \n\nmm? mum wom amage venvarks\nsdeclxan I N 1 / 2 N I / 2 N ‘ / 2 NEXUKIHEES\nmxullon I M N 1 / Z N I / 4 N uxn I01 Emil‘ Nar DaFUiNV ovdcrcd\nmu ./ v 7 N ugh! mdg subquailralm\nmarge ./ N lg N N lg N N lg N N mg N guanlnlee, stable\nW V N A / 2 2 N N N N .9 N “*9 'ja§;g;*:'';;;;;_1\";’a\"‘-*\n3 way muck . N 7 , 2 2 N Vn N N WW3; g:;f;;;';\"_;'=S=\"<=\nI -/ N lg N N ‘U N N N: N holv sommz Wm 2.3 QUICKSORT\n\nAlgorithms\n> sysrem sons\n\n>< .__ mwxm\n\nmw / mm ().|!vm<uI:n ..s.. Copyright © 2012 Robert Sedgewick and Kevin Wayne"
  },
  {
    "path": "E:/Coursera/algorithms-part1/09_elementary-symbol-tables/01_elementary-symbol-tables/02_symbol-table-api.mp4",
    "id": 5151,
    "text": " Algorithms\n\n4\n\nI 1\n2»!-“W _\",‘JlH1!l\nA1g9r.1Ehms_\n\nmu /mm u..=.-mu... .a..\n\nkum-n SF|n.|\\H< x I K: \\'|\\'\\\\'.\\\\\\L\n\n3.1 SYMBOL TABLES\n\n> API\n> elementary implemenlalions\n> ordered operations 3.‘ SYMBOL TABLES\n\n>AP| Symbol rubles\n\nKey-value pzlr absuanlon.\n- Insert a value with specified key.\n- Given I key. search {or the corresponding value.\n\n  \n\nEx. DNS lockup.\nInsert URL with speciﬁed IP address.\n\nGiven mu. find correspanding ip address.\n\n    \n    \n \n\n      \n \n\nwww.zs.pvincelon.eﬂu izu I2 i3s.i i\n\n      \n \n     \n \n\nmm pmiczlon can i2s.i I2 IZBJS\n\n     \n\nwwwsyalzedu i3o.i32.i43 Zi\n\nwww.haN:m.edu i2s.io3 nmss\n\n     \n\nwww ximpxurmzum 2o9.osz.Is5.so Symbol tabla upplicuiions\n\n     \n\nn1wu.mmv ruuymw H? >4 Arr u\n\n        \n    \n\nmm deﬁmlmu .1.«.m.o..\n\n \n\ndvdmnavv\n\n   \n\n   \n    \n\nbook Index mm relevant pain nu ul pig: numlurx\n\n     \n\n   \n\nnu mm ﬁnd song to download name av Hang uamvulu I0\n\n   \n   \n\n           \n  \n      \n    \n      \n     \n\n«mm: Auaunl Izrnceu lrannclvoru uumnl number nummon mans\n\n     \n\n     \n\nweb scum rum mevam web ranges keyword Nu at page namu\n\n   \n\nvarlabk name\n\n   \n\nmmpnlel mm pmnerlmx a! “mum Iype and um\n\nvoulmq um mule lnlemzl mclnexs desllnaunn bu! mule\n\n       \n    \n\nnus «nu n> addvexx glven mu\n\n   \n\nmu n> addvnx\n\n       \n          \n \n\n   \n\nraven: ws «me mu given 17 «mm; n> Iddvus um\n\n        \n\n    \n\n«ma nmkm known wsmons\n\n \n\nDenomvcs om slrlnu\n\n          \n\nHI: mum mm ﬁle an mu mmm Ioczunn an dusk Basic symbol luble AFI\n\nAssoelatlve array abstraction. Associate one value wlth each key.\n\npublI( (lass SY<|(ey, value)\n\nsr() lH|NA.L\\1Hh“»’vV\"[t\n\n,- m M1lm[‘ttrw!uH't.MN.\nVurvrtm key/mm W. « mlutry rvuVH\n\nmy... ,-nu/..l.\\ thko,\nmu .y M v»nI\\..Ml\n\nma deleteoﬁey key)  kwmuJv‘«v.v‘m//NW’\nmtg... (ontams(l(!y um HUMIt4!\\.UJrt[>ut‘n'IHlHK>Y>\nboalean :s:..p:y(> H!/hN'\\h'trHfl«’\nnu sum vHvJ'.vu!L.\\ hllltlrll/V. wk\nIterahVe<Key> keys() 5 A'”HV.’7‘|Y~N‘”Yt’u\"'\\\n\nvotd FuK(KzY key, Vﬂue m)\n\nValue §u(Key key) Conventions\n\n \n\n- Vaiues are not mm.\n- Melhod gem returns mm M’ key not present.\n\n- Melhod putt) overwmes o|d value wnh new value.\n\nmended consequences.\n. Easy lo Implement contains().\n\npubhc boc'lean con(aIns(KeY key)\n( return get(|<e‘/) \\: mm: )\n\n- can Implement lazy version of unezeo.\n\nnubh: void de1eu2(Kev key)\n{ put(key. mm): Keys and values\n\nValue type. Any generic type.\n\n,=..uy rm:-mm U. AN\n\n \n \n      \n   \n   \n     \n \n     \n   \n \n\nKey type: several natural assumptions.\n- Assume keys are Comparable. use :omnar'eYo().\n- Assume keys are any generic type. use enuals() to test equality.\n. Assume keys are any generic type. use equals() to test equality;\nuse hash€ode() to scramble key.\n\nT owl! m mm.\n\nmay mm:\n\nBest practices. use Immutable types for symbol table keys.\n. Immutable lnjavaz Str1‘ng,Integer',Dnub1e. java.1‘o.Fi'|e\n. Mutable in Java: Strlngsullder, java.net.UR|., arrays. Equality list\n\nAll Java classes Inherll : method equI15(). Implelnonﬁng equals for user-deﬁned types\n\nnmulw mm in wt uzualsu mm mrwxuncz\n\nSeems easy. but requires some care Mwmmm WWW\n\n  \n\nwane ﬁnal dun mu 1-ulu-mu Enﬂllrlbhonmo\n(\nmun mm in: south:\nnnuu Hun! In: any.\nnriuu mm in! year:\n\n   \n  \n\n  \n  \n\nmm! by mu...\nvum ixpvux mH u..m:..\n\nnun: mm» IIunll(0h}:cK y)\nC\n\n  \n \n  \n     \n\n  \n\nH U __ mm mm mm mm.r.,m.4.na.mmu.:.w\n\nawn ‘WY rm“\n\n \n     \n    \n  \n\n \n\n1f(y . mu mm mu:\n\n..».m\\ Vlunl n. m m. um! Hm)\nmgmn gunman VK .m..mm\n\n \n\n« (Y.Ie:Chss() 1- lhis.uuClasx())\nmun. false:\n\n     \n   \n        \n\n \n \n\n   \n\nData that . um > y:\n« ((hIs.day I mmay > mum false:\nwe (mIs.mmh mu.mm return false:\nif (lhix.y:ar ! lhanyear 1 return false;\nmun. me:\n\nmy us Exuunlweu \\u wuu-1\n\n  \n   \n\n     \n  \n\nma m... .u wqnmcam\nIwmx M. IN‘ um: Equals design\n\n \n\n\"Standard“ recipe for userdefmed types.\n- optimrzanon for reference equahxy.\n- Check against rum,\n. Chetk mm two objecls are ofthe same type and cast.\n- Compare each s£gmf<cant field:\n— if held us a primmve type. use ==\n— if held Is an object, use aqua1S()\n\n‘M\n\n(« w\n\n— If ﬁeld Is an array, apply to each entry <— J\n\n   \n\n|»_- NA! ,r .\n\n \n\nBest pracuces.\n- No need to use calculated fields that depend on ozher fiefds.\n- Compare fields mostby lokely to differ fsrst.\n. Make cmnpareTn() consistent with equawso.\n\n\\\n\nX uumm w/‘ulIH‘\\\\ x xx r<vyv‘*vr'n,\\/w rm Frequency counter implemenlavion\n\npublic (1155 Frequenzyﬁaunur\n{\nmum: snti: vmd .m'n(su-im,z(] irgs)\n{\nml minlen . In(eqer.narseIn((:rns[0]]:\n\n   \n\nSV<Sn‘mg, 1mgw it = new SY<S(rvng, lnteger>():\nmm: (!StdIn‘isEmpty())\nI\n\nStrum ward = StdIrv.r2adSn1'mz0: ‘.  g yw \n\nyr (won.1,|en9th() < mvrﬂen) zunnrm\n\n« (‘Sr.<on(umS(wurd)) s(.pu({v.ord, 11:\n\nuse SI pumom, ,r gexmm) . 1):\n}\nStrmq max = “\n\nsnputtmax‘ 0),\nfar (swag word : 5: keyS()1\nvf (51 qet(word) > §(.qe1(max))\nmax ; ward. R\nsmouz.pnn:ln<mx ‘ “ \" + sr.get(m3x)1:\n\n \n\n \n\nM 4 HHHI M\n,. 3.1 SYMBOL TABLES\n\nr AP!\n\nAlgorithms\n\nhurt//atwuovvmulunndu R Copyright © 2012 Robert Sedgewick and Kevin Wayne"
  },
  {
    "path": "E:/Coursera/arduino-platform/02_c-programming/03_lesson-2/01_lecture-2-1-basic-c-operators.mp4",
    "id": 419,
    "text": " Unv it 0\nU Cafi sriia, I Ci e\nr\n\ncf\" . H-a:'hsI P\n\nO ess I’ an\n\ncl\n0\nt\ne\nn\nY\ne\nat\nm -J\n\nF‘ -\\-6) % ax\n\n \n\nInternet of Things\nProfessor {an (3 Hams‘ Ph.D. Module 2. Lessnn2\n\nLecture 2.1: Basic E Uperaturs Eunstants\n' Can use X’-Jeh uz Eurnpihzr directive\n:: me £u‘>1§‘/‘IF \"'2\n‘ Any Instance uf the string >5 substttuted at curnplle time\n- Character nunstants\n— Written as a singte character in singte quutes\n\n': ’ tsTE!'lt'ti3t\\.:}TUR‘;:'\n\n# Integer aqua‘ tn the ASCII vatue uf the character\n\n— Same characters are nut easy tn represent (LE. belt) Arithmetic/Relatinnal Uperatnrs\n\n. +‘ ._ 5/\n\n' % is the mnduln nperatnr. divisinn remainder\n' Ex.5\"/uZ=L5%3=|]\n\n' +* (increment) . -- (decrement)\n\n0 ::4 (V >V <:V >=V I:\n\n° Ex. if (x < 5) Luginal ﬂperaturs\n\n3.3. (AND), || (on), ! (NOT)\nTreat arguments as 1-bwt bmary values\n\n— 0 \\s FALSE, not-0 IS TRUE\n\nif ((A == 1) && la) uc University of\nCalifornia, Irvine"
  },
  {
    "path": "E:/Coursera/arduino-platform/02_c-programming/03_lesson-2/03_lecture-2-3-loops.mp4",
    "id": 421,
    "text": " Unv it 0\nU Cafi sriia, I Ci e\nr\n\ncf\" . H-a:'hsI P\n\nO ess I’ an\n\ncl\n0\nt\ne\nn\nY\ne\nat\nm -J\n\nF‘ -\\-6) % ax\n\n \n\nInternet of Things\nProfessor {an (3 Hams‘ Ph.D. Module 2. Lesson?\n\nlecture 2.3: Lnups All Built lntn the \"Fur\" Statement\n\nin: main (H\n., i\n‘\n\nint 1,-\ninitialtlatinn terminatiun step\n\nfor ‘\npr ’\n)\n) Break and Enntinue\n\nBreakjumps tn the end nf a fur,\nwhile, du, er case\n\nwhile (3: > 5) (\ny++;\nif (y < 3) btnnk;\nx++v’\n\n)\n\nBuntinuejumps tn the next\niteratinn at a leap\n\nwhile (x > 5) (\ny++,-\nif (y < 3) contjnun;\nx++;\n) Uc University of\nCalifornia, Irvine"
  },
  {
    "path": "E:/Coursera/arduino-platform/03_arduino-programs/03_lesson-2/01_lecture-2-1-classes.mp4",
    "id": 428,
    "text": " University of\nCalifornia, Irvine F\nInternet of ;l'lg|rF}g§\n\noess F n .H Internet of Things\n\nProfessor Ian G. Harris. Ph.D. Module 3, Lesson?\n\nLecture 2.1: Elasses Classes and Members\n\n:1“. x (\n\npublic:\n\nan-. n,-\n\nin: ntunc v) ( in old = m; n=v; return old; i\n\nL\n\nx viz:\nvnr. ,\nint x = vnr.u1(9):\n\n' ﬂeeiaratinn nf a variable creates an abject\n\n' .|]peratnr used tn access members\n—Data and functions\n\n' Funntiens can be defined inside the class Elasses in libraries\n\n' We dnn'1 need in knew 3 Int ahnut\nclasses\n\n' We wiH nut deﬁne classes\n\n' We will use classes deﬁned in libraries\n\n \n\n¢,begin (mac) :\nbegin (speed) ;\np:inC(“I-Ie11o\") :\n.p:1nc(“Hn11o\"); Uc University of\nCalifornia, Irvine"
  },
  {
    "path": "E:/Coursera/c-plus-plus-a/02_module-2/01_basics-of-generics-and-classes/10_2-9-natural-way-to-build-widgets.mp4",
    "id": 733,
    "text": " Module 2.9\nNatural Way to\nBuild Widgets V\nC++ EQEC §\"*;“::,..-_>‘:  32\n\n \n\nA/czZ‘.¢zra/  Z‘o \n\n   \n\nL rC++ f@E'C ';\":’ i3f_’é\"\"- ?*”“\n\n  \n  \n \n\nA/az‘arc2/ My 50 V‘ /\\/dZZ(/‘a/  Z(o rd‘. A/c2Z‘ara/ MW 20 \nBa//d M43825 “ /\\/dZZ(/‘a/  Z(o A/aZ‘ara/ May Z‘o \nBa//d /J/a/3835\n\n   \n\nL‘? mxuruwn A/az‘arc2/ May z‘o 7\n\nC++ f@E'C '*a\"<}_j'_>‘;\";z H 7*\n\nA/az‘arc2/ May z‘o A/az‘arc2/ May z‘o A \nHi 7\n\nC++ §GE'C '2 <.%jf;”;z ‘WH\n\nA/az‘arc2/ Addy z‘o \n\nL r('I++ fez‘ C \n\n \n\n<os;;_,a‘;“a1: é   eE‘§\nV '3 Q '1\n\nA/az‘ara/ May Zb P’\n\nC++ EQE C $\"\"g\":.:_<-_»‘;“‘;a_ = :a  \n\nA/az‘arc2/ Aday io \n34;/4 A2,;/38:5 ““\n\nL rC++ €63‘ C  :33  ‘ := \n\nA/az‘ara/  Z(o \n\nL A/aZ‘4zrc2/ May 60 \n\n   \n\nmm v: Why add a type?\n\no Types are related to domains\n\no So when you need to talk about widgets-you\nwant the widget type and actions on widgets\n\no C had primitive forms of type extensibility\n\nSHN iii illlilli Va\n\n++ f@§'C  \n\nA/czZ‘ara/ 424/ go rC++ Em C \n\n :4 e; ;= ©E§  \n\n%«»“‘»\n\n/\\/cZZZ(ra/  Z0 ﬁe‘ rC++ EQEC ”;\"€.}:f‘§\"£a.‘§%‘§E\n\n  \n \n \n \n\nA/aZ‘ara/  Z‘o \n\naw u: mum<:u.« /\\/aZ‘ara/ May :0 7\n\nC++ EQEC :;.;§‘§’{73_:'_\"§\"Ez. \n\n  \n \n \n \n\nA/czz‘ara/ AJa/ z‘o 4 7\n\n- C++ Ear C  ‘   \n\nA/az‘ara/ May z‘o I \nBa//d MC/33:5 “‘ rC++ EQEC ’E\";T:.%;';\n\n  \n \n  \n\n/\\/dZZ(ra/  Z(o . \n\nL C type extension:\n\no In C you can “add “ a type using struct.\n\n \n\no In C++ struct is different ~ struct is a named scope that\ncan include functions (methods) and have different\nlayers of opacity (data hiding). While C++ retains struct it\nhas the new keyword class.\n\n0 Class is almost equivalent to struct — but with different\ndata hiding defaults.\n\n<4-’\\u~:'l'  \n€‘l\"-/K47 E1. \"'   g\n/‘\n\n\"\\.P¢.4_,\\ rC++ §@E'C  33%!‘-.\n\nA/az‘arc2/ aiczy zo  »\n\nL C type extension:\n\n. In C you can “add “ a type using struct.\n\n \n\no In C++ struct is different ~ struct is a named scope that\ncan include functions (methods) and have different\nlayers of opacity (data hiding). While C++ retains struct it\nhas the new keyword class.\n\n0 Class is almost equivalent to struct — but with different\n.; data hiding defaults.\n\n<4-’\\u:'l'  \n9'\"-/i~cT Z. \"'   %\n\n/sLn~elu¢lz 5l~.cl-1' PM V\n\n' C++ fez-Q  :23:\n\nA/czz‘arc2/ May io W \n\nL rC++ f6E'C :\"‘g’:.3f'_\":‘;2 ‘v- ’==\n\n  \n \n  \n\nA/az‘ara/ Aday z‘o ‘ \n\nL A/az‘ara/ Aday z‘o “ \n\n   \n\nL 7\n\nC++ f6E°C  \n\nA/az‘ara/ Aiay z‘o “ \n\nmm\n\nL C type extension:\n\no In C you can “add “ a type using struct.\n\n \n\no In C++ struct is different ~ struct is a named scope that\ncan include functions (methods) and have different\nlayers of opacity (data hiding). While C++ retains struct it\nhas the new keyword class.\n\na Class is almost equivalent to struct — but with different\n. data hiding defaults.\n\n:4-’\\u~:'i'  \n€‘l’l/KCT Z. \"'   g\n\n/same 4» fl: slm-I-1' PM rC++ Em C    - C type point as struct:\n\no typedef struct point{doubIe x, y;} point;\n\na void add_points(point* p1, point* p2, point‘ sum)(\no sum->x = p1->x + p2->x;\n\n- sum—>y = P1->y + D2->y;\n\n- }\n\nO\n\n9('L\\S1\n\nsnnmmtnnrz A/az‘ara/ May 50 “ \nBa//d /4)/‘C/\\98Z5 .\n\nL rC++ EQEC i\"\";“:;:_§-_»‘;“T'.  ii\n\nA/az‘ara/ May 50 ‘ \n\nL A/az‘ara/ May io \nBa//d A)/5/3335 '\n\n   \n\nL C type point as struct:\nI\n\nn.z\n\n- typedef structﬂydouble x, y;) point;\nvoid add_points(point“ p1, point‘ p2, point‘ sum){\nsum->x = p1->x + p2->x;\nsum->y = p1->y + P2->y:\n}\n\nD('L\\S\\\n\n3HNHI”I:I1Ii‘z 7\n\nC++ far C  wan \n\nA/az‘ara/ ;Jca/ Zo  .\n\nL C type point as struct:\nI\n\nn.z\n\n- typedef structg>i_n§double x, y;) point;\n\na void add_points(point\" p1, point‘ p2, point’ sum){\no sum->x = p1->x + gg->x;\no sum.>y = p1.>y + 9&>y;\n\nA\nO\nO\n\n}\n\n-o(L\\S\\\n\" ('1)ﬂ\n\n‘ ($73 A/czz‘ara/ May z‘o M \n\n   \n\nL 7\n\nC++ f63'C ’3\":’:3f'.“a‘\";a \n\nA/az‘ara/ May z‘o  V\nB40‘/J /1)/‘C/5eZ(5 ’ H\n\nL rC++ €63‘ C $51.2;-_=   %%\n\n/\\/aZZ(rd/  io “ \n\nL A/az‘ara/ zday Zo A \n\n   \n\nL El-+ fer€  :22 \n\n  \n \n  \n\n/\\/dfé(ra/  Zb  _ .\n\nL C struct:\n\no Struct has fields — data members\n\n0 File scope functions manipulate the struct\nusing pointer operations\n\nSHNIH lllilll 7\n\nC++ far Q   \n\nA/aZ‘4zra/ Aiay Zo L \n34;/4 mg/38:5 \"~\n\nL C struct:\n\no Struct has fields — data members\n\no File scope functions manipulate the struct\nusing pointer operations\n\nSHNIH lllilll UNIVERSITY OF CALIFORNIA\n\n   \n\n©2013 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/01_stl-and-the-game-of-hex/03_introduction-to-the-stl-library/02_1-2-new-in-c-11.mp4",
    "id": 761,
    "text": " Module 1.2\nNew in C++ 11 enum class 7\n\nC++ €633 \n\nNew in the C++ 1 1\nStandard 7\n\nC++ f6E‘€   'ij%‘:“:\n\n  \n\nNew in the C++ 1 1\nStandard\n\n \n\nL‘ Example: enum class\n\na enum class Color{RED, GREEN, BLUE); Q\n. enum class Stop|ight{RED, YELLOW, GREEN);\n\no With simple enums these shared enumerators would be\nambiguous\n\no In C++11 they constitute separate type Stop|ight::RED is\ndifferent in type from Co|or::RED; both can be used in the same\nscope.\n\nA Si|Nii|%li|iII”l C++ for C Programmers, ,5 4’\n\nPart B: Overview\nModule 1.1 enum class enumerator type\n\na The underlying type of enum classes is by\ndefault an int; this can be specified to be a\ndifferent integral type . / O / I / 1\n\n. enum class Colo RED, BLUE, GREEN);\n\no enum class Identiﬁer: IntgraI_Type( enumerator list};\n\nLu, :<a1a~/L /47. '0'!-+ fGE'€ El-+ fG1‘C   §.2.§¥'”%:\"- 7\n\nC++ Em-C enum class enumerator type\n\na The underlying type of enum classes is by\ndefault an int; this can be specified to be a\ndifferent integral type . / O / I / 2\n\n. enum class Colo RED, BLUE, GREEN);\n\no enum class Identiﬁer: IntgraI_Type( enumerator list};\nT\n\nzfowl M  \n13LMi—-3 SHNll||}ll|ll V\n\n' C++ f@E'C Quiz: Define an enumerator\n\no Define a enum class that models three logical\nvalues — yes, no, maybe- whose underlying\ntype is unsigned and where yes>maybe>no\n\no —-— also yes worth 2 maybe’s\n\nSHNHI lllilll Answers:\n\na enum class WierdLogic :unsigned{\n‘J 4-\n. NO, // o \\\n0 MAYBE = 5,\n0 YES = 10\n\no }; // a yes is worth 2 maybe‘s\n\nSHNHI IIHIII rC++ EQEC UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/03_basics-of-inheritance/01_2-3-basics-of-inheritance.mp4",
    "id": 778,
    "text": " Va\n\n \n\nBasics of\nInheritance\n\n \n\n ‘ ’  ml Calwomia Santa Basics of Inheritance\n\no Inheritance is a Reuse Mechanism\n\no Inheritance uses pure po|ymorphism(to be\ndeﬁned)\n\na Inheritance imposes a type structure\n\no OOP = Inheritance\n\nsnmn lllilll V\n\n' C++ EQEC 2\"*;T::s§>;\n\nBasics of\nInheritance Basics of\nInheritance rC++ f@E'C E”: :3; \n\nBasics of\nInheritance Basics of\nInheritance rC++ f@E'C E”: :3; \n\nBasics of\nInheritance Basics of\nInheritance rC++ f®E'C E”: ii \n\nBasics of\nInheritance rC++ fez-C    \n\nBasics of\nInheritance Inheritance\n\n; Basics of Inheritance\n\no Inheritance is a Reuse Mechanism\n\no Inheritance uses pure po|ymorphism(to be\ndeﬁned)\n\no Inheritance imposes a type structure\n\no OOP = Inheritance\n\nSHNIII IIIIIII 7\n\nC++ fﬁﬁ‘ C :'3‘:\"{.».”‘;\"“a. ‘   \n\nBasics of\nInheritance Basics of Inheritance\n\no Inheritance is a Reuse Mechanism\n\no Inheritance uses pure po|ymorphism(to be\ndeﬁned)\n\nn Inheritance imposes a type structure\n\no OOP = Inheritance\n\nSHNIH lililll rC++ f®E' C §\"\";‘:._.sT \n\nBasics of\nInheritance Basics of\nInheritance Basics of\nInheritance\n\n2 In or u M\n\n,_  5 mn r:m1%z The OOP Design Methodology\n\n1. Decide on an appropriate set of types\n2. Design in their relatedness\n\n3. Use inheritance to share code\namong classes\n\n  \n\nL\n\n  \n  \n\nSlllilll IIHIII r(3++ §®E'C :';‘i‘éss*‘;\"‘- \"‘*“*\n\nBasics of\nInheritance Basics of\nInheritance Inheritance Basics of\nInheritance A Derived Class\n\n0 Class derived from an existing class\noclass classname:(pub|ic|protected|privale)opt\n\nbasename \"’\nT \\ .\n{ &Q/\\/\\/V19 <{’\\4’M\nmember declarations\n};\n\n. Keywords public, protected, and private used to\nspecify how base class members are accessible to\n\n  SHN lH lllllll rC++ §0E'C   \"\n\nBasics of\nInheritance\n\nK; A Derived Class\n\no Class derived from an existing class\noclass o/assname:(public|protected]private)0pt\n\nbasename \"'\n._i. K .\n{ (Q0/ux/V1.49 (\\.o'>~\\\nmember declarations\n};\n\n0 Keywords public, protected, and prwate used to\nspecify how base class members are accessible to\n\nW  SHNIH IIHIIZ Va\n\n++ EQEC  ‘ .2 ‘I L‘:\n\nBasics of\nInheritance '5\n\n++ f®E'C  ‘ 1  J:\n\n \n\nBasics of\nInheritance Public Inheritance = subtyping\no 90% rule — almost always use public\ninheritance\n\no Then base class is the type of the whole\nhierarchy\n\na Private inheritance is LIKEA relationship-not\na subtype but inherits code/members turning\n\nthem private\nSHNHI lililll 'C++ EEEC i\"\";xf..a«  \n\nBasics of\nInheritance\n\n \n\ng Public Inheritance = subtyping\no 90% rule — almost always use public\ninheritance\n\no Then base class is the type of the whole\nhierarchy\n\na Private inheritance is LIKEA relationship-not\na subtype but inherits code/members turning\n\nthem private\nSHNHI Illilll Basics of\nInheritance point and duo\n\n- class duo(\n\na public:\n\nduo():first(0.0),second(0.0)(}\n\nvoid set_ﬁrst(doub|e d){firsi = 43;)\n\nvoid set_second(doub|e d)(second = d;}\n\ndouble get_ﬁrst(){return ﬁrst)\n\ndouble get_second()(return second;)\n\na protected: // intermediate data hiding —nb need forthis exampie\n\n. double ﬁrsi, second;\n\n0);\n\nSHNIH l‘IHll%[ r i  1\n\nC++ EEEC  \n\n  \n\nBasics of\nInheritance\n\n \n\nB point and duo\n\n \n\nclass duo{\n\n7 1:m5>1<)t«.(c{49S T)\n\n. duo():first(0.0),second(0.0)(}\n\na void set_ﬁrst(doubIe d){first = d;)\n\no void set_second(doub|e d)(second = d;)\n. ﬁﬁﬁle get_ﬁrst(){return ﬁrst)\n\n.\n\nIe get_second()(return seoond;}\n/ intermediate data hiding —nb need forthis example\n\n9 rlftéz ‘*1\n” 02?“ v“«‘»c°3«7+.‘»+m+H Izmlz rC'++ f@E°C E\"z  ‘ : \n\n  \n\nBasics of\nInheritance r¢++ f@E°C E\"z  \n\nBasics of\nInheritance point and duo\n\n \n\nclass duo{\n\n7 1¢mﬂJ<.(c{49S T)\n\nduo():first(0.0),second(0.0)(}\n\no void set__ﬁrst(doub|e d){first = d;)\n\no void set_second(doub|e d)(second = d;}\n0 ﬁﬁﬁle get_ﬁrst(){return ﬁrst;)\n\n. Ie get_second()(return second;}\n\n/ intermediate data hiding —nb need forthis example\n\n9 rzrtez 461\n'7 0;?“ »‘f2L’fTs++N+H1:IHI1 7\n\nC++ fez-C  \n\nBasics of\nInheritance What did the program print?\n\npoint q;\n\nq.set_ﬁrst(3.0); q.set_second(4.0);\n\ncout << q.get_ﬁrst() <<  \" << q‘get_second() << endl;\ncout << q.length() << endl;\n\nmy  .w.vw\n\n7 SHNIH |}Hlll Answer:\n\n03,4\n05\n\no Remember pythagoras UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/03_basics-of-inheritance/04_2-6-c-feature-final.mp4",
    "id": 781,
    "text": " Module 2.6\n\nC++ Feature:'fina1‘ C++11 Feature: final\n\no What if you do not want a class to ever be a base class\nC++11 allows you to make if ﬁnal\n\nclass point3d finalzpublic point (//no further inheritance\n\npublic:\npoint3d():point(),z(0.D)()\ndouble length()( return sqrt(ﬁrst‘ﬁrst + second‘second 4» z\"z);)//virtual\nvoid set_z(doub|e d)(z = d;}\n\nprivate:\ndouble 2:\n\n}:\n\nuooouuoo\n\n- //nota bene: ﬁnal is a contextual keyword and can be an identiﬁer\n\n” SHVNLHI lilllll 'E3++ f@3'€   = *»= C++11 Feature: final\n\no What if you do not wanl a class to ever be a base class\nC++11 allows you to make if ﬁnal\n\nclassglfad ﬂnalzpublic point (//no further inheritance\npublic:\npoinl3d():poin!(),z(0.D)(}\ndouble lenglh()( return sqrt(ﬂrst‘ﬂrst + second'second + z\"z);)//virtual\nvoid sel_z(doub|e d)(z = d;)\nprivate:\ndouble 2:\n):\n\noooooouo\n\n- //nota bene: ﬁnal is a contextual keyword and can be an identiﬁer UNIVERSITY OF CALIFORNIA\n\nNT Hlll\n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/03_basics-of-inheritance/05_2-7-topics-on-inheritance.mp4",
    "id": 782,
    "text": " V\n\n’C++forCP1-ogranmmers \nModule 2.7 \\§\\*/‘k\n\nTopics on Inheritance\n\nK }  ‘I  ‘\n‘Wm. 9 -  ? e v\nV Z  S\\ “i Topics on\nInheritance\n\nx\n‘ ' ~ in SEh(m\\ofEngme '\nLL 33\"“ Topics on\nInheritance Topics on Inheritance\n\n. Subtyping and Code Reuse\n\n. Typing Conversions and Visibility\n\n- Abstract Base Classes\n\n- Multiple Inheritance\n\n0 Inheritance and Design\n\n0 Detailed C++ Considerations\n\n- New C++11 features,eg‘ ﬁnal, defau|t,de|ete UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/05_inheritance-and-derived-classes/01_2-10-the-inheritance-mechanism.mp4",
    "id": 785,
    "text": " Module 2.10\nThe Inheritance Mechanism rC++ fag-C  \n\n7//7e .37/var/z‘ance\n/V/ed/7a/7/5/>7\n\n \n\nI.‘ lnher\n\nﬂance\n\nmwmm 777e .737/ver/z‘ance\n/Wed /7Q/7/.5/)7\n\n \n\nLT /Wed /IQ/7/.5/>7\n\nLT rC++ f@E‘€ E”:  \n\n777a J37/7er/Z‘dnCe\n/V/ea/Ian/5/>7 lnheritanc\n\nam nﬁ My /Wed/IQ/7/l5/>7\n\nLj 'C'++ Em-C   \n\n777a Lv/var/z‘c2nce\n/V/ed /7Q/7/5/>7\n\n  \n\n \n\nLT /W36/7Q/7/5/>7\n\nLT rC++ f6E‘C §'*;:':i:j'?  j=.‘:\n\n777a In/var/icznce\n/Wed/7Q/7/.5/)7\n\n \n\nLT rC++ EQEC   1% ,1‘:\n77742 J37/78f/Z(CZI7C.e | C++ EQEC   \n\n777a Z37/7er/Z‘c2/ﬁe\nMed//an/5M\n\n  \n\nLL 'C++ EQEC   1% ,1‘:\n77742 J37/78f/Z(CZI7C.e /Wed/id/7/5/>7\n\nLT .. rC++ €633 ?§z'i..ef:'§’’‘a.' : .:;-1\n\n777a In/var/z‘ance\n/V/ed /id/7/5/>7\n\n \n\nLj V\n\n' C++ f@E'C \n7773 Z37/78f/‘Z(QI7Ce 777a In/ver/z‘ance\n/‘43C/7Q/7/:5/>7 777a J37/7er/Z‘c2/vce\n\n  \n\n/Wed/Id/7/.5/>7 rC++ E61‘ C     ‘~\n\n777a ./\"J7/ver/z‘anc.e\nMBC /IQ/7/'5/>7\n\n  \n\nLT Li 777a D7/7er/‘Z(QI7Ce ‘’ \n/Wed /id/7/.5/>7 '\n\n \n\nLl /Wed/7Q/7/.5/>7\n\nLi K-+ §61‘C  \n\n777a D7/7en‘z‘c2/ace\n/\"/ed/7a/7/5/>7\n\n   \n\nJ IL /Wed/id/7/.5/>7\n\nLj g++ E93-C \n\n777a L7/ver/ziznce\nMac/Ian/5/>7\n\n \n\nLT /Wed/IQ/7/l5/>7\n\nLT El-+ f6E‘C  2.3:‘;\n\n77742 In/ver/z‘ance\n/V/ea/zan/5m\n\n  \n \n \n\nJ The Inheritance Mechanism\n\n- Means of deriving new class from existing classes,\ncalled base classes\n\n. Reuses existing code eliminating tedious,\nerror—prone task of developing new code 777a Z37/7er/Z62/ace\n\n  \n\nL:A L V. EFF §(BE'€ :”;\"..i=_'.—'_?\n\n777a J37/var/Zcznce\n/Wed/IQ/7/.5/>7 E++ fag-C   \n\n77742 Z37/7er/Zlahce 1’  \n/V/ea/zan/5m V \n\nL. 777a D2/ver/z‘ance\n\n  \n\nL /Wed/IQ/7/5/>7\n\nLT rC++§’@3-C   \n\n777a D2/var/z‘c2nae  ‘A\n/Wed/Id/7/‘5/>7  \"\n\n \n\nLT The Inheritance Mechanism\n\n- Means of deriving new class from existing classes,\ncalled base classes\n\n0 Reuses existing code eliminating tedious,\nerror—prone task of developing new code\n\n. Derived class developed from base by adding or\naltering code 7\n\n777a Z37/7er/Z‘c2nCe ‘  I 7\n\nC++ far Q \n\n \n\n:o:;ga;“’;z1: ?  ;w ©EF‘~ ‘\nQ 2 5- 7\n\n7773 ]37/7ehZ(C2nCe (' \n\n/V/ed/7d/7/5/>7 ' 7\n\n777a J37/7er/Z‘c2nCe K ,5 Q++ f®E'€ i\":’:;.:-  \n\n \n\n777a J37/7er/Z‘c2/vce‘ Q\n/Wed /7Q/7/.5/>7\n\n     \n\n«a\n\n\n\nit ?\n\nV 777a Lv/zer/z‘ance ‘ rC++ fayﬂ  \n\n  \n \n  \n\n777a J37/zer/z‘ance \"  (5 ‘V\n/V/ed/Ia/7/5/)7 777a Lv/zer/z‘ance ‘ I, ’C++ fayﬂ  \n\n  \n \n  \n\n777a J37/zer/z‘ance\n/V/ed/Ia/7/5/)7 7773 L7/zer/‘ﬁance //’ 7\n\nC++ E63’ C 2””;\n\n \n\n 23: a ii 1%?\n\n. v-3: 4 7\n7773 L7/ler/{ﬁnds \n/V/ed/IQ/7/5/>7 777e J37/7er/Z‘a/vce  u rC++ EQEC ”\":‘:T*'* \n\n \n\n.  4:; \n77762 J37/7er/ﬁance \n/V/ed/7a/7/5/>7 ’ 777e J37/7er/Z‘a/vce  i 777a J37/var/z‘ance\n/V/ed /ran/5/>7\n\n \n\nLT LT rC++ EQEC E‘; \n\n777a I/2/7er/Z‘ance\n/W8C /IQ/7/.5/>7\n\n  \n \n\nLT rC++ EQEC  \n\n777a In/var/z‘ance\nMBC /IQ/7/.5/>7\n\n  \n\nLT /Wed/IQ/7/.5/>7\n\nLT The Inheritance Mechanism\n\n- Means of deriving new class from existing classes,\ncalled base classes\n\n. Reuses existing code eliminating tedious,\nerror—prone task of developing new code\n\n. Derived class developed from base by adding or\naltering code\n\n0 Hierarchy of related types created that share code &\ninterface Va\n\n++ f6E'C §';‘;*:.%j'9‘z‘;;_a2e:‘@:\n\n7773 In/ver/z‘ance fl  \n/\"/ed/Ia/7/5/>7 I é\n\nLT 7773 J37/7<‘.’h‘Z(QI7C<2 : /Wed/IQ/7/.5/>7\n\nLT rC++ f6E‘C \n\n77742 J37/7er/Zla/7Ce r I.\n/Wed/Id/7/5/>7\n\n   \n\nLT A base class: student\n\n. class siudent(\n\na public:\n\no enum year ( fresh, soph, junior, senior, grad);\no student(char‘ nm, int id, double g, year X);\n\no void print() const; /I??? What does this mean\na protected:\n\n0 int student_id;\n\n0 double gpa;\n\no year y;\n\n0 char name[30]; 7'\n\nC++ EQE‘ C \"H <.%§'—=‘;\"’§:_ ‘ E  \n\n \n\n777e L7/var/ztznce \n/Wed/7Q/7/'5/>7 ‘V V- 7\n\nC++ fag-C   \n777a J37/78f/Zlcihce rC++ EQEC  \n\n777e Z37/7er/Z‘c2/ace\n/Wed /IQ/7/.5/)7\n\n \n\nLT 7”/7e L7/var/zkznce  \" Va\n\n++ f@E'C '2 :.::_<-_>\n\n777a Z37/7er/Z‘c2/vce ‘  \n/V/ed/Ian/5/>7 ’ ‘ 5’\n\n \n\nLT 777a In/7er/Z‘c2nCe i  ‘A /Wed/IQ/7/‘5/>7\n\nLT 777a Lv/var/Zcznce ' 70\n\n++ f®E‘€ ‘*5 2:33 \n\n777a J37/7er/Z‘c2/vce\n/‘4eC/IQ/7/A5/)7\n\n \n\nLT A base class: student\n\n. class student(\n\na public:\n\no enum year ( fresh, soph, junior, senior, grad);\no student(char‘ nm, int id, double g, year X);\n\no void print() const; /I?’?? What does this mean\n. protected:\n\n0 int student_id;\n\n0 double gpa;\n\no year y;\n\n0 char name[30]; /Wed/Id/7/‘5/>7\n\nLj rC++ fer C \n\n \n\n:o2;;g;:a5   ;= er\n\n777a Dv/var/z‘c2nce\n/W8C /IQ/7/5/>7\n\npt \n\n‘V /‘4eC/IQ/7/.5/>7\n\nLT L %++ fag-C \n\n777a D2/7er/Z‘anCe\n/\"/ed/IQ/7/5/>7\n\n  \n \n\nLL 777a Z’/2/ver/ﬁance  ' rC++ €63‘ C §';‘;’:3:'>  ‘ U: ';=‘:\n\n777a Dv/var/z‘c2nc:.e ‘I K ‘\n/V/ed/7a/7/5/)7\n\n  \n  \n  \n\nL 77762 J37/7en‘z‘anc:,e '  %. 'C'++ f®E'C 3\"; <f..3ff \n\n777a In/var/z‘ance ‘\n/Wed/IQ/7/5/>7 V\n\nC\n\n \n\n7778 J37/7er/ﬁance :1 I '5\n\n++ EQEC 3\"‘:  '\n\n7773 I37/7er/Z‘d/7C \nMed/7an/5/>7  = 7”/7e L7/venzancé‘ 7; L\nMed/7an/5/>7 ' /Wed/IQ/7/5/>7\n\nLT E++ f6E'C ”:':3;f‘;\"’§a '?*\"%=-\n\n777a In/var/z‘c2nce ‘ I\n/V/ed /Ia/7/5/>7 A base class: student\n\n. class siudent(\n\na public:\n\no enum year ( fresh, soph, junior, senior, grad);\no student(char‘ nm, int id, double g, year X);\n\no void print() const; /I?’?? What does this mean\n. protected:\n\n0 int student_id;\n\n0 double gpa;\n\no year y;\n\n0 char name[30]; Va\n\n++ fa:-C   \n\n  \n\n, ‘_ :K‘,;':‘'L '\n\n7773 I/2/var/z‘ance 9‘?\n/‘4¢SChQ/7/15/)7\n\n \n\nLT A base class: student\n\na class student(\na public:\n\no enum year { fresh, soph, 'unior senior, grad );\nCﬁh student(char\" nmilnt ia double g, year X);\n\no void rint ??'? What does this mean\n.\n\nint student_id;\n0 double gpa;\n\n- year y; >q*\"'\\S/‘\n\n0 char name[30];\n\n0): rC++ f®E'C '73:  L‘:\n\n7”/7e In/var/z‘c2nc:e\n/V/ed/7Q/7/5/>7\n\n \n\nLT _ Ky. A base class: student\n\n. KMAAIIC :\n,;*:;7:*“°e\"'< Q0/‘<1{u1n9 .°3.T?i\n\no enum year ( fresh, sophEiB:y:;?or,  \nC,ﬁ[7_ittJ'dent(char’ nmilnt ia double g, year X);\nvoid rint @ //';7ﬁWhat does this mean\n‘\\ \\_)-7\n\nint student_id;\ndouble gpa;\nyear y;\n\nchar name[30];\n\n \n \n  \n\n \n\n); 7\n\nC++ E93‘ C 3”;\n\n \n\n ? 2: ;w 331% \n\n“~’..\"”~.*’\n\n777a J37/78%/‘Z(C2I7Ce \n/V/ed /7Q/7/5/>7 I ’ \"\n\n \n\n_ 777e .737/7er/Z‘c2nCe 1:  ‘ rC++ EEEC  \n\n777a Dv/ver/ziznce ‘ \n/V/ed/Ia/7/5/>7 M\n\n   \n\nkj . L :4- A base class: student\n\n. I< :\n.  ¢o~gg;.«; —.f1<2.H\"\n\no enum year ( fresh, sophmior senior‘  \nCﬁ[7_ident(char’ nmilnt ia double g, year X);\nvoid rint @ //‘zﬁwhat does this mean\n‘\\ 9-7\n\nint student_id;\ndouble gpa;\nyear y;\n\nchar name[30];\n\n \n \n  \n\n \n\n): Q\n\nLIIZI\n\na void print() const; ll’??? What does this mean Answers:\n\na void print()const; /7 '7\"U/\"\"!>U\\\n\no Const here means the this pointer —points at an\ninstance that cannot be mutated (changed)\n\n@ » vwc =\no It is useiip he compiler for const correctness UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/05_inheritance-and-derived-classes/02_2-11-a-derived-class-grad-student.mp4",
    "id": 786,
    "text": " C++ fmC  \n\nModule 2.11 \\}K\nA Derived Class: ‘\n\n' grad_student 4 _>e/*/1/ga/ C/a55~'\ngran/_.5Z‘aa’enZ‘ A Derived Class: grad_student\n\na class grad_student : public student {//public ~ subtype\na public:\n\no enum support ( ta, ra, fellowship, other};\n0 grad_student(char* nm, in! id, double g,\no year x, support I, char* d, char‘ th);\n\na void print() const;\n\na protected:\n\no support 5;\n\na char dept[10];\n\no char thesis[80];\n\nn ); rC++ Ear C \n\n \n\n  ?§ :3. emf‘-4 I\n(’ 9  “\n\n4 Den}/ea’ C/Q55‘ ‘ \ngran/_.5Z‘ao’enf 1 %\n\n   \n\nLT A Derived Class: grad_student\n\no class grad_student : public student //public ~ subtyp *\n\na public:\no enum support ( ta, ra, fellowship, other};\na grad_student(char‘ nm, int id, double g,\no year x, support t, char’ d, char‘ th);\n\n. void rint()const; \nD ‘Z’ (\n\n0 protected: wk\nchar dept[10];\nsupport 5: /  \nthesis[80]; /\n\na char\n\n_); 102 (2¢M/Lt. Va\n\n§Z‘z,{o/e/755 (3:\nGrczdade §Z‘ao’enZ‘5\n\n++ EQEC i\"\"\": i.}_\"?é\"22 7\n\nC++ EQEC i\"”: i.}_\"?é\"22 \n\n§Z‘z,{o/e/755 (3:\nGrczdade §Z‘ao’enZ‘5 A Derived Class: grad_student\n\no class grad_student : public student //public ~ subtyp *\n\na public:\n\n. GM 1»,\no enum support ( ta, ra, fellowship, other};\n0 grad_student(char‘ nm, int id, double g,\n\no year x, support t, char’ d, char‘ th);\n\n. void rlnt()const; \nD ‘Z’ (\n\n0 protected: ﬂy\nchar dept[10];\nsupport 5: z  \nthesis[80]; /\n\na char\n\n_); 107., (?,.,¢.x; '5\n\n++ fey C i\"‘;\":.:\"=  ‘ \n\n4 Derived C/Q55-' \n3/~aaL.5Z‘é{a/e/2Z( —\n\n \n\n_ /4 Der/1/ea’ C/a55-‘\ngran/_.5z‘¢za’enf /4 Der/s/go’ C/a55-'  \ngran/_.5Z‘aa’e/of ~ I C++ f6E'C 33”:\n\n4 Der/vga’ C/a55-‘\ngran/_.5Z‘¢{o/enf\n\n \n\n(, 4“\n\n V Va\n\n4 Derived C/Q55-’ '« \n3/~aoL.5Z‘é{a/e/7'5 ’V .«\n\n++ EQEC §\"’z’::.%§';';\":z_ % Eire 'C'++ EQES i\"‘;—::§;  1-.\n\n4 .>e/‘/.\\/ea/ C/Q55-' ‘  >\ngran/_.5Z‘ao’enZ‘ “ . 7\n\nC++ EQEC §\"*‘;k::\"«°;T;z \n\n/4 Der/vga’ C/ass\"\ngran/_.5Z‘ao’enZ‘\n\n_\\ 7\n\nC++ €035 §';'§\"i}j!*é‘Za \n\n4 Derived C/Q55-’\ngran/_‘5Z‘ac/enf\n\n \n\nB A Derived Class: grad_student\n\n- class grad_student : public student //public - subtyp *\n\na public:\n\n. G’; ‘by\nc enum support ( ta, ra, fellowship, other};\na grad_student(char‘ nm, in! id, double g,\n\no year x, support t, char‘ d, char‘ th);\n\na void rint()const; \nP \n\n0 protected: ﬂy\nchar dept[10];\nsupport 5; z  \nthesis[80]; /\n\na char\n\n_); IDZ MAL rC++ €61‘ C 3\"\";  i4  *« em  ‘\n\nr L ‘.\n/4 ﬁer/1/ea’ C/Q55-‘  V‘\n‘gran/,.5Z‘¢(a/enz‘ ' ~'!\n\n \n\n     \n \n \n\nL 7\n\nC++ fag-C   \n\n/4 Der/‘wed C/a55-‘\ngran/_.5Z‘ao’enf\n\n \n\n_. lnheriting from the Base Class\n\n0 Derived class is modiﬁcation of base class that\ninherits public and protected members of base\nclass 7\n\nC++ fay C    \n\n5Z‘¢{c/e/7f5 (3: C  I\nGraduate §z‘aa’enZ5 §Z‘ao/e/766 C3: \\  .\n6rao’ac<Z‘e Siac/enis \" V\n\nV\n\n \n\n' C++ f@E'C 1”‘: 203;.-§:\"z1iia2::v2 -V\nSz‘ao/enZ5 & \n\nGraduate Sig;/enis\n\n  \n\nLT El-+ fa:-C   ‘\n5Z‘ac/enZ‘5 6: “ 7‘\n\nGraa/aside SZ‘aa’enZ‘5 lnheriting from the Base Class\n\n. Derived class is modiﬁcation of base class that\ninherits public and protected members of base\nclass\n\n. In grad_student, student members are inherited rC++ f@E'€ :'};'i..§)\";\"Za \n\n§Z‘ac/e/755 6:\nGradactée Sz‘aa’enZ‘5 Va\n\nSzizo/ends 6: 7  I\nGradactée Sz‘ac/enZ‘5 A\n\n++ E93-Q   \n\n  \n  \n\n_ rC++ f@E' C §\"*:\":..:‘-'_? 5;: ‘ 1:\n\n5Z‘A{c/<2/735 & \nGradactée Sz‘aa’enZ‘5 '. % ’C++ EGEC  r:\n\nsaga/enzs & ‘*1 42% ‘T\n6/‘Q0/é{6<Z‘e Sig:/enZ‘5 Sz‘aa/22765 6: ~ \nGraduate Sig:/enZ‘5 Graduate Sig:/enZ‘5 Va\n\n++ EQEC 3“:'<:tf:\"'. ‘N v‘-\n\n \n\n«§Z‘4{a/enfé (3: V  .\nGraduate Sig:/enZ‘5 ‘ . §Z‘aa/ends 6: ('3 \n6/‘do/é{6<Z‘e Sig:/enZ‘5 7\"’ Va\n\n++ EQEC :'*:\"<:«_ . 2\n\n \n\n5Z‘ao/e/765 & 6‘  %\nGraduate Sig:/enZ‘5 ‘ “V & I 3\n6/‘do/é{6<Z‘e Sig:/enZ‘5 \n\n  \n\n_ 7\n\nC++ f®E' C ';\";\"~:..%j'—=  ‘W i *\n\nSZ‘ac/eni5 6: \nGraduate SZ‘aa’enZ‘5 : I7\n\n  \n  \n\n_ 5Z‘4(c/e/755 (3:  7- K\nGradactée Sz‘aa’enz‘5 rC++ E93-C    \n\n5Z‘ac/e/755 &\nGraduate Sz‘ac/enZ‘5\n\n   \n \n \n\nLT lnheriting from the Base Class\n\n. Derived class is modiﬁcation of base class that\ninherits public and protected members of base\nclass\n\n. ln gradgtudent, student members are inherited\nn student_id gpa\nI name year\n\nsprint... 3-}1,_,4Q,,“;(' \n<(2\"“*R—9J*»4e-7§:; (v«MZ7()\n\n” ‘SW\nm lnnfbx Add new members in the Derived Class\n\no Derived class adds new members to existing class\nmembers\n\n. grad_student has three new data members and\nredefined member function\nI 5\nu dept\nn thesis\n\nprint() .. 7\n\nC++ f®E' C '‘‘‘a'\n\n§.z1:,4.:::: - —.;.\n\n\\ ‘  ‘'\n§Z‘4{c/enf5 & ‘M \nGradaaie kgf./,{o’enZ’(5 M - ,\n\n \n\n  \n\n_ 7'\n\nC++ f®E°C 2\": ;:§t=‘;”2z‘ \n\n§Z‘ac/endi (3: \n6/‘do/é{C<Z‘e 6z‘aa’enZ‘5 V .\n\n  \n\nLj Benefits of Inheritance\n\n. Code is reused\no grad_student uses tested code from student Va\n\n§Z‘z,(a/enié &\nGraduate SZ‘aa’enZ‘5\n\n  \n   \n\n++ E93‘ C §\"‘:‘::_=»‘z‘;;_ =  \n\n_ 7\n\nC++ E93‘ C E:\n\n \n\ni g: ii“: $E§ \n.3 *3 ;\n\nszaaenzs & ‘V \nGradaaﬂe SZ3/,(a’enZ(5 ‘ \"\n\n    \n\n_ 7\n\nC++ EQEC Z\"*:‘::_«=’;\";a_~:zz\";%%\n\nSzizo/enfé & C  '1\nGraduate Sfadenis A\n\n  \n\n_ 7\n\nC++ fer Q  ‘ \n\n§Z‘¢{o/e/715 (9:\nGraduate Sfadenis\n\n@E‘°§/ﬁx‘ ‘\n\n-32!» ,~\n\n \n\n    \n\n_ 7'\n\nC++ EQEC :.;;§‘i:}_\"_':'§\"§i_\"f“!\";'€T\n\nSzizo/«<2/715 (9:\nGraduate Sfaa’enZ‘5\n\n  \n  \n\n -\"\n\n’r$.; \n\n  \n\n_ '5\n\n++ fer C   \n\n  \n  \n\n§z‘ao/enié & \"5 \nGradacie SZ‘aa’enZ‘5 *\n\nLT Benefits of Inheritance\n\n. Code is reused\nc grad_student uses tested code from student\na Reflects relationship in problem domain\na Special grouping grad student outgr h of real world\nand treatment of this group pg u')u]'A.\\_A_\" 7\n\nC++ E93-C  \n\n/4 Der/vga’ C/ass\"\ngran/Méiac/enf 7\n\nC++ E63‘ C i\"‘g’::«?':\";a_ ‘ a \n\n \n      \n\n& ‘. ‘I\n\n\n/4 Der/1/ea’ C/a55~‘ ‘1 \ngran/_,5z‘ao’enf \" . x4 Der/vga’ C/a55-‘ 57 \ngran/_.5Z‘ao/e/of 5 70\n\n++ f®E‘C ”:‘:}j'>;\"2a ‘?*\"\"‘\n\n   \n  \n\nx4 Der/vga’ C/Q55-' -  ‘\ngran/,5Z‘ao/enz‘ M. r4 Der/1/ea’ C/a§5-’ (- \ngran/_.5Z‘ao/emf 4 Der/vga’ C/a55= ‘I ‘7  ‘\ngran/_.5Z‘ao/e/of rC++ f®E'€ '2  \n\n \n\n:4 Der/x/ea’ C/a55-' \n3/‘do/__.5Z(é{o/e/7Z( ‘\n\n \n\nLT '5\n\n++ €63‘ C §\"‘:~:.3}'% {:2 ‘ii’ ’= ‘\n\n  \n   \n\n4 Der/x/ea’ C/Q55-‘ \"/\"“ 5\n5raaL.5Z‘¢{c/enz‘ ‘ Va\n\n++ EQE C i\"“;\":..%j°‘;\"zz_ “ \n\n  \n     \n\n4 Der/vga’ C/a55-‘ '12  Q, \n\\9/‘ac/_#.\\5Zé{o/8/7% rC++ Ear C \n\n:o:;ga;“ 221 s  an eEf$,\n\n. ,‘.\n\n=2,€ '\n\n \n\n4 Der/vga’ C/a55-‘\ngran/M5640/eni\n\nI %++ EQEC '’‘g 23-‘ ‘£22. ‘ H \n\n  \n\n/4 Der/1/ea’ C/a55-‘ “ \ngran/_.5Z‘aa’enf « ’ 7\n\nC++ E91‘ C i”\"“:<:§'»‘:\"ga. ~  \n\n  \n  \n\n4 Der/wad C/Q55-' ‘  L\ngran/_.5Z‘¢{o’enf 7 Va\n\n4 ﬁer/vga’ C/Q55-'  {\n3/~aoL.5Z(é{o/e/7Z(\n\n++ E63‘ C i\"\";‘:}§'9 :12. “ rC++ €63‘ C i\"“;T:..%§° :12. “ \n\n/4 Der/vga’ C/ass: ‘IA /‘ ~\ngran/_.5Z‘ao’enf '2\n\n++ €33‘ C E”; 17:9?  ‘  V:\n\n \n \n  \n\n4 Der/vga’ C/Q55-' T \n3/‘ac/_#.5Z(é{o/e/7Z(\n\nL *?\n§};\\$§\nw kixw\n\\m\nB‘,\n\\/\n\\3§\nex\nt. rC++ §®E'C §\"‘;’:..:\" {:2 ‘?2‘;v‘:\n\n   \n  \n\n/4 Der/vga’ C/a55= ‘i  ‘.\n3rao/_,5Z‘ac/enf % \" 4 _De/*/V2a/ C/@555 { - rx\ngran/_.5Z‘ac/enf\n\n \n \n \n\nL 4 Der/veg’ C/ass‘ (‘  V\ngran/_.5Z‘ac/enf _ ‘é r(3++ far C 2”;\n\n \n\n/4 ﬁer/vga’ C/ass-‘\ngran/_.5Z‘aa/enz‘\n\n«:Oi=;i§§’E2!i;%ii;?‘:  I\n.; V-\n*9} '\n\n/ 1\n\n  \n\nLj Benefits of Inheritance\n\n0 Code is reused\n0 grad_student uses tested code from student\n- Reflects relationship in problem domain\n\na Special grouping grad student outgrowth of real world\nand treatment of this group\n\n- Polymorphic mechanisms allow client code to treat rC++ fez-C 13\"; :2:  is\n\n4 ﬁer/s/go’ C/Q55-' ‘J 3' \"3, ‘Z\ngraa/_.5Z‘¢zo’enZ . 4 ﬁer/s/go’ C/Q55-'\ngraa/_.5Z‘¢zo’enz‘\n\nLT rC++ ECEEC  <'...3_\"_‘;”§z_\"1*'r'?':\n\n4 Der/s/go’ C/ass‘\nﬂraa/_.5Z‘¢zo’enz‘\n\n \n\n \n\nLT 4 .>e/‘/‘\\/2a/ C/Q55’ ? \nﬂraa/_.5Z‘¢zo’enz‘ ' \n\n \n\nLj Benefits of Inheritance\n\n. Code is reused\no grad_student uses tested code from student\n3 Reflects relationship in problem domain\n\n- Special grouping grad student outgrowth of real world\nand treatment of this group\n\na Polymorphic mechanisms allow client code to treat\ninherited class as subtype of base class\n\na Simpliﬁes code, maintains subtype distinctions V: 4 ﬁer/1/ea’ C/a55-‘\n\n  \n\n3/‘Q0/__.5Z‘é{o/e/OZ‘ 7\n\nC++ fag-C '2   \n\n/4 bar/‘wed C/ass:\n3/‘Q0/_,.5fé{o/e/’)Z(\n\n   \n\n_ 4 Der/s/go’ C/Q55-'\ngran/_.5Z‘¢{a/enz‘\n\nLT Typing Conversions & Visibility\n\n. Publicly derived class is subtype of base\n\n- Variable of derived class treated as if it were base\nclass type\n\nc Pointer type pointer-to-base-class can point to\nobjects of derived class type\nc Subtle implicit conversions occur between base and\n\nderived type\n\n0 Difficult to follow what member is accessed if base and\n\nderived class overloaded same member name H\n\n_, —>s\\M~\\( \\ 7’p~’».»?l() 4 Der/vsa’ C/a55-'\n3/‘do/__.5Z(¢{de/OZ‘\n\nLT 7\n\nC++ €93‘ C :'3’a\"\n\n \n\nn.  --\"—’: \ne...s:5§‘§ 511i 4 533  V\n\n/4 Der/1/ea’ C/Q55\" C  I\n3/~c2aL.5i¢{denZ‘ ' ~\n\n   \n\n_ 4 Ear/vga’ C/Q55-'\ngran/_.5Z‘aa/enz‘ I C-I--I-' fﬁrg i  ;s)!\":’2a ‘?‘§'?‘\n\n4 Der/x/ea’ C/a55-'\n\\3/‘do/_#.\\5{é{c1/ehf\n\n  \n\nLl Typing Conversions & Visibility\n\n. Publicly derived class is subtype of base\n\no Variable of derived class treated as if it were base\nclass type\n\n0 Pointer type pointer-to-base-class can point to\nobjects of derived class type\n\nc Subtle implicit conversions occur between base and\nderived type\n\n- Difficult to foliow what member is accessed if base and\nderived class overloaded same member name It\n\n-, —>s\\Mv\\( \\ 7’Iu’u‘l() \"R1  UNIVERSITY OF CALIFORNIA\nsa ’\n% * *\n©2016 Regents of the University of California l"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/05_inheritance-and-derived-classes/04_2-13-virtual-function-selection.mp4",
    "id": 788,
    "text": " Module 2.13\nVirtual Function\nSelection L//riaa/ FZZ/7C Z‘/on\nSe/ec Z‘/on\n\n \n\nL.‘ Va\n\nL//rz‘aa/ FZZIK Z‘/on\nSe/ec Z‘/on\n\n \n\n++ f®E'€ ’ﬁ’::.:_«>  \n\n \n\n_ rC++ f@E'€ 1\":   \n\nL//rz‘aa/ FZZMC Z‘/on\nSe/ec Z‘/on\n\nL.‘ Virtual Function Selection\n\n0 Typically base has virtual function and derived\nhave their versions of function 5 § am. 33%  N5‘. '\n\nrC++ €93-Q 2'2»\n 475» >\n\nL//riaa/ ﬂmci/on  ~\n‘Se/eCZ‘/on '\n\n \n\n   \n\n_ Va\n\nl//rZZ(a/ Fahd Z‘/on\n512/ ed?/on\n\n  \n  \n\n++ f®E'C 2'9‘; é..»§—=;“’:z_‘:=‘2:;‘-=\n\n_ 7\n\nC++ EQEC  ‘a  =-\n\nL//rz‘aa/ FL!/7C 5/on\nSe/ec Z‘/on\n\n_ Virtual Function Selection\n\n. Typically base has virtual function and derived\nhave their versions of function\n\nu Pointer to base class can point at either base or\nderived class objects\n\n0 Member function selected depends on class of\nobject being pointed at, not on pointer type rC++ EQEC   ‘\n\n(f\"~?.‘<\"r-“\n\n\\//rz‘aa/ Fang: z‘/on \nSe/3C Z7017 ' ‘\n\n \n\n \n\n_ rC++ fer C  —==\n\n\\//réaa/ Fahd Z‘/on\nSe/sac Z‘/on\n\n   \n\n_ Virtual Function Selection\n\n. Typically base has virtual function and derived\nhave their versions of function\n\n. Pointer to base class can point at either base or\nderived class objects\n\n0 Member function selected depends on class of\nobject being pointed at, not on pointer type\n\n0 In absence of derived type member, base class\nvirtual function used by default '5\n\n++ €93-C  \n\n\\//rZé(a/ FM/7C Z‘/on\nSe/ed 5/on\n\n \n\n_ Vc\n\n++ E63‘ C  ‘   \n\n1//rf aa/ Félhél Z‘/on\nSe/ac Z‘/on\n\n \n\nL.‘ Virtual & Overloaded Function Selection\n\n3 Overloaded member function is compile—time\nselected based on signature rC++ €93‘ C 3”: :a.:;:;;1;\":a1s @  2 arts  ‘\n. . ‘ <9 «-5. \n%/‘Zé(Q/ Fé}/7CZ‘/O/7 / /\n\nSe/ed K/on\n\n \n\n   \n\nL‘ V\n\n' C++ f6E'C 2”; :.:_--_=\n\nL//réad fund Z‘/on\nSe/ec Z‘/on\n\n_ V\n\nc++ f@3'C  \n\nL//rZaa/ 51/(:6/on\nSe/ec Z/on\n\nL‘ a 1: an 813%\n\nrC++ fer C  J ‘\n$1\n\nL//rz‘aa/ ﬂmczvon js . \nSe/scz‘/on 4. \n\n  \n\nL‘ 7\n\nC++ fag-C  — : \n\n\\//riaa/ Farr: 5/on\nSe/ed Z‘/on\n\n \n\n_ Virtual & Overloaded Function Selection\n\n. Overloaded member function is compile-time\nselected based on signature\n\n. It can have distinct return types rC++ far C      «\n\n\\//riaa/ fund Z/on\nSe/ed Z‘/on\n\n  \n\n_ Virtual & Overloaded Function Selection\n\no Overloaded member function is compi|e—time\nselected based on signature\n\nc It can have distinct return types\n\na Once declared virtual, this property is carried\nalong to all redeﬁnitions in derived classes\n\n- virtual modiﬁer not needed in derived functions 3! rC++ EQEC E\"? § 221:‘: \n' '2\n\n\\//rZ‘aa/ ﬂax: Z‘/on 3: 9 _.i \nSe/ed Z‘/on 1 “=5\n\n   \n\n_ Virtual Function Selection (2 of 2)\n\n(\nB b;\nB‘ pb = &b; /lpoint at a B object\nD f;\n\npb —> print_iO§ //call B::print_i()\n\npb = &f; //point at a D ob'ect\npb —> print_iQ‘, Z/call D::print_i() ) rC++ E61‘ C  :35‘;  ‘ % 2% L: \n\n\\//rz‘aa/ FL‘!/7CZ‘/on , \n.32/ed?/on 3 '~ Quiz:\n\n- What gets printed? Se/ed?/on\n\nj 'C++ fa:-C   \n\nL//rz‘aa/ F.//ma Z‘/on\nSe/ed Z‘/on 2:1 2  en; % em ﬂ; I\n\nL//rz‘aa/ ﬂmczﬂbn '3 '3 \\\n58/scab»\n9 rC++ f®E'C  :2;-; %*r;u\n\n\\//rz‘aa/ F//and Z‘/on\nSe/ed Z‘/on\n\nJ Quiz:\n\n. What gets printed? Answers: Comments on the virt program\n\n- Different print_i() executed\n\n- Dynamically selected on object pointed at\n\n. \"Object sent message print_i and selects its\ncorresponding version of method\"\n\n. Pointer‘s base type is not determining method\n(function) selection rC++ Em-C   \n\nL//rz‘aa/ €076 Z‘/on\nSe/ed Z‘/on\n\nJ Comments on the virt program\n\nDifferent print_i() executed\na Dynamically selected an object pointed at\n\n\"Object sent message print_i and selects its\ncorresponding version of method“\n\nPointer‘s base type is not determining method\n(function) selection\n\nDifferent class objects processed by different\nfunctions at run—time\n\nADTs, inheritance, and process of objects\ndynamically are essentials of OOP Wrz‘aa/ Fund z‘/on\n\n  \n\nSe/ea 3/on El-+ f61'C 2”;    ‘\n\nL//rz‘aa/ ﬂmazxon \" 91¢,‘\nSe/ecz‘/on I r‘ rC++ E91-C   \n\nL//rZ‘aa/ ﬂmcz‘/on 4 \ng§e/eCZ‘/.O/’I \"' \\//rZZ(a/ Fahd Z‘/on\nSe/ea Z‘/on\n\n \n\nL‘ ‘\n\nL//rz‘aa/ ﬂmczvon ‘i  x\nSe/ecz‘/on . , é\n\n   \n\nL‘ K//rz‘ 414/ F./,(naZ‘/‘on\nSe/ed Z/on\n\nLj rC++ §®E‘C  \n\nL//rz‘aa/ Fahd Z‘/on\n512/ ec Z‘/on Va\n\n++ E933 i\"“’a\":...w;”2;:2 ta\n\nL//rZ‘aa/ ﬂ{nCZ‘/0/7 .‘ \nSe/ed?/‘on  - r ‘ g _ 1\n\nC++ f®E'C ﬁ§'€}‘f 1:2 \n\nk//rz‘aa/ ﬂmczzvon 34$: ’\nSe/ecz‘/on ‘ Q\n\n \n\n   \n\nL‘ UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/02_hex-as-a-graph-and-inheritance/05_inheritance-and-derived-classes/05_2-14-confusion-with-overloading.mp4",
    "id": 789,
    "text": " C++ forCProgrammers \n\nModule 2.14  \\_\nConfusion with ‘ \" ' ‘ ‘\nOverloading 7\n\nC++ E93‘ C '‘‘‘a :.%§'?‘;\";z  \n\nCon/Z15 /on cu/Z/7\nOx/er/can///5 Confusion with Overloading\n\na Member function overloading and virtual functions\ncause mix-ups and confusion because overriding and\noverloading both are in play\n\nciass B ( /  _\n\npublic:\n\nN/inual foo(int); // \n\nvirtual foo(doub|e);\n\n Je,.s;».(.L3\n>: \\_, 64,. (2.5)\n\nclass D: Eublic B {\n\npublic:\n. . __ M\nMaw\"/_ , . 3-yu\\,4L... Con/‘M5/on cu/Z/I\n01/er/Odo///33 Con/Z45/on a2/Z/2\nOver/can//)5 Confusion with Overloading - 2\n\na int main()\n\n- {\n\nn D d;\n\n. B b, *pb = &d;\n\n. b.foo(9.5): //selects B::foo(doub|e);\n\n. d.foo(9.5); //selects D::foo(int);\n\no pb —> foo(9.5); //B::foo(doub|e);\n\n- >\n\n. Base class function B: :f00(int) overriden in derived\nclass\n\n- Base class function B::fo0(doub|e) hidden in derived\nclass Restrictions on Virtual Functions\n\n. Only non-static member functions virtual Con/‘H5/on a2/Zh\nOver/oao///5 rC++ §6E‘C  \n\nCon/Z15/on cu/Z/2\nOx/er/Odo///5 Restrictions on Virtual Functions\n\n. Only non-static member functions virtual\n\no Virtual characteristic is inherited\n- Derived class function automatically virtual virtual\n\nkeyword not needed\na Constructors cannot be virtual \" [&__\\;°“}\\\n’ $64 44/8 gtiiom \\\n\no Destructors can be virtual :.\n\nas lrellﬁlﬁ‘/51\\—ﬁ v/VIL/Q\n\nI UNIVERSITY OF CALIFORNIA\n\nN11\n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/03_hex-and-the-use-of-ai-and-c-move-semantics/02_class-constructors-and-the-move-constructor/02_3-2-some-further-constructors.mp4",
    "id": 791,
    "text": " '5\n\n++ fan-C ya\n\n \n\nSome Further\nConstructors C++ EQEC 2”: 2:1;  +:;.\n\n  \n\nSome Further\nConstructors\n\n‘H .M‘ ‘Ira Eéhl\n\nProfessor. aaslimschoou of Engine ’\nhi   UWSM omamomiasama\n. Some further constructors\n\n/~/um: - om -\n.. MM“ ‘L W‘.\nex llcit y_contaIner(T *b):my_contaIner()\n{\n\nI\nO\n. for(inti= 0; i <n ; ++i) Qmgﬁ\n- aiil = biil; g 1 _M3,\n' ’—* I\n‘) Com\n. Suppress automatic coercion\n. Delegate construction — new C++11 '~ \n\nF siitiiIii:iiIi‘1\n\n} Some Further \n\nConstructors\n\n\\UFuR7~HA “Es.\n'(;++ Em-C     f ‘\n\n \n\nSome Further\nConstructors Some Further\nConstructors 7'\n\nC++ Em-C  ..\n\n  \n \n\nSome Further\nConstructors Constructor\n\n0 my_container(const my_container &b):my_container()\n\n- <\no for(int i = 0; i <n ; ++i)\no a[i] = b.a[i];\n\n- >\n\n0 Ordinary copy constructor —again with constructor\ndelegation V\n\n  Q :ﬁi\"{.v‘ é\"\"i ‘ ’ \" ’ ‘\n\nSome Further\nConstructors\n\n \n\nL Some Further\nConstructors\n\n \n\nj 7\n\nC++ f6E\"C :'3';\":.»  \n\nSome Further ~\nConstructors ‘ Constructor\n\n0 my_container(const my_container &b):my_container()\n- <\no for(int i = \"<n ; ++i)\n. a[i] b.a[i]; ’f’( I S -7 (fig 7 \n0 } .\n. Ordinary copy constructor —again with constructor\ndelegation\n1- M5 om/«W C T,» :2 ‘ C\"“‘ﬁ**\n\nW ~ 1: ‘f: q,:~;d.~7 *’7fStHN=TH’tIiRt[i2 Quiz:\n\n- What are typical constructors for a class\n\n* snnnlnihliz rC++ f6E'C 2”’;  \n\n  \n\nSome Further\nConstructors\n\nLT Answer:\n\n. Default - void signature\no Conversion constructor - single argument\n\na Copy constructor - const c|assType&\n\n§.,7V,.m M <2/vplnﬁ\n\n“ SHNHIIIHIII UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/04_monte-carlo-hex-program-further-advanced-c-topics-and-patterns/03_assertions-and-exceptions/01_4-6-asserts-and-exceptions.mp4",
    "id": 807,
    "text": " Module 4.6\nAsserts & Exceptions Proiessor, Easkin sum:\nUniversity of Calm‘.\n\nx.- .x\\ %\n+‘~ Ira Pohl\n\nProfessor. Baskln S I 0| Engineering\nUnixersily of rma Santa Cruz ++ Ear C 6 :.o:;;;,a;’2z1s  an; at\n\n \n\nAsserts &\nExceptions\n\n \n\nL‘ Asserts & Exceptions\n\no How to test for correctness\n\no Ideally — you would have a proof that your\ncode works — and could avoid testing — which\nis expensive and finite\n\no Early CS professors such as Dijkstra and\nHoare worked on the logic of proofs of\ncorrectness through assertions\n\nSi|Nll| lllllll 70\n\n++ E93‘ C 2\"’; :3\";  ‘  2* ;a=..\n\nAsserts &\nExceptions rC++ fag-C  \n\n  \n\nAsserts &\nExceptions Asserts & Exceptions\n\no How to test for correctness\n\no Ideally — you would have a proof that your\ncode works — and could avoid testing — which\nis expensive and finite\n\no Early CS professors such as Dijkstra and\nHoare worked on the logic of proofs of\ncorrectness through assertions\n\nSiiiiiil lililll rC++ Em C  \n\nAsserts &\nExceptions Idea:\n\n0 Test a precondition\na Code to be certiﬁed\no Test a postcondition\n\n- If pre and postcondition are true the code is\ncorrect\n\nSIINHI lllilll 7\n\nC++ Em;-C     \n\nAsserts &\nExceptions Exceptions\n\nL‘ rC++ §@E'C Z”: :5  L‘:\n\nAsserts &\nExceptions Idea:\n\n \n\na/uwrf‘ Y 7/ O\no Test a precondition\n\n1; f ’f ( ‘.\n0 Code to be certiﬁed J ?/1 K»\n\no Test a postcondition 7, 99.  jkj: =)(\n\no If pre and postcondition are true the code is\ncorrect\n\ne 3HNTf|l}|1|lZ '2\n\n++ fay C   -- Aa\n\nAsserts & \n\"K\n\nExceptions Idea:\n\n \n\nA/uwrf‘ Y 7/ O\no Test a precondition\n\n1; S‘ ‘I ( ‘O\na Code to be certiﬁed J ?A )<\\'\n\no Test a postcondition M jkj: :)(\n\no If pre and postcondition are true the code is\ncorrect\n\n“ SHNIH‘%I}HH”l Quiz:\n\n0 for (int i = 0; i > n; ++i)\n\na Does this loop make sense ?\n\nSHNHI IIHIIZ Old asserts - New C++11 Static Asserts\n\no Asserts are used extensively in C and C++\ncommunity — basically a form of if test + a\nprint + an abort\n\no Static_asserts added to C++11 allow\ncompiler to statically test conditions\n\n\" SHNHI lllllll rE++ far C i”; 4:;  =-A \n\n  \n\nAsserts &\nExceptions Asserts &\nExceptions Asserts &\nExceptions 7\n\nC++ f®E\"C    \n\nAsserts &\nExceptions Exceptions rC++ EGEC    1‘:\n\nAsserts &\nExceptions Old asserts - New C++11 Static Asserts\n\no Asserts are used extensively in C and C++\ncommunity — basically a form of if test + a\nprint + an abort\n\no Static_asserts added to C++11 allow\ncompiler to statically test conditions\n\nSHNHI lllllll Include <cassert> a C library\n\nassert\nvoid assert (int expression);\nEvaluate assertion\n\nlf the argument expression of this macro with functional\nform compares equal to zero (i.e., the expression is false),\na message is written to the standard error device\n\nand abort is called, terminating the program execution.\n\nit writes the expression whose assertion failed, the name of\nthe source ﬁle, and the line number where it happened.\n\nAssertion failed: expression. ﬁle ﬁlename, line line number\n\nSHNHI lllllll\n\nThis macro is disabled if a macro with the\nname NDEBUG is deﬁned.\n\n#define NDEBUG rC++ €03 C \"\"3  = a at \n\n  \n\nAsserts &\nExceptions Include <cassert> a C library\n\nassert\nvoid assert (int expression);\nEvaluate assertion\n\nlf the argument expression of this macro with functional\nform compares equal to zero (i.e., the expression is false).\na message is written to the standard error device\n\nand abort is called, terminating the program execution.\n\nit writes the expression whose assertion failed. the name of\nthe source ﬁle, and the line number where it happened.\n\nAssertion failed: expression. ﬁle fiiename, line line number\n\nSHNHI lllilli\n\nThis macro is disabled if a macro with the\nname NDEBUG is deﬁned.\n\n#define NDEBUG rC++ f6E‘C  \n\n \n\nAsserts &\nExceptions\n\n \n\nL‘ assert Example\n\na void print (int* my|nt){\no assert (my|nt!=NULL); cout << *my|nt <<\n\nendl; }\n//precondition test\n\na int main(){\n\no int i = 5; int* p = &i; int*q = NULL;\n\no print(&i); //ok\n\na print(p); //ok ‘\n\n- v~m<q>: W A sum“ IIHIII Error Handling\n\no Use asserts\nu Exceptions should monitor — resource problems\n\nu Exceptions can deal with IO difﬁculties such as\nimproper input\n\na Exceptions should not be used as a “goto”\n\nSHNHI lliilll rC++ fez-C 2%  \n\nAsserts &\nExceptions Error Handling\n\no Use asserts\no Exceptions should monitor — resource problems\n\na Exceptions can deal with IO difﬁculties such as\nimproper input\n\no Exceptions should not be used as a “goto\"\n\nSHNHIAIIHIII rC++ EQEC 2”‘;  ‘  r :%\n\nAsserts &\nExceptions Asserts &\nExceptions\n\n(v 3.1:‘ r. rC++ E93‘ C 3”;  ‘  '3‘ ;%\n\nAsserts &\nExceptions Error Handling\n\n- Use asserts\no Exceptions should monitor — resource problems\n\na Exceptions can deal with IO difﬁculties such as\nimproper input\n\na Exceptions should not be used as a “goto\"\n\nSHNHI IIHIIZ 'C++ EGEC  i.._‘>‘;’;a.i.e‘;‘:\n\nAsserts &\nExceptions\n\n \n\nL‘ Error Handling\n\n- Use asserts\no Exceptions should monitor — resource problems\n\na Exceptions can deal with IO difﬁculties such as\nimproper input\n\na Exceptions should not be used as a “goto\"\n\nSHNHI lllilll rC’++ EQEC Z”:é..a_-  \n\n \n  \n\nAsserts &\nExceptions\n\nL‘ Asserts &\nExceptions rC++ fez-C  \n\n  \n\nAsserts &\nExceptions Error Handling\n\n- Use asserts\no Exceptions should monitor — resource problems\n\na Exceptions can deal with IO difﬁculties such as\nimproper input\n\na Exceptions should not be used as a “goto\"\n\nSHNHI lllilll Asserts &\nExceptions rC++ EQEC §\"\"'; \n\n  \n\nAsserts &\nExceptions Asserts & VC++ EEBEC §.'*”:’:,e);';’:=‘ *\"*\n\n  \n\nAsserts &\nExceptions\n\n \n\nL‘ Exceptions UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/04_monte-carlo-hex-program-further-advanced-c-topics-and-patterns/03_assertions-and-exceptions/03_4-8-exceptions.mp4",
    "id": 809,
    "text": " C++ fo1-CP1-ogrammers T\n\nModule 4.8\nExceptions T++fo1-C  ‘\n\nExceptions\n\n  \n\n3 7\n\nC++ §@E' C   2: 32\n\nExceptions\n\nIra Pohl\n\nProfessot Easkm School oi Engineering\nUniversity ofcaiilornia Santa Cruz\nL \" rC++ §®E'€  Lastaa\n\nExceptions\n\n \n\nL‘ Exceptions\n\no I before E except \n\nuh \n\nSHNIH %lVi|{ll'l '5-‘I-+fez-C  \n\nExceptions Exceptions\n\no I before E except \n\nSHNIH IIHIIZ Exceptions\n\no Exceptions are typically left in at run time to\nmonitor resource handling ;\n\no For flow of control where abort must be\navoidable — think nuclear energy plant-\n\no Or where wish to repeat a request where there is\na user error on input\n\nSlllllll lllllll 7\n\nC++ EQEC   “ gs\n\nExceptions\n\n \n\nL‘ Exceptions\n\no Exceptions are typically left in at run time to\nmonitor resource handling ;\n\no For flow of control where abort must be\navoidable — think nuclear energy p|ant—\n\n- Or where wish to repeat a request where there is\n\nSllNll| lllllll V\n\nC++f@3-C  ..\n\nExceptions rC++ EQEC  \n\nExceptions lnane Exception\n\no //Exception Handling\n\n- #include <iostream>\n\ns using namespace std;\n\no int main()\n\n- <\n\no cout << \"an exception test\\n“;\no throw \"This will Abort\";\n\n->\n\n\" SHNHI lllllll F’\n\n- C++ E93-C     \n\n  \n\nExceptions Standard Library <exception>\n\na Standard exceptions\n\no The C++ Standard library has a base class\nexception in the <exception> header\n\n- This class has the usual constructors, operators\nand destructors, plus a virtual member function\ncalled what that returns a nul|—terminated\ncharacter sequence (char *) and that can be\noverwritten in derived classes to contain some\nsort of description of the exception 7'\n\nC++ f@E'C   \n\nExceptions Build your own exception:\n\n#inc|ude<exception>£\n\nc #inc|ude<iostream> eh   Jr‘\nusing namespace std;\n\n SHNHIIIHIII myex throw in main()\n\nint main () {\n\ntry\n< 2_r-wxuvk\n\nthrow myex;\n\n) w-4azwr*'~’” QMVK/\\’\ncatch (e_§ceg’tion& e) %:\n\n( /\ncout << e.what() << endl; * \n\n)\n\nreturn 0;\n\n} UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/c-plus-plus-b/04_monte-carlo-hex-program-further-advanced-c-topics-and-patterns/04_new-parts-of-the-c-11-library-tuple-thread/01_4-9-c-11-design-patterns.mp4",
    "id": 810,
    "text": " Module 4.9\nC++1l & Design Patterns C++1 1 &\nDesign Patterns\n\n \n\nPvofgsscr. Easkm School ol Engineering\nUniversity 01 Cal\\lom1a Sanla Cruz ';++§@rC:¢\n\n \n\nC++11&\nDesign Patterns\n\n \n\n  -UMW “Mme W W rC++ EQEC f““;“:..»j  “\" ’ *\n\n \n \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns 7'\n\nC++ f®E\"C : :2\n\n  \n\nC++1 1 &\nDesign Patterns 'EI++ f@E\"C  \n\n  \n \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns '£3++ fag-S  . .\n\n  \n \n\nC++1 1 &\nDesign Patterns rC++ Em C   —» ‘=\n\n  \n \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns 7\n\nC++ EQEC :;°=\"—‘» ‘ -\n\n \n\nC++11 & % /'\nDesign Patterns » C++1 1 &\nDesign Patterns '('3++ f@3'€    \n\n   \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns\n\n \n\nJ C Wrapup\n\no C — 1972 Dennis Ritchie —SlL used to build UNIX\nsimple 29 keywords, call by value, functions, blocks,\nfiles - highly efﬁcient - implementation details could\nvary such as size of types\n\na C — 1985 ANSI standardization — function prototyping,\nIEEE arithmetic\n\n- C- 1999 — ANSI — long long — comformant arrays —\n\n0 Methodology— module = file, ADT is .h and icpp\n\nSIINHI lllilll C++11&\n\n \n\ni r(3++ f@E\"C Z”; :.»_\";\"‘a_ ;=:;‘:\n\n \n \n\nC++1 1 &\nDesign Patterns\n\n \n\ni C++11& C++1 1 &\nDesign Patterns I’\n\nC-l-+ €633 \"é  ;“‘f2 \n\n \n \n\nC++1 1 &\nDesign Patterns C Wrapup\n\n. C — 1972 Dennis Ritchie —S|L used to build UNIX\nsimple 29 keywords, call by value, functions, blocks,\nfiles — highly efficient — implementation details could\nvaw such as size of types\n\n0 C — 1985 ANSI standardization — function prototyping,\nIEEE arithmetic\n\no C— 1999 — ANSI — long long — comformant arrays »\n\no Methodology — module = ﬁle, ADT is .h and .cpp\n\nSHNHI lllilll 7\n\nC++ f®E'C \"\":r:.a§ \n\n \n \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns rC++ fﬁﬁ‘ C §'*‘:':..»_   : \n\n \n \n\nC++1 1 &\nDesign Patterns Va\n\n++§hE€é%a=u:“*\n\n \n \n\nC++11&\nDesign Patterns C++ More\n\na C++ — Originally C with classes — Stroustrup Bell\nLabs; 1985 Cfront compi|er— converts C++ to\nefﬁcient C; can be immediately put to use;\nallows incremental adoption — free and\nsupported by A‘|'|'; still can be used as a SIL —\nbut language is large\n\n9 Competitors — frequently proprietary — Smalltalk,\nObjective—C, EIFFEL ~ not as notationally\nfamiliar, not free, organizational support limited\n\n‘° 3”\" ”e”‘’°' SllNlll lllllll V\n\n  :.§i'V{.V?\".5f‘i U \" ‘\n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns\n\n \n\nL: %++ EQEC E\"*\":*:.»§ \n\n  \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns V\n\n  Q :.;i\"is“‘§“\"i ' ‘ \"3 ’ ‘\n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns C++ More\n\na C++ — Originally C with classes — Stroustrup Bell\nLabs; 1985 Cfront compi|er— converts C++ to\nefﬁcient C; can be immediately put to use;\nallows incremental adoption — free and\nsupported by ATT; still can be used as a SIL —\nbut language is large\n\n9 Competitors — frequently proprietary — Smalltalk,\nObjective-C, EIFFEL — not as notationally\nfamiliar, not free, organizational support limited\n\n‘° 3”\" “e\"‘’°' Sllll I ll lllllll rC++ f@E\"C  ‘ .\n\n \n\nC++1 1 &\nDesign Patterns\n\n \n\nI: Design Patterns\n\nL: 7\n\nC++ £953 :2  ~a =\n\n \n\nC++1 1 &\nDesign Patterns\n\n \n\nL: C++ More\n\na C++ — Originally C with classes — Stroustrup Bell\nLabs; 1985 Cfront compi|er— converts C++ to\nefﬁcient C; can be immediately put to use;\nallows incremental adoption — free and\nsupported by ATT; still can be used as a SIL —\nbut language is large\n\n9 Competitors — frequently proprietary — Smalltalk,\nObjective-C, EIFFEL — not as notationally\nfamiliar, not free, organizational support limited\n\n‘° 3”\" “e\"‘’°' Sllll I ll lllllll '5\n\nC++1 1 &\nDesign Patterns\n\n++ EQEC §\"“:é..s,‘ /7\n\n5‘\n//11\n//\n\nﬂ V\n\n' C++ fez-C  - =\n\nC++1 1 &\nDesign Patterns\n\n \n\nif C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem a major alternative ~\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngc as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSHNHI lllllll C++1 1 &\nDesign Patterns\n\n \n\nL: 7\n\nC++ fag-C   \n\nC++1 1 &\nDesign Patterns C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem a major alternative «\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngo as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSllNll| lllllll V\n\n'    5.95 {'1 3 ' “ 1 ‘\n\n \n \n\nC++1 1 &\nDesign Patterns V\n\n' C++ Em-C   \n\nC++11& c++11& C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem e major alternative «\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngo as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSl|Nll| lllllll 7\n\nC++ f®E'C 2”\": <9; \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns\n\n \n\nL: 7\n\nC++ f®E'C 2”\": <9; \n\nC++1 1 &\nDesign Patterns C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem a major alternative «\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngo as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSl|Nll| lllllll '5\n\n++ €93‘ C 3'3\": €..%f;‘;“'2_ ‘  2* ,\n\nC++1 1 &\nDesign Patterns C++11& C++11& rC++ Em‘ C :\"*—;-4.; \n\n  \n\nC++1 1 &\nDesign Patterns C++11& r(3++ EQEC :\"‘;\":.»§   ’ =\n\n \n \n\nC++1 1 &\nDesign Patterns C++1 1 &\nDesign Patterns 7\n\nC++ EQEC :';“;\"€..~§ \n\nC++1 1 &\nDesign Patterns\n\n \n\nL: Design Patterns\n\nL: 7\n\nC++ fag-C  ..\n\n \n\nC++1 1 &\nDesign Patterns C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem a major alternative «\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngo as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSllNll| lllllll c++11& C++ E93‘ C ¥Z”'=':o:;:;;a;“a s a as \n\n  \n\nC++1 1 &\nDesign Patterns\n\nI: C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem a major alternative «\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngo as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSllNll| lllllll rC++ f@E'C  \n\n \n  \n    \n\nC++1 1 &\nDesign Patterns C++ 1989 adds templates and exceptions and keeps\ngetting larger\n\nC++ 1994 adds STL Stepanov —proof of concept HP\n\nJAVA 1995 -SUN microsystem — major alternative «\nfreely available backed by a big organization\n\nC++ 2011 - new standard — threading, regex, hashing,\ngc as an option, lambda expressions\n\nOther competition and convergence: Python, C#,\nJavascript\n\nSHNHI lllllll 7\n\nC++ f®E'C 3\"; as \n\nC++1 1 &\nDesign Patterns C++11& C++1 1 &\nDesign Patterns\n\n \n\nL: V\n\n  E :‘;§\"5.9_*  ‘ L3 ,v\n\nC++1 1 &\nDesign Patterns £4-+ EQEC §\"g\"':,»_¥;\"\":.‘;. gt\n\nC++1 1 &\nDesign Patterns\n\n \n\nL: C++11& 7\n\nC++ f®E'C §\"z>i.» \n\nc++1 1 & 63\nDesign Patterns ‘ 7‘ V\n\nC\n\n \n \n\nC++11& Va\n\nC++1 1 &\nDesign Patterns\n\n++ f®E‘C 39”‘: ::j—*;’25i2‘:€~ '5\n\n++ f®E‘C 39”‘: ::j—*;’25i2‘:€~\n\nC++1 1 &\nDesign Patterns C++11& rC++ Em-C   \n\n \n  \n \n\nC++1 1 &\nDesign Patterns Design Patterns\n\nL: c++11& rC++ EQEC :'*:\"i.._.‘ \n\n \n\nC++1 1 &\nDesign Patterns C++11& C++11 & *’f'»‘{ Design Patterns\n\nx‘ rC++ §®E\"C §\"*;'*:..u  Li\n\n  \n\nC++1 1 &\nDesign Patterns C++11& Design Patterns\n\n:1 C++11& Va\n\n++ EGEC  \" *‘ ' =\n\nC++1 1 &\nDesign Patterns Quiz: New Feature\n\na What is your favorite new C++ 11 feature?\n\n“ HHNIHWII Answer:\n\na Among what we have seen in class:\no -move semantics\n\n. -lambda functions\n\na -class enum\n\no -for—iterator statement\n\n. -better initialization syntax\n\n- -use of auto \\/L/ UNIVERSITY OF CALIFORNIA\n\n   \n\n©2016 Regents of the University of California"
  },
  {
    "path": "E:/Coursera/calcsing/Lecture 53 Absolute Conditional.mp4",
    "id": 835,
    "text": " \".l.I.l'l.l'L. ' ' . ' — ' _ ' _ - _ ' — - _ \"\nLLL4 I\n\n2‘\nS\n4\n\"\n\n‘ LECTURE 5:5 -\n\n'Al'A‘A'A'A'A‘l|V C C O C\n\n., ABSOLUTE &OONDIT 9' 3° ‘\n\n2: u 1;: -.-.m.-......._..— QMVERCJE gem 12119.: M 1:Rg~.£ gem J:Rc~r a PI\\ ERQE Lo1\\I\\ERe£ m P!\\ I:RQ~.E\n\nZ<-*>\"?1%§E17‘%\n,, 0 an )\n\nW n l\n23-” 1n(1n*<mn>))\n\nien\": ‘f’-\"\":‘Z\n/l-0 1/rf+ ‘In +l ‘OI\\l\\ ERGE E Pl\\ ERQE QOI\\i\\ ERGE a P1\\ I:RQ~.E\n\nZ<-v\"%%\nH 0 an )\n\n“° u l\n23-0 unanmn)>)\n\niwnj \\’f—:>n.’+Z\nnxo 1/\\’f+ ‘W *l n! cosH(n§)\n\n:(_”~ 'I(“ lm\"n‘+l\nn 0\n\nCW Llﬁiﬁiix LOI\\|\\ ERQE D1\\ ERQE\n\nZ<*”\"71%§$7\"%\nK1 )\n\nu 1\n23-” 1n(w:mn»>)\n\nr\\=1\n\n“’ mi. >. QOI\\|\\ ERGE Pl\\ ERQE\n\n<»<:\n\nV\\ 1\n2\"” 1n(tr<(lr@n)))\n\nr\\=2 SOMESERESARE OOOOOO0IOOOCOIOOOOIOOOIOOOOIOIOOOO SOME SEWES ARE\n\no9<399aace:coeeoovaouoemooooaaaoeeaao\n\nALTERNATN6\n\nsea ;u“g1<»¢ﬂ/\"\"‘; \nTﬁcn «u‘[1<;\\u1\"1a\\:L: \n1 A|_TERF\\HT [N6 ALTERN %TlNL3\n\n93 a“ 7’ o 4-» Dm;'I§GJ:S APPLIO\\BLIT,V:\nWE 0‘ 059 ALT[R?\\‘%Tli\\‘L3\nuscruwrss: AP:-x.IuBuTy:ﬂ? W K ‘\nuse or us: ALT LRNQ [Nb\nusmmrss: APPLl(ABL|T>’1£?\n\nuse or use ALT'ER>\\HTlNL1\nUSEFULNESSI Amuusuryzﬁf V, K _\nuse or uszzﬁi? ALT ERKN [Nb\nuscrumzss: APPLnuBuTy:ﬁ? V K ‘\nuse or useikiiiifi} A|_TER>\\N llxlb\n\nUSEFLLNESSI €f;'E\"3rB”u3§§ikikik ,«u’E1x>\\m’1uqe\nuscrumzssz ifrﬁrﬁr p SEQUENCE ALTERN %T|NG A [RN Qt Z<-”\"%’:\nM )\n\nnno\n\n*° N x\nEH’ 1n(l«<(lrin>))\n:<—u\"V) ‘f’-W {TING\n\nZ<-*>\"?1%§S7\"%\n,, 0 an )\n\n«K: H ‘\n£3-U un(xnmn>>)\n\nfen“: ‘f’-‘W2\nM ,/rf+ ‘in +l Z<-*>\"?1%;;T:17‘%\nan )\n\nn-O\n\n“’ u 1\nQ-U un(xnmn>>)\n\niwnj rf—:>n.’+Z\nA20 7/\\’f*‘1\\’l‘+l\n\n{TING ATINL: :“\"nﬁ’\" \n\n23'\" mi)\n\niﬂfj rf—:>n’+Z\nr\\=0 1/\\\"f+ ‘W *l Zen ‘\n\nr|:2 (C1\\‘\\ 1:KC~[.§ Zen\n\nr\\=1 \"7E}7H\\’lTlOl\\‘ CONDITIONAL\nCONVERGENCE .W:Fn\\'mo1\\I\nABSOLUTE T\nCONVERGENCE\n\nCONDITIONAL\nCONVERGENCE .WZFl\\\\'\\T|O1‘\\'\nco\"NBv5':%£’JNEca@\n\n-\n® mzrnxrmolxl\nABSOLUTE\nQ\n\nCONDITIONAL G,\nCONVERGENCE\n\n|3n| ‘.‘1\\El{G£$ ~m:Fl\\\\'\\‘l(|®1\\\\|\n\nH Ianl )1\\ER®:$ mzrnxrmolxl\n\nCDNAL G,\nCONVERGENCE\n\n!,Mm.M[ H |a4 mx gmis D1:Fn\\'m01\\|\n\nCONDITIONAL G,\nCONVERGENCE .WZ)-‘H\\'\\T|O1‘\\' DOES mus szauzs CONVERGE ?\n\nGIVEN\nSEQUENCE ' 23::\n\n(an) CDNVERGE?\n\nDIVERGENT DOES THIS SERES CONVERGE ?\n\nGIVEN\nsmusucs Ea» - 2 ‘an[\n\n(3 ) CDNVERGE? couvzwaz?\n\nDIVERGENT m\nU\nW\nJ\nA\n\n|_\nnv — szrazs\n\n4\n_\n+\n_\n+\n_\n+\n_\n+\n_\n\n;§—n\";—1, ALTERNATING — smzs\n\nml\nﬂ\nWAD;\nE .‘ 5 A 8 I\n-at-I)\" =l-l+l-I+l-l+l-I+I-l+--- @\nIi\n‘$0! : 1;»\n\n@ eempm 1:. \nF. I-1+l-I+l-I+l-I+I-1+-~\n\nQ-—n\";—1,. ALTERNATING \n\n@ EQNDFFI «A ;  P\nF, y\nE»\nme\nA»\nWW6\n.m—\\bLn\n\n1?\n\n‘K0\n\n \n\n@ F\n\n\\ECAL\\_ I\n~\\- —zI— 4|-\n+\nml’\n1\nrl-\n\nL\nJ\n\nI\n+\ncl-\n\n\\..|—\nu\n+\nml’ IHZOKEW\nABSO»LUTELf/_ CQN\\/‘ERGENI SERIES\n\n. ,_ _r ./ ‘M »'\\l,‘,,. IHZOREMI\nABSOLUTELY CDNVERGENT SERIES\nON BE  D AT WILL...\n\nTHESUMFEMANSCONSTANT\n\nNOT so FDR conpunoww ’\ncowvmcmr SERJES G CALCULUS: SINGLE VARIABLE\n\nRobert Ghrisl\n\n‘HIPS://\\\\’\\\\ “ .4..u».u-.. nrg/umrw/t.\\‘L~\\l!g Sciences"
  },
  {
    "path": "E:/Coursera/compilers/10 Cool Type Checking/10 - 1 - 10-01_ Static vs. Dynamic Typing (7m14s).mp4",
    "id": 1171,
    "text": " Compilers\n\n‘ ) Static vs. Dynamic Typing\n\nmmmmm en Static vs. Dynamic\n\nc1assA{...} 35;‘\nclass B inherits A {...)\n\ncla Main {\nswh‘ L A ><:A)<— new A; <-- dt3vw.In-L +1.‘; mix .3 A\n‘A’ X 35  new.§;g A-ommx. ‘hgp; -P X is B Static vs. Dynamic\n\nSoundness theorem for the Cool type system:\nV E. dynamic_type(§)@ static_type(§)\n\n— All operations that can be used on an object of type C can\nalso be used on an object oftype 2’ S C\n- Such as fetching the value of an attribute-'\n° Or invoking a method on the object\n\n— Subclasses only add attributes or methods\n— Methods can be redefined but with same type!"
  },
  {
    "path": "E:/Coursera/compilers/10 Cool Type Checking/10 - 4 - 10-04_ Self Type Usage (6m29s).mp4",
    "id": 1174,
    "text": " Compilers\n\n‘ ) Self Type Usage\n\nmmmmm en Self Type Usage Self Type Usage\n\n3. let x :T in E\n0 T can be SELF_TYPE\n\n4. new T\n0 T can be SELF_TYPE (Mw~“'\n- Creates an object of the same”type as self\n\n5- m@l(E1,...,En)\n0 TcannotbeSELF_TYPE\n\nu ma Self Type Usage\n\n6. m(x_::l’) :l':{...)\n0 Onlyl’ can be SELF_TYPE l\n\nWhat could go wrong if T were SELF_TYPE?\n\n— c|assA{ z:omp(x : SELF_TYPE) : Bool {...}; };\n\nclass B inherits A {\nb : int;\n—7comp(x : SELF_TYPE) : Bool (  l4§); };\n\nlet x 2 A 4- new B In ...écomp( ; \n\nAlax um"
  },
  {
    "path": "E:/Coursera/compilers/10 Cool Type Checking/10 - 5 - 10-05_ Self Type Checking (10m00s).mp4",
    "id": 1175,
    "text": " Compilers\n\n1 ) Self Type Checking\n\nxxxxx en - Formal parameters cannot be SELF_TYPE\n\n- Actual arguments can be SELF_TYPE\n— The extended 3 relation handles this case\n\n- The type To ofthe dispatch expression could be SELF_TYPE\n— Which class is used to find the declaration of f?\n— Answer: it is safe to use the class where the dispatch appears\n\n2.: sE_sL1\nM(g,,4‘-5: c \n0,»«.c »- ea--$31.3\n\nAlex ma\n\nSelf Type Checking - If the return type of the method is SELF_TYPE we have:\n\n0.M'C F '50 3 To\n\nOVMVC F en I Tn\n-\\T0 5 T\n~'-> M T f) = (T,’,...,T,,’,SELF_TYPE)\n\nlsisn\n\n \n\n0:M;C ‘V eO@I'f(e1:-~-Ien) 5 To\n\nSelf Type Checking - Why is this rule correct?\n\n- If we dispatch a method returning SELF_TYPE in class\n___T, don't we get back a T?\n\nTo 51'\n- No. SELF_TYPE is the type of the self parameter,\n\nwhich may be a subtype of the class in which the\nmethod appears\n\nSelf Type Checking - There are two new rules using SELF_TYPE\n\n0,M,£ F self : SELF,TYPEC\n\n0,M,C F new§ELF_TYPE : SELF_TYPEG\n\nAlex Aiken\n\nSelf Type Checking Self Type Checking Self Type Checking SELF_TYPE is a research idea\n— It adds more expressiveness to the type system\n\nSELF_TYPE is itself not so important\n— except for the project\n\nRather, SELF_TYPE is meant to illustrate that type checking can be\nquite subtle\n\nIn practice, there should be a balance between the complexity of\nthe type system and its expressiveness\n\nAlex Am\n\nSelf Type Checking"
  },
  {
    "path": "E:/Coursera/compilers/12 Code Generation/12 - 6 - 12-06_ Object Layout (23m56s).mp4",
    "id": 1188,
    "text": " Object Layout\n\n00 implementation = Basic code generation + More stuff\n\n00 Slogan: If B is a subclass of A, than an object of class\nB can be used wherever an object of class A is expected\n\nThis means that code in class A works unmodified for an\nobject of class B Compilers\n\n‘ ) Object Layout\n\nxxxxx en Object Layout\n\n—— - How are objects represented in memory?\n\n'- - How is dynamic dispatch implemented?\n\nu Am Object Layout\n\n3 5\nOffset 9 4 8 12 16 20 E :2‘\n(5\nClass\nA  67 : 2 2 .8 -‘mg:\nb\nB Btag 6 * a d f F‘\n' \" ‘ ‘ ~c a-1-u:£.xI_‘l§\nC C_ta£ é * 2 3 g 3 L Object Layout\n\n- The offset for an attribute is the same in a class and all of\nits subclasses\n\n— Any method for an A1 can be used on a subclass AZ\n' Consider layout for An <  < A3 < A2 < A1\n\n \n\nHeader A, object\nA, attrs. A129]-fen\nA’ ams A, object\nA; attrs\n\nAlex mm Object Layout\n\n0355A‘ Class C inheritsA(\na: |nt<A0,' ‘ _ ‘\nd:lnt<A 1; c‘lnt< 3'\n-9 f():|nt{a<-a+d); h()I'\"t{a<-3*“:\n); );\n\nClass BinheritsA(\nb:Int<— 2; - '3-7‘\n\n_..) W Inna ); —- '2 Considerthe dispatch\n\ng():|nt(a<Aa-b): eaf\n):\n\nAlu um Object Layout\n\n- To implement a dynamic dispatch_e._f_(_) we\n— Eva|uate_e, giving an object_>£\n— Call D[Of]\n- D is the dispatch table for x\n- In the call, §e_if is bound to x\n\nu mm"
  },
  {
    "path": "E:/Coursera/compilers/13 Operational Semantics/13 - 1 - 13-01_ Semantics Overview (7m06s).mp4",
    "id": 1189,
    "text": " Compilers\n\n1 ) Semantics Overview\n\nmmmmm en - We have specified evaluation rules indirectly\n— The compilation of Cool to a stack machine\n— The evaluation rules of the stack machine\n\n- This is a complete description\n\n— Why isn't it good enough?\n\nSemantics Overview Semantics Overview\n\nAlex mm Semantics Overview\n\nAlex Aaken Semantics Overview\n- Denotationalsemantics\n\n— Program's meaning is a mathematical function\n\n° Axiomatic semantics\n— Program behavior described via logical formulae\n- If execution begins in state satisfying §, then it ends in\nstate satisfyingY\n\n- X, Y formulas\n— Foundation of many program verification systems\n\nAlex mm"
  },
  {
    "path": "E:/Coursera/compilers/14 Local Optimization/14 - 2 - 14-02_ Optimization Overview (13m37s).mp4",
    "id": 1194,
    "text": " Compilers\n\n1 ) Optimization Overview\n\nmmmmm en Optimization Overview\n\n- A basic block is a maximal sequence of instructions with:\n— no labels (except at the fi n), and\n— no jumps (except in the last instruction) L: 4-\n\n/iii\n- Idea:\n\n— Cannot jump into a basic block (except at beginning)\n— Cannot jump out of a basic block (except at end)\n\n— A basic block is a single—entry, sing|e—exit, straight—|ine\ncode segment Optimization Overview\n\n- A contro|—f|ow graph is a directed graph with\n— Basic blocks as nodes\n\n— An edge from block A to block B if the execution\ncan pass from the last instruction in A to the first\ninstruction in B\n\n- E.g., the last instruction in A is jump LB\n- E.g., execution can fall-through from b|ockA to block B Optimization Overview\n\n     \n\nLt\n\nif-i < 10 goto\n\n   \n\nAlex mm Optimization Overview\n\nIn practice, often a conscious decision is made not to\nimplement the fanciest optimization known\n\nWhy?\n\n— Some optimizations are hard to implement\n\n— Some optimizations are costly in compilation time\n— Some optimizations have low payoff\n\n— Many fancy optimizations are all three!\n\n608“ \n\nAlex mm"
  },
  {
    "path": "E:/Coursera/compilers/18 Java/18 - 1 - 18-01_ Java (7m21s).mp4",
    "id": 1211,
    "text": " Compilers\n\n1 ) Java\n\n \n\nmmmmm en 4. p-~ofJ?--\n\n- Java: COOL on steroids\n\nj:— History]\n\nArrays\n\nExceptions_\n\nInterfaces\n\nCoercions\n\nThreads\n\nDynamic Loading & Initialization\nSummary\n\nJava\n\nu Aiken Java\n\n- Began as Oak at SUN l \n— Originally targeted at set-tog devices\n— Initial development took several years (91-94)\n\n- Retargeted as the Internet language (‘94-95)\n\n— Every new language needs a ’’killer apg”\n— Alernatives such as ‘EL, Python\n\n.x mm - From our perspective, COOL plus\n— Exceptions\n— Interfaces\n— Threads\n— Dynamic Loading\n— Other less important ones . . .\n\n- Java is a I§l_(i|anguage\n— Lots of features\n— Lots ' ' s\n\nJava\n\nu mm"
  },
  {
    "path": "E:/Coursera/compilers/18 Java/18 - 3 - 18-03_ Java Exceptions (14m09s).mp4",
    "id": 1213,
    "text": " Compilers\n\n‘ ) Java Exceptions\n\nxxxxx en T(v) = an exception that has been thrown with value v\n\ny = an ordinag vaiue (an object)\n\nF E)—e_2_1 : E\n‘L Er- try{:1} catch(x) {e2}: v_1\n\nK ‘ Java Exceptions\n\nEr—e1 : \n\nE[_)§<—\\Q]o—E: V2\n\nEv—Ery2e1Fcafcﬁ(x) 2e2F: v2\n_ ..§_\n\nMu um Ea-§:y\n\nE o—31_: _T(v1)\n\nEI—e1 + e2 : T(v1)\n\nJava Exceptions\n\nEv- throw g: Tgv;\n\nH mm Java Exceptions\n\nWhat happen-5 f0 0\" U n thrown during\nobject inaliza ' ?\n\nNa omz Java Exceptions\n\n- Methods must declare types of exceptions they may\nraise\n\nEpublic void_)gQ throws MyExceQtionj\n\n— Checked at compile time\n\n[-2 Some exceptions need not be part of the method signature}\n- e‘g., dereferencing null\n\nOther mundanetype rules\nv Vhcow must be applied to an object of type Exception\n\nAlex Aiken"
  },
  {
    "path": "E:/Coursera/compilers/18 Java/18 - 4 - 18-04_ Java Interfaces (8m38s).mp4",
    "id": 1214,
    "text": " Compilers\n\nJava Interfaces\n\n \n\nAlex mm Java Interfaces\n\n- Dispatches ®_f(...) where e has an interface type are more\ncomplex than usual\n\n— Because methods don't live at fixed offsets  '\ni >\n\n' One approach:\n\n— Each class implementing an interface has a lookup\ntable method names —> methods\n\n— Hash method names for faster lookup\n- hashes computed at compile time"
  },
  {
    "path": "E:/Coursera/compilers/18 Java/18 - 5 - 18-05_ Java Coercions (7m51s).mp4",
    "id": 1215,
    "text": " Compilers\n\n‘ ) Java Coercions\n\nAlex mm Java Coercions\n\n- Coercions can lead to surprising behavior\n— Consider an example from PL[|\n— Let A B C be strings of_3 characters\n\nB§I123r Z |7.3>.P_§ 5.}? _:v a__—§;_1l__7\nC,=’456’ e '-was [I 'T\\\n\n_e = B® C ‘\\:‘L\nraﬁ\n\n- What is A?"
  },
  {
    "path": "E:/Coursera/compilers/18 Java/18 - 7 - 18-07_ Other Topics (14m28s).mp4",
    "id": 1217,
    "text": " Compilers\n\n‘ ) Other Topics\n\nAlex mm Other Topics\n\n- Java is well done\n— By production language standards, very well done\n\n- Java brought many important ideas into the mainstream\n—> — Strong static typing\n-—-> — Garbagecollection\n\n- But Java also\n\n— Jncludes features we don't fully understand\n\n— Has a lot of features\n :—\n\nAlex mm"
  },
  {
    "path": "E:/Coursera/compilers/9 Semantic Analysis and Type Checking/9 - 4 - 09-04_ Types (11m22s).mp4",
    "id": 1257,
    "text": " Compilers\n\n1 ) Types\n\n \n\nmmmmm en Types\n- What is a tyge?\n\n— The notion varies from language to language\n- Consensus _ + ’ <\n4- —— -\n—Aset ofvalues ”‘ ' ’ ' .1\n. - - I\n\n— A set of operations on those values 3+\"\"1-‘ ‘°\"\"‘13 \"M '\n\n- Classes are one instantiation of the modern notion of\ntype Types\n\nConsider the assembly language fragment\n\n+\n\n' \\\nadd $r1, $r2/, $r3\n\nWhat are the types of $r1, $r2, $r3?\n\nu Am Types\n- Type Checking is the process of verifying fully typed\nprograms\n\n- lE§ﬂ1_  is the process of filling in missing type\ninformation\n\n- The two are different, but the terms are often used\ninterchangeably"
  },
  {
    "path": "E:/Coursera/compilers/9 Semantic Analysis and Type Checking/9 - 8 - 09-08_ Typing Methods (8m12s).mp4",
    "id": 1261,
    "text": " Compilers\n\n1 > Typing Methods\n\nuuuuu en Typing Methods O\nI\n\no\nOF_e_oE]\n\nTyping Methods Typing Methods ° In Cool, method and object identifiers live in different\nname spaces\n\n— A method@ and an objectﬂg can coexist in the\nsame scope\n\n- In the type rules, this is reflected by a separate mapping\n\n_l\\_/I for method signatures H5‘- r¢,..H-\n% M(_c,_f) = T1,. . .Tn,TM)\n\nmeans in class C there is a method f\n‘% f(X15T1:- - -:Xn5Tn)1 Tn+1\n|J§_ _I\n\nTyping Methods M(T,f) = (T1'»- - ‘Tn’\nTi:Ti.for1£iSn\nO, M P e0@T.f(e1,  ,en):\n\n[Static Dispatch]\n\nMu um\n\nTyping Methods ° For some cases involving SELF_TYPE, we need to\nknow the class in which an expression appears\n\n- The full type environment for COOL:\n— A mappingggiving types to object id's\n— A mappingmgiving types to methods\n— The current class;\n\nTyping Methods\n\nu Am The form of a sentence in the logic is\n\nExample:\n\n [Add]\nO,M,C |- e1+e2: Int\n\nTyping Methods\n\nu Aiken - The rules in this lecture are COOL—specific\n— Some other languages have very different rules\n\n- General themes\n— Type rules are defined on the structure of exgressons\n— Types of variables are modeled by an environment\n\n- Warning: Type rules are very compact!\n\n \n\nTyping Methods"
  },
  {
    "path": "E:/Coursera/data-structures-optimizing-performance/01_introduction-to-the-course/01_about-this-course/04_welcome-object-oriented-programming-in-java-specialization.mp4",
    "id": 1487,
    "text": " ééf’ /"
  },
  {
    "path": "E:/Coursera/data-structures-optimizing-performance/03_efficiency-analysis-and-benchmarking/02_measuring-performance-big-o/16_core-a-summary-of-sorting.mp4",
    "id": 1520,
    "text": " Core Content\n\nChristine Alvorodo, Mic: Mirmes, Leo Porter\n\nUC San Diego Algorithm performance\n\nSummarizing sorting ' Jet, ‘sou.\n-51:11‘, me» er ~. :51, o‘m.’r*.\"c:verog, . ~—\nperforr'-\"m my \\wSer1ioH sort, se\\e<'wm ,» ‘ w_—:\n\n   \n\nsorT,om;1quu.,k son\n\n-Evoluorat suumﬁrms H‘: which diffomm Ln mg\nOlgorifhms are Oppw pr 31> -5%\nSelection Sort O(n2\\ 7(\"2)\nInsem- d\\’\\Y O\\\\’\\e‘5\"\" (D2)\nMen and ‘“  .09 n) O(n log n)\n\nQuick O(n log n) 0(n '09 \") °(\"2)"
  },
  {
    "path": "E:/Coursera/data-structures-optimizing-performance/04_interfaces-linked-lists-vs-arrays-and-correctness/02_abstraction-interfaces-and-linked-lists/08_concept-challenge-drawing-linked-lists-second-attempt.mp4",
    "id": 1536,
    "text": " Concept Challenge\n\nChristine Alvarado, Mia Minnes, Leo Porter\nUC San Diego Linked MST Implemenfoﬁonz\nConcepT Challenge 2\n\nW public scauc void main(St:inq[] args)\nclass SLLNode<E> I (\n\nSLL“Qde(E) next, SLLNade<Integez> n0 =\n5 data, new SLLNcda<Integez>();\nSLLNode<Integer> n1=\npublic SLLNode() ( new SI-1-N°de<Inte9er> (1,110):\nu.1,,,,e.¢ : ,,.,u, SLLNode<Integer> :12 =\nI:his.daI:a = null; new sI..LNode<Im:egez>(2,na):\n; 1\npublic SLLNode(E chenaca) ( Whuvdoes the H5! at nodes look llke after muln runs?\n\nthis.data = themnza:\n)\npublxc SLLNode(E thebata,\nSLLNode<E> pzevuode) (\nth1s(theData) ;\np::vNode.next = this:\nthismext = prevNode.next; J}.\n\n, .\n\nJ/.f‘  7 7 ‘\n SI “ I\n» 3\n\n3\n\n \n \n\n?~ T , My I\n\n\\ public snulcdel) 4\nclunnuxt - mu,\nm. a... . null.\n\n:\n\nmm suuuaem uuenuub :\nm. m. = ....o.:.,-\n\nFax.» sznlnau :1 u..n.u,\nsu.uua.q:> Pnvltad-I\nm-zmuuu),\nyxnvﬂndn nnxt = u.\ncan nu: . pr-Wad. n-It: x n\n3‘\ni p\n: E‘\ni. « ,\n\nV, .r - x '\n‘-  \ng n\n5\n. . \\\n> .-. 1. ; -4-:\n\n9‘ x .‘\n'u'--\n' n\n3‘? 3\n\nI\n\nQ I\n\nI\n.\n§\n. §\nx\nJ\\\n‘M ’E‘—— --\ni ' A\nl u.uu¢.4-.> nlxt:\n2 an .\n\n,..mm snulod-() 4\nu....n.n - null:\nnun ﬂat. . nun,\n:\nmm snuloaeu ﬂue uh «\nu.....a.:. = anon-\nr\np|I.bl.ll: Susana (1 ...w...,\nsu.uad¢<:> Pnvwad-I I\nun-(Ln .9.\nm,.a.....,¢ an (\nSLLNode<Integer> no\n\nclass SLLNode<E> I\nSLLNode<E> next;\n\n  \n  \n   \n  \n  \n    \n \n \n       \n \n   \n   \n \n     \n\n \n\n \n\n5 data, new SI.LNoda<Inteqe\nSLLNode<1nteqex> n1=\nPublic 5,_,_N°de() ( new SLLNode(1‘m’1V\nthilnext nun, SLLNoda<Intege2> n2\nthiS_da:a null; new SLLNode(2 mu; .-\n; )\npublic SLLNode(E thebata) (\n\nthi.s.data - theData;\n\n)\n\npublxc SLLNode(E r.heDaI:a,\nSLLNode<E> prevﬂode)\n\nthis (:heDa:a);\n\nI:hi.s.next = pzevnode next:\n\npreVNode . next mus;\n\n(\n\n}\n\npublic static void main(St:ingI] atgs)\n\nr>(): VSLLNode<Integer> n2 = new SLLNode(2,nO);\n\npublxc SLLNode(E thenata,\nSLLNod:<E> pzevuade) 4\nno I thus (theData) ,-\np:evNade.nex: = urns;\nthis.next = pzevnode.nexz.-\n\n   \n \n\npzevllode\n\nM I:\n\nn2\n\nnus"
  },
  {
    "path": "E:/Coursera/game-development/04_designing-and-coding-gameplay-systems/01_programming-in-unity/02_unity-programming-concepts.mp4",
    "id": 2356,
    "text": " II~u-I-sac) Tc) ﬁg:-I1 I31\\I:Lzs-IvI1I~nT\n —. INTRO TO GAME DEVELOPMENT\nMICHIGAN STATE UNIVEQSITY EEEEEEEEE BY\n\nBRIAN WINK] \\\\\\\\I V\nF‘\n\nPRESENTED BY\n\nBRIAN\n\nASSOCIATE PROFESSOR\n\n\\‘ ‘ \\,1~ri-LU‘ VJ‘ [,u—:‘ v\\@W!'ﬂ p MICHIGAN sTA'rEw.n W\n\nUNITY\nPROGRAMMING\nONCEPTS\n\n‘wr Evian Winn , H‘\n\n; Mama &lnfovmat1or\\ »g- ‘\nMuchxgan Stale umversxry ff\n\n5AMEnEv.nsu.Enu OBJECT-ORIENTED THINKING\n\n   \n\n> Everything is an object\n\n> Objects have properties\n(aka, variables)\n\n> Objects have methods\n(aka, functions) GAMEOBJECTS AS OBJECTS MICNIGAN snvr: \\ nm E\n\nCOMPONENTS AS OBJECTS\n\n \n\n \n\n \n\nxfg. yf. ,—. ......,\n..... .;......,.\n‘ilk-hunt: ﬂu . ~\n(msnalnn Von ) \"‘ \"‘\n....s...... D ..\n.-.u. 1\" 3\n\n      \n\nInn Ucnnwu\nmm rubs\n\nw MICNIGAN snvr: \\ nm E\n\nCOMPONENTS AS OBJECTS\n\n \n\n \n\n \n\nxiswsu vf. zjamyz\nIaﬂu own-“‘*‘\n‘nu.-ua. ﬂu\n(msmwm m »\nn.«.m.«u D\n.........\n\n      \n\nInn Ucnnwu\nmm rubs COMPONENTS AS OBJECTS\n\no m.m.. nmwmnyha\nmm»... a.\n\nnil\n\n \n\n\"\"*‘»....«n»..m..... .\n\nxivuunvf.\n\n’u»iu.u~..\n\nmxuu... Lou .\nlnoan-tau D\n\n. mm\nIn: mu... D\n‘ﬁn-\n\nu-—s.m.u-awn ST\n.:..m..nm. .\n\n     \n  \n \n \n  \n \n    \n  \n\nz *4 mm\n:2 mm.\n\n \n\n  \n\nM\n\n \n\n \n\n \n\nan Arxmrhvnle ».u. .....:...m _oJ\n\n7;-1 oauu.-nxvwusuin ﬁt\nv:umm.«.. o MICHIGAN snrznmx E\n\nCOMPONENTS AS OBJECTS\n\n \n\n   \n\n.,.mu....u. ».u.m....:...m _oJ\nw o...s..m-umsmn Es.\n\nSaw V zummm o\nv tau. 1.... a I\nmm». W. .3 CLASSES MICHIGAN s1n:mu.w.~.u »\n\nCLASSES\n\nf.   instantxate Clock Object\n. ~ _ \\‘\n(Jock Oass ,% ‘\n\nClock Object p MICHIGAN sTA1Eur.n\\Er: wv\n\nPREFAB = CLASS\n\n*4-sm. mmalu magi\n\nx»....¢ - an )2. an :a- o....- ..‘\n\ncmu.m»\nm-aw.» um\nxoumu\num um.\n\n» Emwnnnum\n\nCamvx\n(mm\nEmail’?\n(a MD\nCum\n\n[vuI§NII1m\n» um-:.m.\n\n» c.mm¢.m.\n. z,.....a..\n\n. En=rWSvIIm:rx\n» c.mx.u..m MICHIGAN STATEHNM. spam\n\nPROGRAMMING\n\n55:6’ MICHIGAN su-rznm v\n\nCREATING SCRIPTS\n\n \n\nvi Audlu\nvﬁ Salpts\n\n@ hum-unuumr\nPE Tamnes\n\nC#\n\n    \n    \n    \n \n     \n\ncompute snnaor\nPruflb\nJS\n\nAudio Mixol\n\nMnwriul\nLana Flam mcmmm sure \\ um Erwwrv\n\nSCRIPTS AS COMPONENTS\n\n   \n\n> Audio\nviscruns\n\nIQ IisI:TugQtMnmer\n> Texnnras SCRIPTS AS COMPONENTS\n\no lnspxtnv\n\n    \n    \n\n   \n \n\n \n\nU Cum Dian: -\nnu uumu Ta um. mu...» H\nVA tn-alum\n\n \n\n0.\nlumen x o ‘v o 19\n\n   \n\n>ﬁA-nib um. x[:|Q vq%_ z1—1u\nvﬁsalpcs sak xT[:, 4:1; zfyx\n\nIIs|:Tug2tMmI:r v|a_m..manm.¢<..,., 0.\n>E'rexwres scrim ‘-1.!-s|<T-rv«,|I=-vv I\n\n. \\‘\n1| public class BasicTargetMcver :\n\n \n\nMICHIGAN su-rsnm m\n\nANATOMY OF A C# SCRIPT\n\n‘using UnityEngine;\n2 usmg Sy5tem.Ca1'lect1cn5;\n\n \n  \n  \n  \n \n     \n    \n   \n \n  \n \n\nMuncﬁehavmu r {\n\npublic mm dnspm : true;\npublxc flea! spsnspeed = nun;\n\npmme Transfurm mover;\nvoid Startl) {\n\n// go: a reference La nus gameﬂbjczt‘\nmover = gameobyecmransform;\n\n, ans ram mmponenr\n\n}\n\nvom Update U {\nxf maspim {\n\n// rotate around L/we up ans :7! me game-Dbjeri\n\nmuver.RntatelVecmr3.up * spinspeed >« T1me.de1taTune); 5 .4.c»..G.\\..smm.\\,,\n\n \n\nEVENT-DRIVEN\n\nOther Events:\n\n1) Update Fixedupdate\nOnCo||isionEnter\nGame OnTriggerEnter\nOnMouseDown\nInltlallzatlon Event OnMOuSeUp\n1) Awake LOOP\n2) OnEnab|e _\n3) Start 2) LateUpdate 7.:\n\nhttp //docs umty3d com/Mama!/Executxonorder html REFERENCING GAMEOBJECTS\n\nthis.gameObject — gameObject MICHIGAN suvsnm »\n\nREFERENCING GAMEOBJECTS\n\npublic Gameobject targetl; :|,_pUb“C Variable\n\nprivate Gameobject target2;\nprivate Gameobject target3;\n\nvoid Start 0 {\n// targetl :5 set 1n the edltur\n\n\"\"99\"-Fi\"°\"'E\"°\"Y\"’= Find it in the scene\nta rget3 . FindWithTag (\"Player\") : ‘\n\n// make the gameobjects znacnve (mv151b1e)\ntarget1.SetActive(fa1se):\ntarget2.SetActive(fa1se):\ntarget3.SetActive(fa1se): MICHIGAN suvsnu »\n\nREFERENCING COMPONENTS\n\nI» = gameobjecttransform\n\n \n\nvoid Update () {\n\ngameobject.transform.position.x += 1:\n}\n\nvoid Update () {\n\ngameﬂhj ect.tran5form.Trans'late (1,o,o);\n} REFERENCING COMPONENTS\n\ngameObject.GetComponent<TYPE>()\n\nJ\n\n\n\nAK MICHIGAN snnznm »\n\nREFERENCING COMPONENTS\n\nprivate Rigidbody rb:\n\n     \n  \n \n  \n \n    \n\nvoid Start () {\n// get a reference to the Rigidbody component\nrb = gameobject.GetComponent<Rigidbody>():\n\n// turn gravity on\nrb.useGravity = true; PROGRAMMING IN UNITY\n\nP-n ‘. MICHIGAN surzwum. .n\n\n \n\nPROGRAMMING IN UNITY\n\nGood documentation (use it!)\nvhtt 2 unit 3d.com learn\n\nOnline Unity Community\n>http:/ unity3d.com supportzcommunity WHAT’S NEXT WHO WILL? \\\\\\\\I 7\nFE\n\nSPARTANS WILL.\n\n#GAMEDEV"
  },
  {
    "path": "E:/Coursera/hadoop/05_spark/03_lesson-3-job-scheduling-actions-caching-and-shared-variables/04_broadcast-variables.mp4",
    "id": 2479,
    "text": " Broadcast Variables . Tfansifer-j L-J31 fo‘nc;j_e= peir E .cuter\n. Efficient peer-to.-peer t7rariSfe¢r config = so.broadcast({\"brder;':3, “fi|ter\":True})\n\nconfig.va|ue Broadcast variable example\n\nFor example large configuration dictionary\nor Iookup table:\n\nconfig = sc.broadcast({\"order\":3, “fi|ter\":True})_~\n\nconfig.va|ue E\n\n‘D .‘hg! config.va|ue Broadcast variable example\n\nFor example large configuration dictionary\nor Iookup table:\n\nconfig = sc.broadcast({\"order\":3, “fi|ter\":True;,_,n,‘\n\nconfig.va|ue R\n,\n\n‘L 4‘ -A\n\n3 (936 Ir'1’?f?'rfgjLt-'1%r.T<a’-t1'té>.%1n‘= :d!c:1%r.e:m:‘ar;y»-V\n\nconfig = sc.broadcast({\"ordér\":3, “fi|ter\":True}) ‘V\n\ni‘.\n\nye«%§¢é\n\nconﬁg.va|ue Broadcast variable example\n\nFor example large configuration dictionary\nor Iookup table:\n\nconfig = sc.broadcast({\"order\":3, “fi|ter\":Trué’\n\nconﬁg.va|ue T‘ =r:‘g;t;=: n’:f?'r‘gj:;amti:@.n: \n\n \n\nconfig = sc.broadcast({\"ordér\":3, “fi|ter\":True‘\n\n3 .) '\nconﬁg.va|ue\n- w.\n- . V’ \\\\\n\nL 4 ozr ‘»|f’o‘.c> my\n\nconfig = sc.broadcast({\"ordér\":3, “fi|ter\":True}) ~\n\nhad\nconfig.va|ue u config.va|ue config = sc.broadcast({\"ordér\":3, “fi|ter\":True})\n\nconfig.va|ue .=r:'9:e Fr1?Ff7Q?EiWti7©ﬂ1 é:.’t‘i~‘.e:m=am—.y-V\n\nozr ‘»|f’o‘.c> my\n\nconfig = sc.broadcast({\"ordér;':3, “fi|ter\":True}) \n\nconfig.va|ue E config = sc.broadcast({\"ordér\":3, “fi|ter\":True})\n\nconfig.va|ue conﬁg.va|ue conﬁg.va|ue Broadcast variable example\n\nFor example large configuration dictionary\nor lookup table:\n\nconfig = sc.broadcast({“order\":3, “fi|ter\":True})\n\nconflg.va|ue I"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/01_initiation-a-la-programmation/03_bases-de-programmation/02_introduction.mp4",
    "id": 5303,
    "text": " qivnu\n\nIlllflllllllilillll\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier “(WW ”(1’|l” 1IVIII‘1IIWIIHIIINIIH||lW|||l1|lWVlll1l|H\n\nIll}lllllllllllIINIIUIIIIIINIIlllﬂlllllllﬂ virtuellep\n\nC PU\nlllllllllllllllVIN||ﬂ|||l||N||llllllllllllll Il|’ll_I réﬂéchir au probléme;\nconcevoir Ia sequence d'instruc1ions\n\n   \n   \n\ntester Ie programme sur la\njmachine virtuelle\n\n   \n  \n   \n\nécrire un programme Java :3\npariir de cette réﬂexion\n\ncompiler Ie programme Java\npour créer un programme en\nbytecode IIPILI I(|’ll_I mm: IM- rs-.-.-r.~_—.s:\n\n \n\n \n\nI-'-. I’-umx... 4 I wlzlil\n\n \n\nI-'... I’-um ha I - um... I\nl Mucnsu um\n\n \n\nI-'... I’-'..u«xms I aubn: class Meuduorld\n\n«us... Is..- Sm n -...... -\nwhit: class Meuduorld\nI\n\n1,11\n\n \n\n \n\n«us...\n\nI’....... In: rum: dnss Meuduorld\n{\n.(;¢suc sum: Md minmringu arcs)\n\n \n\n \n\nmu... nus \\-—..\n\nr..._. mu n-.....4...\n\nll: class Nellauorld\n\n  \n  \n  \n\nH: mm: Md IIain(StrinqD args)\n,‘[_§ylpeq.o‘u¢.na1nt|n{3l§|'L|o, prim‘);\n\n\\-as |u...'. um ‘ sy:;:eq.o‘u¢.pa1ntIn;:u¢Mov .-.-mm-);\n\n\\-as |u...'. um n-.....4...\n\nll: class Nellauorld\n\n  \n   \n \n\nH: mm: Md IIain(StrinqD args)\n‘]_symq.o‘u¢.pr1nt|u;:m|o, prim‘);\n\n\\-as |u...'. um has um... um Mil: class heuouorld\n\n \n\n \n\n(\n- Till: sunk wid Iain(StrirIgD args)\n9¥I$==I'.nIIe.privI!I.ﬁE'l,|,e1la« .\\,-am‘:\n)\n..... ...4 '  — —— Mama» —\n\n \n\nw... r.'..... m—....-\nmm class Icelxounrld\n(\n\ngﬁlic SM!“ vnrid I|ain(StI‘ilIqD ales)\nsyma.u;¢.prin:w;.-uelto. ,-w1.m:® aw-  m ~-\nwbu: class ueuouoru \"\"“\"\"'”‘\n{\n' ?§\\l< SM!“ void lIlilI(Stl‘ilIgD args)\n\n.sgsm-.u:¢.pm:InvZ\"\\e'11a. -um:-‘)1\n\nH . xI‘I-llﬂhsa. u\n,__ ,___,  uuum,-»-. \n'.'.'.....\"\"'..__..\"““\"“\"\n\n   \n\nn-... ;...u.'. 1.... ‘ m----- \n\nMu: elm nelmeru\n(\n- p-am: um: um nain(String|:| ms)\n\n9ymu.oue.p:-intlmrlseue, pui-1A1‘);\n\nu... u. -.annm=.n-\n_-:E...;_.....-—.».—a........n.-—.nu..u........-......n.mnx-. I(|’llI"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/01_initiation-a-la-programmation/03_bases-de-programmation/03_variables.mp4",
    "id": 5304,
    "text": " !(|'fl_!\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier ‘(Pll IIPIII I(V‘llI Cw)‘ llr\n\n \n\n \n\n. programme sur la\n= vinuelle réﬂéchir au probléme;\n\n    \n\ntester Ie programme sur la\nmachine virtuelle\n\n \n\n  \n\ncompiler Ie programme Java\npour créer un programme en\nbytecode '.‘-\"\"5\n\nséquenoe d‘instructions données F‘-\"\"9\n\n [  J W!\n\ndonnées F‘-'7‘!\n\nopérent sur\n\n/'\\\n\n— données !‘-'7‘! Fm‘!\n\nopérent sur\n\n/'\\.\n\ntraitements  j\nV >\n\n$2,, , \\,ur_ _ \\Ia-P‘ \\o\\e\n\"' ‘4\"\"\"“\"“ L‘ ‘ Q Inﬂuencent ‘L\n\n \n\n'5, 5% .. L7.+\\_,_): +5 zo\n\n \n\n<S\\“‘”‘ S; :,o\n \\ =-‘3\nz\n\n‘1.«\\\\<:):-r SA-u ‘°v~\nShaw Ill’ll-\n\nUnﬁosséde 3 caractéristiques:\n- Sor—qui est le nom par Iequel la donnée\n\nest désignée;\n- Sorgqui déﬁnit de quel « genre » est la donnée\n\ncontenue dans la variable; ?.::f. ¢ .».....x;«s\n\n- Sa- Par exemple, si la donnée est un nombre, sa\nvaleur pourra étre 123 ou 3.14 ymuc um Lesvmams (\npllllc mu: wall mllI(StrlngE| ms) (\n\n \n\n \n\n:n-q...m_~:ms'_-.'u.'—-a. nu pm: clan Lesvmams (\nE nu: nun: mu -umsu-inoI:| -res) (\n\n. mi.“ .\n} Une variable non Initlallsée ne peut étro utlllsée.\n\nPar exemple: “Glue __._ 5 ;\n\nﬁtarre\n\n—> int ncarrei\n:5 *\n\n '\ndonne une erreur a la compilation:\n\nvariable ncarre might not have been initialized\nSystem.out .print1n(nCarre) ; erﬂﬂer\n\n‘E\n£4;\n\ndouble x = 1.0;\n\n\\> E? €V\\‘k‘{Q K‘\n\n\\> A: uM,‘,R_\n\n2:\n\n5% -my\nDéclaration de variables\n\nD'autres exemples de déclaration:\n\nintm= 1;\n\n            \n   \n \n\non peut déclarer plusieurs variables\nsimultanément. Il|’ll!\n\nFypes de variables\n\nLes principauﬂontz\n\n— int, pour les valeurs entieres (pour integer, entiers en anglais);\n— double, pour les nombres a virgule, par exemple 0.5\n\net aussi:\n— char: pour les caracteres (AIAZ etc.); I(V‘llI '.‘.\"\"!\n\nAffectations\nL'exécution d'une affectalion s \n\nGD\n\n(4) ..\nT 4\nr1Carre = n * 1'1; “\n\n‘F./C:J\\c En mathématiques:\n\n.—4>b=a+1\n\n_———~\n\n \n\nsigniﬁe que tout au long des calcul\n\nAutrement dil, quel que soit a, b sera toujours (!.ga !a > 1\n\nEn Java:\n\n \n\n'1'“! ‘Qéclaration dej Mg\n\nII peut arriver que la valeur d‘une variable ne doive pas changer aprés\n|'initia|isation. Dans ce cas, il faut ajouter Ie mot-clé final devant Ia declaration:\n\nfinal type identificateur = valeuriinitialei\n\nPar exemple:\n\n—» final. double : = %\n\nDans ce cas, on ne peut plus modiﬁer la variable:\n\n \n\nvITEssE_DE_LA_LUMIERE — 100; // erreur\n\na.u.,,.r\\aJr\\--'."
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/02_structures-de-controle-1-branchements-conditionnels/01_semaine-2-structures-de-controle-1-branchements-conditionnels/01_branchements-conditionnels.mp4",
    "id": 5307,
    "text": " -:(|’fl!\n\nBHIIIISIIIPIIIIPIIIS lillllllilillllllﬂls\n\nInitiation ‘a la programmation (Java)\nJamila Sam, Vincent Lepetit et .JeanACédric Chappelier I(l’I\\I IIMI\n\nJusqu'ici, toutes Ies instructions des programmes étaient exécutées, at Ies unes aprés\nIes aulres.\n\nLes structures de contrdle permanent de changer ce compodement.\n\nII y a 3 structures de contrélez\n- Ies branchements conditionnels,\n~ Ies itérarions, at\n~ Ies boucles conditionnelles.\n\nNous allons commencer par la ui permet de s_a_u1gL\n du programme 5 cen nes ont rem s,etquiu1i|isent[e\n\nmot-clé i E. 5,4 Qcqn») { V\nBax \\//Z/NE\n\nJ 2153 <\nBLOC Fm/555\n\n,. \\/KW;\n Ia\nSys em‘out.pr).nt1n4\"Votre nombre est plus petlt que 5.\");\n\n‘Delse\nSys em.ouv;,pnnc1nq\"voc:e nomhze est plus graﬁd cu egal a 5.\");\n\n0 7-7‘? (/55 FEM\n\nLes accolades dellmrtent un bloc d Inslrutmons\n\n \n\nt, \n\nSys\\:em.out.px:1nt1n(\"Votre nombze est plus grand cu egal a 5.\"); Les choix imbriqués\n\nL'instruc1ion if suit donc le schéma:\n\n1f (conditionl)\n1;? ‘ @ vHu'£4-’\n(D\n\nii \"Emotions flgurant dans (es blocs sent absolument quelconques. ll peut done s'agir d'au1res Supposons: '‘\n\nA\n;f1x—y)( Fa\n\n1f 1)’ == 2) (\nSystem.out.pr1nt1n(\"Les cnns valeuxs sont ega1es.\"),-\n) Else (\n\nSystem.out.print1nI\"seules 1es deux premieres valeurs sont ega1es.'')7\n}\n\n} else (\n1f Ix 2) (\n\nSystem.out.print1n(\"seules la leze et la 3eme valeuzs sent; eqa1es.\");\n1 else (\n\n1f (y == z)(\n\nSystem.out.p1:int1n(\"Seules les deux dexnieres valeuxs son: ega1es.\"):\n) else (\n\nSystem‘out.pr1‘nt1n(\"Les trols valeurs sent d1ffexentes.\"|.'"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/02_structures-de-controle-1-branchements-conditionnels/01_semaine-2-structures-de-controle-1-branchements-conditionnels/02_conditions.mp4",
    "id": 5308,
    "text": " !(|’fl!\n\nconditions\n\nInitiation 3 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier I(l‘|lI 311117 lmll\n> Attention: ~ \" “\n\nLbpérateur our tester si deux valeurs sont egales s'écril avec deux\nsignes ég\n\nUn seul sign.eprésenl_\n\nPar exemple. si on veul tester si la variable 11 est egale a 5, il faul\n\nécrire: I\n\nif (3 == 3) ‘—\netnon as: Y‘ ’ 5 .\nac,»-cc c.e\\..\\=«'\\»Jn~o~—\\\négal é\nmférieur ou égal é\nsupérieur ou égal a‘\n\nI: different de\n\nOpérateurs d lnt a: 1;\n\n1ntb—2: W\nrx\n\n \n\nKr“;\n1: 1a 1:) (\n\n-—~ system.out.print1n1\"cas 2\") ; A\né_\n\n   \n\n) else (\nsystem.ouc.prin:1n1\"cas 1\");\nfans;\n\nZT\n—-D1f12*a!-b){\n\nSysten\\.out.pr1nt1n(\"b est different du double de 3.\");\n\nl\n.—o\n\nafﬁche\n\nC35 2 I(?‘llI ’’’’’’’ 1 K \"\"\"\"\"\" l K ’’’’’’’ 1 K Les opérateurs logiques\n\nL'opérateur loglque ! @\n\npar example, Ia condition ,\\ rut\n\n’<—<t% 341:.\n\n\\SL\n>m.L\nest vraia si (a < b) est 1ausse, at fausse si ra < b) estvraie\n\n  \n\nNous verrons des exampl"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/02_structures-de-controle-1-branchements-conditionnels/01_semaine-2-structures-de-controle-1-branchements-conditionnels/03_erreurs-de-debutant-le-type-boolean.mp4",
    "id": 5309,
    "text": " _-H(|'fl!\n\nErreurs Ile Iléllulant\nll! ume boolean\n\nInitiation 3 la programmation (Java)\nJamila Sam, Vincent Lepetit at Jean—Cédric Chappelier “.f}'|\\' ' ENE guns classiques\n\nif (a O\n\nSystem.out.println(\"a vaut 1\"): On peut initialiser des booléens é I'aide des constantes false et : rue.\n\nOn peut uliliser des booléens oomme des conditions. Par exemple:\n- on peul uliliser des opérateurs logiques (as, at I) entre booléens;\n\n~ on peul uliliser un booléen comme condition dans u a\n\n_>:nra=1,\n\n \n\nr} b:..;ledn\n\n     \n\nC\n9 bomeau d '7’\na I‘ GEN E\n4...;\nI L\n'7 ‘' Kg)’ ‘ +~uJ., M ‘ +_e‘\n\n-9 System.out.p:intln{\"e vaut true\");\n} ' M ’"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/03_structures-de-controle-2-boucles-et-iterations/01_semaine-3-structures-de-controle-2-boucles-et-iterations/01_iterations-introduction.mp4",
    "id": 5310,
    "text": " r W : ‘rm’ ‘ La boucle for\n\nUna boucle 2: r permet de répéter un nombre donné de fois Ia méme série d'instructions.\n\nPar exemple, si on fait:\n\nle programme afﬁchera Ies carres des 5 premiers entiers:\n\n£u1(1n:\n\n}\n\nSystem.out.pr1ntln(\"le carre de “ + 1 + \" vaut \" + 1 * i):\n\ni=O;i<E-\n\n++i)\n\n(\n\nIEPHI\n\ncarre\ncarre\ncarre\ncarre\ncarre\n\nde ivautﬂ\nde A vaut \\1_\nde g vaut J1_\nde 3 vaut 9\ndei vaut L6) M0?-Clé fo r\n\nIfPIlI\nCondition:\n\ntestée avant Fexécution de chaque tour de boucle.\nSi elle est fausse, on sort de la boucle,\n\n{Eu\n\n++L,' if“?/f/'\n\n \n  \n\n(\"le Carr de “ + 1 + \" vaut \" + 1 * ii;\n)\n\nDéclaration er initialisation: Incrémentatinnz\n\nn'est exécutée qu'une seule fois_ exécutée é Ia ﬁn de chaque tour de boucle. Elle permet\navant d'entrer dans la boucle de changer la valeur du compteur de boucle (ici. la\n\nvariable 1).\n\nRappelz ++i; ajoute 1 é Ia variable 1. Cette instruction\nfail Ia méme chose que 1 = 1 + , ; IfP|lI\n\nComma pour la 15, Ies accolades ne son! obligatoires que si plusieurs instructions\ndoivent étre répétées.\n\nSi il n'y a qu'une seule instruction, on peut ne pas utiliser d'acco|ades:\nf*:(.n' 1 =.'r;1 < :: ++1)O\n\n*7SyStem.Out.prlntln(\"i = \" + 1);\n\nO\n\nMais, toujours comme pour Ie if, il est conseillé de ga der Ies accolades:\nr::(.n', i = U; i < u; ++i]\nSystem.ouL.println(\": = \" + 1'): Q>_r(déc1a2:a\n\nboc\n_._\n\n)\n\n \n\ntion_et_initia1isa t:io1@ incriation)¢{\n\n- Si Ia condition ne deviant jamais fausse, les instruciions dans la boucle som\nrépétées indéﬁniment ! Afﬁchage d’une table de multiplication\n\nOn peui remplaoerz\n\nSystem.out.\nSystem.out.\nSystem.out.\nSystem.out.\n\nSystem.out\n\npar\n\n \n\n‘I\nLa variable i prend ici Ies valeurs d\n\nprintln(“5\nprintln(\"5\nprintln(“5\nprintln(\"5\n.println(\"5\n\nL\n\nmultiplie\nmultiplle\nmultiplie\nmultiplie\nmultiplie\n\n\\<A0\n\nnt'  155 10,- 3;i)(\n\nSystem.out.println(\"5 multiplie par\n\npar\npar\npar\npar\npar\n\nm m w M H\n\nvaut \" + 5 * 1\nVEUC\"+5*2\nvaut \" + E * 3\nvaut \" + 5 * 4\nVaut \" + 5 * 5\n\n\" + 1 + \" vaut\n\nu + 5 * 1); Que s'afﬁche-I-il quand on exécute Ie code :\n\n{—V {‘o.4\n’~‘>for(inf. i = O: i < 5; ++i) ( i\n\nSystem.out.print (i)_I + V\nif(ig2::o)(L€Aqaau\\47.. 4 Z\nI—|\nSystem.out.print(\"p\"); FL‘ ‘'4 P\n)\nSy5t:em.out.print(\" \"H\n}\nSystem.out.println():\n\nA:0p12p34p 5\"\n\n?\n\nB:0p1234\nC:012p34\n\nD2 Op 1p 2p 3p 4p -I. a-mLu.n..gn_-IIA =+..m. J! [Fr 3\n\n1-1\n\n'92‘: ' -  - J\"\"'\"F\n\n.|.¥mM!_ L  % gm\n,\\\n\nu'n::"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/03_structures-de-controle-2-boucles-et-iterations/01_semaine-3-structures-de-controle-2-boucles-et-iterations/03_iterations-quizz.mp4",
    "id": 5312,
    "text": " !(|'ﬂ!\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier I 16?“? 1 1. I 16?“? 1 : :;,.“_l Que s'afﬁche—t-II quand on exécute Ie code :\n\n-a:>for(inL i = G; i < 3-, ++i) I\n\nforlinr, j = 0; j < i: ++j)(\nSystem.c:ur..print(j):\n\n)\n\nSystem.out.print1n (“\");\n\n-a>\n“$9\n*9"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/03_structures-de-controle-2-boucles-et-iterations/01_semaine-3-structures-de-controle-2-boucles-et-iterations/05_blocs-d-instructions.mp4",
    "id": 5314,
    "text": " -(|’ﬂI‘\n\nFunctions: IIIOGS\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et .Jean~Cédric Chappelier F!-\".\"!_ Ii|’l_\nLes blocs\nLes blocs ont en Java une grande autonomie.\nIls peuvent contenir Ieurs propres déciarations et initialisation de variables:\nif (i !: O) (\nint j = 0 ;\nj ; 2 * i;\n\n)\n// A partir d‘ici, on ne peut plus utiliser j E‘-'7‘! HF\"! I(_|’llI\n\n     \n\nNotion de portée\nLa d'unevariab|e,c'es      \":.: ' '~ 7;: 3\n. autrement dit ou elle est déﬁnie, existe, a un sens.\n\nif (i != 0)@\n\n   \n\nM ()2 .7 '.‘i'.'.‘E um:\n\nPortée : régle\n\nEn Java, on ne peut pas utiliser Ie nom d‘une variable\ndéclarée plus globalement pour déclarer une autre\n\nif (i !: 0) ‘ variable\n\nintj =0;\n\nCela permet d'éviter des ambigurtés entre noms de\nvariables. E“-\"‘! Inm-\n\nPortée : cas des itérations\n\nLa declaration d'une variable a |'intérieur d'une itération est une déclaration locale\nau bloc de la boucle, et aux deux instructions de test et d‘incrément:\n\nforjffai; €31; @\n\nSystem.out .println@);\n\nA perm moi. an"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/04_tableaux/01_semaine-4-tableaux/03_tableaux-declaration.mp4",
    "id": 5316,
    "text": " !‘l\".‘!\n\nTEIIIEBIIX : declaration\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier ' '0'“ HM Les crochets mdiquent vv\nplusneurs élémems. ‘\nII existe deux\n\n1. Dans |‘i\n2. Dans r Situation en mémoire \"\"-\n\nlmportant : Un tableau n'est pas de type de base,\nil est donc manipulé via une reference!\n\n[0] [1] [2] [3]\n\n1000 1500 2490 6450\n\nK\n\nint[] scores\n0\" 0|\" We '8 ‘law 1(3) 0\n\nLa variable scores contient une adresse : Femplacement du tableau en mémoire! HWY ' (PH Initialisation d’un tableau de {a \"”\"'\n\nDans Ie cas général, on ne oonnait pas Ies valeurs\nde tous Ies éléments Iors de la déclaration du tableau\n\nOn utilise alors plusieurs instructions pour déclarer e_t initialiser :\n\n1. Déclarer le type du tableau Am’ C] smut: : iii )v\\\\’ ‘V\n@ Construire Ie tableau avec : vs]:\n\n \n\nnew type [ taille 1 D K\n3. remplir Ie tableau élément parélément ’\n\nSaws Acces direct aux éléments d‘un tableau W-\n\nJ‘/WE '3 tab :\n\n‘Alva /WY CA3’);\n\n4039 {PX\n\nAttention ! Les indices correspondant aux elements d‘un tableau tag L03’)\n\nLe i+1éme élément d‘un tableau tab est accessible\nau moyen de |‘indexation :cab[_i]\n\nde taille T varient entre 0 et T-1 ‘\nK ; M5103 C Li .\nLe 15' élément d’un tableau tab précédemment declare est donc\ntab[0] et son 1oe element est mus] _D ML; [M3\n/l,_\n\nAttention 1 En cas danegst Iancée par le programme\n\nmy situation d‘erreur provoquant |'arrét du programme si on ne la traite pas\n(la gestion des exceptions n'est pas présentée dans ce cours d'inIroducIion)\n\nll est impératif que |’élément auquel vous voulez accéder existe effectivement! Initialisation d’un tableau de taille fixe\n\nUne tois Ie tableau déclaré et construit, il faut\nIe remplir élément par élémenl :\n\nint[] scores = new int[4];\n\nscores[0] = 1ooo;4—\nscores[1] = 1500;\nscores[2] = 2490;\n\ns<:ores[3] = 6450;\"’\n\n \n\nSituation en mémoire :\n\nEL [1] [2] J51].\n1000 1500 2490 6450\n\n_ ‘int[] sgg\n\n'f“’\"' lnltlallsaﬂon dun laﬂurdn ujllla Hm:\n\n‘uﬁmans Ia Iamgm uléuaau-am.:m-miunu mraul\n‘k rullnill iiamaal val Iiamael\n\n   \n     \n\nEn!!! |% IN Iii Ml:\nl“lM,I'W E M '\nE lllllllu\nM:-ul _ = MIN\n.....r_m .uu':.n... -\n\nn‘ ma ‘Ill [31\n;.iﬁru~5vﬁ:ésia»a§v:\nI\n\na\n= |mII] mp:"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/04_tableaux/01_semaine-4-tableaux/04_tableaux-traitements-courants.mp4",
    "id": 5317,
    "text": " MlH(|'fl“-%\n\nTillllﬂallll : trailemems IIIIIIHIIIIS\n\nInitiation 51 la programmation (Java)\nJamila Sam, Vincent Lepeiit et Jean—Cédric Chappelier nuhh: ms: Iterntinnnzbleuu\n{\nmu: sum: vow «mn(smug|:| orgs)\n[\nincl] um .. 0.2.3);\n\n// mramm sur ensembu an valeurs\nfor((nt m : talﬂi\n\nSYsteI|.oat.pnntIn(va|)§\n}\n\n// uerauun rlassmuz\niur(iy\\t a . 9: i < 3; «+i)(\nsys:u.o«c.p-snunngm);\nJ\n, x Acces aux éléments d’un tableau (2) W‘\n\nAttention, les iterations sur ensemble di  \nest trés. eu mais :\nne permet pas modiﬁer le contenu du tableau\n\n® >\nC’) > ne permet d’itérer gue sur un seul tableau a la fois : il n‘est pas possible de\ntraverser en une passe deux tableaux pour les comparer par example\n\n@ > n  ne peut pas par exemple comparer\nu et\n\nlb\nCD > itére d’un pas en avant seulement. 4”“ H V‘: = KW» 2’ 3'\n\n£5: (Am ﬁg %q\\n){ Erreur : accés avant construction \"\"\"\n\nll est impossible en Java d’accéder a un élément si Ie tableau n’a pas encore été\nconstruit,\n\nLa construction se fail :\n\n> Soit en indiquant Ies valeurs directement dans |‘inslruction de déclaration\n> San en spécifiant Iataille avec new type [taille]\n\nExemgle:\nint[] entiersl = {1, 2, 3); // Dé<:1uxation-initialisation\nentiers1[0] = 4; // UK\nint[] entiers2; // Declaration\n%>entiers2 = new int[10]; // Initialisation\n\nentie1's2 [0]"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/04_tableaux/01_semaine-4-tableaux/05_tableaux-affectation-et-comparaison.mp4",
    "id": 5318,
    "text": " !<'7‘k'\n\nTahleaux : aﬁeclation Bl comnaraison\n\nInitiation 51 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier Types de base I Types évolué (rappel)\n\n  \n\nO-ab\nqY’Q’3;;o'a\n2% ML; 0‘ ”\n’ ‘Aw\n-2 4-. 5 cf BES3 ~3$$© Tableaux : sémantique de |’opérateur == (2)\n\nPour vérifier l‘éga|ité de contenu des tableaux,\nil faut écrire explicitement les tests :\n\n#3 jf (a = M11 ||—|| a.1eng'th != b.1ength) {\nSystem.out.print1n(\"contsnua différenta nu nuls\");\n}\nelse {\nint 1 = 0;\n\nN» uhi1e(  an (aim\n\n++i;\n}\n\n—>ir (1 >= a.1ength) {\nSystem.out. rint1n(\"contanus identiquea\");\n\n \n\n}\n\nelse {\n\nSystem. out .pz‘int1n(\"contenus différenu\")\n> L F[(PKC_J Quelques exemples de manipulation de tableaux\n\nSaisie au clavier des éléments du tableau :\n\n> Il est toujours nécessaire d \n\n*9 far(int i =3; i § talxlegﬁth; ++i) (\nSystelmout.prin1n(\"Entrez 1‘é1ément \" + i + \":\");\ntab[iJ = scannex-.nextDoub1e();\n\n}"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/04_tableaux/01_semaine-4-tableaux/06_tableaux-a-plusieurs-dimensions.mp4",
    "id": 5319,
    "text": " _q§I'rtg_\n\nTalllﬂﬂllll 3 IlIl|SiBlll'S dimensions\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean—Cédric Chappelier ﬁ(\\’|\\'T [ €EPl\\’ I i W’ If?VlI IGPIII («D [,0 Q-’~> , __\n\nIGPIII av>1‘c.o\\«;.§\\ . ._\n\nIFPIII IFHII Parcou rs W‘\n\nLe moyen le plus naturel de parcourir un tableau multidimensionnel consiste é\n\nutiliser des boucles MWHMHEZ\n—~>1.1'°bouc|e:faitvarier|e1°'indice j_‘’{ %—4\\ 2‘ 3 §'é:\nin .93. 4-\n515.4135} 3 6\n\n—I> 2. 2° boucle : fail varier Ie 2e indice\n\nExemgle  \\“”‘)“\"'°\n\n_-pior(irn: 3 1 < y.1ength; +¢i) {\nior(int _j_= 0; j < y[i].1ength; ++j) {\nSystem.out.print1n(y[iJU1); (Hi ' Wk\" ‘ ' ‘EM CIEPHU Les tableaux en Java\n\nEn Java, on utilise :\n\nlaille initiale connue a prioli?\n\nnon our\n\ntaille pouvant varier Iors de ow  \n\nI-utilisation du tableau 7 non tab|eaL:?< de tanlle tableaufx de tanlle\nIXE 1X9"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/05_tableaux-dynamiques-et-chaines-de-caracteres/01_semaine-5-tableaux-dynamiques-et-chaines-de-caracteres/02_string-introduction.mp4",
    "id": 5320,
    "text": " !(|’f_\n\nString: introduction\n\nInitiation 3 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier IEPHI r Ml’ 3 IEPHI Concaténation \"P\".\n\nLes concaténations de la forme String+char constituent donc un moyen trés\npratlque pour ajouter des caracteres a la fl ne chame.\n\nDe méme Ia concaténation char+St:ring permet |'ajout d‘un caractére en début de\n\nchaine.\nExemple : ajout d’un '5’ final au pluriel :\n\n   \n \n \n   \n\n's,e:.+,»~ \"\n\na String reponse = \"solution\";\n//...\n\n-9 if (n > 1) {\n\nreponse =\n\n} 1 WI’"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/05_tableaux-dynamiques-et-chaines-de-caracteres/01_semaine-5-tableaux-dynamiques-et-chaines-de-caracteres/04_string-traitements.mp4",
    "id": 5322,
    "text": " !(|’f_\n\nS tr ing: lfﬂilﬂlllﬂllls\n\nInitiation 5 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier IEPHI Les char d’un String ‘Em.\n\n» Lnnstrucnon cha1ne.charAt(1ndex) donne Ie caractere occupant Ia posmon\nindex dans la String chaine\n\n> L’inslruction chge ‘ indexof (caractéére) donne la Qosition de la gremiére\nocgwe du char caractere dans la String cgagge, E13 Si caractere n’est\npas dans chaige\n\n» chaine1.len th donne |atai||e(c’est»z11-direle nombre de caractéres) de\nchaiuei. Attention : il y a une paire de parenthéses ; différent des tableaux!\n\nI 1 \"\nE,xe,r1mg: FD &c,;,‘.Li .\n-—)Strjng S1 = \"abcmbx\"; m\n\n   \n     \n\n—>int longggeur = s1.1engch(); // 6\n—7 char :1 :53.cnarAt@; // a\na char c2 =§_LcharAt(gogg\\_1_suI — 1,); // x\nam: 5 =E1’.3'ndexDf('}J_); // 1 G X /1\n\nas Les caractéres sont numérotés comme Ies éléments d’un tableau (a partir de 0) substring Im-\n\n. .  1 . 4 ' »~ ~\nchame.substrmg(pos1t1on1, pos1t1on2) :donne Ia sous—chame comprise\nentres Ies indices de positionl (compris) et position2 (non-comgris)\nExample:\n\nzxastring exﬂye :¢§;‘&?éai;;sti’ti:ti6 ’e1;';\n—>string racineﬂot = example. ubstring(4,16);\n\n   \n \n\nconstruit Ia nouvelle chaine \" coustzitutzion\". IEPHI"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/06_fonctions-methodes/01_semaine-6-fonctions-methodes/03_fonctions-passage-des-arguments.mp4",
    "id": 5326,
    "text": " -.\".\" \n\nF0lIl:li0lIS: IIESSEIEIE IIES arnumenls\n\nInitiation 5 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier [MI IIPIII I(1‘llI Le passage des arguments (1) ‘W\n\nConsidérons Ia situation suivante (pseudo-code) 2\n\nstatic void methode(Tme v) {\n// traicement modifiant v\n\n}\n\n// ailleurs, dans le programme principal,\n// par example:\n\nType v1 = .. ; // initialisanon de v1\nmethode(v1);\n\n// V1 ESTAELLE MDDIFIEE ICI DU NON???\n\n \n\nEn programmation de fagon générale, on dira que :\n> |_'argument v est passé par valeur si methods ne peut pas modifier v1 2 v est\nune cople locale de v1.\n> Eargument v est passé par référence si methode peut modifier v1 ‘Le passage des arguments (2) '3\"!\n\n   \n   \n \n \n \n  \n  \n  \n   \n\nll y a done deux \n\nscacic void method ) { // Type :\n// traitement madinant 'objet référencé par v\n// traitement modifiant v 1111 méme (référence)\n}\n\n// ailleur :\nType v1 =\nmethode(;I;2,\n//1. v1 est—el1e Inodifiée ici?\n//2. 1'objet téiérencé par 33 estdl modifié\n// id?\n\nn\n-<:\n-u\n\n  \n\n// initialisation de V1 E‘-\"\"9\n\n \n\nPassage par valeur : type-\n\n \n \n   \n\nstatic void methode(Type v) {\n// craicement modifiant v\n\n \n\n}\n\nType v1 = ..; // lnitialisa '\nmethods (v1) ‘\n\n    \n\n:2? Si Type est un type élémentaire\nIa réponse a la question dans Ie code es- Type évolué : modification de I’objet référencé I-\"T\"!\n\npublic static void main(String[] args) (\n\nint[] tab = {1};\n\nm(tab);\n\nSystem.out.print1n(\" tab[0]= \" + :ab[0]);\n}\nstatic void m(inI:[] x) {\n\nx[0] = 100; // modification de 1’obJet\n\n// referencé par x\n\nSystem.out.print(’'x[0]= \" + x[o]>;\n\n}\n\n \n\nL'exécution de ce roiramme produit Paffichage 2\n\nLes modifications faites dans la méthode sur |’ob‘et référencé restent visibles é\nFextérieur de la méihode !\n\n(on a copié dans x Ia référence tab,"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/06_fonctions-methodes/01_semaine-6-fonctions-methodes/05_fonctions-definitions.mp4",
    "id": 5328,
    "text": " '.‘!’“!\n\nFOIll3li0lIS: lléﬁlliliﬂlls\n\nInitiation 5 la programmation (Java)\nJamila Sam, Vincent Lepetit et Jean-Cédric Chappelier IM- Remarques sur |’instruction return (4/4)\n\nLe compilaleur doil étre sﬂr de toujours pouvoir exécuter un return:\n\nstatic double 1ire() {\n~> Scanner keyb = new scam:er(sgscem.in);\n%double 1: = 0.0;\no '\nSysteIn.ont.print(\"Entrez un nombr  ;\nn = keyb.nextDoub1e():\nwhile (E:\necurngf\n\n}\n\n \n\n‘W! IE|’fl! mm: IE|’flI_ lzmq IE|’flI_ mm; La méthode main Im-\n\nmain est aussi une méthode avec um ma\n\nPar convention, tout programme Java doit avoir une méthode main, qui est appelée\nautomatiquement quand on exécute le programme.\n\nIientéte autorisée pour main est 2"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/06_fonctions-methodes/01_semaine-6-fonctions-methodes/07_fonctions-surcharge.mp4",
    "id": 5330,
    "text": " !(l’fl-\n\nfunctions: surcharge\n\nInitiation 5 la programmation (Java)\nJamila Sam, Vincent Lepeiit et Jean~Cédric Chappelier Ill’llI La surcharge de méthodes : exemple '*‘P~'_\n\n  \n  \n   \n  \n        \n \n\n--7 static void affiche(inc x) {\n_.>sys:em.uut.p{nTt‘1n(\"encsex : \" + x);\n}\n-—*,~static void afficbe(doub1s x) {\n») sys:em.au:.p?iR1n(\"ree1 : \" + x);\n} A A\n9 static void arfiche(i_£_x1, i_xzt?x2) {\n.)Systemout.print1n(“coup1a : \" + x1 + ~_n + x2);\n\n}\n\n(Ax\n3_£;,1che‘(1/), affiche(1.’E)) et affiche(1, 1) produisent alors des affichages\nI eren S.\n\nH -4\nX¢,L\"~.1A.o\n\nz;o».1X:.: /1,4 I(|’llI if (tempsleu 2, mo) { UP\".\nleicore . (int) (me ' Dnints / temsaeu):\n\n \n\n \n\n \n\n}\nreturn lescorzi\n}\n// ...._..._..._..._..._.._\nstatic int saisie£tca1:u1()\n(\n\ndouble nbVaints . o.a;\n\ndo {\nSyste4n.nut.print(” tntrez 1: novrbre dz paints (a-me) :\nnbPaim.s - c1avier.nextDoub|eO;\n\n) vfnile ((nbPoints < 0.3) II (nbPoints > 1001));\n\ndome tenps - e.a;\n\ndo {\nSystem.out.print(” Entrez le temps de jeu (1-so) :\ntenus .. c\\uvier.nextDoub1e();\n\n} mm ((temps < La) ll (temps > 60.6));\n\nreturn score(nhPoints, tenvs);\n\n}\n\n// .._..._..._.....\nstatic void afﬁcheResu1tats(int scurel. int scorez)\n\n(\n\n  \n\nsystem.out.print1n(\" Resuuats ~\"\nSysterlI.aut.Drint'ln(\" Jouzur 1\n5ystem.nnt.Drint'ln(\" Jouaur 2\n\n\" 4 scorn);\n\" 4 score2): \"(WV Wvr \"(WV"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/07_etude-de-cas/01_semaine-7-etude-de-cas/03_puissance-4-premieres-fonctions.mp4",
    "id": 5332,
    "text": " Fonction affiche '9\"!\n\nprivate final static int VIDE\nprivate final static int JAUIIE\nprivate final static int ROUGE\n\nn u u\n\n0;\n1;\n2;\n\n?2‘arricne u pour une case rouge. x pour uns case jaune\nstatic void affiche(inc[][] grille)\n\nfor(int[] ligne : grille) {\nfot(int cellule : ligne) {\nif (cellule == VIDE) £\nSystem.out.print(‘ ‘);\n} else if (cellule == ROUGE) (\nSystem.out.prinC(’D');\n} else {\nSystem.out.print('X‘);\n} }\nSystem.out.print1n();\n}\n}\n\nint[][] grille = new int[6][7];\ninitia1ise(gri11e); I M’ ‘ I TE>'fl' ‘ I M’ Tester initialise et affiche \"'7\"\n\npublic static void main(StringU args) 0 o 433:4\n{ -_ H-_\nint[] [1 grille = new int[6][7]; A uuuuu an\ng,_._.4xD_...‘\ninitia1ise(gri11e); ' _____ __\n——1> gri11e_[_2;L§J : mums;\n———)grill [4] = UGE; “““““ ”“\n\naﬁic rill ; HHHHH H“\n} I M’ Retour sur affiche \"'~\"\"\n\n// affiche u pour me case rouge, x pour mas case Jauns\n{\n\nSystem.aut .pxint1zI()}\n\nfor(int[] ligne : grille) { . \\' mg\n_uSystem.out.print(\" I\"); ‘M’ ‘II %\nfar(int cellule : Hg-ne) {\n\nif (cellule == VIDE) {  I\n\nstatic void affiche(inc[]U grille)  Q|WI700P\nI I I\nI I I\nI I I\nI I I\n\nSystem. out .pr1nc ( ‘_ ');\n} else if (cellule == ROUGE) {\nSystem. out .pxinc ( '0');\n} else { “\nSystem. out .print ( '3');\n}\nSystem.out.print(‘ I ');\n} _\nSystem. out .px‘int1n();\n}\n\n__4>\n_y Sys:em.ont.print\nior(int i = 1; i\nSystem. out .print\n\n     \n   \n\n11e[0].1ength; ++i) {\n+ i);\n\n}\n3SystsIn.ont.print1n( ==\\n\");\n\n}"
  },
  {
    "path": "E:/Coursera/initiation-programmation-java/07_etude-de-cas/01_semaine-7-etude-de-cas/07_puissance-4-methodes-estcegagne-et-compte.mp4",
    "id": 5336,
    "text": " wily\n\nPuissance4:mélnoIIes es tCeGagne el\ncompte\n\nInitiation a la programmation (Java)\nJamila Sam, Vincent Lepetite1Jean—Ce'dric Chappelier —:(\\‘ﬂ\" ' E ‘ml?’ 1 I TEPFIU I “(W 1 Retour sur la méthode main '‘\"'~'''\n\nin cauleurloueur = mums;\nboolaan gagne;\n\ndo {\ndemAndeEtJoue(gri11e , couleurjoneur) ;\n\naffiche (grille) ;\ngagpne : estCeGagne(gri11e, couleuuoueur);\n// on change la cauleur pour 1a couleuz ds 1'autrs jnuenr:\nif (cauleumoueur == JALTNE) {\ncouleunloueux = ROUGE;\n\n} else {\ncou1eu.rJoue\\u' = JAUNE;\n}\n\n} um1a( Igagne); I WI\"? . mm:\nMethode compte \n// :1 (compte(g1'i11e, ligne, colcnna, -1, +1) >= 4 \nstatic int compte(int[] [] grille,\n\ninc lignebepart, int colonnellepart,\nint dirLig'ne, int dirﬁolonne)\n\nint compteur = 0;\n\nint ngne : lignellepart;\nint colonne = colouneneparc;\n\nwhile (gri11e[1igne][co1onne] =: gri11e[1igneDepaIt][co1onneDepart]) {\n\n++compteur;\nligme = ligne + dirljgne;\ncolonne = colonne + dirCo1onne;\n\nN IEPHI Méthode compte ‘ml!\n\n// if (compte(gx111e, ligne, colonna, »1, +1) >= 4 \n\nstatic int compte(int[] [] grille,\ninc ngneueparc, int colonneuepazc,\nint dirLig-ne, int dircolonne)\n\nint compteur = 0;\n\nint ligne = lignehepart;\nint cclanne = colonneneparc;\n\nwhile (gri11e[1igne][co1onne] == gri11e[1ig;1eDepart][co1onneDepart]) {\nMzcompteur;\nngze ligne + dJ'rLig'ne;\ncolonne colonne + dircolonne;\n\n}\n\nu u\n\nreturn compteux;\n\nH IEPHI Retour sur la méthode estCeGagne\n\nif (cou1eu:Case == cou1eurJoueur) {\nfinal int 11gnenax = gri1le.1ength - 4;\nfinal int colonnehax — gri11e[1igne].1ength — 4;\n\nif (\n// en diagonals, vers le hint et la drone:\n(ligne >= 3 an colonne <= calozmeﬂax an\ncompte(gri11e, ligne, colonne, -1, +1) >: 4) H\n\n// lwnzoutalsment, vars la droice:\n(colonne <= co1onneMax uc\n<:ompte(gzi11e, ligne, colonne, 0, +1) >= 4) H\n\n// en diagonals, vers le has at la droice:\n(ligne <: ligneﬂax && colonne <= colonneﬂax an\ncompte(gri11e, ligne, colonne, +1. +1) >= 4) H\n\n// varticalemsnt, ver: 19 has:\n\n(ngne <= ngnenax an\n\ncompte(gri11e, ligne, colcnne, +1, 0) >= 4)\n{\n\nratnm true;\n\n'37\"! IIWII"
  },
  {
    "path": "E:/Coursera/interactive-python-2/01_week-5-mouse-input-list-methods-dictionaries/02_week-5b-dictionaries-and-images/03_visualizing-iteration.mp4",
    "id": 5381,
    "text": " Visualizing Iteration\n\nJohn Greiner\n\n/\n\nJ ;_,_..-. W-.. ;  ...-.M... .  ....,_.._ 4;‘ lﬂrmlnl\n\n \n\n \n\n, -mm, . xm Qi eﬁe sgunxes g: cm mmhaxs )n m. . .\n\nrind‘: u\n. V 1 n 9. numbers:\nxu:u1z.IPpInd(n -4 1r\nH 1.3».\n\n   \n   \n\n‘mm mm mum. 5. -21»\n\n  \n\n \n\nFume; oh;-cu\n\n:...w.\\.. m M ., S<<11 lnowv ... ..\n\n \n\n..m... (.4. xu:u1z.IPpInd(n -4 1r\nxetuxr 1.3».\n\n \n\nFume; oh;-cu\ngm‘ ..u..._u.mu. 5. -21» .... ....4 ,.. :...«m, ... W. w. ..... ...m.. V » ¥lr<| .. M... am... >,.....y.... M...‘=..,. .... v 3.: .._.._.......«...m.\n- -.......... W »... .... an ., .. 0.. 4...... xnnge.\n..»,.... h-um] >. 9 ...a mum — nu ...a nun]\n\nrw E %\n\n BEGIN\n\n3 .. an in 5..\n. dzi . n,_..._.....,...h.u,..\n\n\"';x.x .... . 1... .. tnoau Anya: 5.... EDIE ..= ......... ..\n\n \n\nD\n\n     \n\n     \n\n \n\n   \n\n \n\nmm H Fumes or-nus\n. 5.. .. u .. 2...... _ n_\nH .__}___wb_m: ....... .......... tunccxan .._...,....au us\n. 3....» ..=.==..=m..m .5 ..._....9.\n..m mu , - .....m.. ..u._... nnaeubuxlsi\n‘*~ ’ ha»: \"um-. /\n\n. biHs_m_ra\\ge2 ./x.¢.....m.. ......_...,....m....u..\n\ndef ...u._..._....g.zu..u...\n. .e—,.... :5... fat .,.n .. ...n. .2 ;\n\n  \n\n_....g..u..m1 I\n\n \n\n   \n\n.g..-. ...n. .. .... -zru-5.-W). umox, nmm. nsmum\n\n \n\n:¢..s....... ... ..... ., S<:11 N... ... . .. .............\n\nc.....W ... M... u. Ml ..... ...». .. ...., .... ..4 W... 5.... ......... new\n\n“W 1 (H W,\n\nrum-gs om-M:\n\n \n\n     \n\n.:~-:.- mm_~..\n\n>s,1n_v’1wI .\nem-_wg...-a-x .\num,\" mg.) r ’\n\n    \n\nﬂu. |znu 5 ..«m—. ..-ma...\n\n   \n\ncxvnn 4'. nu. ‘:2’: '=’, '1:' mm\n\n.......g. ——\na mum: bustcm I\n5. ..m.u=\n\nonly = ”\n\nEcx =n .. -Assays:\n\n...-a ~ cxPn:1x|=h}\n\n \n\n1 9,,“ .g.,.,¢, ~...=.a., .9, ..,.,\nL - mm hnlzen\n5.: a.=.,a.u\n\n:ln:g“'\n\n \n\nM Kay, \".1... ... cziuz . Inns“.\n.5 :h vlluuz\n\n;‘ dnsg x.,,\n\n~ \"ﬂccpdmi ~..7-,\n\n    \n\nmm ,.....g. an-my\n«. : Update m .9. mm:\n\n;c 3,: nainggtnsgh\n\nnan: .......q.\n\nnasazge .39\n\n1...; t._ux:(:ugY\n\no c...“ . m... ...a ... an =-xn-1-an m\nm... — .,.9;..,....=x...._:xmu= 9...,-,\nM ..m. */an\n\n   \n\n \n\n \n\n-vunt r..m.m\n4, ma, zoo)\n\n   \n\nmm vnxxnziqn\n\ns<mb\\4guu\ncxvmt\nMme\n\n         \n \n\nmu... ob}-cu\n\n \n\nmm“)\n\n(ﬁn-9\n\n'-=6 I-~=I' mm... mm.»\nluuuun «men\n\ndmsg ~=.~\n\nch ~..~\n\ntunznnn ,..._m.-an\n\nwho -1»\n\n:9..s..m.. _., M .y Sam M...\"\n\n.. llvI0|€~E|M\\rvV|nlSku\\V Vwxmn .... .m.y»...n............. em.».mm..~.w...‘......."
  },
  {
    "path": "E:/Coursera/interactive-python-2/02_week-6-classes-and-object-oriented-programming/02_week-6b-tiled-images/02_visualizing-objects.mp4",
    "id": 5387,
    "text": " {\n\nVisualizing Objects\n\nJohn Greiner\n\n/\n\n4 =2... p.,..=s=\n\n       \n \n\nx.\n\n \n\n:u1f.=ward: :\n\n \n\n.=;.m...m;\n\n \n \n\ndef n=_=:mnsu=1E, inﬂux, M...“\n\n  \n \n\n \n   \n\nszli .m.4m.au: value 3\"“-\ndzf .,.._cmm.m, n9dex)' Fr-mes umecu\nrecur)’. .m.mm..na.x1\nmun-x m...x.. ».,‘.=..<u.\n\n  \n \n\n--, eawrdxn-Kc: — n. 51\n.=.;...a¢=.m,..m;\nP:un:3(=m:Kﬂ1nn:elY\n\n   \n\n    \n\n \n\nm...sm. sn v .\n\n  \n \n\n \n\n:{ ,,.,u_=..,am, In)\n\n  \n \n\n,, .m.~_ p.ga:_:eaxd(DY\nFun: a.-;.=A=mam:\nprim: x.ga:_=caxdLD)\n\n \n \n\n    \n\n \n\n  \n\n..= .m....w. uM.4......m.,WY......M...Wm.»....m._..‘.v.‘.m.... . L 3:1 .:uA(A![il\\deX] valua Elm-\n-y =aw:dn\\ m — n. 51 mm _V '__ ’ “\n, _.m, M\nprint. x.ga:_=auxdm) a h '\nPomnmslnnu\n\n \n\n:...s»w. ... M. ., San ... ~ bvulv A def :u=_=:m:d(I=lE. inﬂux, M...”\nL ,m.=m.4;rs.au1 = valua\n\ndzf .,.._mxay.m, nvdax\nmm. l¢lf.==wxS:hn\n\n \n\n'1 ==.m...;.. = n. 51\n.=.;...a¢=..m..m;\n\n!:vin:3(=w:vrd1nl:ulY\n\nmusu-, sn\n\n \n\n,: ,,..u_=..mn, nu)\n\n, print p.ga:_:eaxdYDY\n.u Prnwr I-9-=_=;mxdu7)\nprint. x.ga:_=c=xd(D)\n\n    \n\nEND\n\n \n\nFulms\n\nsxannx vnxx-Ila!\n\nmm\n\nzaavdlna\n\nznnvﬁnilu\n\nRemm\nxaue\n\nI1:\n\nNun:\n\nunjecu\n\npm. .1“.\n\n \n\n»g....1\n\niaﬁii ~\n\n:...w... ... M. ., S<n1 ... ». .....u . » L 3:1 .:uA(A![il\\deX] valua Elm-\n-y =aw:dn\\ m — n. 51 mm _V '__ ’ “\n. ' ’ ’ In\nprint. x.ga:_=a=xdm) ‘ ‘\n\nW W\nM Pomnmslnnu\n\n \n\n:...s»w. ... M. ., San ... ~ bvulv II D\n\n \n\n  \n\nA class mm\n\n. 5,: _;m/um, =.m,......:\n\n..n.=ma. = m».«mm...:..;\n. def :u=_=:m:d(I=lE. inﬂux, M...”\nK ,.u =m.4m.au1 valua\n. def .,.=_=may.m, mm-\n\nmm. ..n.=me.ma.x1\n\n1 =ma;...;.. = n. 51\nm...m.,m,....,;\n\nm..m=maa...e..»\n\nFeinuﬂlll. in\n\n \n\n_t ,,..u_=.mm. In)\n\ngrin: ,,..,.._mx.-1m\nFun: I-9-=_=;mxdu7)\nprint. x..,.=_=mayo;\n\n    \n\nsssm\n1°\n.\nW\n=..m...$ ’_\\\n\n \n\n:...w.r— ... MAR » y... ... ». s....\n\n.. ;., mm... W.‘ W M...\n\n‘. N W Y... \"4 M... ’:n7mn »....m.... w...m.n... ."
  },
  {
    "path": "E:/Coursera/internet-of-things-sensing-actuation/03_terminology-cheat-sheet-beginner/04_lesson-3-supplemental-material-beginner/02_java.mp4",
    "id": 2834,
    "text": " 1 | Java (oop)\n\nAdvantages Disadvantages\n\n0 Code reuse/recycling ° Size ' V9\"Y W99 P\"°9'a\"‘5\n. Encapsmaﬁon o Slower than other programs\n\na Design Benefits\n\nExample:\nI can have an animal class. A dog would derive from an animal class, as would a cat. I\ncan ask each animal for Ils age, size, etc. This info Is identified as common among both\n\nanimals.\n\nI can deal with animals using common methods such as speak, eat, etc. I can add a\nnew animal later such as a parrot and most of my code would still remain unaware of\nthis addition. The implementation of parrot worries only about parrot particularities,\nwhile I can continue to derive the commonalities from animal class. 3 §R6\n\nJ .i'§ . Mmr-non among W 1 | Java\n\no Object Oriented\n\n0 objects - things that do something; has some kind of behavior, has some\nkind of behaviors (i.e. states)\n\na Android Development ( _\n«:2 Java\nj\n\nc Many libraries available\n4;\n\nu Documentation: http://docs.orac|ercorn/javase/7/docs/api/overview-summam\nhtml\n\no Many teaching resources"
  },
  {
    "path": "E:/Coursera/intro-programming/01_your-first-computer-program/05_introduction-to-selection/01_selection.mp4",
    "id": 5411,
    "text": " E\n\nSE’\n\n4-I‘-(D\n$80.; 0\nanus 9\nIII\nI\n\ncode yourself ! F ,\n\nmove mm steps\n\nif an edge, bounc. SELEUION\n\nSHE4<~SNJi'i n\nSelection invoives the use of\nconditions to control the ﬂow\nprogram and make decision .1‘, THE UNIVERSITY UNIVEURSIDZ/\\D 0R1-\nofEDINBLIRGH '\"‘\"’““’"
  },
  {
    "path": "E:/Coursera/intro-programming/01_your-first-computer-program/05_introduction-to-selection/03_conditions-within-selection.mp4",
    "id": 5413,
    "text": " . F>|ay\n“ Create\n.. program 2 yourself ! E\n\nSE’\n\n4-I‘-(D\n$80.; 0\nanus 9\nIII\nI\n\ncode yourself ! soomw    H BOOLEAN WHAT IS YOUR FAVOURITE EOLOURR\nHOW OH) 15 RUHNR\nWHY DOES ARERI LIVE IN [DINBURGHR\n\nWHEN IS YOUR PARRY? THE UNIVERSITY UNlVEURSlD{\\[) onu-\nafEDINBURGH \"\"‘““’"
  },
  {
    "path": "E:/Coursera/intro-programming/02_code-gone-loopy/03_birthday-card/02_birthday-card-cake-behaviour.mp4",
    "id": 5429,
    "text": " 4.:\n‘U\nCD\n9.\nU.)\nL\n\n>%’\nEa:\nas\n\ncode yourself !\n\nI: Program E\nSE\n<v?2°3\n O0\nEBII ».\n.:I\n\ncode yourself ! BIKIHDAY (ARI) PROGRAM\nBUTTERFLY DIALOGUE ¢ S(m:>\\20mlneEmIav\nQ1755! f run nu ms na-\n\n[-1 Unwed\n\n      \n \n\n..««v\n\nsnmn rwwsvme 6 / «:1 I\n\n‘1 S(m:>\\20mlneEmIav\n\n     \n \n\n::r_2aor..~....y.......\n\nmm: 9'/am Umukq\nh . SQ\n‘I45\n\n \n\nShine)\n‘ Iv . ,.\n-.\nV E\n§\n\n1:‘ E/GI ...«mx.\n\nmsm 9/an\n\n \n\nE/GI E/GI Cﬂﬂ 0 no luv 1., mm\n\n    \n \n\nSwk-3  ;)‘.'a’.‘\nr\"”W .08\n_g.___ I.-II .....w\n\nE/GI . l4V AI .\nSMK-3 WW 9 / (3 n\n\nE/GI Swk-3 mm Um L 4\n\nE/GI Erzm 0 ...~ E... ... .....\n\nE‘-I Unmieo p . saws\n\n \n\n \n\n. .,y -. ‘\nNewspvre 6 / A Q\n1:2» \"W\nE73\". C='.“.TrZI I no E... was A...\n\n[I] Unmieo swm\n\nN\n\n_ U, .44\nmwsome 6/QII\n\nHm‘ ‘\n\n.....w\n\n \n\n|\"I[||[El| HM” Sm. MWSPIM 371:”; ‘\n\nrim‘ ‘\nTI umm\n\n..i''..\n\nE/ﬁﬂ\n\n3\nE\n1\n—\nnj éam 0 Mn mv Va; A... ; +:::: 0\n\n \n\nSwlh WW 9 / «D a\n\nram‘ ‘\n3-H ...m~\n\n.35.\n\nE/ﬁﬂ\n\nI\nI\nI\n1\nTHE\n1\nI\nI\n_\n‘\n-\nZIE\nI\n1\n—9 saws\n[-1 mm F .\n\n. ..u v ‘--\n\nmm. 9/can {I3 Unwed p Q 54\"“\n\nSD06 Wm 3 )1: S ‘\nh\n‘I .08\n:72; Ei ﬂ n-v mv ms nu.- {I3 Unwed p Q 54\"“\n\n..4,,.\n\nsome wsm 6 / «a I\nh\n‘I .08\nE72“. ..4,‘.\n\nSame: WW 9 / m g . M .. .\nSWK1 N¢WSpVﬁB o / m n I-; mm 1- 0 \n\n \n\n,.., .. ‘\n\nSwk-3 mm 6/ m a\n\n \n\nH\n1 .‘B\nE733 1*\n\nmm: 9 / mg Suaxehz OHM: in m. — 5 L\n\nBackdrop Library\n\nAl!\nmums\navnwuvs\n\n7\"‘ Am! p ,...‘\n\n. W\n\n‘ Wm:\n\nnmdlv '\nMun ma gm: - V\n\nN,“ no 4 av1>lm's wmm~ V v :2)»\n\nSpare\n\n HIDE-\n\n,«v, Ha»; an H Hv\\1!: At.\n\néHE@ME Backdrop Library\n\n \n\nSc-l1:hZONneEdvla:I\n\n\n\nH-ma-Bil\n\n“‘f“'   W‘! \n\nl.4lQl—f.»a Suaxehz OHM: in m. _\n\nBackdrop Library\n\nAI!\num:\nUvnwms\nWM‘\n\nﬂ nil ‘\n\nNam:\narm\n\nxx ﬂ ha,\n. 5} PO\n\n   \n \n\nswm\n\nmum.‘\n\nPi/én\n\n-o 0 an\n\n.Inn /\n\n\\\n\n \n\n \n \n\nH) 9\n\nI-<> -IOU/\\Jv=\n\n«=1:\n\nmm. mm.\nmm mmau E WW F. ‘ swm\nmum.‘ T\n\n \n\n \n\n‘E /é - '1 0 on Am: mm H) 3 u\nrk\n3 7 b I\n‘ ' \"2: \\\n. - D\nT\nE 4%. O\n- 2\n  9 / I: n ‘\n   mm\n27:: u - -- / x = = a\n\n| Mu-A:\nn , i .. F. ‘ smw\n\nmu-«.4\n\n \n\nmy Am: mm Nb?\n\no-o -IOU/~ Jvﬂ\n\n«=1:\n\nmm. mm.\nmm mmav maw\nInwnoamr\n\nE M. T -, 0 W  W.\" nae L‘\n\n \n\nI-0 -IOU/\\}‘=\n\n    \n\nSW, W W 9 / :1 g\n272.”. 3;}\nW Mu-A:\n\nmm” mmap ‘ “mm\n\nmu-«.4\n\nE/éﬂ\n\nV,\n\nwe on Am: mum\n\n$4\nIv\n\n \n\nI-0 -IOU/\\ Jvﬂ\n\n \n\n \n\n«=1:\n\nmm. mm.\nmm” ‘WWII? Cﬂ'ax\"ﬂOrI-vnnvvum-I\n\n  \n\n   \n\n   \n\n,5. ‘ \n\n   \n\n:ﬂ'=* -o 0 W  mum on :2 0 L‘\nA\nI\n\\\nD\nO\nT\n0\nJ.\nW   U I: A ‘\n£72.”. °\\;_f‘\nv..,..m.\n\n \n\nmm” ‘WWII? ‘ mm.\n\nIwanaunr\n\nE/é\n\n  \n\n-o (I Uuv W. mm 2134 ‘\n\nI-9 -IOU/\\Jv=\n\n \n\nIll! / \\ I = 4:\n,_ W\n\nW W.\nW, i __, \"ARHf' ‘ ‘ \"\n5:3”\n,2’ /.\n\n \n\n‘ \"“'I\"’-pf\n;.r ‘r THE UNIVERSITY UNlVEURSID{\\D 0R1-\nzy’EDINBLIRGH ”\"g““’"
  },
  {
    "path": "E:/Coursera/intro-programming/02_code-gone-loopy/03_birthday-card/03_birthday-card-extend-with-if-then-else.mp4",
    "id": 5430,
    "text": " 4-:\n‘U\nCl)\nD.\n(U\nL\n\n>*%’\n£0\nas\n\ncode yourself !\n\nI: program E\n813'\n.u'é°8\n 0\nans: 9\n‘II\nI\n\ncode yourself ! :2 mm. 2 Omme mm\n\n \n \n\nvan-1 3+\n\n{-1 unnnm F o may\n\n{I} Unwed\n\nnuuvmuu\n\nPO\n\n-1+\n\nsum 2 mm em. 32¢.\n\na [I] Unwed\n\n \n\nEH E:azazn........m»-4\n\n \n\n \n\nswag ,...W e 2 ‘avg ‘ WW:   u‘ n I-\n«I-\n\nmm o .... .. ,. ..\n{-1 um F o \n\naasuaa-uuewgseastf:\n\n \n\n  o 2 L .. I-\n«I-\n\nmm o .... .. ,. ..\n{-1 um F o \n\n5 U8  I\" 383  5999 \n\n \n\nW, Wm o } Va‘ 1: ' mwsmue 0 / H\n\n_\n_\nw\n.._\n\nI Urviruud\n\n \n\n:5/an ‘@CII-vzavvnn-u &+7€}(I\nPC ‘ ‘ '\n\n[I1 Urvmw [I1 Urvxuw\n\nimzrsaon.-z..~....... a.+::..t\nI-0 ‘ ' , [I] Urmned [-1 unnnua F O “\"\"‘\n\nEm-;_g..........,.... ;+ 0\n\nti Emtaon.-........\n\n{I} umnm {-1 um, 1- 0 \n\nmt’-Elna--nu-vpsuu ;+“ 0\n\nI’ I‘ ~\nI u N\nW” M\n_\nW\nm\now.\n$3 [I] unumm\n\n2/an Eaﬁaomvmvmu .1.-H:::o\n\n{I} Um-um 1 um-Am F O Eaﬁaomvmvmu .1.-H:::o\n\n{I} Um-um E675.-Q0»-vm-Inn-I J-$24310\n\n{I} umm\n\n   \n\n w\nW, Wm »: / a n %\n\n \n\nMy [I] um-mm\n\n.m'aL==lQn.vu-v..»~ :.+:¢..o\nPO Eﬂliflln--zavvo-nu Eﬂ1ETlQn..zq.y..n-.4\n\n   \n \n\nsame;\n\n''’‘‘!!i\n\n  \n\nE/an E/Ii.\n\nmu .. ywv\nnmnu!\nM... «\n\nmvsume 6 / {H In mmc.............. .1.-+2:\n\n1-: um 43 . \nT\n\n   \n   \n   \n   \n\n \n\n  \n\n M. 3 2' la 5 ‘\n7\"‘! \"n\"!\n\n \n\n..,. %\n97:”: %\n\n% q=n\n--._ mane\n\n[-3 umuea 4! 9 ‘W\n\nK ,,,.... J.-#1:. u ywru “-\nmm\n\n \n\n3/an 7'‘!\n\nsun\n\nsame,\n\n1!!\n\n3\"‘!\nﬂﬂ\n\nmom: 6  «A n\n\nat same,\n\n'11?!\n\n3/an ‘m,mo-=.~w....... a.+::::o\n\n{-3 unm 45 Q \n\n       \n\n.‘ 7:\n3%‘\n1\n\n\\\nIt\n\n \n\nW, MW e Z a n\n\nLﬁﬂ |\n\n   \n\n2:; %\n52”: luau {I} Unwed ymtaomu-...... a.+::::o\n\n{-1 Unwed Q -\n\n   \n \n\nrm‘   3)}: n‘\n(1?\n\nam. 3/an man:\n\n[I] unmm m!'a‘:'.!u-a.-«nu.- a.+::::o\n\n[.3 MW . mm\n\n    \n\n \n\nway u. ywv\nnmnu!\nvmmlu 1\n\nsome: SDHV5 e / (‘A n\nF\"! '1'‘?!\n£73\": man:\n\n[I] mum QEEIII-'uvIh:nn &'§~2¢HO\n\n{-3 mm 9 s \n\n     \n\nAté REED»:-vu-vm-an Emmi-a-v-um.-m a.+:¢::o\n\n[-3 ummm 9 $‘\n\nI \nI\n\n  \n \n    \n\n \n\n« 3 2 la n ‘ %\nIE!\n\n  \n\nEmma u an an w. an\n7''‘!\ng\n$/::: ‘mE,..,........... a.+::..o\n\n[-1 unwm O “\"\"‘\n\n-is _...Q\n\nm .\ntin. 4\n\n- -1 +_\nV af\n\n”. 1*‘,\n“.4. .4‘ VERSION 2 Tl-ll} LINIVERSITY mm m_..m;..\\u utrr\nL:}fEr)”\\IBL\"{(1l’{ \" '”“'“'>‘ THE UNIVERSITY UNlVEURSlD,:\\|) ORT\ng’EDINBURGH ”“\"“’"
  },
  {
    "path": "E:/Coursera/intro-programming/02_code-gone-loopy/05_software-requirements-design-and-implementation/01_software-design.mp4",
    "id": 5433,
    "text": " 4.:\n‘U\nCD\n9.\nU.)\nL\n\n>%’\nEa:\nas\n\ncode yourself !\n\nI: Program E\nSE\n<v?2°3\n O0\nEBII ».\n.:I\n\ncode yourself ! SOFTWARE DESIGN\n\nZ SUHWARE DESIGN\n\nSoftware design involves\ndescribing ail aspects of the\n\nsoftware to be built, such as\nthe user interface and the\nfunctionaiity of the software. USER INi[KFA[E\n\nThe user interface is the\nmeans in which the user\n\ninteracts with or controls\nthe software application. ‘ES FRESSENG THE GREEN FLAG\nME THAT IS NEEDED? -IS RRESSING IHE GREEN HAG\nALI IHAI IS NEEDED?\n\n-IS IHE USER GOING I0 BE\nRRESSING KEYS, EOR ERRMPIE I0\nIUNIRUI AN UBIEIIR\n\n-IS IHE USER GOING I0 BE\nUSING IHE I/IMERA?\n\n—/INDWHAIIEHE/SHEDOESN’I .\nHAVE A [AMERAR . -TS TT [LEAH WHAT T3 ETPETTTD\nFROM HIM/HER?\n\n-[AN THE USER EASILY GUESS\n\nHOW TO TNTEHATT WITH THE\nPROGRAM? \"DE(0M|’0SITION\" THE UNIVERSITY ””'V*i,“:,';::,\" °'“\nqf EDINBURGH"
  },
  {
    "path": "E:/Coursera/intrologic/02_Lesson_2_-_Propositional_Logic/01_2.1_Propositional_Logic_1_min.mp4",
    "id": 3161,
    "text": " Introduction to Logic\n\nMichael Genesereth and Eric Kao\nStanford University Session 2\nPropositional Logic End of video"
  },
  {
    "path": "E:/Coursera/intrologic/02_Lesson_2_-_Propositional_Logic/02_2.2_Syntax_7_min.mp4",
    "id": 3162,
    "text": " Compound Sentences II\n\nImplications:\n\n(P => rt)\nThe left argument of an implication is the antecedent.\nThe right argument is the consequent.\n\nReductions:\n(4 = p)\nThe left argument of a reduction is the consequent.\nThe right argument of a reduction is the antecedent.\n\nEquivalences / Biconditionals:\n\n(p©q) Propositional Languages\n\nA propositional vocabulary is a set/sequence of\nproposition constants.\n\nGiven a propositional Vocabulary, a propositional\nsentence is either (1) an individual proposition\nconstant or (2) a compound sentence formed from\nsimpler sentences (as previously deﬁned) and that' s\nall.\n\nA propositional language is the set of all\npropositional sentences that can be formed from a\npropositional vocabulary. Exercise End of video"
  },
  {
    "path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/01_getting-started-with-bluej/02_why-use-java.mp4",
    "id": 5479,
    "text": " Why Use Java?\n\nDuke Hello Around the World\nOlé mundo C/u lCEl;t1’2“aE'?'~\n\nHello world\n(c) g\n' ,  w\n\nL/~* Y£lCl oou Kéopog\n\nJava.» Hola mundo >\n\n3p,paBcTBynTe Ml/1p\nDukc"
  },
  {
    "path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/02_variables-and-mathematical-operators/04_variables.mp4",
    "id": 5483,
    "text": " Variables\n\nDuke int x:\nint y: int x:\nint y: xw.\nCt\nnn\n11\n\nD.t.1.1.<£ mm x\nint y:\n\nDuke xv.\nct\nnn\n1; int x:\nint y: xw.\nCt\nnn\n11\n\nDuke int: X:\n\nint y: mt x\nint y:\n\nDuke int x: X v\nint yr mt x\nint y:\n\nDuke int x: X v\nint yr mt x\nint yr\n\nDuke. int: X:\n\nint yr mt x\nint y:\n\nDuke int x: X\n\nint y: mt x\nint yr\n\nDuke int: X:\n\nint yr int: X:\n\nint yr mt x\nint yr\n\nDuke int x: X 7\nint yr int: X:\n\nint y: int: X:\n\nint y: mm x\nint y:\n\nDuke »int x = 4.‘\n\nint y = 6: ma\n__\n\n‘hm X\n\nint y =4.‘\ninty=6:\n\nint x\n\n \n\nDuke ‘hm X\n\nint y\n\nn 4:\now.» »int x = 4.‘\n\nint y = 6: A...\n__\n\nx\nc\nn\n.1\n\nm\n__\n\nint y\n\n \n\nDuke intx=4.'\ninty=6:\n\n \n\nDuke int: x\nWm y\n\nn «I\nown 47\n\nint: x\n\n6:\n\nint y\n\n \n\nDuke intxgh\n\n*1nc y ‘ 5’ »int x = 47\n\ninty=x+2?\n\n \n\nDuke intx:4;\ninty=x+2?\n\ni.ntz=y—x.' ‘hm X\n\n \n\nDuke 4:\n\n‘km X\n\ninty x+Z?\n\n=y—x;\n\nint 2\n\n \n\nDuke *1“: X\n\n=4?\ninty=x+2?\n1ncz=y—x.- int x\n-51“ y\n\nint 2\n\nx+2;\n\ny—x: 4:\n\nint x\n\n \n\nDuke 4? x 4\n\nint x\n-51“ y\n\nint 2\n\n   \n\nDuke int x\n‘hm y\n\nint 2\n\nx+2;\ny—x: intx:4: X 4\n¢inty=x+Z:\n\ni.ntz=y—x.' int x\n\nint y\n‘km 2\n\nx+2;\ny—x: 4:\n\nint x\n\n \n\nDuke 4:\nx+2;\n\nlnt X\nint y\n\n=y—x;\n\nint 2\n\n \n\nDuke Duke int x\n\nint y\n‘km 2\n\nn\n.l>\nx\n\n»\n\nx+2;\ny—x:\n\n \n\nDuke Duke intx:4; X 4\n\nint y\n‘km 2\n\nx+2;\ny—x:\n\n \n\nDuke Duke intx:4: X 4\n\ninty=x+2:\n'intz=y—x.' V 6\nz 2\n\n \n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/04_classes-types-and-for-each-loops/01_classes.mp4",
    "id": 5487,
    "text": " Classes\n\nDukc High-level concepts of classes and objects a\nt\n3\nD Object\n\nData + Code publxc class Point 1\nprivate int x;\nprivate int y;\npubllc Polnt(int startx, lnt starty) 1\nX = startxi\ny = stzatty;\n1\npublic int getX(J ( return x; }\npublm int qetYH ( return y; )\npublic double d1stanCe(Poim: otherP() (\nxnt dx x — ot:herPt.getX(|;\n\n \n\nInt dy — y — otherPt.getY();\nreturn Math.sqrt(dx « dx + dy ~ dy);\n\npublic static void main(Strin<Z[] args) Decqaraﬁgn gf\nPoint pl new Point(3,4); astanc\nPoint p2 new Point (6,8): math“,\nSystem.out.printlnlp1.dis(ance(pZ)) main p3's x =5, which is 4 from me\np3's y = -4, which is 5 from me\nsqrt(I6 . as): 7.2\n\n \n\np1 = new Point(1,2)\np2 = new Puint(-3,0)\np3 = new Point(5,-4)\n\np1 .distance(p3) ‘pl: (1,2 ‘"
  },
  {
    "path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/04_classes-types-and-for-each-loops/02_new.mp4",
    "id": 5488,
    "text": " New\n\nDuke pubnc class pom: <\nprivate 1m: x.-\nprivate JnL y;\npublic Pointunt scartx, xnt starty) (\nx = startx;\ny = scarty;\n\nJ\n\npublic int geI:XH 1 return x; y\n\npublic int gemm ( return y.- 3\n\npublic double discancexpomn otherP\\:D (\nint dx x — otharPt.qet><();\nLnn dy y — otherP:.getY():\nreturn Math.sqr\\:{dx ~ dx + dy ~ dyl;\n\n \n\nI\npublic static void main(Strin<][] args) I\nPolnt p] = new Po1nt(3,4|;\n‘Pom-AI: p2 : new Po1nr.(6,87:\nSysr.em.ou:.prinI:lnkp1.d15\\:ance (p21);\n1\n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/04_classes-types-and-for-each-loops/03_methods.mp4",
    "id": 5489,
    "text": " Method Calls\n\nDukc puhllc class Palm’. 1\nprivate m: x.-\npxxvate xnt y;\npumm vomum: startx, Lnt starty) (\nx : 5La:Lx7\ny — starry;\n1\npunnc m: gezxn 1 return x.- ;\ngwunllc Jnt gecyn 4 return y; >\npublic double d1s(ance1Po1nt or.herE't) 4\nInt dx : x - uche:PL.qe(X().'\nxnt dy = y — ozherPL.qe:Y1)7\nreturn mazmsqzuqux - dx 0 dy - dy);\nJ\npul711c statxc mm ma1n1S:r1ng[] argsy (\nFoxm, p1 = new Po;nr,13,«‘n;\nPolnr. p2 = new Polnl (6,8);\nSy5:em.ouf..pr1nt1n1p1.d1s(anCc(pZH:\n\nDuke\n\n \n\n \n\ny 4\nX 6\ny B"
  },
  {
    "path": "E:/Coursera/java-programming/02_fundamental-java-syntax-and-semantics/04_classes-types-and-for-each-loops/04_types.mp4",
    "id": 5490,
    "text": " Duke\n\nTypes 3 DA\"\n\\ ' .\n050$ {Q6\n«:3 Q 3\n/  \\\\e\nx / F\n,0 9 J.1eRe5°ub ¥ +\n059 Ce 1‘, ‘\n9 y\n\n   \n\nYou've seen some types: int, Point, Fi|eResource...\nBut what is a type?\n\nDuke Types: Interpretation + Operation\n\n. Everything is a number!\n\n0 Specifically, represented as hits\n\na But not all numbers mean the same thing\no Types specify\n\n- Interpretation: what does a specific\nnumber mean?\n\na Operations: what can you do?\nn And how should it be done?\n\n \n\nDuke Interpretation\n\nsomeFunctio\n\nO1l0l01l01010101011l0101\nOOOOOOOOOOOOOOOOOOOOOOOO\n1010l01010l101l00O1010l0\n010010011001011000O00010\nOOOOOOOOOOOOOOOOOOOOOOOO\nl0llO1101ll0O0l010101010\n\n \n\nHammmw\n\n0 Type specifies interpretation\n\no If x is an String, these 15 and 05\n\nmean the location of the object\nDuke Operations\n\n. Types also specify what operations\n- Consider: x + y\n0 Ifx and y are both int:\n- Legal: does integer addition\no Ifx and y are both String:\n- Legal: does String concatenation\no Ifx and y are both Points:\n\no Not legal: + is no a valid operation\non Points\n\n \n\nD.1.1.l.<.e. Primitives Vs Objects\n\no Objects: String, Point, Shape, any\nclass you write yourself, \n- Reference (arrow) to object,\n\na Can invoke methods, access fields with\ndot\n\na Can be null\n\n- == checks if arrows point at some\nobject\n\n \n\nD,I.1.1.<,<:"
  },
  {
    "path": "E:/Coursera/java-programming/03_strings-in-java/02_finding-all-genes-in-dna/04_while-loop-syntax-and-semantics.mp4",
    "id": 5505,
    "text": " Improving the Gene-Finding Algorithm\nWhile Loop Syntax and Semantics\n\nDuke While Loops: Back to DNA Code\no While loop basics\n\no Syntax: grammar\no Semantics: meaning\n\na Now can use to implement algorithm\n. Back to DNA\n\n \n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/01_implementing-the-caesar-cipher/05_counting-loops.mp4",
    "id": 5544,
    "text": " Implementing the Caesar Cipher\nCounting Loops\n\nDuke Concept Review: Loops, Indexes\n\n0 You've used different loops in solving problems:\na Finding Codons or Tags in a String\no while (true) (... break ...}\n0 Reading lines from a FileResource\no for(String s : fr.lines ()) (. .}\n0 You've used indexes to access strings\no \"cgatga\" .indexOf(\"atg\") ;\no \"cgatga\" . substring (1 , 4) ;\n\n \n\nDuke Accessing Characters in a String\n. The reverse of \"CGATTA\" is \"ATTAGC\"\n\n0 Useful in genomics to process strand this way\n0 Palindromes can be source of fun\n. Haman i<a6aH Ha 6aKna>i<aH\n. Alli trota la tortilla\n. Eh, ga Va. la vache?\n\no Draw, O Caesar, erase a coward.\n\n \n\nDuke Indexing a String\n0 Must understand for loop with three parts\n\nSeparated by semi-colons\n\nInitialization (happens once, before guard)\n\nGuard, evaluated before loop body\n\nIncrement, executed after loop body\n\npublic §tring7reverTse(String s){\nString ret = \n\nfor(int k=0; k < s.1ength();‘{\nret = s.charAt(k) + ret;\n\nreturn ret;\n\n} 1\n\n} \\ . Continuing with Loop Tracing\n\no Continuing with tracing reverse(”pit”)\n\ns —|—>|p]it\n\npublic String r‘ever'se(Str'ing s){\nString ret = \"“;\nfor‘(int k=0; k < 5.1ength(); k += 1){\nret = s.charAt(k) + ret;\n\n1\n-’return ret;\n}\n\n \n\nV Duke \\ !.3_l.J.1.<..<:\n\nIdiomatic For Loop Idiomatic For Loop \\ \n\nIdiomatic For Loop Idiomatic For Loop\n\no Many programmers use i as index variable\n\nfcr'(int i=0; i < s.1.ength(); i += 1)\no Many programmers use i++, not i += 1 ,\n\nfor(int i=0; i < s.1ength(); i++)\n- Sometimes declare variable before loop, ‘ ,\\.\n\nso scope extends to after loop\nint i;\n‘For'(i=@; i < s.1ength(); i += 1){\n}\n\n// can reference value of i here\n\n \n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/02_breaking-the-caesar-cipher/05_developing-an-algorithm.mp4",
    "id": 5554,
    "text": " Breaking the Caesar Cipher\nDeveloping an Algorithm\n\nDuke Counting Occurrences\n\nHi, do yll want a lollipop today?\n\nI own many good flavors,\nbut banana is outstanding.\n\n \n\na Code to scan text and increment counter\n\n   \n  \n\n{9,2,o,4,o,1,2,1,5,o,o,4,1,7,1o,2,o,1,3,5,3,1,2,o,3,'\n0123456713.. 14 232425\n\"ABCDEFGHL. O XYZ\"\n\nDuk: Counting Occurrences with Code\n\nString alph = \"abcdefghiji<1mnopqrstuvwxyz\";\n\nintlj counts = new int[Z6];\n\nFor‘(int k=0; k < messnge.'lengi:h(); i<++){\n\nchar ch = Character.toLowerCase(message.churAt(k));\nint dex a1ph.index0F(ch);\n\nif (dex ! ~1){\n\n   \n \n \n\n  \n\n0 Scan message, if character is alphabetic:\n\nu Find location in \"abcdefghijkimnopqrstuvwxyz“\n\no Use index to increment one of 26 counters\n\n \n\nDuke From Algorithm to Code\n\npublic String decrypt(Str.-ing encrypted)(\nCaesar.-Cipher cc = new Caesarcip-hex:();\nint-,[] freqs = countLetters(encrypted);\nint maxbex = maxIndex(freqs);\nint dkey = maxDex — 4;\nif (maxbex < 4) (\n\ndkey = 26 - (4-maxbex);\n\ne\n\nn Count 26 frequencies of 'a'—'z', 'A'—'Z'\n\no Find largest value, assume it's ‘e‘\nc Find distance from ‘e' which has index 4\n\nDuke u Use 26-distance to decrypt using encrypt! Values, Indexes, Details\n\no Array freqs has relationship between\nindex and value, freqs [8] is how many\ntimes 'i' occurs\n\n- When looking for maximal value, return index,\nuse to find distance from 'e' or 4 as shift\n\n0 Using the CaesarCipher class makes writing\nCaesarBreaker easier\n\na Call methods that work rather than rewriting"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/02_breaking-the-caesar-cipher/06_summary.mp4",
    "id": 5555,
    "text": " Breaking the Caesar Cipher\n\nSummary\n\n.Du.k.e Arrays: Indexed Collections\n\na String[], int[], StorageResource[] or\n\no One variable represents “many values Using Arrays in Java\n\n \n\nD.u.l.<,e. Duke\n\nUsing Arrays in Java\n\nCreate storage when program runs, the\nsize of an array can't change, values in\narray cells can change\n\nString[] names\n\nnew String[100];\nnew int[2048];\n\"Zeus\";\n\nint[] counters\n\nnames[5] = Indexing Array Elements\n\no Typically use for-loops with indexes\n\no Sometimes build methods to solve problems\n\npublic int indexOf(String[] ltst, String word) {\nfor(int k=0; k < list length; k++){\nif (-.equa1s(word)) {\nreturn k;\n\n  \n\n}\n}\n\nreturn —1;\n\n}\n\nDuke Cracking Codes\n\n- You used arrays to crack a Caesar cipher\n- Counting frequencies, using indexing\nu Both encrypt and decrypt used indexing\n\na Internet encryption is more secure\n. Be careful!\n\n   \n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/01_introduction.mp4",
    "id": 5556,
    "text": " Object Oriented Programming\n\n. Java: Object Oriented Language\n. What does that mean?\n\nu Encapsulate code and data\n\nObject = Code + Data\n\n f ; Fields Familiar: String, lmageResource, \n\n- Familiar example: String\no Data: sequence of characters CTACGATGCCTGATGA\n\no12345s7B9a12345\n\no Code: indexOf, substring,...\n\ns . 1enqth() 15\ns . indexof ( \"Droqram\") 4\ns . indexof ( \"a\") 7\ns . indexof ( \"f\") -1\ns . :i.ndex0f(\"a\" . 8) 14\ns . startswith (\"duke\") true\ns . endswith (\"kind\") false\ns . substrinq (4 . 7) \"pro\"\n3 . tovpnercase () DUKEPROGRAMMING\n\n \n\nDuke Class = Type, Object = Instance\n\n    \n        \n\n  \n   \n   \n\ncharacters =11-I e 1 l 0\nint index01‘(String str) (...}\nString substring(int beginlndex) {AAV}\n\n \n\n \n    \n  \n\ncharacters = [ﬁlo  1' d\nint index0f(String str-) (...}\nString substring(int beginlndex)\n\no Classes are types:\no Define what is in objects of that type\no Objects are instances of class\n\na Can make many (use: new)\nDuke 0 Why objects and classes?\n\n \n\no Facilitate large programs\n0 Some basics here: fields, constructors, visibility\n\n- Java Programming: Principles of Software Desigr. ‘\n\n \n\nD.,u.l<.e \\"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/02_rewriting-with-encapsulation.mp4",
    "id": 5557,
    "text": " Object Oriented Caesar Cipher\n\nRewriting with Encapsulation\n\nDuke ’ _ 4 . _CaesarCipher\npublic String encrypt(Smng mput)(\n\nStringBui|der sb = new StrIngBui|der(input);\nfor (int i = 0; i < sb.|ength(); i++)(\nchar c = sb.charAt(i);\n\nint idx =n.'mdexo+(c);\n\nif (idx != —1)(\n\nC =%°“a'At<idX>I\n\nsb.setChar/-\\t(i, c);\n\n)\n\nD kgeturn sb.toString0;\nu\n3 What Is Benefit?\n\no Same functionality\no What is benefit of OO approach?\na Easier to think of Cipher as logical unit w/ key\n\nOld New\n\nmessage: rnzs-r zmcmii .-‘«'i\"l'ACK msr r:,s.m< mi-s5a(]e_ _\n\nKey: 23 ‘\n\ncazsamsmu\n\n1\n\ncram uanrL:< xooxzin B}-7E‘O C‘l‘:(Rll\n\nDuke.\n\n   \n\nLaruon ATTACK ms’: FLANK"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/03_fields.mp4",
    "id": 5558,
    "text": " Object Oriented Caesar Cipher\nFields\n\nDuke CaesarCipher: Fields\n\npublic class CaesarCip|ner(\n\n  \n\npublic CaesarCipher(int key) (\naiphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nshifted/klphabet = a|phabet,substring(key) +\na|phabet.substring(O,key); What Does This Mean?\n\n. Every CaesarCipher has its own copy\na Can make different objects, different values\na Call method on object: use fields in that object\n\n \n    \n   \n\n%CaesarCipher\n\nialphabet “ABC...\"\nisnmedmpna “QRS... \"\n\n   \n\nCaesarcipher CaesarCipher\nalphabet \"ABC..\"' alphabet “ABC...\"\nshiftedAlpha “MNO... \" shif(edAlpha “ HIJ... \"\n\nDuke Summary of Class Concepts\n\n0 Class = Noun\na Method = verb\n\na Field = noun\n. Noun: Things that a class has\n\n \n\no Adjectives describe properties\n\n \n\nDukc"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/04_visibility.mp4",
    "id": 5559,
    "text": " Object Oriented Caesar Cipher\nVisibility\n\nDuke Private\n\npublic Class CaesarCipher( Only code inside this class\n\nustring Eﬂphabet? can access private fieldsl methods\n\nEstring shiftedA|phabet;\npublic CaesarCipher(int key) (\n\nalphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nshifted/klphabet = a|phabet,substring(key) +\na|p|'\\abet.substring(0,key);\n\n} shiftedAlphabet has private access in Caesarcipher Why Private?\no Why private?\n\no Easier to just make all public?\n\no Abstraction:\n\n \n   \n \n\no Separation of interface + implementation\n\npublic Interface: What It Does\n\nprivate Implementation: How It Does It Genefavl‘ Guidance\nA‘ Fields: priwnee\n.- \"Typically part of irﬁp'Lame'htaE'r9n'\n’-. Methods; depends\n'-. ‘|‘hin9s'objx:ct daeér pusbhic\n-' Helgeis: pni7ya‘tei-\no Ck-1§ae§:‘pub|.ic\n-o Fornowcaiways\no- C;_a‘nstructo:s:.p.ubaliE\n.c For naw: aways\n\nEulﬁ:"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/05_constructors.mp4",
    "id": 5560,
    "text": " Object Oriented Caesar Cipher\n\nConstructors\n\nDuke Constructors: Initializing Objects\n\npublic class CaesarCip|ner{\nprivate String alphabet;\nprivate String shiftedA|phabet;\npublic CaesarCipher(int key) {\naiphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nshifted/\\|phabet = a|phabet,substririg(|<ey) +\na|phabet.substring(0,key); Constructors: Initializing Objects\n\n    \n\npublic class CaesarCipher( E {alphabet _T,»'[A|B C \nprivate String alphabet; i5hiftedAli-“Tibet ‘i\"\"‘WiX Y \n\nprivate String shiftedA|phabet;\npublic CaesarCipher(int key) {\nalphabet = \"ABCDEFG-HJKLMNOPQRSTUVWXYZ\";\nshiftedA|phabet = a|phabet.substring(key) +\naIphabeLsubstring(0,key);\n\nCaesarcipher cc = new CaesarCipher(22);\n\nme"
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/02_cryptography-keeping-information-secret/03_object-oriented-caesar-cipher/06_summary.mp4",
    "id": 5561,
    "text": " Lesson Summary: Object Orientation\no Object Oriented Concepts\n\n0 Encapsulation\n0 Fields\n. Visibility\n\n- Constructors ,."
  },
  {
    "path": "E:/Coursera/java-programming-arrays-lists-data/03_gladlibs-stories-from-templates/02_using-and-improving-gladlibs/01_introduction.mp4",
    "id": 5568,
    "text": " G|adLib: Stories from Templates\n\no Ready to tackle modifying the GladLibs story-\ntelling program: learning while telling stories!\n\na All the pieces of the program are ones you\ncould write yourself!\n\na You'll start with a working program, and\nunderstand and extend the program\n\n   \n\na Class design, method design, understanding\nprogram limitations but reveling in telling stories!\n\na Creating re—usable story—tel|ing components\n\nDukc Structure of G|adLib.java\n\no Constructor initializes object\n\no ArrayList for nouns, verbs, colors, \n\n  \n \n     \n       \n      \n\n- Random object for generating random choices\n\n. Read story template, process each word\n\na If <country> or <timeframes>s found: replace\n\nIn <country> a long time ago, nearly <number>\n<timeFrame>s ago, there lived a <color'>,\n<adjective> <animal>. It so loved to sing and\ndance, but there was a <adjective>,\n<adjective> <animal> named <name> that\nscared it so much!\n\no Print!\n\nDuks Stories from Template\n\no Running program generates stories\na One public method: makestory\n\nIn Ecuador a long time ago, nearly 105 months ago, there\nlived a yellow, jovial polar bear. It so loved to sing and\ndance, but there was a furious, angry rabbit named\nAlbert that scared it so much!\n\n     \n\nDuke Reading Words and Printing\n\no Template read from file or URL, simply loop\nover each word, if <|abe|>, then replace\n\na Finding labels straightforward use of .indexOf\nand .substring, for <noun>! or \"<color>\"\n\no Printing story displays words in console\n\na Method uses parameterized line-width\n\no Could modify to print to file\n\nlprivate void print0ut(String 5, int 1ineWidth){\n' int charswritten = 0;\n\n \n\nPuke Instance Variables\no ArrayLists for each <noun>, <color>, \n\n \n\nDuke Instance Variables\n\no ArrayLists for each <noun>, <color>, \na Name variables appropriately,\n- Create and initlallze in constructor\n\no Need all of them to replace a word.\n\nprivate ArrayList<String> adjectiveList;\nprivate ArrayList<String> nounList;\nprivate ArrayList<String> co1orList;\nprivate ArrayList<String> countryList;\n\nprivate ArrayList<String> nameList;\nprivate ArrayList<String> anima1List;\nprivate\n\nprivate Random myRandom;\n\n   \n\nDuke Find Substitute for <co|or>\n\no Based on <co|0r> or <noun> or use the\nappropriate list of replacements\n\no Choose vaiue from list at random in method\nrandomlirom, return for story-telling\n\no Both methods are private, used by sequence of\ncalls from pubiic method makestory\n\no Argument passed to source is instance variable\n\nlprivate String randomFrom {\n\nint tndex = myRandom.nextInt(source.size());\nreturn source.get(index);\n\n}\nDuke Initializing ArrayLists\nc We must construct and initialize many\ninstance variables\n\na Source could be URL or local directory\n\nin;i.tial;i.zeF:cm(\"data\") or initia1izeFrom(\"http: . .\")\n\n‘private void initializeFr*omSour‘ce(Str‘ing source) {\nadjectiveList= readIt(sour‘ce+\"/adjective.txt\");\n\nnounList = readIt(source+\"/noun.txt\");\nco1or‘List = readIt(sour‘ce+\"/color‘.txt“);\ncountryList = readIt(source+\"/country.txt\");\nnameList = r‘eadIt(sour'ce+”/name.txt\");\nanimalList = readIt(source+\"/animal.txt\");\n\ntimeList = readIt(sou rce+\"/timeframe . txt\"); ArrayList Instance Variables\nc To create a new label, <verb>, must create\nnew instance variable, e.g., verbList\n1 Modify code in two methods with verbList\nc initia1izeFromSource\no called: G|adLib constructors\no getsubstitute\no called: makeStory, fromTemp|ate, processWord\n\nc Program documentation should include\ninformation on how to modify code"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/02_earthquakes-programming-and-interfaces/01_searching-earthquake-data/03_relationships-between-classes.mp4",
    "id": 3248,
    "text": " Searching Earthquake Data\nRelationships Between Classes\n\nDuke The QuakeEntry Class\n\no QuakeEntry class is essentially a POJO\n\no Plain Old Java Object — but here cannot\ncreate object without all characteristics\n\no No default/parameterless constructor\no Immutable with getters() 4 7 I\n\no Reasonable .toString() method\n\npublic class Quakelintry (\npublic Location qetLocat:'.on() 1 . .\npublic double getDepth() (...\npublic String getInfo() (...\n\nl V\nl The Location Class\no Many, many contexts: beyond QuakeEntry\n\n0 Use simple, functional design for course?\n\n0 Use industria|—strength design for course? '~\n\n0 Well adopt Android class\no Latitude and Longitude\n\n  \n\no Initialize from source\n0 Distance from A to B?\n0 More than state/POJO\n\n0 Behavior!\nDuke Has-A and Uses-A Relationships\n\n. QuakeEntry object created by Parser\n\n. Location constructor cailed from OuakeEntry A\nconstructor\n\na myLocation is instance field in O.uakeEntry:\nHas-A relationship\n\no Location used in EarthQuakeC|ient\n\n \n\na .distanceTo(..)\no OuakeEntry used in EarthQuakeCiient too\n\n- getMagnitude(..) \\\n\n1.3u.l.<¢"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/02_earthquakes-programming-and-interfaces/01_searching-earthquake-data/08_summary.mp4",
    "id": 3252,
    "text": " Searching Earthquake Data\n\nSummary\n\nDuke Developing Classes and Programs\n\no Develop classes using Has—A and Uses—A\n\no Creating new objects and storing them in\ninstance and local variables\n\n. Using object~oriented principles for design\na Reading streaming data, parsing data\n. Use APls, read documentation\n\na Store data to have repeatable process for\ndebugging and smaller data for debugging l Software Licenses and APIs\n\nc We used the Android Location.java class\n0 Licensed with Apache 2‘O license\n0 Allows for reuse, changing code, more\n\n- We used the Apache Commons CSV too ‘ ~\n. Also licensed with Apache 240\n\n““*Apache\n\nSoftware Foundation\nhttp://www.apache.org/\nApache iogo by Jose’ Caries Ga||ego/ CC-by-SA 3 o\n\n\\ Processing Quake Data\no Searching for earthquakes satisfying\nproperties: magnitude, ‘location, more\na Returning Arr-ayLi5t 9'? Quaksaintry abjects\n0: ‘Finding closest N quakes\n- Aevoid slda effect of madifyirrg data, mznks a\nCﬁpy\n\no Fouﬁdation for further work‘: in searching V_ V‘\nand scwrting data\n\n \n\nI.3.,u.1.<e."
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/02_earthquakes-programming-and-interfaces/02_filtering-data/02_interfaces-to-avoid-duplication.mp4",
    "id": 3254,
    "text": " Avoiding Code Duplication\n\n0 First: look at two filters\na See similarities Idea: Parameterize—How to Filter\n\npublic ArrayList<QuakeEntry>\nfilter(ArrayList<QuakeE'ntry> quakeData,\nFilter f) (\nArrayList<QuakeEntry> answer : new ArrayList<QuakeEntry\nfor(QuakeEntry qe : quakenata) (\nif —> <\nanswer . add (qe);\n)\nLew,“ answer; But how do you make Filters with\n\n) different .satisifes() methods?\n\n  \n   \n  \n \n\no Generic method: parameterized by Filt\n\nDuke. Compatible Types\n\npublic ArrayList<QuakeEntry>\nfilter(ArrayList<QuakeEntry> quakeData,\nFilter f) {\nArrayList<QuakeEntry> answer = new ArrayList<QuakeEntry>();\nfor(QuakeEm:ry qe : quakeData) (\nif (f.satisfies(qe)) [\nanswer.add (qe):\n}\n}\n\nreturn answer;\n\nFilter f = new MinMagFilter(4.0);\nArrayList<QuakeEntry> largeQuakes = filter(list, f);\nf = new DistanceF'11ter (myLoc,100);\n\nArrayList<QuakeEntry> sha1lowQuakes =—\n\nDuke UH\nDw"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/02_earthquakes-programming-and-interfaces/02_filtering-data/05_summary.mp4",
    "id": 3257,
    "text": " Filtering Data\n\nSummary\n\nDuke Interface Summary\n\n‘Fi=1-t_er f = new M-inM‘agFi—lI;er(4 .0);\nArrayList<QuakeEntry> 1argeQuakes\n= filter(list, f);\n\n   \n \n\na Type compatibility: use class as interface\n\n\\\nn Will still use methods in class: dynamic dispatch‘ \\\n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/03_earthquakes-sorting-algorithms/02_sorting-at-scale/06_summary.mp4",
    "id": 3269,
    "text": " Sorting at Scale\nSummary\n\nD..u.l<,e Comparable/Comparator Summary\n\no Two ways to deﬁne ordering on a type\n\na Comparable:\n\n. Natural ordering on own type\na thingl . compareTo (thing2)\n\no Comparator:\n\no Ordering on another type\n\nc comparator.compare(thingl, thingz)\n\n   \n\no Can use either with Collections . sort (\n\nDuke."
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/04_n-grams-predictive-text/01_generating-random-text/08_interfaces-and-abstract-classes.mp4",
    "id": 3275,
    "text": " Generating Random Text\nInterfaces and Abstract Classes\n\nDuke Commonalities in Code\n\na Method MarkovRurmer . runMarkov\nc We changed MarkovZero to MarkovOne\no Code still worked! Why?\n\n3 Capture code commonalities using a Java\nInterface\n\n. Just as you did with Comparable and\nComparator\n\no Methods setTraining() and\ngetRandomText (int) Developing an Interface\n\n- Common method signatures in Interface\n\n   \n\nrllu\n\na Name interfaces starting with is common;\nwe create lMarkovMode| with required methods\n\n- MarkovZero, MarkovOne, MarkovTwo—each\nimplement interface; methods already there!\n\npublic class Markowwo TI\n\nprivate String in)/Text;\nprivate Random mykandom;\n\npublic MurkovTwo() {\nmykandom = new Random();\n\n}\n\nDuke Interface: Utility and Flexibility\n\no Write methods that use Interface\n\npublic void r‘unMode'l(IMar'kovMode'L markov,\nString text, int size){\nmar-kov.setTr'uining(text);\nSystem.out.print1n(\"running with \"+rnurkov);\nFor(int k=0; k < 3; k++){\nString st (size);\nprint0ut(st ,\n}\n}\n\nﬁarkovlero mz = new MarkovZero();\nr‘unMode'l(m2,text,800);\n\nMarkox/Two m2 new Mar'kovTwo(\nrunMode1(mZ , text , 800\n\n \n\nDuh: Software Design: Open-Closed\n\n. Open for extension, closed to modification\n. Don't change tested/proven code!\n\n0 Interface provides flexibility\no Add new, general MarkovModel class\na All orders 1,2,... implements IMarkovMode1\n0 No change to existing code! eg., runMode1\n\no Implement efficient version with HashMap\no Avoid re—scanning for 'th' follows\n\no Still use existing code with no change!\n\n \n\nDuke Abstract Class\n\n- MarkovOne, MarkovTwo, MarkovMode|\nclasses share state and code\n\n    \n  \n \n \n\no Each class has random number generator and\ntext in instance variables mykandom, myText\n\no Duplicated helper method getlrollows (key)\no Capture commonality in Abstract Base Class\no Relies on object-oriented concept: Inheritance\n\na Used extensively in java.uti|: Ab5tractList, and\nAbstractMap\n\nDuke AbstractMarkovMode|\n\no Class marked as abstract\n\na Shared state is protected, not private\n\npublic abstract class AbstractMar‘ko\\/Model\nimplements IMarkovMode'|. {\n\nprotected String myText;\nRandom m)/Random;\n\npublic AbstractMar‘kovMode1() {\nmyRandom = new Random();\n\n}\n\npublic void setTr'aining(String text) {\nmyText = text;\n}\n\n \n\nDuke Abstract and Shared Methods\n\no At least one method marked as abstract\n\n \n    \n \n\n0 Must be implemented in subclasses\n\n. Shared helper functions protected\n\npublic abstract class AbstractMarkm/Model\nimplements IMarkovMode'|. {\n\n// state and shared methods here\nabstract public String getRandomText(int rIumChars);\n\nqArrayL\"Lst<Str\"Lng> getFo1'|.ows(String key){\n code not shown\n}\n\nDuke Extending the Base Class\n\na When base class extended, get access to\nprotected instance variables and methods\nfrom super class\n\nc Also implement interfaces of base class\n\na Can have instance variables as well\npublic class Mar'kovModel extends AbstrdctMarkovModel\n\nprivate int ‘\n\npublic MdrkovModel(int order) {\nmyorder = order;\n\n}\n\n// more code here\n\n \n\nDuke Implementing Abstract Base Class\n\no Implement the |MarkovMode| interface\n0 Supply default functionality when possible\no Avoid duplicating state and code\n\na Subclasses extend AbstractMarkovMode|\n. They implement |MarkovMode| too!\n\na Interface the same, client code doesn't change\n. Some methods are abstract\n\na getRandomText implementation changes"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/04_n-grams-predictive-text/01_generating-random-text/09_summary.mp4",
    "id": 3276,
    "text": " Generating Random Text\nSummary\n\nDuke Markov Text Generation\n\no Developing a sequence of related classes\nhelped in understanding new concepts\n\n  \n \n \n  \n   \n\nu Predictive text is the basis for machine learning\nand autocomplete functions in search and\nmobile phones\n\no Related classes led to designing and\nunderstanding interfaces and abstract\nclasses\n\n. Familiar context helped with extending desig\n\nD..u.l<¢ Interfaces in Java\n\nc We used the same names for methods\n\n  \n  \n   \n\n0 Allowed us to reuse client/testing programs\n\n- MarkovTwo and MarkovOne used same\nmethod names as MarkovZero\n\no Extended to interface |MarkovMode|\n0 Powerful technique, extensively used in Java\nc Extended to Abstract Base Class\n\no Capture common code that can't be captured\nin an interface, also extensively used in Java\n\nPuke"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/01_using-java-beyond-bluej/03_main-method.mp4",
    "id": 3286,
    "text": " Using Java Beyond B|ueJ\nMain Method\n\nDuke Main Example: Using Command Line Args\n\npublic cslaaa Hellawarld (\npublic static void maincstringll argsﬂ\n\nif Cargsmlenqlfh =: 91) l\nSysLam.auL.p intlntwtérsse specify the Eilemame\"): .\n\n)\nFilelkescaurce helld = new Eilaﬁasuurcetargslﬁli;\n\nfarlStr;'mq line : he11s.1il>4esliH\nSyst:m1’v.cauI:.pz.iCntln ciingi :\n\n   \n\n)\n\nDuke"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/02_mainstream-java/02_understanding-exceptions.mp4",
    "id": 3291,
    "text": " Mainstream Java\nUnderstanding Exceptions\n\nDuke Exceptions\n\nException in thread \"main\" java.lang.Stringlndex0ut0fBoundsException:\n\nString index out of range: 82\nat java.lang.String.charAt(String.java:646)\nat Test.doStuff(Test.java:5)\n\no Unhandled exceptions:\n0 Crash program\n\no Print stack trace: tells you about problem Exceptions\n\nHandling exceptions: try, catch, finally\n\nException propagation: when you do not handle\n- May require declaring “throws\"\n\nThrowing exceptions: when you discover a problem\n\n \n\nDuke\n\n}  , exceptions: print stack trace j\nI Tells you about problem \""
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/02_mainstream-java/03_handling-exceptions.mp4",
    "id": 3292,
    "text": " Mainstream Java\nHandling Exceptions Handling Exceptions: Try/Catch\n\ntry (\n\nURL myURL = new URL(someString):\n//code that uses myURL\n//e.g., connects to it and reads data\n\n   \n\n)\ncatch (MalformedURLException mfe) {\n//code to handle the error\n\n. Exception is thrown\no someString = \"blahblahblah\"\n\nQuk:"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/02_mainstream-java/04_declaring-exceptions.mp4",
    "id": 3293,
    "text": " Mainstream Java\nDeclaring Exceptions\n\n.Du.1,<e. When You Don't Know How to Handle It\n\n   \n\npublic void myMethod(String urlName)\nthr°.v.s :M.a:1§orme§!JR1iE¥9!:Pt:i<en‘ (\nURL myURL = new URL(someString);\n//Code that uses myURL\n//e.g., connects to it and reads data\n\no \"Catch or Specify”\n\no For \"checked exceptions\": declare throws\n\nDu1.<¢"
  },
  {
    "path": "E:/Coursera/java-programming-design-principles/05_java-tools-and-libraries-for-everyone/02_mainstream-java/05_throwing-exceptions.mp4",
    "id": 3294,
    "text": " Mainstream Java\nThrowing Exceptions\n\nDuke So What Can You Throw?\n\na Technically: any class that extends Throwable\n\n  \n\no Typically, a class that extends Exception\n\n. (Exception extends Throwabie)\n\n- Java has many bui|t—in exceptions\n\no ArraylndexOutOfBoundsException\n\nString|ndexOutOfBoundsExecption\n\nNuiiF‘ointerException\n\n|OException\n\nDuk: You Can Create Your Own\n\n0 Java's exceptions: generally sufficient\n\no Need something else?\n. You can make your own class!\n\n. Just extend appropriate exception class\n\n \n\nDuke"
  },
  {
    "path": "E:/Coursera/learn-to-program/01_python-variables-and-functions/03_variables-and-functions/03_visualizing-assignment-statements.mp4",
    "id": 3335,
    "text": " Visualizing Assignment Statements\n\njennifer Campbell and Paul Gries\n\n2* /‘ m that his bustexamled\n-. nut Hm x. mm.\n\n«W x ‘:.g wow-m .,..¢...=.a\n\n    \n\n_ I Frames «menu\n= x . 2 IIunnm¢1';u‘J ..,\n= 7 I 3\n\nmm . gm\n\nv. 1. Evaluate me expression on We m_;h(o1|IIe\nIn produce a value. Th 5 yam. has a msmory\naddress.\n\n2. sum um memory aﬂdruss no In. value an me\nvannhleon «he left uﬂhe —.\n\n \n\ncm-rm um\n\nmmm; vxsuihziuam (V-(I Ir-eﬁenevale um‘ mm awvrand snaruvm um fa rewt . bug‘ Dam-xm-unit\nmm: min . Mala-ovatswnmn M M emmllnuntssed m p».muengm..n..n.: The mignmsm gammy“ ﬂanges me value M 3\n\niunrm: e :7: wariahle.\n\nmmmm; vmnllnmn »« vawmaae. mm. m 5eneraaecrna«1ooae‘bullun alxzveanu Dane the rzsunmﬂ\nmm M Vnmyaurwalsolat Mun z». nmnunn mum Diumeius ., named\n\nmmgmmmsuumgmmu human; mm .m....m..‘. Imnnrlsamlnn M W m. mum;\nmndulasmzv a. mum Mm‘ Kmamnns‘ a....m, mm; mm unmg, ,9... mam. .,.y.m, mm, re,\nm.\n\nmu nuuunm mvbn mm M mermmmmm ma. mm nut m.m.:m..g\n\nlam xna  »...w.gus. m vinmvau m usermsmsswms :nu :um:axm\nn<m\\nna\\ announumenxs (‘mm mm. and amid adrlrrsswm I1: ken: V“/axe? my m. Vsrnvmevan ;...»...m\n\nCnwnqr-I m znnrzals mum Au ngms rnserved"
  },
  {
    "path": "E:/Coursera/learn-to-program/03_booleans-import-namespaces-and-if-statements/02_if-statements/05_structuring-if-statements.mp4",
    "id": 3350,
    "text": " Structuring\nif statements\n\nJennifer Campbell and Paul Gries \\|1re:1D1tat1on mu\nJ mpemure -\n\n \n\n;\nA If preclpltatlnrv\n\n5 yr temnzraturz > e-\n\n«, nr1nL('Br(nl ynur ul||1re\\|i!‘)\n\n, H52:\n\n2 pr1nt(‘Hur ymlr mm; and mm man’)\n\nH Dracipitaucn and lemperzlure > 3:\nprml('Brin§ your Iunhreﬂz! '1\n\n1: ehf pretlpltatlnlv\n\n’ |1rj_MV('Hejrr your ngmgs and y1_ntl[ gum’:\n\nmum\n\n \n\n0\n\n‘fun mm Prugnmkvmlruwd s....Ka, nu»:\n\n» kn: max hashuslexnmleu\n-o nzxl hue .. uamle\n\nImgrxm auluul:\n\nHear your Duals and mﬁu to:\nHear ynur boots and mm: com\n\n \n\nFr1m=$\n\nmom ...m~xa\n\n \n\nomens\n\nm....;\nYru:\n\nmm:\n.1"
  },
  {
    "path": "E:/Coursera/learn-to-program/04_for-loops-and-fancy-string-manipulation/01_fancy-string-processing/03_str-indexing-and-slicing.mp4",
    "id": 3352,
    "text": " str: indexing and slicing\n\nJennifer Campbell and Paul Gries\n\n’: [ace 4. .1 (Apple In . mum sass) (am. an on darn n\nupyrignc\", \"credits\" or \"li::en5eH' for max: infunnution.\nL: Python 1.2.3 <v:.2.3 3d06E6d90f5§. zap: no 2012, n:25:5nh\n\n[ccc 4.2.1 (Apple Inc. mum 5555) (am. an on darwin\n\n‘Up; ' \"credits“ or ~ucense4>\" for more intunnation.\n>>>‘s . Learn to Program\n\n»>\n\nmaex a pusman wmun 2 smug Index a pusman wumn 2 smug\n\n234S67B9|0||l2|3HlS\n\nazn to p gram mm. a posman wmm a sling\n\n423456789ID|||1l3l4lS\n\nLearn to Program\n\n.|e.|s.\\4.|3.|1.|| .10 .9 .3 .7 4 .5 4 .2 .2 .|\n\n \n\nu um s ’ »> new\n.m.\n\n»> 5|9:l6]\n\n'Pragram‘\n\n>>> lI9.lelI1sH\n\n-program‘ Index a pasman wmm a smug\n\n?» 519:; snoeamsmng cﬁaslxlngivmnasmrl\n\n>f§°gf?'gl hm hm mcludmg an and index\n\n.I_e_m, m. Smnqs ave wmmulable. They cannot be changed.\n»> 5;:\n\n‘Learn m Yxogram‘\n\n»>.n:a1 0V23456789IlJ|||1|3|4|5\n‘earn tn‘\n>>>s|1-B] Learn to Program\n'e.u'n to‘\n»> H-1 31 -I6-IS-M-I3-|1»|| -I0 J? -3 -7 -6 -5 4 -3 -2 -I\n'e.:xn co‘\n\n»> .\n\n‘Learn to Program‘\n\n»> gm . 'd‘\n\nTxacehzck {most recent. can use):\n\nPile ‘-<,,y nanny)-, ma: 1, in qtadulv\ngm : a-\n\nTypeﬁrru '52:‘ oblccl. dues not lllppuzz item assignment\n\n»> suns] run‘\n\nTrlczblck (most recent ell! XIII):\n\nm. \"<pyshel1r1l)>\", line 1, m <1nndu)e>\n§I9:15l ' ‘Iun‘\n\nTypeszrcr: '51:!‘ objects does not support. new: assxgnment.\n\n>>) s|:5l t 'ed‘ 1- 5[5:I\n\nlearned to Pxagzam’\n\n>>) 5 I 5I:5l 4- ‘ed’ 9 5[5:]\n\n»> s\n\n‘Learned to Program‘\n»> \\"
  },
  {
    "path": "E:/Coursera/learn-to-program/06_for-loops-over-indices-parallel-and-nested-lists-and-strings-and-files/01_parallel-lists-and-strings/01_for-loop-over-indices.mp4",
    "id": 3364,
    "text": " for loops over indices\n\nJennifer Campbell and Paul Gries mm Vourwlmnoouvnr\nan count Idiacent repuull\n\n \n\n1\n2  1 m —> 3 2\n\n1\n\n.~ Iutnxn nu number of occurxnnc . as - zhlrwzex Inn!\na u. adjlcnnr. cnmcm» mm Lhl um.\n\nI:\n\n1 »> .=m....,-ah Inl:_rnpIl(l{'n.b1:I:dAi!§qh‘)\n\na 3\n\n, . .\n\nm\n\nu up...“ . n\n\n:2\n\nu (or 1 1.. nn¢¢1lanll)—-1):\n\nu 1: um .. .n « ]]x\n\nA5 1.9..“ . ;.p..c. « 1\n\nX2 mum repuu\n\nIs\n\n19 prinuI:n\\InD._ndjnI:Int_zupInD.I1 ’u:I:f!h‘ 1)\n\n   \n\nExenxlecndulslni r7-«.1 ' aﬁ.......47. «vfunx V , x T.» up..a..x».'....T.\n k _mL.n ...... \"mg, T... .... um. :._,...<.. and f....@m.\n\nNeva m sum: mm» vmun cud: snuznms «.1 ..§...«\nmmmmummusmlmulmnmlmmmmlmmmummm\nN:m.[aanna1Inhanas:Alm:mmL:i.nnnniidl:nui&um$lnmlhaw:15.uLhann nu sMu_|ul|L).\n (115!) -> llonﬂwle\n\nsmfz each m. m l on! pnsvlmn to the la!\nand sum the first View In the last pnsuhz\n\nPretamﬂunn: |an(L) >n 1\n\nnrstjrem = uel\n\nfor 1 m rmen. |uI(L7)'\nLh — II = lhl\n\nLl-ll - Hrsl_Heln\nImus = |'z'. -n- 'c'. -4'1\n\n:2 Fr!nt(sMf£_|:H(\\ell:rs))\n19 L)\n\n    \n\nmx_u2n.a\nfan. fax vw.mu.mm.a 7 ms) Ia:x>>\n\n«V Ime mu nmm uamzed\n- nun Mn: m neon:\n\n \n\n \n\nFhnws\n\nmom has!\n\nmnu-n\nuh:-1\n\nu.\n:1\n\nVol am.\"\nsmu_n-nu)\n\nm.,..\n\nmm"
  },
  {
    "path": "E:/Coursera/learn-to-program/07_tuples-and-dictionaries/01_tuples-and-dictionaries/03_type-dict.mp4",
    "id": 3380,
    "text": " Type dict\n\nJennifer Campbell and Paul Gries »> asn_zo_gn.ae\n\n('A)‘ an, us an, 12': 70)\n\n»> for assignment; In asn_:o_gn.d=:\npxxntussxgnment)\n\nA1\n\nA3\n\nAZ\n\n»> for assignment m asx-._m_gmse=\nprint(asnAto_9rade|aasi9nInentl >\n\nan\n\nso\n\n7n\n\n»> for assignment .\\n .sn_:u_qndg:\npxiM:(assignInen\\:, a§n_l:o_gzade[ass1gnment])\n\nA1 ac\nA3 90\n\nA2 7o\n\n»> a - 0\n»> lentdy\nn\n\n»> d . ('.pp1e‘ : 2, 5 s)\n»> run, 2” = xnnnnn\nTraczhnck llnst recent cnll um:\nHue <py.ne;m9>~, lxne x, 1|: <||Indu]e>\ndin, 211- ‘bnnan-'\nTypesrzo unnashable type: ‘nsr\n>» am, 2)! - ‘bannnn\n»> .1\n(u, 2»: 'banani‘y 'app1=‘: 2, 5: 5)\n»>\n\n \n\ndxcl‘ Pymorvs mcnanary mu\n\n(ksyl : valuely keyz : value},\nm. kelm: vuuem\n\nKeys mus1 be unique Values may be dup1ica|ed\nmama: Slmml\n\nm eamams\nan remuve\n\nJenunu 1- vemm me numbevol kuy—valu: pulls m\ndict\n\namiss am mulable.\nDnwananes are unmma.\n\nKeys lIIus| be irnmmable\n\n‘u« 41 n1 4‘"
  },
  {
    "path": "E:/Coursera/matlab/05_programmers-toolbox/01_lesson-4-programmers-toolbox/02_introduction-to-programmers-toolbox.mp4",
    "id": 5616,
    "text": " VANDERBILT  UNIVE RSITY INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB PROGRAMMER’S\nTOOLBOX\n\nInfroducﬁon Computer Programming with\nMATLAB\n\n',esson 4: Programmer’: Toolbox 4+; 1- J ,.-W 9 4.. :;:;j;;f_v 133337: :  c, ;:\"w\"j_7;;_V\n5; \"r \"2\" .»-~-' “:3 -,‘:;.. 4(....._. . ;‘..;.,.... .  iw-~ “r ;...m. %, v 3 WW 1' 4.. ‘°\"“””:“\"“_‘_V  L  a ;:3j;gg_M\num. um um ,m-u. Wu-rt 30¢ \"°‘\" '\"' “ um: _:,>.<m mu ;\nW . . .,.. mm. M...._.. _“HllElrr-Iuﬂ\\w . . _,..... Mi ? 3 WW .! J‘ Qbdmvxurlk :.mm., _— M_m__ _,/ :(>mmun\\\\y\n__ _‘_ 9 n ‘ M .,o..n...‘.... H..m.m Wm “M M _..Mu...«\n.« ,c._.. ~..,. _, .. ,\nW . . ... .........« dm...._.. _,n...;.»........ . . 3....\nV . g ,5 A ‘ . mm . h'ry|Hm . n..,..”. . IMV)mumnm . f4>r'1|1u(u‘vugumrwrwMVRMAH/IR>Yu14>vuV\\ r [IA j ~ .\n. W. ,__ » mm W. W %, v 3 WM 9 4.. wf”j‘;__ 3337;; L  ; ;;:“::”§‘‘u*___“\num. um um t(n$Ix- Wu-rt 104 '’°“\"'” “ um: _:,>.<m MI j\n505! . . .,.. M... d.u..._.. ﬂ..;.\"...... . . _,..... g W...“ c -v‘'””“\"‘\"\n\n \n\n \n\n‘~41; v :1 wm. 9 4.1 ')MW__ _a_Wm_\n:; 1' fr\" w-M \":2.\" .11” ,;.......... ;(..;.»...... *2“ a'~~» 2- 9....\n\"‘-\"~\"l~\"1“  '   ‘ g M...m.. J, -*‘”“”“\"“*\n\n \n\n   \n\n«I ‘I J 44-um. 9 An WW_W_‘v HI ‘\ns«'~‘x \"7 \"f='” \"'\"‘\" “F-1'5‘ mm ;’:...—.....~ $32.2... *2“ —'v~~~ 1- 9....\n\n1. » sanH14.§1e, 2. am q; f : J4’-amt“ 9 4.. _ Q\n-.. .... 9.. Mm... mam ... -1\"'*“\"'“*' ~\"\"“'\"‘“\"\" mm: _;,.y..» -o. r”‘“‘”‘“”\"\nSou: . . .... mm. 4;.......K.. _,‘..;.»...... . . W...\n\nA\n» sand! 4:9 1.. 2. my g gm...“ 3, -‘*W‘\"\n\n \n\n   \n\n«4-I ‘O J 44-«rm 9 An\n -~ °=~ ~~—  -:-.. ::::;‘;::.  ~c~«  ~.~ \n\nA\n» mm 4:9 1.. 1. ssh ‘~41’ 9; 2: «W. 9 4.. egjmfjxi V 1 :  :, ;-:'_jj;jj V\n-.. .... can /arm. M. y. -I ~ L...“ 3w.» ~. — \"‘\n. ... M...“ 4m......K. . _,.,..s....... . . . 9....\n\n \n\nV a a _ ‘ . U\\rr\\ . n-,,..,m . nmpbm. . Mdlrlmvurm . rm-w|mluvvn'4umrwngv-HRH/l‘l|/IR . Ymmuh r M\n. mm ,, same) mew“\n\nA\n» mm 4:9 1.. 1. ssh\n\nv g gm...“ 3, -‘*W‘\"\n\n \n\n   \n\n«4-I ‘O J 44-«rm 9 An\n -~ °=~ ~~—  -:-.. ::::;‘;::.  ~c~«  ~.~ \n\nA\n» mm 4:9 1.. 1. ssh\n\nv ‘H v :: 44-».4m«. 9 4.. MW-‘r A-~=w»«= — , , _,mm\n5,; Diet 5.. M... W ,.. mm\"--v ;»»mm ;  v ¢..u...§u....\nK ‘. ... _,.....“df-....,__, _lMf_:__m_  _,,.,.» 3. ‘—E__M\n_‘:;Wq~«~ ‘V W‘ . ,\n,, mm  .\nHzuam\n\nNB 3\n» sarxﬂp ‘~41’ 9; 2: «W. 9 4.. egjmfjxi V 1 :  :, ;-:'_jj;jj V\n-.. .... can /arm. M. y. -I ~ L...“ 3w.» ~. — \"‘\n. ... M...“ 4m......K. . _,.,..s....... . . . 9....\n\n \n\nV a a _ ‘ . U\\rr\\ . n-,,..,m . nmpbm. . Mdlrlmvurm . rm-w|mluvvn'4umrwngv-HRH/l‘l|/IR . Ymmuh r M\n. mm ,, same) mew“\n\nA\n» mm 4:9 1.. 1. ssh g gm...“ 3, -‘*W‘\"\n\n \n\n   \n\n«4-I ‘O J 44-«rm 9 An\n -~ °=~ ~~—  -:-.. ::::;‘;::.  ~c~«  ~.~ \n\nA\n» mm 4:9 1.. 1. ssh g W...“ 3, -‘*W‘\"\n\num: _~',>«r.¢» ».\n\nMi ;’ J “_W_ 9 J‘ M..v..‘..‘. JlruVvre(nd:\n\nm. . . » ... u........ d;.‘....,..(.. _,.,...;..........\n\n.,.».m.._.. V 3 ..m..m.. 3...u...su.....\n\n   \n\nA\n»sarx\\u4 1,351)\n\n2\nu g gm...“ 3, -‘*W‘\"\n\n \n\n   \n\n«4-I ‘O J 44-«rm 9 An\n -~ °=~ ~~—  -:-.. ::::;‘;::.  ~c~«  ~.~ \n\nA\n» mm «-4 1.. 1. ssh Mi ;, J M_W_ 9 J M...v..‘..‘. ,.n.wm. : M_\"_M_ 3/ _,C>mmwww\n__ __ W /W__'_ W\" M .,.».m..‘..., ;...m..m. H ._M 3...u...su.....\n. ... w-my-m 4c..»......(. . _,.,...;......... . “'.‘ 4 ‘f’ 9...».\n\nV a a _ ‘ . mm . y‘-M . am. .  . mu..,.,..mmWW.” .  , DA\n- ~m ,, mm  '\nuzuam\n\nA\n» sar!\\H4:§1b. 2. ssh g gm...“ 3, -‘*W‘\"\n\n \n\n   \n\n«4-I ‘O J 44-«rm 9 An\n -~ °=~ ~~—  -:-.. ::::;‘;::.  ~c~«  ~.~ \n\nA\n» mm 4:9 1.. 1. ssh Polymorphism\n\n» If the type of an input argument to a function\ncan vary from one call to another, it is called a\n“polymorphic” function.\n\n» Polymorphic means “having multiple forms\",\nand it can save us a huge amount of work.\n\n. Second form of polymorphism: Variation in the\nnumber of arguments from call to call.\n\n5 Many bui|t—in MATLAB functions employ the\n\nfirst form of polymorphism by returning an\n\noutput that is shaped like the input. ~51 'i‘ J 44-um“ 1! An \"‘\"'\"“\"“‘ J‘\"“”“\"“ : @m.v.m.. & \"”'\"'\"“\"\"’\n_, M,  ‘M W M ,....W....., .,.M.m M.M_,,.,\nw - ‘- ' -. ‘-my-A-“4ifN\"'|'rK-V _\"..;.:.__.. \"rm aw-~ 1- W-..\n\nA\n» sand! 4:9 1.. 1. am a: re :1 :+..W. 0;, 4“\n\n-.. .... 9.. /m... W... M\nW . .\n\n \n\n... .......-m 4c.........(. .\n\n.1DrmVan4* V ;. ..m.m..\n\nA a _ ‘ . Hun . n-,,..,m . nmnbm. . mm  . fnmnulnVvm1umrwngnHhMA1L.ll . mm r M\n\nx 2 1 ,4 21\n’ 1 2 1\n» >un(vr\n\numu\n\n1\n2 .\n»,.muu\n4 u\n,~..—m,mz um\n.,<;m mun 431»\n\n>v1ru-:su\\l rumttza Kw m\nw\\\n2\n\n \n\ng (y Ynﬂxvvmu 0 ”“”“\"\"*\n\n. .9 IDCAII4 9....\nW. _,« . V.»\n\n_[L‘CdlElmu:ﬂ\\ . ‘;..m.. . Lead Vnstructor Mike Fitzpatrick\n\nCUWCLNUW design Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas VANDERBILTVUNIVERSITY\n\nVl  IFISIRSTITUTE\n\nDIGITAL\n\nLEAR_N|NG \nlB[.."
  },
  {
    "path": "E:/Coursera/matlab/06_selection/01_lesson-5-selection/02_selection.mp4",
    "id": 5621,
    "text": " VANDERBILT  UNIVE RSITY INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB SELECTION\n\nIntroduction if—statement\n\n,» Most common selection construct: if—statement\nExample:\n\n  \n   \n\ng'uess_my_nuIu.ber (x)\nx 2\n£px‘intf( F\n\n \n\nBegins with control statement\n\n5.: keyword followed by a condition\nEnds with statement: : =\nIn between: statements to be executed if and\nonly if condition is true A\n' J H :,...m ‘ .m_,,,_,‘.\n\n \n\n \n\n     \n\n   \n   \n\n& ‘ E. II  g,..u.m\n\nMa 3... 5... J‘‘\"'“' >'-“”' “”\"'\" i«— ......m.. .... n... ...... mu\n\n. . .,,....u. “M. ....m.‘._. . .......h M\n\n\\/ \\ a a _ ‘ . W . n-mm . pm. . Wﬂm . fnr'1|1ulnVvI1Eumrwr1gMVRMAH/ll .  , DC ~ .\nW, . gm. .;..,,....,,mu.Wm. .$ umuwm . ,  .\n\n,-~~‘ GUu\\mv,m4MI>evm . W. \n,_ ummbwmwmm ; WW2m,.(,.,_m.‘m ..\n,_ 33;; ;;,;:;;;,;;-1:33;; , VVUIKH    V1; HVVKV  ,,\n\n» guess_ny_mnm<r\\n\n\n., um, n mm»\n» ‘ I.f.E,:L\"..“:. ‘W. =..';”;;”;~,‘ L r   ._~\n\n- - -,=--«- --- \"“\"‘Ad.~_'; \"\"9\" ~::::'.w~« ~..:-\n\nV a a‘- k .  . h.:;';;:':  .    \n\n  - z    W   \n i \n\n» mW_mm,.,.\n., W. W Wm.’\n/-. »x ‘ w J an «;~_‘:V Law W1-1;-fw\" L w  gnaw 3\n\n~:«°:\"*-.\",...«. _,... ...,..m._., '\"':-'f ':“ :;:‘.~~*-\" \"...:‘\n\n«‘-I_u:;W«>A~ - z-:3: m:;~uw:“;|'z:wym    W . , Mw..‘  .\n,; »::;:_M:;;;33_WM ;  .\n\n,_ 335;; ;;,;:;:;,;;;~_;;;,;; , VVUIIH [mvwmls   V‘;  Wrv ,,\n\n» guLvsS_ny_rNnrn<r\\3)\n\n., W. V! mmh(‘V{G‘\n\n» m.,ny,.m;mzy\n\nLn/ujxaxy V.“ quwa my mm\n/-. »\\ Condition: false\n\ncontrol\n\nstatement \\‘ if—e|se—statement Condition: false false Condition: false 3 J g::::.;w..=.:;::;:~;‘ L w \n\n...n.,,_,._., .\n\n \n\ng,.m.m ..\n.......... ... :22. h...... .3...\n\n ' m..mm.,.,m . \n       m\n\n' S3§1f'21Z§2'Z.‘C'Cf.’fl‘.’Z'i2 \" I <7\n\n \n\n.u..‘ X<-‘I\nVp*|MH Vluv hywmw\n\ndin 9\nmumu M W V‘,  \\\\ ,\n\n» qucssjwm mm»\n\n., W. », Nmm\n\n» ,.m,wW.n»\n\nrnwqxanw Van qwccoa my mrmm‘\n\n>, qua» m mm»\n\n«.7. V)'V1ly Im «A nave Wm\n\n., Dues‘. mmm\n\nLnmzruu‘ M mm W mm\n,._ ..\n\n>\n\ng a _ ‘ . |\\\\rv\\ . h'rpHm . 9,...” . .mmn.m . Kar‘1|wlu7vngv.\\mnvmgMWRMAHJII . Ymmuh r .1;\n\n«mm m.m..‘\\ W ,H.,,(V  ‘.,..,(, W ,, WOlKSDa(e\nName . um\n\n  \n\n1f x = A2\n» fprinU(‘Congvats‘. vuu guessed my number!\\n');\n- else\n\nfnr1IItfl‘TLm mg. Yry agam.\\n')\n\nCommand Wmdow ®\n\n>> gu2ss_my_numher(3)\n» guess_my_numher(D)\n» guess_my_nu...uert2)\n\nCongrats! You gues my number! \"*'5l’!‘F§'I5l='F§S1a] 1\n\n \n\n‘f G ‘M “”\"‘\"‘ ‘ \"' W\"-M‘ L I! *1.‘ ElI'Vk(\"\\ .3\nWW M i.. 4‘--— ' v-'~'~- WW «J ......n In W. M... ....\n~ ~ 'Hu\"\"\" .:-- \"“‘w:.m; - -...... ..\nv Q n a _r - m r Wrrwm . “mm. . m..m.m . [umnu:rvIvngummmgvmhMA1|/ll r mm. . as ,\n\n     \n\n \n\n   \n \n     \n   \n      \n\n  \n\n \n\nA. M, M, MW  .,..s;,.,,M..u.;\nw....‘m;m».. M M’ <7\nV V V Vuunm m..‘.., m.~.,.M.mmw.\n\n/- Q...» WV   2 \n\n,.« . m\naueu,my MAWIIXV vemnn Jm\n\nmnrxﬂ my mu H» zqaw V»\n\n   \n\n» qunss,WvJNnberU)\n» M. »w»..m.y\n\n» *lH(§3,rIV_vmnixv{D\n\nEnrvuran‘ Van queued my W...“\n>) mwmmm‘.\n\nNun rmhl. mu d mind VH0).\n\n» aue5sJ\"v_nunIxv4)>\n\nLnmzrau‘ Ynu gmm my my-\n., M. 'rv,mnaxrm>\n\nYul: xmu m ow.\n\n,, ElAe\\s,\"'VJIuWl:erl43?\n\nVan mg. m .9.” Lead Vnstructor Mike Fitzpatrick\n\nCUVFVCLNUW d€S\\gﬂ. Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas VANDERBILTVUNIVERSITY\n\nINSTITUTE\n\nITDOIEBITAL\n\nLEAR.N|NG \nMT."
  },
  {
    "path": "E:/Coursera/matlab/06_selection/01_lesson-5-selection/03_if-statements-continued.mp4",
    "id": 5622,
    "text": " VANDERBILT  UNIVE RSITY INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB SELECTION\n\nh‘—SfaremenI Continued ‘I’ J Id \"'”\"“' “ '‘‘''''i’ J ' L g,x...;.m 3\n\n».. 9.» 50-: z‘‘\"'“‘ ' V-“”' “”\"‘”‘ K‘ S« ~—‘ .......... .3...“ ...4\n. . . cum: ,3... ....n.,_,._., . .\n\nV \\ a :2 _‘ |V\\n\\ r mm . mm\". . Mvllrnumnm . fnr‘V|‘uluVvm1umrmr1gMMMAYLAR . mm r as ~ .\nM-\":3-U5‘ ' m m NY M .0 V’! an .,»,..x M LIX?\" W '\n\n1uu:'|<>/x ¢.y,.._..,.m»\nn 1 ,, .\nmam Sumkw. a.\n\n1- 2521 EC 2E2.;I,Yi1il:‘£ J4\n\n~;r.n..‘ \\uc>na\\.\nwmyrw V :,\nmun ...mW.\nany mm 1;\nmm ‘. 5\nHJY mac , 1,\n,\\w‘_ 5\nwmvu F M. :.\nmu». 1.\nmm 7- 7\n4,>..m. Qnumu, x.\nmm. , 1\ndie\n«Wm Nu-hm  ., M . Vrv 1 “ y.\nn M W 1\nVOHMH .m‘ xv-AV HA1 ‘\n.u.\nﬁpnmnw W» ., xl vv(Lk7'V‘J :.vv\\x M\n\n \n\ncmm .\\\nmy snn. m mm\n,, gun» rw numm»\n\nmu Mr}. W mm. Jm\n,2.“\n3m\n\ngues5_my_numhev.m\n\n \n\n1 day_uLwaekm\nfunction day_uf_weekln)\nif n : 1\nrprmm ‘Sunday: ‘ >;\nday_type 2;\ne\\se1f n = 2\nrpnnm ‘Monday, * r;\n\n \n\nday_type : 1;\n\nelself n :\nfprmtH'TuesdzY\ndaLt)/De 1:\n\netsen n ._ 4\nrprmm Hednesday,‘};\naay_:ype 1;\n\nuser n : 5\nfprmtf('Thursday,\naamyne 1:\n\nelsen n 5\nvprsnzfwrmay.\n\n   \n\n   \n\nrpnnm ‘Saturday,\n\n   \n\ndamyne ;\nelse\nfDr1nti('NuInber must be from 1 m 7.\\n'H\nreturn\nand\nif day_type 1\n\nfprJntF(' whxzh :5 a week nayxnp;\nelse\n\nfprxntF(' wmch ;s a weekend day\\n‘);\nend ‘I’ J In\n~:« D-:~ 5': ’f.'.Z'?‘ ' \"Eff\nV K, i a, _ \n,‘._.‘w\n\nr- ¢.y_.r.m..\nr- 253$ 22 ?E2.,.I,Y§lil.“,2 J\n\n  \n\n4...». V\n\nA\n\n\"M 1- 5- J ......w ..L... .......\n.... ,1‘ ._., _, . ...... *=\n\nlhrn , wrvvrm . mm». . mm  . fnr‘1|1ul:vvvﬂEumrwng ».uM.</um: . mm r .1;\nV Lmvvmwm }'Hl§v\\mmuuvnI' ‘J/\\HJ\\B W\n\nmun W. mzunm um-.m wr>....m+\nW. KM m,m_..,.xm'\n4;nnxH sumw. :,\n7.\n\n \n\n«Wm n.m.\\. a-,\nn.>LV1\\)t , 1‘\n\nmm V, :\nVprnnxvx \\ua>aa».\naw Wilt V 1.\nmm; M W.\naanwrr 1;\n\n5\n\n \n\n \n\nvvmmu vm.‘-um. a\nHJY W 7 1;\n(‘\\)k’]4V|r D\n1(>v|MHF um. 1.\n.mm , 1,\n\nmm n 1\n1y>m\\4A<mmw.l.\n\n \n\nmm» . 1\n(ls:\n\n4.,..m.m..,‘, W [k M ‘. M “ y,\nn M W 1\n\n1/mmn .m‘ ‘n-«run\n.u.\n\nhymn! »<h)(h A541 mm, mm» M\n\nmmm. mun .5 A ...k nay\n\n,, div .7: «(Kl zw\nNmhrr W In W“ . U) 1\n\n \n\n\"\"'~M' L v v»; 1\n\n  \n\n   \n\n   \n\n \n\n \n\n \n\n«I J u<:\"‘“ vw mj‘_‘:=v”' ‘ L Ir  a..11..1.11 3\n11:. u._.11 s._.. A‘_:_ \"_ _ W‘  \"J -111.11“. -.11 1.1.». 1,141.11 1.»\nE, ‘ W: . . 1.... 1.1.\nV —. a a -1 .  . 11-11.111.111.111.  . 11m.1...1.11..W11111.1... 1  1 11 1 1\n11 .1111... .  111111....1,m111111111,11..11. 111111111 . 1 1111.111. .\n; ~~-~ 1111,1111.11.1,111 1..,.11,...1111 1 1111. 1.1.\n,_ 4» ~'mw=e;gWm 1 1111-111 1.1,11_..111111 -.\nl_111.,11~ I , MW,\n;;;;;;;,;:;M;,;1_x;;;;,;3 1 11.11.11 5111.11. 1,\n1  11  11 ; I\n1 11.11.11 11111.1. 1,\n1 1.111111 = 1,\n1 11111111 111111,.\n1. 111.1111 — 1,\n11 1111.11. 1\n11 11111111 111111111.\n.1 1111111 11\n11 111.11. 1\n11 1111111 1111.11,. 1\n11 111,111.11\n.1 1111.11, 1\n11 111.11111.1.1.1,\n1. 111.1111 , 1.\n11 111.111 1\n11 111.111.  1.\n11 1111111..\n11 11..\n11 11.111.111.111  11-M1111 11.\n15 ‘ 11-111\n11 1111111111 1\n11 11111111 .1111 1.11\n11 111.\n1. 11111.11 1111111\n\n111115111. .1111 .1 1 .111 111\n\n,1 1111111111 11\n11111111111111m111 1 A:\n\n \n\nM. mm % , ,,\nM“ ' ”\"' m.~.'.4\n ' ¢.,,n._.,,:;\"; -.\n\nu...» my numbvv  2 'H ‘ ’”'““\" 5“‘\"“\"> ‘v\n\nr-mm W /'\\AMDQV_»aI\\u>H Sm\n\n \n\n \n\n; mum \\uc>na\\.\n.. xnmvvv — 1.\n\nu aw ‘. .\n\nu mum M W,\n\nn mu» 1;\n\n.. mun ‘. 5\n\nn ummu m.‘.,m. a\n\n.5 mm». , 1‘\n\nn a,q.«‘., D\n\nu wvmvu s M. 1.\n\n.. am». 1,\n\nin mm n 7\n\n2. Vl>v|u\\4A ~.mw, a.\n\nn <1ayJ17>e , 1\n\n11 (ls:\n\n1» , «Wu. mm.  ‘ Kk M ‘. Vrv 1».\n27 .v M mx 1\n\n2: mu-1H HHVHV my (‘/57\n\n1. ug.\n\n;. ﬁnunnw »<h)(h A541 mm, mm» M\nn UM\n\nmmm. mum .5 .1 W nay\n\n,, div .. «(Ink zw\num” ms! In Vu/u \\ U) 1 A:\n\n    \n   \n\n \n\nM. mm } , ,,\n\nyd\" ”\"'m.~_'.4\n2  .  ¢.,,n._.,,.;\"; -.\n/» 33;; \";“:—:‘_:2\";;—:‘_:j;::—;: . .;;.‘...‘  ,.\n\nw..1ma.yT.mn .5 .1 W nay\n\n,, div .. «(Ink zw\nNmhrr ms! In Vu/u \\ U) 1 A:\n\n    \n\n   \n\n \n\n \n\n \n\n,..m. W.“ i , _,\n..r- - -~ £112.;\nV ., a a _  , mum . Wm. . Mn. . ;.m.u..,..,g..mmmm.“ .  y as ~ .\n.m..m... _  |;1wvu:y.w;m Um/n.IurM»L><4<.me W  ‘Y/\\HJ\\I W a , ‘.m.\\,‘.. .\n; ~~‘   5.. .,» mm . W. \nL w w mu .  d.,_.._....xm -.\n, HM<u_rvWJmMl>orm I M W‘\n335;: ::—:‘_:2\";;—:‘_:j:::—;:j . .-mm W.../. a.\n\n5 «mm ...m..\\, 1-,\n\n, Mm,» = L\n\n. mm H 3\n\n9 ..,mm mm»,\n\n.. my W I 1.\n\nn mu ‘. .\n\nn mum M W.\n\nn «Wm 1;\n\n.4 awn ‘. 5\n\n.5 vvmmn u.‘.‘.,.~. x\n\n.5 aw W V 1;\n\nu c\\:m4ur D\n\n.5 mm. s HI/‘iv 1.\n\n.. “mm 1,\n\n1. Wu n y\n\n1. wmux  1.\n\nn «W». , 1\n\n1: as.\n\n2/» «W... W...  [K M ‘. Vrv 1 “ M\n\n21 H M W .\n\nIn V/Nu-1H .m ‘ H W \n\n1; .u.\n\n,. “mm  ., ¢   M\n\n \n   \n\nmmaayi mun .5 A W W\n,, an .7: mod zw\nNuwhrr W In Warn \\ U) 1 A:\n\n    \n   \n\n \n\nM. mm } , ,,\n\nyd\" ”\"'m.~_'.4\n2  .  ¢.,,n._.,,.;\"; -.\n/» 33;; \";“:—:‘_:2\";;—:‘_:j;::—;: . .;;.‘...‘  ,.\n\nmmaayt mun .5 . Wk nay\n\n,, ﬂay_aI mm\nNu'wl7(rrmslM1u/u\\\\u 1 ~va»~;L9u~ A:\n\n \n\n~e :1 ... «;:_*:V 1%‘ M-Lzffu\" L I!  g.m.m 3\n~:~ °:\" 5': M... _.. . ..,m_  ':\" .'“:;..r=‘*-1' '.'::‘\n\n  \n\n/.  '  \n\n  \n\n#2521 EC ?E2.;I,YZillZ2 :2\n\numm «.,‘....\\. a-,\nn.ny_m>> = L\nmm ‘ 3\nVprnnxvx \\uc>ﬂa\\.\n(M W — 1.\nmm; M sﬂnv,\na»v,m>r 1;\nmun ‘. 5\nummu m.‘.,m. x\nmm. , 1‘\n<\\m4 ‘. D\nwvmvu s M. 1.\n.mm 1,\nmm n 7\n1l>uu\\H ~.W«., 1.\n«my». , 1\n(ls:\n10V|\\v\\H Mm.  ‘ Kk M ‘. M “ ».\nR-4 HJLWW 1\n1DVAn\\H mum V) U All M\nVarmxﬁ M.» \\\\nmF€A¢\\M’.)y\\V »\n\n \n\nugamaaﬂ mm .5 .1 yeah nay\n,, day .» amid zw\nNmhrr MAQK in WV“ \\ .0 1 ~u»~;L«n=~ A:\n\n  \n\n   \n\n \n\n,ql:<Ynv (wanna § , _,\n\nuﬂ“ ' \"\"\"RJ.*_'.4\n/.  .  q.,M..m .\n” 33;: ;;—;g;:;r;;;;;g;r;g . “mm Sumkv/. a.\n\n \n\nmmani mun .5 . veek nay\n,, day .»,(m zw\n\nW, M43! In Vn/u . la 1 (mm A:\n\n,..m.. mm. i , _,\n\n    \n\n   \n\n \n\n \n\n..r- - -~ £112.;\nV ., a a _  , mum . Wm. . Mn. . ;.m.u..,..,g..mmmm.“ .  y as ~ .\n.m..m... _  |;1wvu:y.w;m Um/n.IurM»L><4<.me W  ‘Y/\\HJ\\I W a , ‘.m.\\,‘.. .\n; ~~‘   5.. .,» mm . W. \nL w w mu .  d.,_.._....xm -.\n, HM<u_rvWJmMl>orm I M W‘\n335;: ::—:‘_:2\";;—:‘_:j:::—;:j . .-mm W.../. a.\n5 «mm ...m..\\, 1-,\n, Mm,» = L\n\n. mm H 3\n\n9 ..,mm mm»,\n\n.. my W I 1.\n\nn mu ‘. .\n\nn mum M W.\n\nn «Wm 1;\n\n.4 awn ‘. 5\n\n.5 vvmmn u.‘.‘.,.~. x\n\n.5 aw W V 1;\n\nu c\\:m4ur D\n\n.5 mm. s HI/‘iv 1.\n\n.. “mm 1,;\n\n1. aw n y\n\nn W...  1.\n\n22 mm» . .\n\n1: as.\n\n2» mm...‘ mm.  .K ‘V/V! . Yr 1 “ M\n\n13 W\n\n,5 .. awwe 1\n\n2, «Wm  U41 will MM!\n\n1; the\n\n2. Vnrw-VH  h _ N   A\n\n.. dﬂY,wV_>rc¢H u\nNu-mm M. be myu . w 1\n\nmm... mm W or viV)iD‘l' -.m_M\\- .\nErrar m 4 ..~ -gm H1716 zs‘ A:\n\n \n\n,..m.. mm. § , _,\n..~- - W‘ m u. 4\nV lhrn r mum . ma». . Mn.  . fm‘1|1ul:v9vﬂEummmg pmmmyuk . Ymmuh r as ~ .\n\n \n\n. [mun |;1wvu1L|-‘rmUm/IL/urMyL>o<.mevLcmpnvm>'ur<\\mmuumU‘V/\\HJ\\Im V. , ‘.m.w.. .\n\n \n\n   \n\n \n\n” :33: ;;—;gg;;;r;‘_;;;;;r;: . “mm Sumkv/. a.\n.. dw.WD\\*'l.\n.. ‘. .\n., VDVWVKVV  \n., Wm H\n..  5\n.5 am». , ‘L\n.,  D\n., W... F  ,,\n.. am». 1,\n2.  7\n2. W...  ,.\n1] «.,,.,».,,\n1, (.5.\n2, ..M.m .\n1,   \n\nummm ‘UH m .. w,.m ‘m,:w«»\n  9L0!/IQOK u  yr.»\n\n,. ¢.,,xyn.\n,, m_.,:_m« 2‘\nNwhrr rust In Vu/u \\ W if—statement summary\n> if—e|seif—e|se—statement:\n\nconditional\nblockl\nconditional\nb1ock2\n\nconditional\nblock“\nIsa\n\nblock\n\nC. Lead Vnstructorz Mike Fitzpatrick\n\nCUWCLNUW destgﬂ: Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology. Robert Tairas VANDERBILTVUNIVERSITY\n\nINSTITUTE\n\nEOIESITAL\n\nLEAR.NlNG \nET."
  },
  {
    "path": "E:/Coursera/matlab/06_selection/01_lesson-5-selection/05_nested-if-statements.mp4",
    "id": 5624,
    "text": " VANDERBILTVUNIVERSITY INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB‘ INTRCZ ,1\" Z\n\nPROGRAM’ M’ ‘.I— \n\\;’;— SELECTION\n\nNested if-slafemenfs Nested if—statements\n\n> Here is another version with nesting:\n\nfL‘C;.0n u1tinnte_queation_nas:ed2(x)\n1: x <: 42\n;: x xx 42\n\nEpxintE[‘Nnu‘ wnu nw:wor>u ‘nu 5H¢:L‘n1.\\n‘¥\n\nfyrin£f(‘Tuo Lmall Txy ugu;\n\n\\:\\‘)7\n\nend\n\n£px1n€f(‘T1u b;g, Trv . 13 \\n’); Lead Vnstructorz Mike Fitzpatrick\n\nCUWCLNUW d€S>gﬂ. Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas VANIIIIIIIHLI‘ V UNIV? H’o| I ‘V’\n\nVIDLW VANDERBILTVUNIVERSITY\n\nINSTITUTE\n\nEOIEEITAL\n\nLEAR_NlNG \nMT."
  },
  {
    "path": "E:/Coursera/matlab/07_loops/01_lesson-6-loops/02_for-loops.mp4",
    "id": 5628,
    "text": " VANDERBILT  UNIVE RSITY INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB LO O PS\nFor Loops Loops\n\nThe loop Is a new control construct that makes it\npossible to repeat a block of statements a\nnumber of times.\n» We have already used loops without knowsng it:\n>> n = 1:5;\n» total = sun-(n);\n. MATLAB uses loops internally both to compute\nthe result of the colon operator and to compute\nthe sum of the elements of the vector 11 above.\n\nImplicit loop Schematic of a loop\n\n» Let's compute the sum of 1 trough S w/thautusing\nthe bui|t—irI sum function!\n\n. Use a loop: 1\n\n...,..e :5. . = 1 c. 5  V‘. Execution\n\n, Set total to o\n\n. Set n to 1\n\nn Executt Add n to\nequals 1)\n\n, Set n m 2\n\n. Execute Add 71 to\nequals 37\n\n. Set n m 3\n\n, Execute Add :1 to\n\nequals 6)\n\nSet n to 4\n\nExecute Add n to\n\nequals 19)\n\nSet n to 5\n\nExecutt Add 71 to\n\nequals 15)\n\nPrint total\n\nof a loop\n\ntotal (tomi\n\ntotal (total\n\n \n\ntotal (total for~|oop\n\n. MATLAB implementation using a for—Ioop:\n\ntotal = 0;\nfcw n = 1:5\n\ntotal = total + n;\nerr;\n\n \n\n£pzin:£('r :1 equals :c'.\\n‘,«:ota1); 4 a» J  2 _. v;-ff-_'_‘__ _g:;~:;: ‘: ,.._.m.. 2,  I\n\n.....u.n,:...u.»... 5.. -1\"‘ ~' ..,.._gm... Mu \"\"'”\"\n\nW. . . Dru ........ ,c.......... _‘<..(...... . . .\n\n.» V 3 2| » Ultk » mwam V nvarbux . wnmmmm» » (nmmmv>'VG«1uVrvvmw-rjwwxh mun v mmm. v Vexuv-HI; ~ yr\n. W.  .  \nfwwm 1 Ywuvvmv >u'unlu|V(NY .\n\n ; 13» —:N\n\n;r-=«-mm . xuut — (Dl4\\ . \n\nL  71! § \n\n.Wm,_m 3 .W..‘    ....‘..,\nM mnajm » Drnnhox » My Dtxnmeuu » Comvulevwosvam rug wm. mrua » Tum\n‘ E .1 m E/IVIZDIJN/DH1pbDX/MYDOCLIMEIIIS/CUIUPIIIEI Praqvammmg mu MATLAE/Tulonals... (9 x Workspace\n\n \n\n  \n\n \n\nwmmmpm - + Nmu Wm\nmmcuon smncuprm I EN 5\n\nO ‘ xotal 0\n‘ Var n = J\n\n \n\ntotal mm . n:\nand\n(nrinm ‘mm equaxs ud\\n',ma1):\n\n \n\n \n\n» 5um)ntup15)\ntuta\\ annals :5\n» summ-mun)\n(ctal eauals 55\n» summupuaa)\ntutal equals sasa\n» sImnntu|I15l\n\n2 tntal = o;\n\nx~.I<>>I _, J H  V w,._,,. . L‘ _, _?   a\nW W  :=»~~~-  «mm a - Wm  W:   . QM\n\n. . . W. W». m..W‘w . ‘ mm W.\n\n. . g {I , » A/nu . m.;».n. . umrnm . Myliammnvlv » mmm.~aw..,.mwmM.u.u , mm. . . Vrunralz ' ~ I\n;r;;;v;~;M 1  .  <\n\n \n\n \n\n,, ,um.M4.»\nu1u\\ mud: 1;\n,, )Umrn1vu>(\\5)\nmm edmk \\.\n,, m.m.,«m»\nmm Adm‘) sm\n.v 1uMmKHp{\\)\n\n2 mm\n; x» wmu mm.\n\n \n\nL14 .. u\n\n \n\nat J H ;;.....,. , ......_,,._.. W\n\nW. 5... .>=».... . .,m.- mm‘ a 2 « ........... W... m —\"\"'”'\" W... ~ q..\n. . _,,,.,, . “N. . M... w A . .,....(.... ........\n\\/ . g z. , ..\\..\\.,..,...,W.....,.,.............,..,.....,..........W.... .............\\..,... T 2\n.........,... . .. .  .\n, W.  \n f;j.\"_\"l...  4.   >........m. 5\nm........ .\n2':?:.'.\".;:.:......  ~ \n\n,;:,.,.,.....m ......u W. W... .. ,....m\n\n \n\n» ,.m.m..4.>\nLvl.1\\ <qm\\s .5\n,, ,......:.»«m\nmm sank ..\n,. ,..m...«m»\n.....\\ OWN‘) wso\n.. «,......pm\nLu... 9\n\n.. K.) ,  _, ,. _4 .\nmm. . 5.... am‘, ,1 , W kg‘ !4‘“““‘“\" K’\n: - ......m In hm»! um,“ Mm\n—mw. ,.rh-- MW; . . mun Wm\n\\¢ . .1 ac- .u\\..\\.m,.,..n.,mm“..W..W.m..W.‘..,.»m.‘.Ww..mm.  i.\nm..M.. - 7,m.xm  “...‘.M.W..‘.,,,_.\\,   .\n,.““”\"\" v Mhmv >\\n1nluW5U\n‘WW. W. W , W, ; ,\n M ,5, A V _ N\n,-=3‘-k~L;;‘;L‘_m W... ..7..m,\n£:£»ZJL...m wwm W W... .‘_ .....m\n\n \n\n» ,Wm.u.»\nmml <qu.\\\\5 .5\n» \\UmHV1\\/V(‘0}\nnun emu ,.\n,, mm.,um\nu1m\\u1.m\\: wsu\n,» r.ummmp4)\\\nLam 0‘\nlat-1| rvwah u\nh ,4 Parts of a for—|oop\n\n \n\ntotal\n‘.2: n = . T control statemenl\nloop total = total + n; — body\nart‘\n\n£pn.ntE(‘. ' .~«,...Lr, .«\\‘«,1‘,tota1): Example revisited\n\n» Notice that we do not need the list variable at all:\n\nrm x = undu,s>\n\n     \n\nm x > 0.5\nfprim:f{‘.‘. . :\n\nelse\ntpnnm .‘im.<Zr\"v nuvbz: ,. _‘ :.‘.1‘ . w ,x)\n\nma Observations\n\n. The values assigned to the loop index do not\nhave to be\nIntegers,\nregularly spaced. or\nassigned m Increasing order,\nv In fact, they do not have to be scalars either:\nThe loop index will be assigned me columns of the array\n» Any other control construct can be used in the\nbody of the for-loop\nmsratements\nother loops\netc. ‘_.—, 4 \"W 3  . .w..~.. a _\n... .. nun mu. M... 5... -I°\"‘”\"“\"\" -'*“\"“‘\"' ...n am... M \"‘“\"\"\"\"”\nM. . . I W. M... Jc....,...... _‘(|Al(CVﬂBﬂ| . . . W”...\n\n3 ix _ 'U)tV\\ . »m..m . Um|1:Mx>Mv|)¢<mVI<rvnvkwvmvv>'V4‘<1mnmwnr1ww(hMAHAVV n..m, . \\r««nrA\\u\nw.m‘.«.. (ONV «wt-\\wmc.\\ . \\.a»¢,,, 5' J ,3 ;m.m,. , m..H,,. . D._ E 9 M Q\n\n        \n\n   \n\n \n\nnu aw 5. Accra». - “mu. ummn <1. ; 4 .,..4,.mu Kunmue Kw -\"'’°\" ., L... V q...\n. . Hm. WWII MWJ . §<_,m-m(uvv¢ .......\n;~;;;»_v;m 3 ..;.,,.mu.m: ‘ ‘ \n\n;:c.,wm.m , my ’ ' >\n\n;“:q~'~‘~ x— vm.‘..ux.Wm\" mm M _\n\nr. ::.::M 2 \n\n- «:5.\n\nh K». wmal R2014]?\n\nruansn\n\n    \n\n \n\na re bB:::ul\n\n--zgnms_ 499°-we an »\n\n \n  \n \n      \n   \n    \n\nayu/Dm9lmxlMVDucumenrs/ComnumrPragrammm... vv\n\n* ‘_\nLrheck\n\n  \n\nValue\nIn.au7.o.9asa‘u :27o.o.9m.n.a324I\n\n5 x\n\n \n\nmm s. assxqns a row mm m random numbers\n\n5\n\\tf{‘HanrIom number at )5 large.\\n‘,x)\n\num ‘Random number an IS snn\\\\\\.\\v»‘,x) Value\n[o.a147.o.9oss,o.127a.o.9134,o.5324]\n5\n\n \n\ntor of random numbers\n\n\\arqe.\\n',x)\n\nsma11.\\n',x) 5' J H _'.FvmM:) . W..‘_,,..;. V, IL Um Q\n\n \n\n   \n\n     \n\n           \n\n   \n \n\nrm :2.» 5... -=vm». . 4“... (.,....m <5 :4 ‘ u..¢..m. (unlmue in -\"\"’°” mum“ ~ on\n- - - _.‘,.. ,,... mwud . U.W,.. .......\nV ‘ a z.  . m.,..m , .».w.. . MvUc<mmnn . k.m,,m..,W,M..mm..  . ‘.\\..W T L\nm,..M.‘ . ‘.‘.‘...W....‘,.‘..—.. ‘   V\n- W W . ‘ W. \n4  1 ‘  .« ‘Ml wnumamsoxzru/xamM321!\n;:;;;-hv~«~m 3 ..;. , ,.nm.m= ‘ ‘K ,  ‘V m cm\n,_ kg-m‘ .7 W nu\nL _‘n.D.m.W.m H V, “M\n.,,,,,,,,,,_m 3 Wmm.\\m..w    ..\n;gm«»«~ X, ,,.‘.‘..,,W\" M. M ‘ \\. ,,‘\nmm.;.w..‘... .\nN :5)\" 5' J H _'.FvmM:) .\n\n \n\n        \n\n;:;;;-hv~«~m 3 ..;.,,.nm.m= ‘\n;g'm~»r~ 3, .Wm mm W\n\n(y'uFHv:\\Vm.‘a.»\n\n_ N r_;‘mn.\n\n/ K».\n\n \n\n \n\n1 M M\n_. hymn\n\n.,._m.,..\n\n \n\n \n    \n\n.«\n\n. . Wtwor an\n\n \n\nW Ml)» u/mo mu D9134 mm _-,‘;m‘,. V  ., ,. L4 .\n\npa\n\n         \n\n  \n   \n\n \n\nV  -  I-W‘ 1- 2 — M...“ M W. Eifﬁfﬁ“ mm\n_m - W . ‘HMWLJ . . Mwm Wm\n’”“1\"\"' 1 Ymnhmv |unn_lr§l\\9H ..A\n;*;;;=_v;k;~ 3 .5, h , ‘ N '\nN 5 ‘, , W , ,V «\n,.mf“~ 3 4w.” W Mn ,-KVHH\n\n«,5.\n\nRnunrwm  . exnzx .< hﬂqe\nRarmnm nu/MP? u wan) ,5 me.\nmm rmnixr o my .5 3V'J\\\\.\nRunﬂam  o amm .. hmv.\n,, rmzmr —':Fzpa;m nw5o:Hx r y5o mems > ampuler mgvimmvngwl  :anas r zssan\n\n11.:-I-.“In'7;uJnmDmplm. yDn(wm-n ., umpnwrFmqnamvmn Workspace\nvand_che(k m lo0|1_tesLm + \"i\"'° ‘ ‘/3'“\nfunction 1uap_test(m\ntotal = D;\nfor n = 1:N\nn\nn = 7| . 1;\ntoﬁal : tutal -r n:\n\n \n\nend\nfprmtf(‘Total: m\\n~,mau:\n\nxoastovuwbwwu‘\n\n \n\nCommand wmuow\n\n» rand check\n2 N = 5;\n\nRandom number 6.814724 is large.\nRandom number @.905792 is large.\nRandom number 0.126987 15 small.\nRandom number 0.913376 15 large.\nRandom number 6.632359 is large.\n» rnglﬂl\n;,_ »\nI 4 .3 rd 5-:”\"“j _ «U _ (_\"‘:_'«':~=/W ' ._ P ‘F. e.m_...n .-\n.. Q.“ ... » W“ w ~ 5 2 ~ Mm Mn N. L_7lAv]n[[ Mm\n. . ....w. _y... WW1; . . ....« u.\n- £1 a.  . W... , nu-rm. . W.,w.m\\ . KIVMDVnv>'Nﬁv.nnm\\r\\nww(hMAHAMv  . ‘rum-OI, ~ .\n . gm .,w.‘.,,,.w.. M(«}NH‘HHV'\\   . ,  .\n,__\"“1\"\"‘ 1 h,mV‘mv xmmmunu .4\n , W, _V\n_J;;;g;f;g 2 Var n , 1 N\n:>'._m..m.m 5 \" \\Y~L 2 '\n.\\W,,m_M I“: W lblil ; (OKAY \n’,,r;~;‘v‘-\"**\"m R wmuu rm ,M,u>:..n,\n\n \n\n».,.mm  . 511771 ., Lwvue\nmm. mm a unsm ,5 Large.\nmm rmmbcr a usual .5 sVh}\\\\.\nRunﬂum  emzzvs .. hum.\nmm mm . Mrs»; A W.\n,, mm\n\n., \\mw,uu4s>\n\n2\n’ J\n5\nmy 2»\n«. .. 4 * J  9 J ;’2:Ii';‘.'.1. :i;”fZ‘.TLi — \n;: ~.~ °-.~  \"zr.\" ..:.::.. dz........... ' \"N am\n\n» -M H z . m.m.m\nmu —v(nr. .;MnllHu W i ,. ,L . , » B, \"MM\n1 3. “I ,—=»«~~  <--~ » s ,- ..:M. II  Sm... \n. . . .,..‘... ,;... m.wv.__. . . ...... u...\n\n, , a 3 <,..,..,..mm.n...M..wnmmm...(mm.m.,..mm..m.m..m...‘.‘.....wus\n\n \n \n \n   \n  \n   \n  \n  \n\n  \n\n,;m;_,;~mu»v .. .  H H ( , H 7v~  H \n\nM W “U5? VIL H\n\nmm x. v WM\n\n  \n\n   \n\n    \n\nVVUI W _n no a\n:~..w- m» a‘\n\n;‘m,.m.‘.Vm _ W,\n\n“mug;-Mu~w V W H in\n\nr. ..W,‘.m Hm , rum) 4 Nu xn\n\n -VHV(4Vn .-\n\n>>u=|34H!!\n»_ mus\n\n \n   \n\n,. Var H — . m.,...m\num nun VVHHC ‘ funzuun v\nu 1 ~1ssca\\ar[rI) n .. ( 1 1| n .= mx Is.u.I.21\n:rror(‘n r-us! he I Msxuv: xnteser V 1‘-‘<75-'1\n\n \n\n \n\n’ w In,-u,-2,-51\n«mg; « nu-11:\nm I\nCummandwlndnw <9\n\n» u -.- IS 4 a 8 2!;\n\n» v (5 5 7 u an\n\nV: '\n\nu 1 n .5\n\n» for ) Ienqlhlui\n\nmm = um: — mm\n\nand\n\nw =\n\nn»11I4\np_» low. . ,V.... M...‘ 1 ,, ,.\n\n\" J u ,;m.-M. m..‘.‘,,.,;.  V B. WWW\" _,\n\n   \n \n\nM ...w.  .,..  Mum\n. .  ‘EH7 WWL4 . . W\n,..,.,m\n\n \n\nn—a\n\n  \n \n\nttmmm\nN... mm. “' 5 H 33:1“: .  (.:;|“‘ '' L1 V “*3 BI'*\"*““\" 3\n\n-.. a... .... J >“ ~' 3k V v .......,».,  ..... §:‘AlurK: lurur-4\n\n. . .:mu- W... w..um_, . . Alvuuq\n\n- » a 2 , ..,\\....,..._.».n...m..m.m.n.\\.(.m.,p,L.,..mm..‘.»mm.. \\’umvuh>|umnﬁG .\n\n;.m.mm. ~ xfkusm .,m,«.mm u,...»..MW . . .\\.m..‘.,\n hbum . W. \n‘3~-aw . vmun/mr:»muLvH _ cu s\n*r=v»~w-mm 2 .  »<, 7!‘ Fun 2» man\n:¢;;;;;;; 3, ' rrrnri MU U J M.“ -nmnnt ‘i, iv .;;|7V,:,n\ngr--M 5 HIV 1.\nytnnﬂlruxm ,, W, ,\n;W..,m , ,0,“ W\n,,3r;vj_gM 9 Hm rm—2v-mu.‘\nV. uuml may HY ,\n\n| \\w«m.u;\nMIN 7 mm » mu‘ m '«\n\ni§I1Ti:.‘;Z“m\"’\n\n .4 1.\n\n. <.,.._‘§ V4\n- m\"‘[llJ'_‘._‘\n\nmum.\n\nb”:\n\nE, M W.\n\n9\n\n \n\n \n\nKn» an ; mm;\n\n..,,._m,.\n\n/nr K V l.:u\\\n\nma\n\n \n \n\n(umvwr .vm<,:m\n,. M ; .. 4 x x n\n,, V 3 an\n\n0 1\n.. V:/r .. n u-rm»\n.4‘. nun — win\n,, A,n1n;L\\|6‘3‘H\n3\nin\n2\n:5\n\n \n\n«W ..m»\n\nmy\n1:\n\nm\n\nIn MATLAE R20l4b\n\n \n\np 1 mm: Q pg E . 2 J.\n?]GoTov Cnmmenl 3/3 3 B {R IE L‘3JR\"\"S\"\"°\" LL?\n\nIruknmnrs W\" \"‘“\"V\"\" Advante Run and\n‘HM v lndem  L‘, V Time\n\nmam eon nkuxmrnts mm\nzpajm » Dropbox > My Documents » Compuler Programming with MATLAB » Tutorials » Lesson as\n\n% Edllar - /Users/ﬂtzpajm/Drophox/My Documents/Computer Programrnln... Workspace\n\n \n\n \n\nf\\bu.m mu|.m + N‘\"“‘\n\n1 » [row col} 2 size(A); Q1 DA\n2 » for r = 1:row \"\" D\"\n3» forc:1:co1 F3?\n4- P(r,C| =A1I',Ci *A(I’,Ci; - '3”\n5 ~ and HIV\n6 — end taw\n7\n\nCommand \\N|VIdOV\\\n\\\\ 1: /1 n e 1! nhom . mulm / +\n\n \n\nA Itmﬁmi 4 s1zeUl):\n\n \n \n\n1\n2- “for r:\n\n3' 71 fnfc\n\no— 1 Elnc) — A(r.c) x A(r.c)Z\ns~ 1 end\n\n5- ‘end\n\n7\n\nCnmmand wmdcw\n» u [5 4 B B 2]:\nB17\n\n \n\nValue\n3x4 dm/his\n5\n\n3x4 doubli-\n[s.4.s.s.2l\n[s.s.7,s,aI\nI0,- ? J H    L; b  g,..n_...n 2\n\n \n\nu.. Itutrvm N. M. 3...“. ....,.\n. .,... . ,‘.... . Mw.__, . . ...... w-\n, . .1 a _  . mm.” . W...“ .  . fnmpmnVu)gummmqw\\lAMAVVAII m...,... . ....M¢ .\n\nn 3 V Ixbo/W mum ' L...“ IAN!’\n\n,~-W Hvw ml} : mm. :1 ~ \n\n‘,.\\unvn,mnr'\\ ,,, , , ,  :. A\n\n; nlpmhm ..,. z m‘ U.‘ 5\n\n,g:;g‘-;_1;;-“W mm YV,1\\VA\\v‘KY :; ‘ ‘\n\n«$.23. m 7% fl.” §\n\nL    ; . 54 « I21\n\n‘mu-Wm .5» sun:\n\nLrmm ,. u nu ev\n\n  \n\n(Aw vwwm, .\\ W. .\n,, M ; x. 4 x x 21\n., V 5 an\n\n \n\n,. Mr .. — . mam\n.m W.» —mn: [5 Editor — /VUsers/fltlpajm/Drophox/My Documents/Computer Prugrammin... (v) x\n\njvibum ~ mul.m 1+‘\n\n1 - [row ﬂit] = sizel/U:\n\n2 - for r = 1:row\n\n3 — for c = 1:cn1\n\n4- E(r,c) =A1r,c) =orMr,c);\n5 7 ‘ end\n\n6' end\n\n7\n\nCommand Wmdow\n\no -1 1 o\n» far 1: = 1:1ength(u)\nw(11') = ulii) — ms);\nend\n\n0 -1 1 o\n» A = randi(10.3.4)\nA =\n\n9 1e 3 10\n\n \n\n \n\nWorkspace\nName A 1- J in ‘-'L‘\"‘'‘‘_ ‘W (__‘;‘:;:j=\"»'A‘ .'_A v K, g,.m..... ‘J\n.... M ... ~- W-r v- - - n r .......n  Iunad 3...... .....\n. . .‘,,.,.. . ‘.1. |lﬂ~1KwH‘\\_. WT“ . ...... ~ V...\n\\( « 4.1 E: , v mm v Nlblxm r nmmm y >4vl)oLuu’:ul\\ r CmmiuluFwawmmuux;MHIMAH/kl - IuKuH]'> ~ Lu»lm0¢ ~ J\nL»;-3-‘~‘u-u « Am.  W.m,,,,m. Wm »..Wm. . . .\n7‘;-mm . W. ml) , §uukM. g »\nmm ,, W, L,“ . .\n ,, Hu< Iva! ‘\n,‘;m;;=~~~, : vAr.:\\ W.» . mud. — 5\nN. umnnrr , M  ,.\n.»;.:.‘;... 3'  :\n Eu Vuuxﬂ\n[mm _. H»/XIV\nV; ‘»;»;m»M M m IHI M\n\n \n \n\n-3 1 a\n,, Vor .‘ 3 ..mm\n«Am , mu) , mm:\n\na . 1 n 5\n>~A v.um(1n‘>,n,\n\n9 n 3 m\nto 1 D 2\n. . u In\n» .- ; A M\n\nM we -2 ma\n4 x mm m\n\n1; ma a mu\nm m :5 4 .5, ,1 A .\n\n1....” 1 ,1\n\n \n\n111.11,111.11.111,11,\n\n \n\n......,‘uu_,\n\n. 11111 . 11.1.1.1 1 1.1111. . 1111111111111. 1 11.11.11111111111111111111110111111. 111111.11 . 1.11111.\n#11. 1 11111 1111.11:1.,,111.. 11111_111.1111>11111. 111 11.11.1111.\n\n1 11,. 1.11, 1111111.\n1, 111 1 1.11.\n\n1, 111 1 1 .11\n\n1 1111\n\n17 \n\n \n\n1 1 1\n,, WW .1 1 1111111111\n.11111,11111,11111:\n’ 1 1 1 1\n>~A 111111111111\n’ 1 11 1 11\n11 1 1 1\n1 1 11 11\n“-11.1 1\n'11 111 1 111\n1 1 111 111\nM11\n'11 111 1 111\nm 11 11 1\n\n \n\ng, 1111.1... Wovksnace\nI Nam. vame\nT LEA 3x4 duuhle\n2 . ‘m\n3 . Hm:\n4 - (r,c): iii‘\n5 fprintfl (xv sum: .r.c>; W,”\ns - and :W'\n7 - and WW\n8 F3\"\nEHV\nLEW\nCommand Window 5)\ne -1 1 o -s\n» far 11 1 engmu)\nmm : u(ii) - vnm:\nend\n» w\nw :\n\n0 -1 1 0 -6\n» A : randi(10.3.4)\n\nA :\n9 10 3 10\n10 7 6 2\n2 1 10 10\n>> P : A.tA\n\n51 100 9 100 1, J U ;.W. \\( ‘H\\lY[mﬁ_  D 5 WWW\n.. M 5.. <--~- '   6 u v ..u...n.  M... W... W.\n. . . ,,....  ...,,‘,w . . M. ....\n . lrmumll   ~ ~\n;wv~«« . mm my.» my,  —  =\n,_«yv_=-“<ww~~ 3 mm ‘W \\‘.‘m.x 2* '- ‘\n- ;.‘:;:,...m »r  A ‘W 1\n; «; Lu \n, M ...\nL-V?“ N m \n\no—)1a\n\n   \n\n,, .9. .. 1 ..m»m\n-Am , mu) , mu:\n\n., . .‘.‘.mu,:.u\n\n’ 9 m 3 m\nto 1 D 2\nu run 9 ma\n4 ; nu ma\n\n.)\"\\U‘\n\n'u we 0 mu\nm 4'; 15 .\n\nr M) f . 1.. ma 931:‘:\n'‘.'‘’:'“‘T'\n\n \n\n-,11a\n\n- 11.11‘l§.:‘Jl\n:1 11.111  N\n1ar1d_<?m:k M\n\n .3, [1  ~ ;\n\nD\n\n  , , __:_m \n ...1ww . .\n\nI:\n\ng, 1.11.1.1\n\n \n\n \n\n, 11.1 . 1.11.111.‘ , 1.111». . 111.111.11.11. 1 111.111. m111.1.1.1m1.1111111A11 11.11.11 . 1.11.1.\n\n \n\n/.1111,”\n1 111. 1.11 11111\n1, 1.11 1 1.1.1.\n\n1 111 1 1 .11\n1 mm ,\n1 11111111\n17 .11\n\n111.11 .1111\n,1 1  1111».\n\n111.1 11,1. 1111.11-,».,.1~1111111-11111m,..111m111.1.m\n\n \n\n \n\n1 1 1\n,, .9. 11 1 1.1111111\n..1111,11.11,11111:\n'1 1 1 1 1\n.,1 .11.11111,:.11\n’ 9 .1 1 11\n11 1 1 1\n.1 111 -1 111\n4 1 111 111\nM11\n'11 111 1 111\n1» 11 11 1 ;;g,.w..w... W25, ~ v ~ a\n\n, . Q ;. ,,.,..m.W..m.n..v,.,,.M,.m.‘,m,..u..‘»‘.,,mWWW... \nWm, . JHMKWV u.M.,‘,,‘..L,‘m._ .  \n.  {ruvm UVMM . ~\nM.“  ,,, ‘A W,‘ a\nL‘W,,,.,,m 5W -5\"; . ».. mwm\n .(..; Mu} mm\nA mm W\nA-.,..»...m,..m .\nmuhw.\nW, ;\nWM 5\n12wn1(\\m(knv ..\n\n; Var: 1.<o\\\n. ﬁrm! «..n.m,u;\n$ rpnnm V4 U M».\n\n4 .\nmum. an Command wmdow\n\n \n   \n   \n\n \n\n1 . ‘ mu.m‘ + W‘ D 1 D 6\n—— _ V . ‘ 5A—AAA44444444444444444444441i »\n;_ figgwrcnll ;m<N~ _ ,,;.,r .1engmu>\n3 fprintf(‘Work1ng on row xa...\\n‘,r>;\\ \"2\" : “(m ' \"‘“\"\n4~ forc=1:col :2\n5- P(r,c)*At1r.c)*A(r,c): — J‘\n5 - fprintf('(\\d m\\n'.r.c>; \"' ‘ _1 1 9 _5\n3: ram 9\"“ ,, A ramua,:.4>\nA :\n9\nW 9 10 3 10\n'10 7 6 2\n2 1 10 10\n>> P : AAA\n\n51 103 9 100\n100 49 36 4\n4 1 100 100\n\nB1 100 9 100\nlea 49 :6 4\n4 1 100 100\n>> mul\n(1 1)\n(1 1)\n(13)\n(1 4)\n(1 ‘H —_.m...., .   B,\n* J *5 mm. W.  ~ P -~ a-Mu» 3\n.~ 0:40! W » — ....M,  ...,. :.,l¢uru .,...\n. . .5... W. mu.“ . VAIUIM1 M\n (1 1,\nH71\nNM!\n(11!\nM\nan\n.1»\nM\nan\n(3..\n/.,, ,_, ,, _, .\n.,,=.... Q...” 3; X _,\n\n‘7.\"\"..' \"'“,\"‘“\" \n\n.'_A r H. WW\n-IW) .1. ,,.,,.. ....\n\nzmm u.s..m,.m,. nmmu 1Vw'Hn\"u\\\\m7H..\nan}; -«\n\n,, u n\n‘avhvaxgqn M I u 2;\n‘_.,...m,m ; W M W 5; :1\n_.W'~*~~ ., “mm . V.\nI ....m.m.m t M 3 ;;\n“mm s rmm m‘h ,\n‘cuuﬂlvnk N ,, G :1\n“ (3 n\nu 2;\nHAILHQAHU1  u 1,\n.»\\..M u 1;\n,.m.. M ,. rm\\\nMud mm.\" Iuvhvm a.‘ N74 \\\n‘ .Mm.m u n\nu 2;\nu an\nn u\nvmr-um: an 713.! 2\n(2 n\n,2 n\n42 1:\n(2 .;\nVufkmq (/1 W. 1\nn n\n.3 2:\n(2 J;\n11 u\n\n»-,,x Iv-u\n(armor.-\nend\n\ntvrmzH'\\n‘H\n\n \n\n \n\n(1\n(2\n(2\n(2\n(2\n(3\n(2\n(3\n(3\n\n41\nn\n2)\n3:\n.21\nn\n2w\n3)\n41\nMIA\n\nwarkmg on row 1...\n\n(1\n(1\n(1\n(1\n\n17\n21\nav\n41\n\nwarm; on rm: 2...\n\n(2\n(2\n(z\n(2\n\n1:\n2r\n3:\n4|\n\nwumng on mu 3...\n\n(3\n(3\n(3\n(3\n\n11\n2:\n31\n4:\n\n» asuzrlsks Q Editor - /|_Js2Vrs(/ﬁlzprajm/Dmpbox/MyVDg(urnenKs/Cam...\nV’ asleriskxm\n\n   \n\nIE0-m\n\nfor min - 1:14\nfor nn - -\nfprxntfmn‘);\n\n \n\nfprintﬁ '\\n' );\n\n \n     \n\n» mul\n(1 1)\n(1 2)\n(1 3)\n(1 A)\n(Z 1)\n(2 2)\n(2 3)\n(2 4)\n(3 1)\n(3 2)\n(3 3)\n(3 4)\n» mul\nworking on raw 1...\n(1 1)\n\n(1 2)\n\n(1 3)\n\n(1 4)\n\nWorking on row 2...\n(2 1)\n\n(2 2)\n\n(Z 3)\n\n(2 4)\n\nworking on raw 3...\n\n(3 1)\n1: 7| - . :1 a _y...\\.,\\ . W.” . mm . Wm.‘ r m,.u..‘mmmmmm..m...‘... . ...\\.m.\n\n.4m.m rusemh'/‘uw«L)n:ahnKMvu ’nv'vm) \nr7|l\";\":7 /mﬂm avveruxvrv ml\num\num. -«\nVnrnn W U“\n\n3,\n\nu u\n., “mm . V.\n,,\n\n....m.m. m\n\nM, u n\n\n, M (1 1;\n¢..¢.,..k N M, ’°\"\"‘ ‘ ‘ ' (2 an\n NY A; .;\nmm (2 1)\nmm (3 1;\n  u U\n»-,..»,.m.m u 1;\n1-t<v1h( M ,, M\nW mm:-n wvhnu an W. x\nn 1)\nu 2;\nu 3)\nu .1\nHarlow H’! 71).! 2\n(1 n\na 2;\nu 3;\n(2 .,\n.m..‘, (/71 W. 2\n4, 1)\nr2 2;\n(2 1)\nu 4)\n\n1-))‘ Lead Vnstructor Mike Fitzpatrick\n\nCUWCLNUW design Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas VANDERBILTVUNIVERSITY\n\nVl  IFISIRSTITUTE\n\nDIGITAL\n\nLEAR_N|NG \nln[."
  },
  {
    "path": "E:/Coursera/matlab/07_loops/01_lesson-6-loops/04_break-statements.mp4",
    "id": 5630,
    "text": " VANDERBILT  UNIVE RSITY INTRODUCTION TO\nPROGRAMMING WITH\n\nMATLAB LOOPS\n\nBreak-Statement H .3.W.. m....@;. I ,5: WWW R\n\n,:.m. . .0mIu- =m...A . , M M\"\nWV: . __..... ....m_J . ....... “nu\n\ng a _ raw. , mm , w..»~.. . MvDAh4mu\\l\\ . KmdltullxI>ux4MmAmvV|4w\\'4\\MAVLABA MW» r .w,u.,\n\n \n\n \n\n     \n\n rank . .«.m.‘. mm. mW,m,m..\nmm H mm ....u...‘...‘...‘. t W»\n' ,.WM . \\‘» mp», .. M...“ ,...m.. .. .........., 1\nL  , V E,__,,,\nt :'“:;ximp:nm 5 .m\\e ‘n . Knrwmrcznxmjar M. rnd:rv§S‘|H V m\n,,j;;;W~~ 7 u.mm»\\.\\ e,\n\"(manilnvvlm :, \n7.. 17;‘;  N u  Exvnk 1\n:.'*‘~;\"” 12 -.7, ., m»m}.»mnI;u‘ \" '\nL '»3:;u;'Tm ,. ,,  mum > mu\n V‘ .5 max‘\n.; ‘ rcazmjsun , ‘\n7: :\nZ} omen-1 ‘\n15 'ar 1)‘ 1 \\cV4\\-yradmusr ‘\n:7 ., ‘.M,.M-.u > m\nZA D...“\n2;’ VWLI 14 Editor — /users/rixzpajm/Dropbmg/My nozumems/comguxer Programm.\n_\\ Dussumm\n\n[_i|3DroxAsurI.m J KrukExamn|es.m\n«Ia:-apt-s of sklpylng muxna-r of nemions\n\nVi Example 1\n\n95 Skmmng L5 accompllshed m me Mule common.\n\n'15\n\nMme 11 < Lengmrreanngsr as. reaaingsmr c moo\nr2ad.inas(ii) : o;\n\nii n+1:\n\n \n\nand\n\nsex Exunpl: 2\n’s Skxpplng 15 acmnpllshed mm a break statement.\nfor 11 = mengm(rean1ngs)\nif readingshi) > moo\nbreak:\nelse\nreeaingsim\nend\n\n \n\nend\n\nxx Exlmlei\nx Shows that for—1ooV index retaxns 15 last value\nx after the loop 15 exlted. lt‘5 sxmllar to Example 2\nx but om\\t5 the settxng of values to o and prints the\nx lndex of the flrst readlng above moo\n\n, for 11 : ]:leng(h(readings)\n\nif read1ngs(ii) > moo\n\nbreak:\nmm\n\n6)\n\nL,\n\n \n\n/,3 » H .3...4..... ......W;. I ,5. WWW .,.\n\n,:.m. . ,,..... =m...A . , M M\"\n.... . __..... ....m_J . ....... .....\n\n.. a _ W... . huwn. , 9...... . ............... . :..........>W..........m.-.mm.. W...» . ..........\n\n \n\n W... . 1......  -.,...... ~.,. V... W... \n» , M.” .. ......, .. ........ ......... .. ........., ..\n\n.  am... .\n- ...... .. M s\n\n:‘:v=-g;-W1»-m ...;. ., . .m............. M.  ., \n.  *‘”\"*‘” ....a........ a.\n\n \n\n \n\n   \n\n   \n\nV;.....\".. M M W‘\n:_ M;-mm ..  9...... .\n:.\"“‘;:\"~ .3  .. . .W.....»....;..‘ \"\nL V»;;;~;;;m .. .. W-—.m.... > ...\n —‘ .5 M...\n.; I ...m..... , ‘\n..\n2. .». 2......\n1.  .. . W.-..........\n1. W...\n29. .... .3.W.. m....@;. I ,5: WWW R\n\n,:.m. . .0mIu- =m...A . , M M\"\nWV: . __..... ....m_J . ....... “nu\n\ng a _ raw. , mm , w..»~.. . MvDAh4mu\\l\\ . KmdltullxI>ux4MmAmvV|4w\\'4\\MAVLABA MW» r .w,u.,\n\n \n\nkuwm ram . 1“. U. M ‘V/Pmvv ~.,,. WW, mw. \n’- N-7:‘  H wwwm. .,..u...‘...‘.».‘. t ‘,.»‘\n,._mM » z,..m., M M...“ r...m.. .. .,....m m\n\ns . 5...»...\n- Lmlnnm s\n\n.mL ‘n . m»;mm.mqu M. rndzrwsnn ., m\nrcmxww n a.\n\n   \n\nA ....m.m.,m\n\n \n\n    \n\n1-w.‘.«..m M ,\"“'‘='-*‘\n:. 11;“; N u  mm. .\nt.WHv\"” I3 am‘, um-:}.»m‘nI;3;‘ \" '\n_ V»;;;~;_~;m .. .,  m‘m>mi\n, ‘ V‘ .5 max‘\n W \nH ,mm..‘ , ‘\n.3 \ny.\n2. ‘—’_EI—4I|L-I\n15 ‘W n. 1\\U\"?\\'(rmn)m1sr I\nIV ., ‘..‘,.‘\\.w > m\nIA W.“\n2; NH] Q Ecnror — /Usersjﬁrzpajm/Dropbox/Mv Documenls/Computer Program x\n' I posxumm ‘Lapprox sqrl.m smaksxamplesm 1 +\n1 V4 sum.-s of skinning M-nindar at nnrnions I\n2\n3 v. éxapie '1\n4 Skipping is accomphsheﬂ m me wmle comnuon.\n5 » 1;\n6 - while 1 < length(read1ngs) as readingsﬁii <= mo\n7 - Leaﬂ.i.ngs(ii) - I —\na — 11 ii 0 1;\n9 - end\n1a\n11 an inept: 2\n12 as Sklpmng 15 Ecompllshed mm a break stamment.\n13 - far 11 : 1:‘.eng(I1(read1rIgs)\n14 - if readingsui) y mm\n15 - break:\n15 - else\n17 — read1ng5(11) -\n18 — end\n19 — end\n26\n21 xx Exanple 2\n22 x Shaw; that ror—1oap mdex ram\"; 15 Last value\n23 -x after me Loop 1; exned. It's smular to E>1auIDLe 2.\n24 1: mm omus the serum; at values re 1: arm prmts the\n25 \\ mdex of the fxrst reamng above 100.\n26 - for 11 = 1:\\ength(read1ngs)\n27 - if readingsuib > ma\n2a - break:\n>q . and 6- J :1 32”“ v“ t ‘\"\"'::/U‘ _ Ir *5 amm ‘?\n.... ﬁrm 3... » ‘ '*\" ~’ \" — - 7* ..~...n.. M M. > Mr-ml\n. . .  _‘F1nI' ....w,_4 . . M...\n' ,.,_ 1 . E....\\..\\ .4 ».......w Vkldlhﬂll .y ........w. . mmm\n. W\" 2 mm.-»...‘q»u\n.‘°*'‘\"‘““\" 3 »:,-.\\.x 35 9:: n no u n so gs m m 17\n. ‘“\"““\"' . ~=m.W . m=«»\\.,m UV W ,-h A. A:w1\\'mv. mm \\7 :'\\VauAJh 72\n s .. ., I m m 3, X: ,5 4; 9, 3,. \n_ :,..:;..m.,1.m. 5 -mxle ,, ( lernglnlrrzdkngﬂ .. ,...w4... ¢ ...  ‘.\n, ,j;;;W\"~~ 7 ,m...u..» »,\n1-  H! u  mm 2\n .3 ,; Hm.:m.W,‘ ‘ '\n .3 W:\n.7  ,\nZ) mm\n:5 ‘W n‘ 1 \\U\"?\\'»r(ad)N1sr V\n2: break‘ ‘\nIa MATLAB R20 14b\n\n \n\nPUBLISH VIEW\n\n£.=Eﬂ'\n\n   \n\nb g E Ruukseclion\n\nBreakpolnls Run Runand §Ady'a}.¢g Runand\n V ' Advance Time\n\n\"““'“’°‘“\"'5 E “N  \nDocuments > Computer Programming with MATLAB 0 Tutorials > Lesson 05 r\n\nCommand Window\n>> rng(0); readings\n\n   \n\n   \n\n  \n\n:prox_5qrt.m  BreakExamples.m \\ +\n\n; of skipping remainder of iterations Ii readings =\nColumns 1 through I\n1 86 96 14\n\nColumns 12 through\n102 101 51\n\nf>5>>\n\nis accomplished in the while condition.\n\nlength(readings) && readings(ii) <= 100\n;s(i1) = 0; -\nL + 1; J, J E. _]nm1m.. m...._¢;.#_ b ,5 WWW .?\n\n.... ﬁrm 3... 1“”*'* ‘ ~’“\"\" \"“”'\"\"—- - 7* M M... mm Mm.\n\n  \n\n \n\n \n\n          \n\n. Ma: _‘F1nI' .....m,__, . WM.\n. g a _  Du)QMummNw\\'4\\MAVLJWI‘uh/HIV» , ..\\..\"n.,\nLu  hrdm . m   ‘Vlhvlm  Wfm ‘. '14 HI’ n W\n W  ....n...‘..‘...‘. . >>f\\Y§VI\\ ....m\\;,.mn.,.m\n . 5......»‘,.‘......m.,.‘.m. .y . mam\n\n 3 ..z,..... 35 as n as H n m 52 m m 17\n\n.  - - m....m », )(('JV.»H3Vmﬂ  Um   mm .7 ‘Waugh 72\n\n,-mwm s  m m 3. :55 1; 4; 9/ X4 W)\n\n. :'“:ExI>v\\p::\\m 5 .m\\e .. < \\.mm,..m;» u. ,..mm.» 3, ,2. ..  .\n\nI I... XV/Vlyrb\\l1Y 7 ma....u..» o. rm-nrvai\n\n.f°_gH . X) ..... mm,.-Wm:\n\n vm . rnﬂ u ., u w . . a w m WA 1/\n\n_  .2 Enlumn :7  In\n\n,.\"““'“ n -,-,sx..nw 1.,» m ,. 35 1. 4, w x, m\n\n .2   “  ‘ . \\,._.,\n\n .3 ,. mm-m.a.n.m\n\nt .m,m.,m B Wk;\n\n W W\n\n.; ﬂ mmmn ,\n2. 2....“ ‘\n16   n(~:x-.r(.m.;s,\nu ., wml)m$‘w|l‘ > m\nZ3 W.“\n2-)’ NH] nos;-mm\n\n‘ BveakExamples.m 4-‘\nv.-. Exupus of skiwing runainder ov iteratiuns\n\naPDrox_Sar{.m\n\nV6 Exﬁh 1\nx Skwmng 15 accomplxshed m we whne mmuan.\n15 13\n\nwhile ii < lengzmreamngsl ea readings{ in 7 ma\nrmmnosm) = a;\n11 : ii \\ 1;\nand\nM Ex-nu z\n\nE Skinning 15 acovnplished with a break statement.\nfur ii = 1:leng(h(reaﬂ1ngs)\nxr reaumgsrm > we\nnreak:\ne\\se I\nreadingslii) =\nand\nend\n\n \n\nus Exaluple 3\nVa Shows that for—lL)L)p Index relams 15 last value\nv. aner the loan \\s exned. n's smular to Example 7,\na mu minus the senmg 91 venues m a and prms me\na max of me first readmg above me.\nvar u = 1:|ength(readmgs)\n\n1f l’Ead1VlE5‘ii) > we\n\nbreak:\nand\n\n \n\non »\nCommand Wlndnw\n\n» rngtm; reaamgs : rand1(1B5.1,2ﬂ)\n\nreaamgs =\nCalumns 1 through 11\nas 96 14 96\nCa\\umns 12 tnrnugh 2a\n1a: 101 51 as\n» readings\nreacnngs =\nColumns 1 through 11\no a a 9\nColumns 12 thmugh 2a\nm2 1m 51 as\n\n/5»\n\n67\n\n15\n\n15\n\n11\n45\n\n45\n\n39\n\n97\n\n97 at J u -4‘ v I _ t ‘\"\"'::/U _ r ‘E: Elunutwxm '7\n.... ﬁrm 3... » ‘”\"' W“ W\" — - * ......n.. M Iwuni ._.,.m..,. Um-mt\n. . . Wm: _‘F1nI' ....,u,__, . . ...,.. “nu\n. J a . .u>.‘.,‘m.m.,.,‘..w.,m..W...Wm.‘p...‘m,W-“mm..  . ..\\.M.. .»\nLu  W . M...“ .\n \\ W  ..n...‘..‘...‘. . >>rW§W\\ .m.ng\\;,.n.m.,.:m\n , :.......‘..‘.,,...w,._,n.. .. . Wm\n1:5;-;:j_;~;;~ x r...,.... 55 95 11 as u n so gs m m 17\n. \"*'\"*W‘*‘“' a mug ., . m.;um.a.n.m L‘ raid gsun ., m ,. ‘..w\n, gv-M~w~~~ 7 m...m.N. ‘ :a, ram;\n,. ‘W . ,, ; ,. .. mm, . 'nwM‘\\ u\n,_<~~-<-~m n Ind n ., u w . ., a w m WA 1/\n,   .. Enlumn .7 Hw\\Mh m\n,_WM‘ 11 -.»s.—.\\.z m m 31 35 1, 4, w 3, m\nL vvww 12 .s..»W. »..m.m..‘,.u..‘,‘..» ‘\\'eV)‘\\l /-.~~\n,,.'~“*;\"” 13 'DV ,. K . \\crmnmamnqs)\\\n,,   .. ., ,.m.;;...; > m\nV..W,m M B Wk‘\n.mm..» W W\n.7 ,m.~9m,y\n.3 Wm\nZ} 0....“\n16 ,, ,..»:»-.,(.am,\n)7 ., ‘.m.,~..‘ > N.\nZ3 break‘\nM— VH1]\nHr ‘KAVIWVHT ‘  W ‘..., .‘ Q, J E. .jIm44 .\n\ngm.\n\n  \n\n \n\n \n\n     \n   \n\n =,;;.\";:.“*,‘ - r *3 mm» >\nv ' 9 - .....n.. M Mum! 5%». mm.\n__n... ....,u,__, . . ....... V...\n,m.  Vvﬁnufm-ynw  . . sarm«m'\n W   .,..u.m..‘...‘. . us r A\n,  E.......‘ .4 xlunnﬂq VkK4)HﬂlA .y  , us ~ an\nx .:.-\".r . 1. . In\n5 ML ., . mu-m.a.~qg 5‘ mad gsun ., m 2.‘\nr vc-vamaw ‘ =~, . mm» \"way. : _mu,s -. /W\n:7 m“n:.>\\ K,‘\nH mm», madmq: r.mn.m.m\nu -.u Ex—¢\\e 2 wguwn\n,2 .;..W. SAL  ‘II_“vnq4D) ,...m.,r.muus,.,m\n.3  .. g . \\m..m.,..mm.;\n,. ., ,..mmu > m\n.5 Wk.\nVb ..,‘.\n17 ,.....»w..‘\n.3 W171\n2, s.....m\nIn ., um-,,(.m.;3, '\nu Hwbml-\\\\1‘HH\"“H\nZ3 W.»\n2-; NH]\n\n \n\nm\n\nm\n\n:02\n\nm\n\n17 ' J h .¢Iml4\\|e» , m..W;.4.. ' E EMWM .3\n\nM W W ,<.~.... . ,,m.. (wvmKnK7I .. ,4 M W  Mm\n. . . Pdmu _m. ..m.w__, . A0401! u.\n\n. . J a __ rum,m...mm..».,..wuwm.‘.mm.‘.,.m.Wmmu..m..‘.M..\\.m..1.,\n\n  \n\n \n\n \n\n     \n\n . ,«,rm W‘-m..,.\\.  W‘ ‘.‘.‘,»n \nn  U  . .u..._.‘...n . » mgm» ..Wg_ ,.n.,n...m\n» , , g....‘.) M ).....q. u..m.. .y  4 m,m\n,  2 mm. . Wm 11\n K gm... an 96 ,4 as A17 u 3» gs m m n\n A — W‘ 1 ‘ A H.‘ . , m.‘..m.m-mama\n.“‘'‘'‘*~ .7 VA 1, m m s. as 1'. 4, 97 E4 m\n. \"~***=\"vM 6 mm: ,. . .,m..,...,m .. ,..m,s«..‘ *7 ma .. 1rV\\l MD\n, 7\"-“~w‘~~~ 7 LL«Iﬂ)ﬂ||$‘ H 4, mmas,\n.. W . ,. : .. .. Erlhrum . VWHVJLVV u\n,_.'~“‘Mm g um n ., u E . . u w m m 1/\n  .. Knlmvn .7 ..W. 25\n,_.\"'\"‘~‘ 11 -.»s...\\.z m m ,. xs 1: 4, 9/ El m\nL  )2 .Wm. »M.,.M.¢..m.W» .~mqm Mm. ,.mnus,mm\n wwm .3  .. . . \\.»,wm.m.;,;  ;\n_ w-MM 1. H r:nm;m|I . m mm 1 xnrwqn n\n,'°\"°—Wr'm .5 hrcuk. .5 .5 u H m u m 5: m W7 .7\n m ..,. Knlmvs ,2 Kﬁmuqh In\n17 m..n,s4..‘ m .9. n as as .5 .7 u m\nm (ml ,. mm\n.9 M. ..W» :\n2. (ah/urs . mvuqn u\n2, -V-.:...,...= v o 3 a » 0 a a m .07 17\n11    “ “ ‘  mm .1 tnrnugnm ;\nn  “ ._‘ _ _  W-, m m 51 us )5 As 9: 3. m\n25 M“ um-.,...m.;.;\nIY ., ,..m,u..‘ , mu\n1. break.\n39' NH]\n2., s....mm .   WA xx example 1\nx Sklpplng 15 accompllshed In the whlle condltlon\nii: M\nwhile ii < lengthfreadings) as readings(ii> e: 100\n\nnanﬁngs(ii) = 0\n\nii i + n\nma\n\n \n\nx Examplt 2\nx Sklvbing is acomplished witn a break statement\nfor ii :1engtn(readings)\nif readings(ii) > 100\nbreak;\ne1se\nreadings(ii)\n\n \n\n \n\nend\nend\n\nxx Example 3\nx Shows that f0r~1ODD index retains 15 1ast value\n\nx after tne 1ddp is exited. It's similar to Example 2\nx but um\\f5 tne setting of values to 0 and prints tne\nx index of the first reading above 100\n\nrdr \" 1:1engtn(readings>\n\nif readings(ii> s 100\nbreak:\n\n \n\nad\nad\nfpr1ntf(‘F1rs( reading above 100 is at lndex xd.\\n', iin\n\nas 9s 14 9s\nCo\\umn5 12 tnrougn 20\n102 101 51 as\n>> readings\nreadings :\nEclumns 1 tnrdugn 11\n0 0 0 0\nCvlumns 12 tnrdugn 20\n102 101 51 as\n\n2 Eofumns T cﬁrdugﬁ 1‘!\n\n67 11\n15 45\n\n0 0\n15 45\n\n» rngr0>; readings : randi(10s,1,20>\n\nreadings :\nColumns 1 tnrdugn 11\nas as 14 as\ncetumns 12 tnrdugn 20\n102 101 51 as\n>> readings\nreadings :\ncoxumns 1 tnrougn 11\n0 0 0 0\nColumns 12 tnrougn 20\n102 101 51 as\n15))\n\n67 11\n15 45\n\n0 0\n15 45 (nmmznd wmarm\n\n   \n  \n\n   \n\n“-7- U pwn-Am.m x .Ww...... « a..ms......m...... ‘+7 » mgmn ruamgs = r.namns.n.2-1\n\n'“ I \\« an-um an mum r-um .: xm.u.., readhws -\n\n-W'\"\" 2 (all-ms 1 lruwwh n\n3 \\\\ aux. ; as as :4 96 n :1 3n 5: in ma\n. ‘ sxnxund 1; aczu-lahshad m the -«me mmxurm. uh-nus 12 mmugn 2.\n5 A 1-2 m 51 as 15 AS 97 an m\ns\n1\n\n     \n\n \n \n\n      \n  \n         \n       \n\n \n\n— mu: :1 < ummmam;s» ss ruau-aslm ; nu » reaumgs\n“\"»*\"'-W M’ - :m...q;«m . 2; 7 reading:\nW“ .. = .; . 1-, Lulmns 1 mm. 11\n=°\"'-M and 5 o - 0 n 1 a -mm\nvv--=M .. ‘ 7 mm :2 Inrvmr 2:\nM\"'- u »« nupuz m m 5: as 15 45 9: :4 ‘Au\nW==\"°\"-' :2 \\ swung 3: unwliarm um . nut mum. » mm mamas : \"mu-5.1.2»\n334\"-vm 13- h1rA nm..mm.ax».s) tunings\n°;m_ n — u m-nsmm . an m...“ ; znrmqh n\n“\"5 K M ur bruit; as as u 96 51 u an 55 m m\nW\"'W\"- 15 7 else ml:-ns n o..—ouw 2:\n11- rudlmsutl . -; m m 5: as 15 :5 97 u m\nend » maduvgs\n. and runny:\n_ Columns 1 through u\n~AEx—\\E3 - n - o - n a u m an\n\n\\ sruws um «wum um reams :5 us! vihwe\n\\ avtzr m. luau exnzd. n‘; sxlxlar n. Exinuk z.\n\\ but Huts me suunq nf vahazs 1. a and vnm; me\nu. mam: m um hrs! ma.» alum: ml.\nvar u - ulengmlreadiwssl\n\nu veadlnnslln > an\n\nmm\num\n\nmluuns :2 mmllyh 2:\nm2 m 51 as 15 as er :4 m\n,_» I\n\n=::.‘x.':=:-'\n\nem\n1pr£nlﬂ'F1rsx mm; above us B at man -a.\\..‘, nu; 1' J «:1 ~7‘(‘\":\"\"_ *W_ <_;”\":::\"~\" r '5‘ WWW 3\nNM .7... 5... » ' *\" V‘ — I ' M ..m. ._,...,.. Imam\n. . . M‘... __m.. ....w,4_, . ....... w...\n. J 2 , \n - /.m.. \\!«wv«‘V/HUM  .MW \nI   VV   . .n.m..‘.\\.n t » r/mm  5 ,mm..‘. :31\n> , A , , ,. 9...”, M ).....w ‘ED417169! ..  ‘. mmmu\n, mm X znmvmclrwawqhn\nA Sf£V\"?.I1‘J\" x . s....... as y. n an m u 3. as m m .7\niw-Mm ,1 ‘:’I\"  ’ wk“ m ‘{.“‘ X: 15 4‘. 9: 3». M\n’ :4uﬁx:n~p:nm 5 M. ., . m.,..nm.n.;,, LA.rL'i|1)nq§HH .7 m ., ‘.,‘..m\n,_ ,'” -WW 1 .m.n.m H 4, mm: ,\n_ W» . ,, ; ,, .. MW, .  u\n,_ 3-<:\\;kmm -,7 N16 » — — — — — — m M31 1/\n7g\"~‘_~“ n V s....\\.. m\nL  ,2 ‘WW  ,,.‘.,. \n,, r~~H~~1 .4  .. K . mm..m.m H ' “-\nL w; ,. M ..».n.mu . me our\nM M .3 max. . m H‘ .7\n-WNW Yb  ...\nn ....m,s4m . mgm WW : munn1—~ . 1“! m\n1» (ml C.‘\n*9 W \"man mm. r.muu.‘mm\n- H'Jan‘VAr\n2. 5...», m I07 .2\nU ‘ ‘ ‘ ‘  “  nualm ...mv. ..mu.s‘.,am\nI1 “ , . ‘ ‘ , , . r.m.9( m\n.-. ‘ ‘ ‘ rn,>>rwg}'m M1nmg;:raumw‘m:)1I\\\n\n \n\n:3 hrcuh‘ '\n:1 -.‘..mm . ..,w‘ W.‘ van .‘ mum VVYVY‘\n\n2‘ “ ‘ H   A ‘\n25  am..m.m.m l 5; J H _g..7.4.... , ....,._,,,.. A .\n\n \n\nD “S em“... )\n\n......m.. ..n M... L(“‘4.lIf aw.\n\n \n\n \n\n. . __..... mm. .....m__, . . .......\n5 g a _  7 ......... 7 W... .  . M... W... 7 ..\\..,..7 . .\n 7.... - -.r..7.. .., 1r.vy‘\\m’ 7... U. 7.. .—   .\nI mm 7   .,......,........ . .. 77.... 7........; 7.7...........\n . . 9...... 7. ......... .....n... .7  . 7........—\n,5-\"M . znhnmcl 7......\n,;5;:;_;g;~ . ......... .5 .5 .. .. .7 .. xa .. ... ... .7\n .  .. ... 3. .. .5 4. 57 .. W.\n, -mm-mum . ..... .. . ..7._,.7.7........ .. 7....7.5.... ., ... .. .......~\n7v--\"-wv‘~~ . 7.....7....,. «. 7....7..,\n,. W . .. 5 .. .. ......., . - W7. ..\n,_r«~¢-M . UM . . . . . . . . ... m .7\n_ W» .. .....7, .7 --.7...» ..\n,_w-‘M .. -,-,5...7..7 ... ... .. .5 .5 4. .7 .. ...\nL  .2  .. . . . . . .. ., V7VH‘6) 7...... , 7..............\n,»-vwm .. .. .........7.......... .....7..:\n,_ ».ry~<n. .. .. W-...,7.... . ... ....m . W...» ..\n7\"\"5‘\"\"'M .. brcak. .. as .. .. 77 .. .. .. ... m .7\n .. ..5. mm. .. ..7.... ..\n.7 7....;....., W71“ .. .. .5 .5 .7 .. ...\n.. .... ,, 7......\n2: ....775 . mm... ..\n.. .......... v 0 3 . » . . . ... ..7 .7\n.. 75.... .7. ..,7 Vow WAVEV  .. ....  ....77. .. ..7...7..\n.. ..... .......5........... ..5,.........m.., ... ... s. .5 .5 .5 57 .. ...\n.. \\DuAwuA)Vhe§(!»|m1v’!ahwm.)rn:y »77..... 7.......;.........5....\n..  .. . . ...-_.m,.......5. rnnmm . 7.7.... ..\n.7 ..7............m .. 9. .4 a. .7 .. 3a 5. ... .o. .7\n.. .7... .7...“ .. M. ya\n7., VNI .... .a. 51 .. .5 .. .7 .. ...\n.. .7. ~..,\n. -.7.....r   W ..  .,..., : 3 3 flflllfl .  Jm‘Ziff.f', ' f _~“5_ a‘a~~W _'-‘\n_ >,~ _ E,“ , Hm _ _,_ml_4  5»  \n. g a _  \n\n ram .\n\n- mm “  ..u...‘..‘...‘. t\n\nA ..‘..Ezx‘§nT.,m\n\n \n\n, tnrmvlr -\n\n \n\n“.3! . “ , .\n.m\\e .. . mgn.»m.nqs; M. m..m;m.‘ V m\nn..a.».,»m e,\num ’\n-.-,m..7m\n\n!ar .. 1 \\m.ma.m;\nmm’\nm.m;m.‘ ,\n\n \n\nV» mm. ;\n\nsum Hvu\\ W W ‘MK: rrV)‘m~ , W W,\nW”, m4 W lk LKUEII .. 5 »..‘..,, ,, mm. ,~.\n\nmu D1)l* W \\c'.vu1 .- M5 M7 Dv1wn*grm\n'ar 1) u 1 m.g«i.4mam.;sv\n\nH .m.Mm.. . ma\nmm.\n\nmm W. van , .‘ ‘, m.\n\n \n\n» nvgmr ...m\\ : ramlnlnmi 1m\nmmm\nrnnnmcl muqhn\n\n55 so u as u u\n\nmz m 3} xx: 15 4;\nraangnws ,\n\nKulwuv, . .»W.n u\nn 1: u . . e\nmm, .7 =.‘.W.m In\n\n.. mm ymm , ranmxiusmlm\nrrauxnac ;\nmm . \\nn:u-Va n\nLnhmrs x2 tnmuqn 1u\n1n7w\\ 3! us as -s\n,,m.m;\nwaumm:\n\n(alumni . uvmqn n\nu e e a » 0\nLnlmms H Vtrmlqh 1?\n\nIn M 51 as )5 AS\n» mm w..m ; ra/mun: . 1.‘\nmzdyvu)\n(nmvmc . .»...m u\nan 9c ,4 an m u\n1-12 m s. as 15 ..v.\n\nya\n\n9/\n\n97\n\nno\n07\n\n52\n\n2.\n\nix\n\nm\n\nm\n\nm\n\nm\n\nm\n\nm\n\nm\n\n.92\n\n \n\n17\n\nu\n\nn 4, Q E. .;:........ V“ ( .....:f._J. _, .3 WWW ?\n.. ... 5... 1 W\" - \" — -'  ... M. , .....,. M...\n- - - .;~..- ..~»«- ~-»...;.. - - ....... .....\n\\.V , g a _ \n >a.1« . .., M...\" —..«. .. Nu  rm   \n- mm  ..   . ...........»... . » W... mm... ;\n'  .  5...... .4 ».......... ._..n... ..  . rm...) —\n,, mm , .......... mg...\n, ;5;;:;_;~y x ..g...... s. an; .. as\n .  \" * ‘ * ‘ ‘* ‘ ... ... 3. x,\n. gm-:;.....,...m . .m... .. . ................s. .. m.....;..... ., ... ,. VIM] M7\n. ,3,-;‘;W\"~~ . ......»...., . :., m....... ,\n[WMM :7 W .. I ,. .. ..  .v. .. I\n_- ‘W; .. ....m. .. -W... 2.\n,_  .. Ex-ML-2 ... .... .. .5\nL  .2 .  \\ . . .. . .  \\VVnﬂ‘6) ,.......\n,_.\"°’~;\"~ .3 5.... ..m....»......... ........:\n.   .. .. ........,..... > ... ....m, . M... ..\n,  .3 brcuk. .. 9. .. as\n .. ..,. Knhmrs .. W...» 1.\n.. ......;....., ... ... 5. us\nvx—  ,, .....~..\n.9 M. ........., :\n.. (nhmrs . um... ..\nZ} M........ . 5 2 a\n.. 5..., Hunt .3. Mao  VFK) M , ..,  0...... .. W...» ..\n2.  W Arm) .,  v.  .M....... 2, ... m 2. as\n.. .... D‘V)A(  \\r\\.|/U1 .-   M    » nvgm) ........, ;\n2.  H7 .... W .e......  .. rm...)\n1. far .. . . .mw,......s. M...“ . mp...» ..\n2. .. ..,..w... .m s. 9. .4 a.\n.. Drank. ..,..m.. .7 W...» 1.\n1a— .... ... m. s. as\n2.. .........   W , ..   .,...,  ’ ’\n\n \n\n \n\n \n\n \n\n........s. max\n\n..\n\n.5\n\n.5\n\nav\n\n..\n\n4;\n\ne\n\n-5\n\n.5\n\n..\n\nno\n\na.\n\n97\n\nno\na.\n\n52\n\n.2.\n\nix\n\n.u. m\n... ...\n.a. m\n.u.\n... .92\nm\n\n \n\n.7\n\n..\n\n.. at-\n\nQ E. .;.W..\n\n,ga..\n\nK“ MW ». ﬂ¢V\n\n \n\nWM M\n\n _r, ;. A .\n\n \n\n.....,... M M.\n\n \n\n‘C: 1 . . ‘ ‘ , .\n.m\\e .. . uvrqmmznmqsx M.rni1!m;SHH V m\n._.a.».m. ‘ :?r\n\nW ,,...\n\nex-nu-2\nla; .. nm“.w.».m.m; ‘\n\nmm\n\nm.,;s4m ,\n\n \n\nV» mm. ;\nsum Hnﬂ ‘JV Vwo H(V(t W, M , M: «Hm\n\nVrl‘|\" ‘N Am» .1 muveu, » g \\nuKV' .M..m. 2.\nmu D'V)A~ 17vr\\r\\.|/H1 .-  “.5 la ¢ 174 7'7!  Vhr\nmm M W ‘..»- ‘Wm, «hm: .9\n\nM .. . , \\crav-tymdxn-151\n\n1! ‘.».Wu. . m\nmm.\ntnrmur -..w‘  Ml , .‘ W, H! Mm.\n\nr *5‘ amm ?\n....,,_,l_, - - W...» “\"“* ”‘u”.£.\"'\n\nrcmixrvu) — ‘ '\n\nrcan;ngs ,\n(nmmv, . VHH/A/1|?! u\nmm. .7 -mm ;a\nmnuvrxusmlm\nAnlmvu . wrvunh n\nlnlmwrs xz mm» 1:.\n,, mm;\n‘.aum, :\n(nhrurs . uvmqh u\n(nhmns H Vtrmlqh 1w\n(alum: . .»...m 11\n\nmm‘ Wm. Jkvlwr m V\\ I1‘  9\n\nno\n\n9/\n\n97\n\nno\n07\n\n52\n\n2.\n\nix\n\nm\n\nm\nm\n\nm\n\nm\n\nm\n\nm\n\n.92\n\n \n\n17\n\nu\n\nn at 3 Id ‘-7’'‘”‘‘‘‘\" ‘'’‘‘\"‘‘’’’J ' B ‘E ;a_,...«...... L‘\n\nr . ./..... _..... ....mL_, :\" \n\n5 , .. a A 7.>...7..........7.........m...m......................W...w.-..mm...........7..\\......7\n\n \n\n \n\n \n\n \n\n      \n- mm  ..............n . » VIVQVIV ........: 7......»-.1...\n' ,. .  ........ .. ........n., ...m... ..  .. ,........\n7....» . ...m... 7......\n,;;;;;;_;g;~ . ...-.... .. 9. .. .. .7 .. .. 5. ... ... .7\n .  .. ... .. .5 .5 .5 .7 .= \n, \"=*“*=“~v‘M . ..... .. . ..7....7........ .. .......5..... ., ... ,. W. ..\n . .....\".,»... 5 \n-WNW . .. ; .. .. ......., . .......... ..\n,_wu-mm .7 UM . . . . . . . . ... 7.. .7\n_ W  .. 7...... .7  ..\n,_.\"~‘~‘ .. -.-,......7 ... ... .. .5 .5 .. .7 .. ...\nL  .5  .    . . . .. .,m..... ~.....5,,..............\n,;.W~\"~ .. .. ..m..,......5. ........:\nMum .. ..  M54... . ... mm. . W... ..\n .. .7...‘ .. .. .. .. .. .. .. .. ... ... .7\nmm... .. M. .....r. .. W...» ..\n.7 ......;.4..., ... ... .. .. .5 .5 .. .. ...\n..  ,, 7......\n.. M. .7.......5 :\n.. ..s...... . . . . » 0 . . ... ..7 .2\n.. »5.....».. ., ..,.,,,, .5.  ...........7...»..\n.. ,.........., ..7 .e. 5. .5 .. .5 .7 .. ...\n.. .....,.,...7..- .. N”... ,.......;........5....\n.5 .  .7 ... ....- W...  ... ,.......\nzs  .. .. l'\\crgD-lmadmqﬂ ....... . W...» ..\n.. ................... .. 9. .. an .7 .. 3a 5. ... ... .7\n.. .7... .....,... .7 .......,n ..\nza— PHLI ‘ ... ... 5. .5 .5 4. .7 .. ...\n. ..7.....r   ...   .,.n, .... _r, ;. A .\n\nW\" In» as mm.” -2\nW. ....mU -:~  -an-:'\n\nat J H ._]nn4m..\n\nV , g a , ,uW,m...m,p‘...w.wm.m..‘...MW.‘.w.W.w-«MW..Wm,.w.n.,\n\n \n\n   \n\n ram . ,«.m. \\,,.m,n.,n ’)vr,u>m  ., \n- mm  W   . .u...‘..‘...n t » mm ..wg\\ ; ,.mm.,- 1.‘\n'  . .. Exuplu M m,...w NW. D’  w. mmm\nmm Z mm. muqh .1\n_ ;;;;:;_;~y x . g,.,.... as as 11 as H u nu\n . H .‘ ‘ ‘ \" ‘ m m 5, X: ,5 4; 9,\n. ;v<a:;x.n..,:M 5 .m\\e .. . Anrgnlmaamjal M.rniI1:n;SHH ., m ,. W. ‘V\n, ,'-‘ ‘WM Y vLuﬂArvm\\.\\ 0. rcanzrvys,\n.‘”°‘\" . ,. ; ,. .. Krllwuv, . mwm u\n,_<w-mm 3 rm! . e u . . e a\n_ ‘W;  .. mm .7  m\n 11 mm; m m ,. as 1. 4, W\nL  .2 ‘,  .  ..  . . ‘ V’ .,m.w N’J4LNV) r.mmnuS‘l‘1m\n,,_m=~‘;~~ .3 .. nm.ma.m; mm‘;\nL   14 .,  W.“ > mu mm . \\wcu-Va n\n .5 mm M 9. u as 57 u m\nn m..;;4m , ,\n.24  ,3 r M\n,, (W\nZ} Mx.....; ,\n11  L, W ,M:  .u\nn  ‘N U/m Wk  ., ..  MM... 7, _ mam veaUm‘!\\ ; W...» . 1m\n'14 run vuu   .- ..  W 0    (‘K\n2‘  H’ H! W mm  .5! m.,‘..‘ mm ,m,,,m‘2..\n16 .. r\\crI;u-tmaaxn-151 ‘__u.,_,.,\nN -' ‘=w-WM-W\" W.» M.“ mvul)Hh‘\\‘lH\n23 mm. ‘E;m,§ 4 -\nif ' W, ’\"“ nvmgn rmmnqs , ranunzusmm\nxx’ Inrmur   VM , .‘  M Hm,  rm», rmnxnds mmm» m\n\nm\n\nm\nm\n\nm\n\nm\n\nm\n\nm\n\n.92\n\n \n\n17\n\nu\n\nn 335..\n\nU. ‘MY may\n\n~.‘.:am M\n\n \n\n \n\n; w...m.\n\n, Inrmur -\n\n \n\n.mL 1, . Anrqxmmzaxmzax M raiuw;S\\u\\ ., m\nVLJHVVIZVM 1 x,\nml‘ ’ ‘\n\nV ”r:i1!A'W9SHH ,\n\n \n\nV. mm. ;\n,s..,., W W. W nun: W.» ., M)‘ W,\n\narzm W K:DI>\\>u(u'1IA -. 5 \\)Vh‘iY .. ...«.n. 1.\n~huz vu\\~ W. ,»:m. n- W75 ‘.7 o VH1 WV\\V’§ NV‘\n‘ W.“ M H» mm »‘.,.:.u.  m\naw ,. W . m,...m.a.n.;sy\n\n.y ‘.».»qmu »1ui\nmm.\n\nAUX”! W M! -,, n H m;\n\nreauxngs ,\n\nmm . .mm 11\n\n(am, .2 \\nr(.\\AIV1 zn\nw.‘.,m.\n\nlahnvvs . mm 11\n\nu 9 a . u o\n\nLnhmrvs .2 mmn n\n\nm m 51 :45 15 As\n» mm» runm4\\ ; ¢.mn.,.; m\nm.aw,.\n\n(alum: . vmmgh 11\n\nS5 96 ,4 an m n\n\n(nmvmc 11 -»m.‘.;» in\n\nm: m 51 x5 .5 .15\nm.m;\n\nrulmuv . - mm :1\n\na 1: u . u ..\n\nKulmun .1 -mm ya\n\nmu m 31 as 1'. 4,\n» mm») u.m..m = ummuus‘ w\nreanxugc ;\n\nmmm . \\nra\\u\\h u\n\nKnluvm) .2 :k\\r9~/IV! 1::\nhrs: WW abcvn mu .5 .. men 9\n., mu» MW : .m.u.. . w\nmm\n\n52 9. 1: ~22 54 us\n(ulmun 11 ..W.n 72\nas 9» 4-4 M 1. 4;\nrm. .m.m .W van .. .. mun 2».\n,._»\n\nav\n\nxa\n\n9/\n\nA3\n\n2.\n\n5x\n\n3.\n\n:5\n\nm m\nm\nm m\nm\nan 9,\n\n \n\nu\n\n1:\n\n1/ Boxsumm 1w.U.r..n , ....u..,..u.m\n‘A ExIU\\es of skiwirll rmlinoer of ilerntions\n\n-.a sx-nu 1\n\nv. smbmg Is accomplxshed m we mu cnmnnun.\n— n = 1;\n— -mu: u < tengmrreaamgsb as reaoxnqshx) c m\n— rgaaunﬂslh)\n— n . n . 1;\n— and\n\n \n\nsa. ax-cu 2\n-. Sklppmg .5 acumphshw mm 3 braak starevrznr.\n— for n lennmlreadxrwsb\n— n readvlqshll 1 m\n— brwk;\n— us:\n— reaumgslm\n— znd\n— gm\n\n\\n ax-cu 3\nx. Shams that fnr—|o-up: Sndex retams 15 last mm\n\\ um thz aw 15 exltzd. rm suvn\\ar tn Examine 2,\n\\ um nuts the settmg of values to a and prmts the\nx. Index uf mg hrs: reading mm m.\n- for 11 . .\\zI\\gth(readIngs)\n- 1: ma1..gsu1) ) we\n\n \n\n \n\n \n\n \n\nEumnlu aimpnma mm auurumnans \n\n0- -0 c 3 A Lacanon Comput:rxlwmgrammmgxzomlMCZOMAYLABIYule:\n\n:..4m«;m,; . .1;\nand\n\nawn. 2\n\nsammmmm mm mums mmm. -1: m. law xumu nuxmnmn Eumpll 2, m.7....n\nm. mm mm. In 0 mm mm: m. mu-xuvm um remlrw Abave mo\n\n \n\nm .. . ..gu.m..m.,»\n1: nndxr nun > me\nmm\n1...:\nm.m.uw.m mm. mm mm .. .. mm .. m‘, U).\n\n \n\num .1.......q mv. mu .~ .{ xudex 21\n\nmadlngs\n\nColumns 2 mmngh 11\n\nas as 14 as 57 11 an\n(olumns 12 (hmunh 2a\n\n  \n \n\n52 m1 m2 :7 nu I as w... M. ..m..:.u..m.4,m.m.m..,..‘.n.\n\nw....‘... _W...‘._...‘ [xmyvVe\\uV\\k»yryvmqnvnam4Aeva‘\\lIun-mx . ‘El [1 g\n\n’\"“\"\"‘\"‘ —~.......‘.‘ (941\nzm....m L\n\n-m. H-......... -m Xnw-n-Ia\n\n. . :; , A mm KDMDHVV1U!VV\"UamrmN]V/D-MM»/AIMAVKIK ulmw\n\nY ». J a _ VA/>u»rhl:uIHYrDwuul|mrMv[Vu(Iuueul\\A(mnuulewDu2qMnmuvu\\w\\'4\\MAVMIt Wm.\nkurewnrﬂx - /mm» ,mmm.,mv,L.m.wmW..m.m.m».m.‘.. .~,\n-mu  U VUIHA1. M”. ....u...‘...‘...‘. t ‘\n\n_ _*._m . 5...... M ......w ‘...m‘ .y |lA’V41\\HAlh\n\n:..-an 1\n\n: :;:;;;;¢;w~~ .‘m‘..J;. . A:r'9xMmanvu1x) K raid gsnn  mu\nWm \"M rramm1.HH »,\n   \n:_ “;~p“:‘M_‘ ., mu.)\nzw-~H~~~ am‘: am-u..W,“‘\n.,»;;,gg;;-_ M ,, ,;m.,m > WU\n\nmmgm.‘\n\n \n\n: ;L:'§.:r: :::“,.¢.:;':¥ KTLZ‘;2.J‘3”I.M’.i77F:‘t.f' :;_3;;;': «W = ~~w-W->\n.a;“::~.»; a:;:;;;;;:;‘;‘;~  W\"    5, ,,\n\" ’;f:;E““‘ ’ ‘\" Enlwvv) u tvrmuh zn\n ;,,3:'.t,.:?:q .;;  ..:‘m:2.\n\nMd\n. 1 r mm  W .‘ mm 7! u ”‘\"”‘”’ '°““‘\"“\"\"\"“\"\"\"’“‘\nvnrwl . . x. M W,\n\n52 3. .2 «:1 54 w\ncum v \\ma\\mh In\nan 91; 4‘! M 1: 4.\nrum .‘..».M mm m ,. .. )w:\\*x 10.\nA» MATLA\n\n \n\n    \n\nAPPS EDIT PUBLISH VIEW\n1: Bulleted List Preformaued Text\nQ Hyperlink ‘I U\nI Italic i; Numbered List 1__; Code\nSave Secllan Section V 2 ...u,., L.1-.x ‘ Publish\nv with Title M Monosplced 9, Image i Display LaT¢X v\nFILE INSERT SECTION : INSERT INLINE MARKUP INSERT ILOCK MARKUP PUBLISH\n\nuj\nxi ¢ ¥ E L4] » Users » fitzpajm > Dropbox > My Documents > Computer Programming with MAT1\nI Q Editor - /Users/fitzpajm/Dropbox/My Documents/Computer Pr\n\n. \"“\"\"*‘ I I possum.m I approx sqrtrm I BreakExamp|es.m I +\n3] BreakEXampIE5.I’\\lmI V’ \" _ '\n\n   \n\n1 9s’. Examples of skipping remainder of iterations\n2\n3 9%. Example I.\n4 9s Sklppmg is accompllshed 1n the while condxtion\nS - ii = 1:\n6 ~ while ii < 1ength(readings) && readings(ii) <: 10‘\n7 » J:ead.1'.ngs(ii) = 0:\n8 ~ ii = ii + 1:\n9 ~ end\n16\n\n11 vs Examnle Z a Wpemm\n\n-m..\n\n\" ‘ Enwvmya\n\n/frlhw\n\nE :3\" :3 N‘\n.  aw.“\ng a .\n\n.A:‘:::;::;:.M ;\n.3\n..\n:2\n:2\nE3\n\n-ml: ., . uvnummzamqax L‘ m..m;m.‘ H mu\n\nVLQHIVVDVM \\\nml‘ ’ ‘\n-, Ex:-m\\:2\nbrim\nn..mm.‘ ,\nV» mm. ;\n\na.\n\n1 wwr :m.a.m;\n\n \n\nvim» Hmt M» W HM: umxrw .,\n7$  .., m..«..‘. 1.\nQ “.5 We D1>1~rH’§mr\n\n'ar .. . . \\m..w,..ms; ‘\n.y ym.‘-gm” »1ui\n\n, Inrgnﬂl r\n\nK.\n\nVyl‘);\n\nr,.¢,n.; ,\nmm . Wm H\n(uh/vvv) .2 .m.m Zn\n,. rcmnrgs\nm,m .\n\nlahmrvs . mm 11\nv o a . u 4:\nmm .2 twvnuqn 1.:\n\nm m 51 X5 15 As\n» W.» mmg, ; ,.mu..,. m\n.m.m,,,\n(alum: . mug» 11\nSn 9«: ,4 an m n\n(nmvm: .7 ,»m.«.m 7a\nm m 3; x5 .5 .15\nm=am§‘\n\nn 1: u . u ..\nxmw .1 -mW 2a\n\nm m 3. :45 1'. 4,\nV) mm» 74>./(HUI!) = ummuus‘ w\nr:iu»nEi ;\n\ncum . Mn/UV! u\n\nsum, .2 nmmhlﬂ\n\nms. mm awvn mu )5 ... man 9.\n\n., mm.» v~mmiJ\\ ; mmxunn . 7m\nrcnixrvs\n5, 9. 13 a1 54 10\nmm, .1 ..W.n ya 2\nas 9» 4-4 M 1. 4;\n\nrm. VKWJUAX M“ Ma ,. .. mm 2».\n,_ »\n\nav\n\nxa\n\n9/\n\nA3\n\n52\n\n3.\n\n:5\n\n24:\n\nm\n\nas\n\nm\n\nm\n\n9,\n\n \n\nu\n\n1:\n\n1/ H ‘” 5” 1.“. °’“\"\"‘\"‘ ........‘m.\n. ....... n......... 3 \"‘ -.... Smwynva .\n,. a -  .  , 9...... .  . M...  . ..\\...,...\n. ,«,.....  ».,m.................,  \n. W ........,\n\n,  2 . E........ .4 ...,....g ._..m.. ..  Wm , Wm H\n\n::r:;::.::‘:\"‘ ¢  , . ., . , ,...\n\n. :‘~;;'W;~\" . .....e .. . .,............... .. m..,........ ., mu W,,W 3\n\n‘fnmdlrvvkm ' ﬂu“-*‘ . 0 . . . 0 ..\n\nr- W  ,3 '\" W... .2 Wu... ..\n\n- mm . m m s. .5 .5 u .2\n\n  ;; » ‘*~\"‘~ ‘ » VVVWI? ,.....q. = .........,. us.\n\n1- ».......m 1; aw; H<»vy~;ma;;gs= .....:............\n\n?;'‘g—;;;;;” x: mm.‘ ..7E....??...2i...§“ \" “ ‘\"\n;g ~'»-“mm .3. ... .. xs .5 .5 a.\n;g M  m....»«.; ‘\n;_ mg... .e.....M2.. .. I n B u\n2' “Ex-v'= ’ ......... . ....a......\n.. ...._,.......,..,...-W... ‘W N; ,, 735 ,5 0 ,,\n.3  .... .9...   .., .......... 1. V) W...»  = ........s. W\n\n. ... D'V)\\«  ,. .... . .  .. .   .  ,,,m.,\n\n1. u-1\\U-zkhlmadxmjsl ‘\";f‘*;,‘*\"~;:\"\"% 5, H M\n7' 1' '=w-L-mu > W ...D..., .. UWJQN ..\n29' ~w= ' ;.,lT’..,§?i...,3L.n3’.5..3‘..,.3B. “’\n\n5. 9. .. a1 .4 .4. .3\n......., u ........... ya\n9:! 9. 4-. .. .. 4. 9.\nmm. VKWJUAX M. ma .. .. mm 2...\nA»\n\n52\n\n.4\n\n.5\n\n24:\n\nw.\n\nas\n\nm\n\nm\n\n9.\n\n \n\nu\n\n..\n\n.. iwm ;..‘.......‘ _...w.-‘..,..‘\n\n...r.. n-......_ ’7\"'\"‘“’” .»»... Em...\n\n, E m.'i‘.. . mm 11\n .. xAnp\\u)uY»MuuM§v<ﬂ4xnﬂ:4uY ,, ” _ H , ¢\nr HAHN E__ | mm .7 rmnuahiﬂ\n .‘ .. I  m m u as .5 4;\n\n»;v~ — —» ~ ~ « NW.» ..m.,W‘m.u.s.~.‘\n,‘:w=;;m~v;~~~ .m\\e ., . mwm.m.;g M m..m;m.‘ ., mu ’°:§f§‘,i?,, .  ,,\nuJ£3m\"”\"\"\"' K-'°*\"'=~‘*‘ “v S» 96 .4 as u u\n-—4m.~.m \" '-“ mm.,.7v.w.m\n,. m m :1 A: 1. 4,\n-mm ,, .‘..u.m\\\n\ngm\". ./«H«‘U7‘W1 \"U/7I>ru Wm M ,.‘..».‘ \n\nml‘\n\n Enuvk 1\n\n.,».m.,. M\n\n .. 1 u»m‘m.a.n.m\nmmf ” >\nn..m;m.‘ ,\n\n\\\\ mm. ;\n\nam that M» W Wm: M. M , M3‘ vvhu\nDuKVh\\‘;1hr) m. A-’ ‘. ut> m‘;w  W’\n\n‘  M W mu .w.w  2»\n\n'07 u . . \\m,m,..mqs;\n.y ‘m.~;sm. . m\nmm.\nmmmr . mm W ...., V1 rux~d\n\nfnlmvw . ‘MN/Vt‘?! n\n[nhmru .2 mm. In\n.. wax‘ mm.,, r.mumu5‘t.2m\nu-«um/1:\nLawn»: 1 mm» n\n3;. ‘W .4 95 57 u\nLahmns .2 mm» m\nIn In 51 as is As\nFxrsx mm amvn we .5 .. mm 9.\n» mm» n.mu : ..m.uummm\nr:iu»nEi ,\nKn|mH\\|HwruUV1H\nEnlwuv) .2 ihrm/(V! 1::\nhrs! >r.vawq abvvz mu .5 .. man ze.\n., mm.» .: mmmna,s,av\nxx w m 15 55 75\nan 1. ‘J! 41 4 74\nn 55 as 91 as w\n31 9, 4-4 ,-.4 93 0.\nn3 9:; so as as n command dow\n7* Dussunuvl 1 aonro:,sqm.-m l_mak:xampIes.m ‘ BadKreak.m i 1- l '*§:{C§.:5'] mm \" H\n1 - rfor ii 5ize(A,'H W 0 9 3 0 0 0\nZ ' ‘°' 11 : \"‘i‘*(\" columns 12 through 20\n3 ' ‘' A‘‘?ij3? 102 101 51 55 15 45\n‘ \" I M11-JJ* - » rng(0>; readings : randil105,1,20>\n2 Z 9 ‘Eb k_ readings :\n7 end '9‘ ' columns 1 through 11\n' as 9s 14 9s s7 11\n5 ' d 9\"“ columns 12 through 10\n9 ' 9“ 102 101 51 55 15 45\n1“ >> readings\nreadings :\n\ncolumns 1 cnrougn 11\n0 0 0 0 0 0\ncolumns 12 through 20\n102 101 51 55 15 45 1\n>> rngr0>; readings : randi(105,1,20\nreadings :\ncolumns 1 cnrougn 11\nas 9s 14 9s s7 11\ncolumns 11 through 20\n102 101 51 55 15 45 1\nFirst reading abuve 100 is at index 9\n)) rng<0>; readings : randi(100,1,20>\nreadings :\ncolumns 1 through 11\n52 91 13 92 s4 10\ncolumns 12 cnrougn 20\n95 9s 49 51 15 43 S__ H __ 1.... ___ ’ ...5........ 5... MM\n. ..... n....,... 1 x........... .\nV , .. a , N755... ........7...»-...M.n..........V:5.........>.5................w mu... v......... . ..»....n5. .7\n .5... .  -..~...m.».-.5-  — .\nA    M. ......... .......... .\n. ,\" _ _, M .5.5..5...m.5...\n  WM ‘- . . . . . . . . ... .5. .7\n7 .5... 7 ’\" U ‘WW’ .5...“ .7  M...\n 3 v\"‘~H‘<'“' 5.. .e. 7. .5 .5 4. .7 .. ...\n. ,,,,“_m . 5...... 5.. ,.......  .5......5.7..\nA  w 5 W N5...»\n. ,m,_W,M § _ ‘max. .....5..5 .  ..\n.. _' “W 5. ..5 .. .5 5. .. .a 5. ... .5. .7\n._ r.m...,. M “ en 5...... .7 v 7.\n ,3 '\" ..z .5. 5. .5 .5 .5 97 .. ...\n..  ..5...5.,\n: .....5M .5...” . - .5... ..\n . .5 . . . . . . ... ..7 .7\n7. .....,5....m .5...” ..  7.\n , -P-mg». ......5. ........s....5.\n\n.5...“ . 5...... ..\n.5 u .. 55 5. .. .. .5 .5. ..7 .7\n.5...“ .5 M... ..\n..7 ... 5. 55 .5 .5 .7 5. ...\nrun 5...... .55.. ... .5 5. xrvﬂrx 5\n,5 W... ,........ , ,...........7..\n.55....»\n55...... . ....5.... ..\nLnkwr) .. ... 7.\nFun 5.5....  ...  ..  .5\n., M... .5 .5....5..5,..\n.. .. .. .. 55 .5 7. .7\n+ an AI 2/ u 4 V4 4 ay\n.3 s. 5. 5. .5 7. 7. .7\n.. .5 .5 ,5 5. 55 5 55\n5..5..555...... H g) g, ;l;::: ’_W_m ;lwVklrd|47 ,:1..w.,...‘ L\n\n   \n      \n\n   \n\n. umrn 3...... Z zu....m.. .\nV.gz_ VA/sup? .7\nI N-~~ ., mvvl/7  »...r.m ..;..M‘ .\n. V _ , M “ ‘ (alums . mm 11\n.,,,m r~;;r—”s~p“;m2, u . n a u e u a m m 17\n..m....W W _ _ Q mm .7 Y! mm\n»wm.m ’ \"“ ’? m m 3; xs )5 4: av x. m\n._,,,,,_m H AHA.yH «, — )>vhq\\H) .m.W=m.n.u.sx;«‘\nA n......«...‘..m rm“ mm;\n» .._u.W,m _ ‘ - n..m . um.» H\nmm am an we .4 us 57 n J0 ax m m 17\n- «,...«.... M ., *\" Kvlunm .7 Vwmwh ya\nr.W....m '\" m m 5. :45 1, 4, 97 an m\nr- \"$3.. rcamrvgs ,\na pm” ~ (mums . - H/HIV! n\nmum A . 1: a a . u a w m In) 17\n'-,wva_:»eo<m |:n\\wv: .2 vmmnzu\n‘“”\"‘“°\"' ‘ ..m.m‘v..m) r.mamus‘L2e\\\n\nlnhmrs . mm 11\nas u u as 5: n we SA m :07 17\nLnwvms .2 mm Al\nm m 51 as is As «: 5. m\nnrsx «um um: mu .5 .. xmuvx 9\n,, m.,w mm, , nnmriuumm\nreadings :\nKnhrmvx . ..‘...m. u\nmm .2 mm. 2a\n\nm. rcmanq um nu .; .. nan ze\n., mm .= .W.m,s.a»\n\nR\\ w \\n 16 55 75 7» R7\nan 1. 9/ 41 4 :4 4 .-.4\n:3 s: as 91 as 1% 72 :2\n91 9. 4»: ,~: 9; 5, . as\n53 96 au 95 M2 n 1» . H _,g as 3..., iwm ;........... #..w...........\n\n \n\n   \n\n \n \n\n \n\n. ....—. n-W...‘ \"‘ .m.. Xmas-mm .\n\\\\ .. a _ ..>.....W..,,W.............,..\\...................,...........W.... .................... .7\n.....,,.... . — .  .\n   .......... . \n. , nzmm, _ ..................\n I M” HAW, . . . . . . . . ... m .7\n X, W _ A ...m.............\nA.......... l .7 A;;g“\"_ _ m m an .5 .5 4; .2 .. ...\n._m_m V ___ ... V V)HWH”) .........-.............\n S M m...».. ‘ I W\n—........m N, W .......,...............\n ,_ ... ... .. .. .5 ., .. .. ...\n- VNHM ,, \nr-  ........\nL.7*U\\\\lN\\m ....... . W... ..\n;.“..‘5.§,fi.\"Q. M ....m. .2 -.......... za\n”\"“‘\"‘\"°'\" ..rr'Vm>.rmdmﬂ§ mnﬂ)(‘ll5.X.2M\n......»..\n....... . M... ..\n.. as .. .. .. .. .. .. ... .... ..\nLahruns .. W... ..\n... ... 5. .. .. .5 .. .. ...\nhrs: W...  ... .5 .. W. 9.\n,, W...» m....... V, ,............a.\n........:\nW... . W... ..\n......., .. '.l\\Vﬂ\\/IV! ..\nhrs: M...  ... .5 .. IVVDKX ...\n.. HY/1\",} .; .........,.,..\n.. .. .. .. .. .. m ..\n......».. ... 4..\n.. 55 as .. .5 .. .. .2\n.. ., .. ,. .. .. . ..\n.............. .\n. ,_» o ma/.u..,..\n\n \n\nnu.»-1». . rmalbox ; Myvxumum » .~........:..um...m.»¢wu>.»muu » nrmr-ah . mmas . -\n\n \n     \n   \n\n \n\nH----- ,..m. 7 . (mm V’! X...» 5,. >1 an ..n ~: '\"*“\"'1\"\n\nhim! \"\"‘ W H — ’°\"\"\"‘ r'\"\"— \"‘ I “\"‘ ’ mm; xxmmyu :1\n%'”'°*;\"'\"-\" \"é’«~-»n»e«- ‘::r*.:i‘\":r\"'; .5 .5 97 .2 \n\n'“‘” ‘ﬂ (mun-In - - v » mu!!!‘ ...ms . ..n¢.u-e.:,2.:\n1-..m.m .... hm «guns -1 “\n\nIzukbumvxm» M ., W9...\n1mm. ‘M as 96 u as 57 n 2. 5: m m n\nlfnundlnnm M Count; 22 tmwﬂvh 24\nlloounxxm ‘AI: III 51 55 I5 L5 91 M in\nW M...n,s\nlmnvumx m reanrwzs -\nWM 2..-, , W. ..\n)lIV¢IHnLm n a n l n a 0 I m m 17\n cm 12 (hmuuh 2.\n\nrudmvs m.¢.uos,:,zu\n\n \n\n(nhnns 2 mm,» 11\nas as n as m u 11511-2202 27\n(ah-ts 22 through 2.\nm m 52 As 15 as 21 :4 1-1\nhm ruﬂiﬂi ibcve us As at 2..:=x s.\n» mvtl) run;-W 5 umummu\nreadings-\n(alums 2 mmgn u\nu291n9zr>4xAza5s5s9715\n(ah-|x 22 u.m»«;>. 2.\n\nas as 42 u is 2: an n as\num rudmi ibvve m 2; 3! min In.\n., mm; A = v:mLl'13.5,IJ\n. .\n31 111 Is 15 :55 vs 7a m\nan 22 97 42 4 14 a as\n:3 55 55 91 as u 22 :2\n51 95 4; 19 53 as s as Command dow\n7* Dussumm 1 aonro5_sqn.m l_mak:xampIes.m ‘ Bal1Kreak.m i 1- l '*§:{C§.:5'] mm \" H\n1 - rfor ii size(A,'H W 0 0 3 0 0 0\n2 - for J] : 1'5ize(A.2) columns 12 (hrou n 20\n3 ' if A‘‘?iji? ‘: 9° 102 101 51g 55 15 45\n2: emﬂll-J1’ = - » rng(0>; readings : randi(105,1,20>\n5 _ brEEk_ readings :\n7 _ and ' columns 1 through 11\nas 9s 14 9s s7 11\n5 ' d 9\"“ columns 12 through 20\n9 ' 9“ I 102 101 51 55 15 45\n1“ >> readings\nreadings :\n\ncolumns 1 cnrougn 11\n0 0 0 0 0 0\ncolumns 12 lnrougn 20\n102 101 51 55 15 45 K\n,5 rngr0>; readings : randi(105,1,20\nreadings :\ncolumns 1 cnrougn 11\nas 9s 14 9s s7 11\ncolumns 12 through 20\n102 101 51 55 15 45 1\nFirst reading abuve 100 is at index 9\n,9 rng<0>; readings : randi(100,1,20>\nreadings :\ncolumns 1 through 11\n52 91 13 92 s4 10\ncolumns 12 cnrougn 20\n95 9s 49 51 15 43 u & 35 ff; ,z.5..55. *“:_‘:‘W\n- ..555.« H-......— E -55.. 2-m.5.5.5 -\n ; ;;;H>;‘m_2, V 5 5 5 5 5 5 5 5 5.5 555 55\n 3 - My-‘— V 555 555 55 55 55 55 55 55 555\nmm é M .55 ,.,555.« \n5555555555 5. “ *\" 5555.555, 57 5555.5... 55\n ,3 M 552 555 55 55 55 55 57 55 555\nWM 5555., 5  55\n 555.5 55555., 55  :5\n”\"“\"‘“°'\" ..mwn>5rmamq: ranﬂxV1|h55I.26\\ I '\n55.5555 5 55.5555 55\n55 55 5. 55 55 .5 55 5. 5.5 5.5 55\n555555 55  55\n555 555 55 55 55 .5 55 5. 555\n 55.5.55  5.5 55 55  5\n,5 5.5555  , 55555555555555\n55.5555 5  55\n55.5555 .5  55\n55,5. M555 .5555 5.5 5. 5.  55\n..  5 ; ,555.555,5,55\n55 5. 55 55 55 55 5.. 55\n555.555 555 555\n55 55 55 55 55 55 5. 55\n55 55 55 ,5 55 55 5 55\n55555555555555.\n5 5,. ’. J H.3........ .n..,.,,;.g_ _ V ,5 ammﬂ I\n\n.... am s... Q:-..... . W2‘... (wanna! 9 n - ........ ... M... 5...... .43.\n\n. g a _ WW,..........,9................n................,.m.......w.........,... ........,..\\.......\n\n   \n\n     \n\n \n\n W... . 5   ....;,  «— :~.~:~.v\"ms.» \nI mm M... AWIHIII  ....y............. ........m . WW «\n‘Anqnm ' \"‘\"—M-' .. o » . .. o . . ... m .7\nr ...... MAN!“ 1 ‘W H ‘ mm 2* ....... .7 mm... ..\n 3  ... ... .. .5 .5 .3 .. .. ...\n..,_m ﬂ  n... V y —  \nr........ M _ ﬂ *\" (ulvwv. .. ..m...». 2.\n ,3 '\" ... ... .. .. .. ., .. .. ...\n.,..,,m ...m .  ..\nr- 2l§.§,fi.\".‘. M ...m, .. -M... 2.\n\"\"“‘\"‘“°'\" ..mum».rma.nq: r..nu.r1u5.t.2m\n\nLahmrvs . W...» ..\nas W5 .. .5 5. .. .. s. ... v... .7\nLaluvvs .. M...» ..\nm m s. .s .s .5 .7 as ...\nms. rm... .3... .... .5 .. W. 9.\n» W...» m....... = ......mm..\n........ ;\nKnlmw. . W...» ..\n.2 .2. .. .. 5. .. .. 55 .. 9. ..\nc....n, .. -..,....... ..\nmg. mg... ...... ..... .5 .. man 2..\n.. W...» . : .,mu.rs9,s,nv\n.. no .. .5 .5 .5 m .7\n9......“ ... 4..\nn 55 as an as 19 2. .2\n.. ., 4. .-.1 a. .. 5 ..\ns39cua55an\\ox ,:.m. . ..7.7.. 77,77,777 . 7\n\n37, J H ._~,.774777.. V 77..7.@;_. ' ,€ WWW\n\n7.. .77 M... 7_.,.m...\n\n \n     \n\n.  ‘fmlv ....m__, . Attvu\n-mm  77777.7.77.7. -...77.7.7777.7. ...7.7...7.7 . an >0 w w w H I = m -W I\n — — 7 7 777 7.7 77 75 7; 7; 77 7». 777\n‘  7 77 77.77.77 ,,\n\n ;  7 7 7 7 7 7 7 7 777 .77 .7\n“””\"\"' _' am‘ 777 7.7 77 xs 7: 4; 77 7- 777\nG W77  7.777.777;7777775777777\n\nL ‘7L37”f.‘m“m‘\"‘ 7.777777 77 -77777777 777\n\n-7-27‘§;,f77\"Q.m 777;. «M77 777777 777 .7 .7. .77.», 7.\n\n77 97 77 72 77 77 22 57 an 77 77\n77777777 77 -777777777 77\nas 9. 777 77 77. 77 77 7- 77\n7,7,7 77.7.77. 777 777 .7 77 7.7.7 77\n» 7777.77 7 , 7.77.7-.77.,»\n77 77 77 7.7 7 77 4 77\n77 9: 47 77 7: 7; 2 as\n\n.. 77.777777 '\n7 7 7 7 7 7 7 7\n\n77 7 77 77 7 77 4 77\n\n7 7 as 77 as 77 7.7 72\n\n77 7,, 4-7 777 as .7 3 7.\n\n7 -77 so as 77 77 77 7 *w__ amt’? _ r is Elluniulhn 3\n\n\"‘ — 3 ‘ nu».-. M luruni um... I-«>4\n\n‘rm . mam“ J . . Aoanm B Wu\n--um   p.M.«. m....».n . -<» ~ 44 N v H = B H --N U\n\n> 1 W... mm.” ‘. ‘='~\"m”‘\"*M\"\" . t\n v m2 m1 5, as .4 .4 ,1 M ,9.\n,, I 1 Var ,,  2» ,, \n.I“\":‘:*.‘7; ‘\" 1 n ~«~v--v <— no \n.;;.;_;m . .m.w , .‘ —  .  .»\n“.xwumm¢‘um ' ‘N . 0 a u c 0 n w n m m n\n  m2 .... ,1 5, .5 .. 9, M m\n.  5  em ,. ,m.m,  = w.....os,»,za,\n W.” .  ..\n.  («A .2  Iv\n»:,”..mm. mm mm  m .\\  M. a.\n,m.m\n\nmm . mm 1!\nn2ax1392r.<xazxs59ou7xu\nmm .7 .W.‘. 70\n9.w.».gu..«yzm».\nrun .«...w. W, mu ., .‘ ‘W. In\n\n>. rnqkﬂ A , r.mm¢.m\n90 22 v7 .7 4 7. 4 m\n9; as 49 79 9: us 5 as\n\n, mm.\n\nA\no u . .3 0 . . n\ne :1 u .2 4 ,4 A .9\n0 u as = as 19 2a :2\nu ~13 A5 ,9 9‘ .3 5 a.\n. an xu as e« n in A e = u ~:;'.':;.   L w L   a\nas am 5.. ’ V‘ ' ‘ ' n.».«-u Cmrnnr 5» -‘5”‘°\" .......... . rm\n\n. . . ,,...‘.. . ,,.. . m..m,~_, . L....m .......,.\n.‘ A a _y. M... .  . W.“ , M. . m..‘w.A... r...m . LE>\\1)\\ﬂbV . H\n .    ,.w.m.‘.   .\n’ I ~~<- .-W.‘ H ‘m-‘.\\Y.:,-i‘; MW AV M...» . T mm, A = ranmwu .5‘\n\n,“-rm 1 . mu .,.;um M ,. ,5 1‘ in Is —,. >12\n\n.‘;:;;:*_“:;“\" ; H .m,.,» < 9» w 18 a1 42 4 74 A 59\n\n,,_ﬂ;_;m . m...,,;.. , n 55 95 =-. .. 1. 7. VI\n\n.,‘ _, W , . M 9. as 4? 73 9; as 5 25\n\n. R‘fj‘,;j‘mjff‘m‘ 5 man, 51 «s M as M n 1. .\n\n§m.M. . ml /. x».\n\n(V704 ..,.k N » W ~ ‘_ J u‘,;.m.. , m..‘.,a;._,. _ W, Q U... H\n\n \n\n \n\n \n\n»_ 0.\" 5.“ « ......... ...N. . QM\n. . .  “run »...m__, . ....,,..\n\n’- W‘ V! m_.7.‘.- =.‘.x.,‘.  .......»u. . yymglm, A: m..»a..m\n..;;;:::_:$;‘\" \\ .mm,m<9u 3» 13 91 12 4 /4 4 so\n..,,.,. ‘ ~u.m.« , n 56 as u as W 7.. W2\n:3‘ H »  9, as 4? #9 9, as 5 25\n.;:..::;:::; 5  .5, .5 5. as N .1 ,. .\n;:Cm>4  N 5 M W /- MATLAB RZ014b\n\nPIJBUSH VIEW\n\n15.: a v —\na w  tlsmpln Fuuclioncallstackz a\n\nSt 0 t _\nIraaloolnls Continue Step L‘ W \" ‘Baﬂﬂfgak v_\nqr.\n\n      \n \n\n   \n\n    \n \n\n \n\n\\/Documents > Computer Programming with MATLAB > Tutornals r Lesson 06 >\n\nilzpajm/Dropbox/My Documents/Cﬁputer Programm... K x Command Window\n_appru>g_sqn.m “ LBre§k§xample_s.m  BadBreak.m [-E ' >> rng(0); A = randj_(§\n\n \n\n \n\n:size(A,1) A -\nj = 1:5ize(A,2) 81 10 16\n.r A(ii,jj) <= 9o 90 23 97\nA(ii.jJ') ; 0 — 13 55 95\n:1se 91 95 49\nbreak; 63 96 80\nand >> Badﬁreak\n\nfgK>> * J H _‘Im(|V‘(V\n\n.gz\n\n \n\n« <m..,.k..\n\n. .u...u_,,__,\n\n \n\nm..3,,.¢. 1\n\nm...H.;.\n\ny‘m,.. V-Hlh\n.. nu ..:.,.m..n\n\n2 Wu l.suc(A27\n; .um.,.»< 9»\n4 Mu.m.a\n\n«-\n\nn\nI-«bum mu. Sm!\n\nq. W.\n4 mm.\n\nL-.».m.u\n\nnow»!\n\nI\n\nu..\n\n,, mm, A ; mama . m\nA\n\n99 la\nn 55\n9. as\nu 415\n\nw\n-as\n49\ns.\n\n:2\nr9\na$\n\nas\n\n/4\nN\nas\n\nix\n\n1.\n\nso\nas « au~::;:;.   ~ w v:;::“  4\n\nIn em 5.\" * \"' V “ ‘ yawn. (mm. 5:; 4 .......... ~ an\n\n' ' ' »_-Mm» “V-\" \"'“‘l1.1:._g - um»-wnu nu-our-1\n\n« , A B .4/VA/murl|AIMmxvDvuv‘b6xrMvDmumeMsrLAmlulrv7’vI/uummm:wKhH/l\\'L/nllV h.|uu4\\»vLe>»uunbr 7 . ,4’\n|“’“ L\\«\\>Amn —m»..).‘ B«\\\\[I«wnm LuII4a4k-n » »mgmr..\\ ranuxhlﬁ mu\n\n'.\\_, W .. M ..=.m,m,:» .. A\n\n_.~='-Wm . m. 9. as N 79 9; as 5 25\n\n.§jfj:§;j‘_:;fj‘_: 5 hm», u as .. as u 17 1. .\n\n,“w>»--=~w~ .. so 23 In :2 A 7: 1 M ‘a J H ‘_.m.,‘.. ,4 K.M,‘,,.% . _ V [ Lg... Mumm Q\n... Gun 5.\" »‘”‘\" ' ~'“\"' \"\"\"“ E I ‘ ....,..... W... 5.. J‘“‘‘’\" ....,N. . an\n\n- - - _.m.. . ..r.. - >»Q1\\1_4tus_1 - w....w... ..-...~~\n\n. , ,a a _/ r M... , ..;..w . .m,.»¢. . Wm“... r mm...m...mmw.W.:.AnV r...m . |£>\\1)“ﬂbr ~ : J\n\nI~-A  4rV\\>\\2\\)U aw.“ ........m . v; 3; ;_r 9'3 3; 3; ‘; 3\n'.\\_‘;M . Y/> .. .mm,n . A -= v\n ~ ‘AI1:‘¢If-2 7 :2 :2 2: as .2 2: ,: 2:\n\n‘\n ; «v~.s.4.......: 9, as All 79 9, us 5 95\n\n \n   \n \n\n  \n\n« (‘W-n“I.4mk ,\nrvW:‘JVfv:‘_:1>‘:|x ﬂ\\ » n n a 3 7» n :2\n xx 55 as at .2 an xx’ :2\nM as 1»; w 01 as 5 as\n5; an an as an 17 m ‘I\n\nW o a v uosmvnm\n\n94 M 97 .1 4 /4 . 5;\nu 55 -as m as in 2x :2\n6: an xv as as 17 1. A\n\n \n\n \n\nas w w .3 as w 7. 52\nno 2: 97 n A 7. . 6*?\n.2 ss 4. 9. as J‘! 1:; 3,\n‘H ‘vs .9 m a; sa 5 as\n\n30 In 97 .2 4 7. 4 no\n91 as n 19 as as s 95\n51 as u as as n 1. .\n\n9e 12 u .2 4 ,4 A .9\n\nu $5 95 = as an za :2\n\n4. ~13 4g ,9 9‘ .3 5 a.\n\n5! an xu as as n m A\nA /., K» ‘a J H 7_777.77.. ,7 u77»7.,_,.y_7 . _ V [ L7... Mumm Q\n.7. 7.7 7.7 »‘”‘\" ' ~'“\"' \"\"\"“ E I ‘ ...7,...7. 7.7,... 77. J‘“‘‘’\" ....,N. . 7..\n\n- - - .7777. . .77.. - 7.7777... - w.7..;77... 7.7.7.77\n\n. , 77 a -7 7 7.... 7 7777.777 . 77.77.77. 7 77777777777... 7 7.77.7.7777.777777.77.7777777777 777.7777» . 777777.. ~ : J\n\n7.777».7777.7 - M7777 77.77.7777 77. 7.-777777..,.7777777 .\n\nn~-A 7.777.777 7.777.777 . w w -r \"1 v: w = r>\n.7 77777777777777\n\n \n\n7.‘ 77 77 777777747 77\n\n1 “V73”->=x;I~1;n ‘ 7 7 7 77 77 7. 77 77\n213333;: 7. 777.777.. — T7‘ SE 31 35 7: 13 72 53\n.—;m,___WW ; «N 77 77 77 77 97 77 7 77\n\n \n \n\n~ 7.,..7m77..m 7 W\" 77 77 77 77 7.7 77 77 7\n\n777.77. M W 7\n« 777.7777.” , \" 7 7 7 7 77 77 77 77\n7» 7.77 7.77.7. , W’ 77 77 77 77 7 77 7 77\n«:7 77 77 77 77 77 77 77 77 77\n7. ﬁififm“;  77 77 77 77 77 77 77 7\n7.7 7”7'Z3,7;L‘7 77 7 7 7 7 7 77 77 77\n 77 77 77 77 77 77 77' 77\n77 77 77 77 77 77 7 77\n77 77 777 77 77 77 77 7\n\n \n\n \n\n77 7 7 7 77 7 77 77\n777 77 77 77 7 77 7 77\n77 77 7. 77 77 77 77 77\n77 77 77 77 77 77 7 77\n\nw 77 77 77 7 77 7 77\n77 77 77 77 77 77 7 7:\n77 77 77 77 77 77 77 7\n\n77 77 77 77 7 77 7 .7\n\n77 77 77 7 77 77 77 77\n\n77 77 77 77 77 .7 7 7.\n\n77 77 77 7s 77 77 77 7\nA 7., 77, ‘a J H ‘_.m.,‘.. ,4 K.M,‘,,.% . _ V L 1;‘... Mumm Q\n... Gun 5.\" »‘”‘\" ' ~'“\"' \"\"\"“ E is ‘ ....,..... am. 5.. J’“\"°“ .....N. V an\n\n- - - _.m.. . ..r.. - >»Q1\\1_4tus_1 - w~...m... ..-...~~\n. , ,a a _/ r M... , ..;..w . .m,.»¢. . .«.oM.‘... r mm...m...mmw.W.:.AnV r...m . |£>\\1)“ﬂbr ~ : J\nL.H<’H\\A1m - aw,  m mm.‘ m. L4:ww.\\w,-V\\4(\\u»« .\n\nI ~-~  H AVVWJI )«\\  MW .» H1 m....m . w w -r \"I '1: W = r>\n. ‘ .,, q. 3. 9-. m n in A\n\n \n\n .W.,.» . A\n Vern .sxm“~17 H q . . ., 7. 7. .,\nM -\"H N” no 23 M 12 4 7. 4 59\n\n‘V1\\ur\\|vm ‘\n\nam...” 1 V M. mmk — n 55 95 9. as w 2.. n\n-;.‘.,...W.,m ; ‘ ~~ 3. as 4» 79 9: us 5 as\n. W_,,_WM I 51 as .. as in 17 .. .\n\n       \n\n \n\nWm. M W‘ A\n\n« W....p.k, , t o a v u 0 We 7. R7\nu Wm)» ..»..‘. , W 4. A)! 97 .1 4 /4 . 5;\n‘Wm M u 55 -as m as at 2x :2\nr- 22311“;  6: an H as as 17 1. A\nr», ?lf$,?;£l m » n n c e a m :2\n\nxx 55 as at .2 sq 1x A:\nM as 1»; w 01 as 5 as\n5; an an as an 17 m ‘I\n\n \n\nas w w .3 as w w :42\n«. 73 97 n A 7. 1 5»\n.2 ss 4. 9. as J‘! as 3,\n‘H ‘vs .9 m a; sa 5 as\n\nno 1a a7 .2 4 7. 4 m\n91 as n 79 as as s 2;\nin as .. as as n 1. .\nA\n\n2 12 u .2 4 ,4 A .9\nu ss 95 = as an 2a :2\nu ~13 4g ,9 9‘ .3 5 a.\n6! as m as as n la 4\n\nA /., X» _‘, J H ._...... ,. .M,_,._. . ', L ._.... _mmm_ J\n___ M S“ ,..«... - ...w.- ........ . , ~. 4...... \"N V W\n- - - »_ m. . ..r— - m m g... .L....;.... .-.....~.\n\n   \n\n \n \n \n\n \n\n \n\n. , .. a _. . ..... ,  . Dmvbéx , ............ . .........m.........., ....... . ., T .7\n\n‘I W7 . ....,...- 2....-. .......... . N\" w -r '1 v: w = r>\n>,\\_‘ .. ... .. ...,.u,.. . A M ‘?= 3\" 9‘ \"4 \" \" A\n; ,Z‘,§ﬁ,\",T M 1 var u omu 2v w . . 0 . 7. 7. .2\n4 “ E ‘ ‘ “ ““\"\" ‘ 9” no 2x av 12 4 71 4 59\n. *_\";;;;;‘; . ........ - n — .. .. .. .. .. .. 7. ..\n.—,W__WW ; «Mn N .. as 4. 79 9. .5 5 as\n. k,,,_,W,W > ‘  .. .. .. .5 .. .. .. .\n\nWW. ; M « u .\n‘ <w...m.m . ‘ 0 a u u 0 a 7n R7\nline» A; W 4. .. .. .. 4 .4 . ..\n..,N.. .. 55 .5 .. .. .. 2. .2\nr. . 22511“;  6: an xv as 5. .7 .. .\nrs .\".'§S,7;lL .. » n . c e . . .2\n‘“‘\"‘\"‘“\"” u 55 as o. .; an z§ .2\n.. .5 .. .. o. .5 s as\n.. .. .. .5 5. .7 .. .\n. . . .. . . . .\n99 2. .. .. 4 .. . 5.\n.. 5: .. .. .. .. .. .,\n.. .. .. .. 9. .. 5 .5\n. 1. .. .. . 7. . .0\n9. .5 .. .9 .. .5 5 .;\n.. as .. .. .. .. .. .\n\n.\n. . . . . . . .\n. . .. .2 . .4 . ..\n.. S5 95 . .. .. 2. .2\n.. .. .. .. 9. .9 . ..\n.. .. .. .5 5. 17 .. .\n\nA /W, . ._.7.4.. ¢ 7.w,,._4. ,_\n1' J :1 MW W\" K. ‘ V _ Ir E. .-4......“ _/ .\nIn an 5.7- * \"' — 5‘ ‘ I-u>¢\\IMI Mm ma 7' um... mm\n. . . ,7..7.. V... 7.w_,h_, . . ...7.79 7....\n« 7 A R! -7 7 um. 7 :..;m.77. 7 nmbe. 7 MvDmume\\»|\\ 7 LA-mlulu7’vI/mmnm\\m:wm‘o1/IYLAIIV Fulmuh 7 u»..7ns 7 . I\n - a..7.7 747.7..777.......  .m7777.77.m7  .\n-WA  _77.7.\\.7-  ........77 . v; 3; ;_r B’; :3 3; ,3 3\n‘*‘f‘“\"” 2 «.777 ‘ 7 . . . . 7. 7. ..\n«7::::::.:°.;“\" »  .. . .7 .. . 7. 4 .7\n«...47...7.. ‘ ‘““vW'* — 7. 5. -77 .7 .. w 7. 3.\n-~.7.......7.....7 ; W“ 91 as 4. 7. or .5 5 as\nme»: .7 .. .. .5 .7 .7 .. .\n[7 M... A\n‘ , “ 0 a u u 0 a n 37\n ,; we .. .. .7 .. . 7. 4 ..\n«M7 1! 55 7. 7. .3 .. 2. 7.\nWpww\" ts! an xu as 5.! 17 in A\n7.»7.7.,_...... . . . . . . . ..\n .. 5. .5 .. .. .. z. ..\n.. .5 .. 7. .7 7.7 . .7\n.. .. .7 .. 5. .7 .. .\n. 7 . . . 7 . .\n.. .. .77 .7 4 7. . ..\n.. .. .. .. .. .. .. ..\n.4 .5 .. 77 .3 .. 5 7;\n. .. .7 .. . 7. 4 L4\n.. .5 4. 7. .. .5 S as\n.. .. .. .7 .7 .7 .. .\n.\n. . .7 .2 . 7. 4 .9\nu 7. .5 . .5 .. 7. 7.\n.. .7. .. 7. .. ., . ..\n.. .. .. 7; 5. 77 .. .\n7 A 7.» ,. J bl “.KmtlVkV V ‘mm at .\n\n_ II E; max...\" j\n\n.._. am 3.“ « ....,.... M M... L........ -.3:\n\n   \n\n \n\n \n\n \n\n. .  W. WWW . ......\n.‘ . A .2 _,/ r then r uumm V D-aybdx r MyDmum:HL r L4 r\\uu|:v7’vI1mAuuHm:wKh «An/nlr nnmm» v LAr>\\u\\ﬂ6 r « J\n.““\"‘\"* “W” 1 Nu .. . \\ k.,m.:» 4 , 4\n.;:,:;:;:: . nnux,Hl»§u ?i ii 31 SE .5 1. 7. 5?\n-:m...z.W-W ; ‘WM’ v an 95 4a 79 9: us 5 35\nWW _' A\nA:..,....m. ‘ 5 a . . . a 7. R7\n«.m..J..‘., ); M 4. n. 97 .1 4 /4 . .9\n»wVru7v_r/Hrr H ;;,m u 55 as m as at 2x :2\n,.::7:.:\";':: ;; M . n . . 3 B . K1\nr‘l?(;m‘.$'§m\"' n 55 as 9. .2 :9 2; n\n-3} an 3. as 64 .7 W ‘I\n3 E W ., 3 E W ..\ng. 7“ 97 ., A 7. . 5.\n.2 g ‘I: 9. .. J‘! 1)! 3,\n‘H ‘V5 .9 m 9, 55 5 as\n. 13 a7 .2 A 7, 4 m\n9, as N 19 9. as 5 9;\nA\ne (1 ‘U .2 ‘ y. A .g\nu 55 -as = as 3. 2a :2\n‘Al g, .g ,9 91 ., . 9.\n5: an El as .3. 17 .. . as J  « ‘~-~-w ~ _ w «:4 a...m ‘:-\n\n3... »\"”“* ' ~*“\"\" “’“\"\" * - * .......... M M... J”... mm:\n\n    \n\n \n\n \n\n. ..‘. . __.s.. . ..... m __, . ....,..\nV J a _ .u>.‘.,WW,pm..M,.s..sm.u...Wm.‘W.m.m,w.‘mm.V  .»\nW  rad, .   ‘.‘.p.m.».m. ..  .Wm,. m.W.s .\n-  x 2|  s. .,._»,.W..‘ m.‘.w Wu.“ .1 ;;  ;; ég Sr; 3; ‘; =3\n7“\"”\"”' I 1 mm“ . 19 a a . 76 re V\n. ‘”‘\"‘““\" x u —\\ .,«.,z‘ 4 , ,_ 1 »\n. {‘J;,';;f;;‘ . ,. /un.rH <, an 35 if 31 s? ..s ‘.1 1. 33\nA-.‘.....m‘..m * “H H‘ “v 3) ss 4s 7s v: as s as\n' lvnkFxvuyr\\e\\m S “S” v 5: W In 95 M H la 1\nr Vwham _' ;:;;;‘ \"M ‘ .\n' °\"\"““”' ~ mu 9: 12 J .1 3 ,3 73 25\nI  \"  n 5: 9K .. as 19 IR :7\nA W. ;; : gm s. s. N N ss 0, s s.\nU.n..mm B W W as 96 at as DE n 1. 4\n ;;  u 0 . B s s 0 27\nA l7.\"m§.‘Q.‘m‘\" :2 5: as 01 X5 )9 2: xx\ns. ax .. 7-; ss 65 3 -as\nw as as an as as H m 4\ns e u . s .. u a\n-3» as M 57 . 7. . 59\n.3 as -42 In as .s 23 31\ns. 95 M u 93 -as s as\nu 7. av .2 A 74 A M:\n9: ss 19 In ss ca 3 as\n. o 2 s . . a .\nn . W 41 4 M 4 ma\n)7 55 as 91 as 39 7, :7\n91 s, 4-4 ,s as s. s ss\n53 as so as as n .. s\n. . s_ ,, Lead Vnstructorz Mike Fitzpatrick\n\nCUWCLNUW d€S|gﬂ1 Akos Ledeczi and Mike Fitzpatrick\n\nGradmg Technology: Robert Tairas VANDERBILTVUNIVERSITY\n\nVIDLW 0\nI6.”"
  },
  {
    "path": "E:/Coursera/nlp/06 - Week 3 - Text Classification/6 - 3 - Formalizing the Naive Bayes Classifier (9_28).mp4",
    "id": 3759,
    "text": " Text Classification\nand Na'I've Bayes\n\nFormalizing the\nNaive Bayes\nClassiﬁer Lv.w..v.1mv\n\n/~ Bayes’ Rule Applied to Documents and\nClasses\n\n-For a document d and a class C mu mumy\n\nNa'I've Bayes Classiﬁer (IV)\n\ncMA,, = argmaxP(x,,x2,...,x\" |c)P(c)\nCEC 0.4- my\n\n/- Multinomial Naive Bayes Independence\nAssumptions\n\nP(x,,x2,...,x,, lc)\n\n- Bag of Words assumption: Assume position doesn't\nmatter\n\n0 Conditional Independence: Assume the feature\n\nprobabilities P(x,|cj) are independent given the class c.\n\nP(.\\']......\\‘\" IC) = P(xl |c)' P(_\\‘3 |(')'P(.\\‘3 |(')°...°P(_\\'“ I c) Multinomial Na'I've Bayes Classiﬁer\n\n(‘MAP = argmaxP(xI,x2,...,x\" |c)P(c)\n(‘EC\n\ncm, = argmaxP(c].)1_[ P(x I c)\n\n‘EC .\\'EX Applying Multinomial Naive Bayes\nClassiﬁers to Text Classiﬁcation\n\npositions <— all word positions in test document\n\ncw = argmax P(cj) H P(x, |c_/.)\n\nL'|E( iE]m.\\'iIirm_\\' Text Classification\nand Na'I've Bayes\n\nFormalizing the\nNaive Bayes\nClassiﬁer"
  },
  {
    "path": "E:/Coursera/object-oriented-java/01_welcome-and-project-overview-visualizing-data/02_object-design-constructors-instance-variables-methods/04_core-defining-classes-and-creating-objects.mp4",
    "id": 3842,
    "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 Classes and Objects in\nJovo Visualizing\nGeospaﬂal\nData By the end of this video you will be able to...\n\n- Motivate the use of classes ond objects in\nprogramming\n\n- write classes in Java\n-Create objects and call methods on them\n\n-oescnbewnorona\n\nconstructors or . .~...‘L,5 «. .....~n~|(.-  : Computer Science is...\nThe science of using and processing\nlarge amounts of Information\nto automate useful tasks\nand learn about the world around us\n(using a computer) Easy to write‘\nEasy fé ‘mdintqlri\n\n‘Easy to debug Visualizing\nGeospatiol Real\nworld\nobjects Shape\n, 1 Location\n\nColor\n\n‘ Window\n\n‘  and plenty more ob;ec1s ‘ is on type of data E; A class is a type of data\n\nQ-‘An object is one such piece of dafa*\n* with associated functionality Concept of location\n\nLoiitude: 32.9\nLongitude: -1 17.2 Defining a Class\n\n‘C\nLL-L public class Simplenocation\n(\n\npublic double 1: Constructor:\nP“’°“° “°“”‘° “Method to create a new object\n\npublic Simp1eLocation(doub1e lat, double lon)\nI\n\n         \n \n\nthis latitude =\nthis.longitude =\n\nlat;\nloni Keyvov/ojrd:\n‘ this public class simplenocation\n. 1- In ﬂle\n\npublic double latitude; 5* Simp1¢Location.java\npublic double longitude;\n\npublic simp1eLocation(doub1e lat, double lon)\n(\nthis.1atitude = lat:\nthis.1ongitude = Ion;\n\n)\npublic double distance(SimplaLocation other)\n\n(\n// Body not shown\n\n) Creating and using objects\n\n41 public class LccationTester\n\n(\n\npublic static void Ina.i.n(St:ing[] args)\n\n(\nSiInp1eLocation ucsd = '§\\\n\nnew simp1eLo<:ation(32.9, —117.2);\nSiInplaLocation lima =\nnew SinIp1eLocation(-12.0, -77.0);\n\nSystem. out.pnnt1n (ucsd.distance(lima)): % javac *.java\n% java Location'I'ester\n6567.659"
  },
  {
    "path": "E:/Coursera/object-oriented-java/01_welcome-and-project-overview-visualizing-data/02_object-design-constructors-instance-variables-methods/05_when-i-struggled-objects.mp4",
    "id": 3843,
    "text": " When I struggled\n\nChristine Alvarado, Mia Mirmes, Leo Porter\nUC San Diego"
  },
  {
    "path": "E:/Coursera/object-oriented-java/01_welcome-and-project-overview-visualizing-data/02_object-design-constructors-instance-variables-methods/06_core-overloading-methods.mp4",
    "id": 3844,
    "text": " Core Content\n\nChristine Alvorcudo, Mia Minnes, Leo Porter\n\nUC San Diego Classes and Objects in\nJava\n\nMore details: Overloading methods public class Simp1eLocation\n\n(\n// Code omitted here\npublic double distance(SimpleLocation other)\n\n(\n// Body not shown\n\n)\n\npublic double distance(doub1e otherLat,\ndouble otherLon)\n(\n\n// Body not shown\n\n) Overloaded methods in pracﬁce\n\nsize(800, 600, OPENGL);\nmap = new Unfoldingnapuzhis, 50, 50, ‘I00, 500,\nnew Google .Goog1eMapProvider()) ; Over|<\n\nsize(80\nmap = n UnIoldingMap\n\np.‘.b1;c Dnfo1d1ng24ap[p:cce5s.\\r:g.c :e.p;.p_c1e: p,\nfloat x,\nflea: ;,\nflea: ~\nflea: qr ,\nI-Lk:s:rac:MapF:cvx:1e: prcvlderp\n\nCram: :1 new map \\\\ uh specxﬁc posmon and dnmensxon\n\nParameters:\n\np » The mam apple!\n\nx — The x posmon ofthns map\n\n-; » The y posmon ofthns map\n\nmm: — me mdth of thxs map\n\nnew‘ : -The henglu ohms map\n\np de: — The map nles pm\\ xder to use\n\nmm //unroxamgmaps avg/Juvodod public class Simp1eLocation\n\nI\n// Cod- -u\" ed here\npublic 1 distance (SimpleLocation other)\n\n(\n\n// Body not shown Parameters must\nbe different I‘"
  },
  {
    "path": "E:/Coursera/object-oriented-java/01_welcome-and-project-overview-visualizing-data/02_object-design-constructors-instance-variables-methods/07_core-public-vs-private.mp4",
    "id": 3845,
    "text": " Core Content\n\nChristine Alvarado, Mic Minnes, Leo Porter\nUC San Diego Classes and Objects in\nJava\n\nMore details: Public vs. Privofe By ihe end of this video you will be able to...\n\n- Describe whai the keywords public and privaie mean and\ntheir effect on where variables can be accessed\n\n- Explain whai eﬁers and setters are and wriie ihem in your\n\nclasses double latitude;\ndouble longitude : public class Simp1eLocation I 1'\n\n(\np c double latitude;\np c double longitude;\n\npubllc means can access from any class double latitude;\ndouble longitude : public class Simp1eLocation 1C’\n(\n// \ndouble distance(Simp1eLocaI:ion other)\n(\n// Body not shown\n\n1 (\n\n \n\n// Body not shown public class SimpleLocaI:ion 1 ¢' 1\n(\nprivate double latitude;\nprivate double longitude;\n\nRule of thumb: Make member variables private\n(and methods eiiher public or private) Meinm\nPublic: for-world use\nPrivate: helper methods A\n\nx\\\\V public void setLatitude(double lat)\n{\n\n \n\nif (lat < -130 || lat > 130) (\nSystem.out.print1n(\"Illegal value for latitude\");\n\n)\n\nelse (\nthis.latitude = lat;\n\nI"
  },
  {
    "path": "E:/Coursera/object-oriented-java/02_memory-models-scope-and-starting-the-project/03_memory-models/05_core-drawing-memory-models-with-objects.mp4",
    "id": 3854,
    "text": " Core Content\n\nChristine Alvorodo, Mic: Mirmes, Leo Porter\n\nUC San Diego Memory Models\n\nPan‘ 2: Objecfs By the end of this video you will be able to...\n\n- Draw memory models for reasoning about variable values\nfor object Type daia\n\n- Updaie memory models To trace The sioie of The variables\n\nin Java code i lo cal double, hur\nPrimitive i pes vs. Object types\n\n;LnL varl = 52;\ns1mpleLocation ucsd = new Simp1eLocation(32.9, —117.2); Primitive types vs. Object types —117.2): 4‘\nS1mpleLocation lima = new Simp1eLoca\\:ion(v12.0, ~77.0);\n1in\\a.latitude = ~12.04;\n\n \n\n“,1 52 This\n\n/\n\nucsd @34 ‘ Simplebocation‘ ‘\n@34 0“ , Q, 1nL varl = 52;\nS1mpleL0cat1on ucsd;\n\nucsd = new Si.IIIp1eLoCation(32.9, —117.2),'\n\nSimpleLocation lima = new Simp1eLocation(v12.0, —77,0);\n1ima.latitude = -12.04;\n\n“,1 52 This\nlatitude\n\n       \n   \n\nucsd\n\nlongitude\n\nlatitude\nii\n\nlongitude -710\n\nlima"
  },
  {
    "path": "E:/Coursera/object-oriented-java/02_memory-models-scope-and-starting-the-project/03_memory-models/08_support-memory-model-drawing-example.mp4",
    "id": 3856,
    "text": " Additional Support\n\nChristine Alvorodo, Mic Minnes, Leo Porter\nUCS2111 Diego Memory Models\n\nSupport Vxdeo By the end of this video you will be able to...\n\n- Draw memory models for reasoning about variable values\nfor object and primilive lype data\n\n- Update memory models to trace the state of the variables\n\nin Java code sun 1eLccat1on ucsd new leLocat on(3 17 ),\nSxmp1eLocat1on kumamoto = new SiInp1eLocation(32.0, 130.0);\nucsd = kumamoto:\nkumamoto = ucsd;\n\n \n\nﬂu mgwac\n\nW‘ Sxm 1eLocat1on ucsd new\n\n   \n \n    \n\nIn lelacat an (3\n\n  \n\nlcvm/do 329 ‘B1 mmuac 320 4‘\n\nmguuao H77 Iongwce 1300\n\n1‘ ¢\n\\ kumamoto =\n\nlamudc\n\nmgnuao\n\nT\n\n   \n\nH77\n\nzomuctc\n\nlong use\n\n  \n\n3?D\n\n1300 new\n\n   \n\nLonguudo H77 Jongwcc V300\n\nT Sxm 1eLocatxon ucsd new\n\n    \n \n\nlnhh/dc 329  ‘omudc 320 Q‘\n\nLcngnucm H77 Jowgwcc I300\n\nT Sxmp1eLo<:ation ucsd = new Simp1aLacation(32.9, -117.2)?\nSxmplel nraéxon kumamoto = new Simp1eLocation(32.0, 130.0);\nucso kum oto\n\nlamudc 32 9 \n\nmgumo\n\n   \n\nxomumv\n\n   \n\nWong wee mm-uac ‘ammo\n\n‘ >cngm,ae mug mac\n\n \n\n. Sﬁvnkncuonwvn . nu.-mw.wu.,m... :1 -' :1\nru.:v| . mun \\oAa{vo'\\V¢-n'yYu:1r (\n\nmy ( \\Vul\\ w.- m. (K . M; . (\n3w¢A\\t.u4a\\|o:v A v.; V ... \\up§ela(n:Lmn(SI e. m 1;‘\n\nx.»ox.m.. .0. .,-.- . VOA M-:~lo1u<uemn(!] e,1)u u).\n\n \n\n \n\n     \n\nXy\\ . .».: :r\\nz!rs( HS; . .x‘ Y: ..-.. mm W.» - . M s....m.m.\nam... r:uI17I\\Hl\\r*( x...,—.m, » . . . \"V leuwao . . .wu.ue > . ..-. vv\n\nCoo-snmﬂ xx -\n\nhoax:-tcrx \\.l’IIV‘4Iu\n\nn..m.;w. an 70 sv .=ucw.~».»«(«.\n\n    \n\n-l.V\"1’.I'l'd- o<-vo~M.-nrwnvu.\nnun :1 a. .cvu\\L..rxe ua a\nlmwmm J! n. lanmvudn my a"
  },
  {
    "path": "E:/Coursera/object-oriented-java/02_memory-models-scope-and-starting-the-project/04_scope/01_core-introduction-to-scope.mp4",
    "id": 3857,
    "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 Variable Scope :3: - v\n\n. \\\n.,‘ '/I\n\n‘ ‘ .’-ha By the end of this video you will be able to...\n\n- Describe the notion of variable scope\n\n- Explain the basic rules of scope for Java\n\n- Drow memory models that incorporate scope\n\n- Trace code using Java's rules for variable scope I,\n\n‘ publxc class sxnspxamcacxon ¢-\n1\npub“: down h There are 6 variables In Ihls\n\npublic mum, code. Can you llnd them?\n\n \n\npubuc ssmp1u.ocauon(doub1a\ndouble\n\n \n\n(\n\npumm class Lorzntxonf-star\ntnss.1a:x:uda - nun; (\n\n\"-MS-1°n9i=|=d= \" 1°n1n7 pumu: sumo voxd umnxsumqln\n) l\n// Mon cod. nan\n\n(12.0. -77.0): public class Location'l‘e:tez\n(\npublic suuzc void mnin(Sr.xi.ng[] ugs)\n\n«\n‘i1 Sunplelo anion mm. =\non(-12.0, -77.0): publxc clan nnplabocncton ¢-\n(\n\nH There are 6 variables In Ihls\n\nPublic “Mb” code. Can you ﬁnd them?\n\npubuc double\n\n \n\npubu: SSmpla!.ocat}.on (double\ndouble\n\n \n\n(\n\npublxc cla1I Lucalzonfcltur\nthxs.1a:x:uda - latxn; (\n\nthis-1°\"91=“d° ' 1°n1h-‘ pubuc uauc vmd nuAn(SLn.nq[]\n) l\n// Mon coda hnzn\n\n(-12.0. -77.0): I M"
  },
  {
    "path": "E:/Coursera/object-oriented-java/04_inheritance/01_welcome/01_module-introduction-inheritance-and-polymorphism.mp4",
    "id": 3884,
    "text": " Object Oriented Programming\nin Java\n\nChristine Alvarado, Mia Minnes, Leo Porter\nUC San Diego Coda ht mu Inoduh:\n\nIcznon . java\n\nltudnnmjuvn"
  },
  {
    "path": "E:/Coursera/object-oriented-java/04_inheritance/02_inheritance/02_core-extends.mp4",
    "id": 3887,
    "text": " Core Content\n\nChristine Alvorodo, Mic: Mirmes, Leo Porter\n\nUC San Diego Inheritance in Java public class Person Person\n\n( String name\nprivate String name:\n\npublic String get-_Name() ( return name; ) string getNa,.,e()\n\n \n\n} |\npublic class Student extends Person\n( Student Person\n\nString name\n\nStudent Faculty Person\n\nString name\n\nstring getuame ()\n\n/\\\n\nStudent Faculty\ndouble gpa double salary\n'E(6.}i§1'é' 'c}'e'€éi>'ziT) \"\" ' 'E{c§.3£,'1'é'}}é'€s' 2551-‘; T\" no Common Code\n\nString name\n\nstring gecuame 0 Diverging Code\n\n  \n  \n\nStudent\n\ndouble gpa\n\ndouble ge1:GPA() What did we want?\ni.Keep common behavior in one class\n\n2.Sp|it different behavior into separate\nclasses\n\n3.Keep all of the objects in a single data\nstructure Coming up!"
  },
  {
    "path": "E:/Coursera/object-oriented-java/04_inheritance/02_inheritance/04_core-reference-vs-object-type.mp4",
    "id": 3889,
    "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 Inheritance in Java What did we want?\n1.Keep common behavior in one class\n\n2.Sp|it different behavior into separate\nclasses\n\n3.Keep all of the objects in a single data\nstructure Reference C . , -\ndoclslom:\nrelonncﬂypo\n\n(on\ndecisions:\nObi“? W90"
  },
  {
    "path": "E:/Coursera/object-oriented-java/04_inheritance/02_inheritance/07_core-visibility-modifiers.mp4",
    "id": 3892,
    "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 Inheritance:\nVisibility Modifiers By the end of this video you will be oble to...\n\n- Use appropriate visibility modifiers when writing\nclasses Less Restrictive\n\nMore Restrictive Rule ot thumb: Make member varlables private\n(and methods either public or private) Less Restrictive\n\npublic\n\nprotected\n\npackage can access from same class\n\ncan access from same package\n. Lose access by\n\nprivate\n\nany subclass\nMore Restrictive 1\nr\ne\nh\nt\nO\n.\n\nSample\npublic u.-\ncc 27\n\nprotected x:\npriva Othezl\n\npzotecced x;\ny;\n_private 2: .\" sample 1  i\nE public H: l E ‘\n\nE pzotecced x; * ' ‘ E * T‘\n5 v: '\n\n5 _px-ivate z: Other2\n\ny;\n_private 2:\nSubl I\nE publxc w:\n\nE ‘protected 2:;\n5 N:\n\ng _px-ivate z;\n\n \n\n\"1 Sample\n\n \n\n/ Otherl “-, Othetz\n Sub2\n\n   \n\nn .,\n..d z 1\n\nm. x\n\nsue [a\nt e S\nCC C\nIn. B\n1... v\nbe .1\nU2}!\nPPYP & protected x:\n\nprivate 2 :\n\nQ\n\nSubl other2\nSub2\n\nOtherl\nFx__\n\npublic Hi\nprotected Xi\nSubl\n\n_private 2: public an;\nprotected x;\nY.\n\nprivate 2:\n\n/_\n\nSubl\n\n \n\nOthet2 : pxotected x;\nE Y-\n; _px-ivate z;\n\n{I Sample Othex.-1  [ Othet2\n public an  ‘ .' Sample\n5 public an;\n\nE protected at;\n5 v\n\ng _private 2: ‘protected 2:;\n‘private 2: te‘\n\npublic w;\nprotected 2:;\n.‘_ptiVa Rule of thumb: always use eithet\n\npublic or private\npubnc less Restrictive\nprotected\npackage\n\norivofe More Restrictive"
  },
  {
    "path": "E:/Coursera/object-oriented-java/04_inheritance/02_inheritance/12_concept-challenge-inheritance-constructors-1.mp4",
    "id": 3897,
    "text": " Concept Challenge\n\nChristine Alvarado, Mic Minnes, Leo Porter\nUC San Diego public class Person { Student 5 new stuclento\n\nprivate String name;\n\npublic Person( String n ) ( ﬁ 1% 2\nl:his.nama = n;\n\nSystem.o\\n:.print(\"I1 \") I\n\n, .\nclass tudent ex: on\nis \"studa \") I\nSyst .out.p int(“I2 \"):\n\npublic Studenl:( String :1 ) (\nsuper (n) .'\nSyst¢m.ouI:.print(\"II3 ' :\nJ 1\n)\n\n \n \n  \n\n§\nf? iﬂ #3 4&2"
  },
  {
    "path": "E:/Coursera/object-oriented-java/04_inheritance/03_polymorphism/01_core-introduction-to-polymorphism.mp4",
    "id": 3899,
    "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 Polymorphism  : \\#\n~\" ‘Tn\nMi By the end of ?his video you will be able to...\n\n- Explain the purpose of polymorphism Polymorphism\n\n-Supercloss reference To subclass object\n\nPerson 5 = new Student(“Cara”,1234); xxng ge\nS tzing tostring ()\n\nint studentm .§_t_r.:~.r1<.I_.e.'_“£z1.s>y_%:3.‘_‘_’..\nint getSID() Stxnng getEID(]\nstring tostringu Strxng zest:-mgm // assume appropriate ccors\nP[] = new Pezson[3];\nnew Pexson( \"Tim\" )7\nnew Student( \"Cara\", 1234 );\nnew Faculty( \"Mia\". “ABCD\" ): ,‘ nssiume appxopziate \\-nuns\n\n     \n\nPU new Pezso 1; Nexfm\n_ '— new ?er:on( “TA. )3 . .\np[l] — rne‘-4 Studentl data\", 1234 J Compﬂe “me and\np[2] — new Z-‘aruJ.ty( \"M13\", \"ABCD\" )5  \n\nfoxunt 1 = 0; 1 < p.length; 1+4»)\n(\n\n‘ Sys<:em.out.prxnt1n( p[i] ),\n)\n\n: Cara\n: Mia"
  },
  {
    "path": "E:/Coursera/object-oriented-java/04_inheritance/03_polymorphism/02_when-i-struggled-polymorphism.mp4",
    "id": 3900,
    "text": " When I struggled\n\nChristine Alvarado, Mia Mirmes, Leo Porter\nUC San Diego"
  },
  {
    "path": "E:/Coursera/object-oriented-java/04_inheritance/03_polymorphism/07_core-abstract-classes-and-interfaces.mp4",
    "id": 3904,
    "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 AbsTroctC|c1sses and\nInterfaces By the end of this video you will be able to...\n\n- Use the keyword abstract\n\n-Compare \"inheritance of imptementation“ and\n“inheritance of interface“\n\n- Decide between Abstract Classes and Interfaces Person — Campus Accounts\n\n-Add method \"monthlystatement\"\n- \"Person“ objects no longer make sense\n\nHow do we:\n\nN Force subclasses to have this method\n‘.3 Stop having actual Person objects\n\n'5 Keep having Person references\n\n4\nN\n\n \n\nThen use an Interface! Interfaces\n\n- lnlerfoces only define required methods\n-Classes con inheril from multiple lnlerfczces .ed 1.’)\n\n   \n\n7:«va.'.a.\n\n \n\n'h'm,\n\np mlxr .1n::t:'ar\" \"'r>.\"p'x:n'Tr>( F. o i; .: z'.paxa‘:3Lt:\n\n \n    \n\n   \n\naqe java. La /7\n\n     \n   \n   \n   \n \n\n< > means Generlcs\n\n \n\n/, fTr)mpa:c- cm\nW Rz—v‘:r:*. ~: 0, C, > F7 11\n// 1\n\np mlxr amt:\n\n \n\n  \n\n. 'h'm, c-qvza; rn, r’;xL,wH'0r r\n\n \n\n;nr \" \"_D'xIl'Tr>( F. O I,‘ H Dczixxcrl . . .: z'.paxabLr:\n\n_n»:x:-«me java. La /1;\n\n< > means Generlcs / / Dcilxcfl 1.’)\n\n   \n   \n   \n \n\npa:<ane\n\nxi IL\nrn, g-1-. H'l\"I’ r\n\n\"\"_D'nzl'fr>( E13 I,‘\n\n \n\nWhy have this lnterface?? 1:1\n\n   \n\nc-«me java. La,\n\n \n\nLrtterface\n/, 5Tf)mp.1:(- mm-\n\nW In-vv:\n\n     \n \n\nr,-1-. nor rhan n.\n\nD ;\n\n\"-0.\"_:1’xzn'Tr>( F. n 90 ':1d(:\n\npublic int compara'l‘o( Person 0 ) {\n\n\"~.qet2»'A.'ne H .::-nmpa: eTn[ 0 . ac-rhiame I) :4:-I5 . implements Compa:abJ.e<Person> :‘\n\nmm nam.;;\n\nMme details on Comparable later \n\n.1519\n\npublic int compareTo( Person 0 )\n\nMM .~omp:neTn( n. Abstract class or Interface?\n\n- If you just wont To define 0 required method:\nL lwieridce\n\n- If you want to define poieniiolly required methods\nAND common behavior:\n\nAbsiraci‘ class"
  },
  {
    "path": "E:/Coursera/object-oriented-java/05_guis-responding-to-user-events/02_event-driven-programming/06_core-listener-hierarchy.mp4",
    "id": 3914,
    "text": " Core Content\n\nChristine Alvorodo, Mia Minnes. Leo Porter\n\nUC San [)iog0 Listener Hierarchy :xHI ex \n\nL‘!\n\nEON ‘H ' By the end of this video you will be able to \n\n- Describe inherilonce relotionships used in the\ncourse so for\n\n- Distinguish between interfaces and classes in this\nhierarchy <<1r‘.'L-:'.a::c>> e\nMousebistener Keylastener Keylastener <<1l’H,e.'i<:Cs .\nKeyldstener class <(:r.!L-:'.q:-c>*- </.rre-n\nMouseldstener Keyl. stener <‘1n5ti1dFL3\" <<;nte:iGce>>\n\nMousenistener KeyListener .. . public void mousePzessed () (\nMouselzxstener ) ‘ ‘ ‘\n\nJ < l\n5 publzc void mouseclxcked () (\n\nI\n\n‘ public vold mouseReleased 0 (\n\n)\n\nMagWLthButton <<51nV -:-:1,m=>>\nMouselixstener public void keyPressed () (\n\n)\n\npublic void keyTyped () {\n\n)\n\nfd;:>>\n\nKeylistener\n\n \n\n \n\npublic void keykeleased () (\n\n) <<;nror::-c»> void onnanipulacion (\n\nEventListane: MapEvent event) (\n\n4\nI\n\nUnfoldingnag"
  },
  {
    "path": "E:/Coursera/object-oriented-java/06_searching-and-sorting-from-code-to-algorithms/03_basic-sorting/07_core-javas-built-in-sort.mp4",
    "id": 3929,
    "text": " Core Content\n\nChristine Alvorodo, Mic: Mirmes, Leo Porter\n\nUC San Diego Sorfinﬁ UQTQ\n\nSorting in Jcwa ul l_..I L~.| I.\n\nA By the end of 1his video you will be able to...\n\n- Use predefined Java method To sorr\n- Explain 1he properties of The bui|t—in sort importﬁiliiﬁub\n\npublic class MyBui1tInSortingTest (\n\npublic static void main (String[] args) (\nRandom random = new Random();\n\nList<Integex:> numsToSort = new Ax:x:ayList <Integer>():\n\nfor (int i=0; i < 5; i++) (\nnumsTosort add( random.nextInt(100) );\n\nSystem.out.print1n(\"New array after builtin sort: \" +\nnums'I‘oSox:t . toS1:ting()) ; O9 ized metge sort\n\n- Fast\n\n- inworstcase\n\n- on nearly sorted data\n- Stable\n\n \n\nhnpsz//docsmacbe Com/Javase/VUVonaV/cohecHon5/o\\g0H!hm3/ .I l..I I\n\nI Lan I\n\nL..« Ls)! 5% l. 3”’! L\n\n.I _.I I\n\n.l l_.J LA EN Lﬂ"
  },
  {
    "path": "E:/Coursera/pgm/Lectures/Week 1 - 03 Template Models/04_Plate_Models_20-08.mp4",
    "id": 4027,
    "text": " Probabilistic Representation\nGraphical\nModels\n\ntLIawt_eL/I9,<1'§'3\n\n“$41; 2») “Ma. +5?‘\n\n \n\nTemplate Models 3\n\nModeling Repetition g\n\nm/r 5~¢1¢v:-I\n1' M :W{\\'/J\\ode|ing Repetition ;% Modeling Repetition -,\n\n:: «la , .1 \nPm, !+£!:;;::e <=~.3;~¢\n( c Pb) 914» M W{!\\ode|ing Repetition 3% Dnyhrvz mug. Nesfed U\nPlates\n\n(_ovJ (.\n\nffu ; r nnnnnnnnnn Ir Overlapping Plates Explicit Parameter‘ Sharing\n\n \n\nnnnnnnnnnn n Geo101\n\n\\.\"\\/Mwrnrmv In\n\nCollective Inference Collecfive Inference\n'35\n\n  \n\n|)u5>0v-x naug- Collective Inference\n\n9-El\n\n \n\nbumrw: KoHu easy / hard\n\nDamn: KoHu Collective Inference\n\\ A \\ F’\n\n \n\nown\"; mg. A\n\n \n\neasy / hard\n\nCollective Inference\nT\n\n‘Luv!\n%~’\n~~.3e,“_‘M-\n\n-Z mm x.,u.. Collective Inference\n\\ _ P\n\n   \n\neasy / hard Collective Inference\n\nZ\n\ngmnn D amt]\nim\n\n|'|||||[||| easy / hard\n\nCollective Inference\n\n1\n\nQ0 [3  D of [J 3 Dub\nIlllllvlllilll ea5V / hard\n\nnce\n- Infzre\ncouec*\"\"”\n\n’\n§ J\n43\n13/“?\nE7 J\n[j ’\n. P25’\n'56 J\n-’l«C7{/ j\nZ J\nin J\nQ\n13'‘? easy / hard\n\nCollective Inference\n\nUnhn\nI nce\n- Infzre\ncouec*\"\"”\n\n’\n§ J\n, § ,\n13/“?\nE7 J\n[j ’\n.: f\n‘VIZ? ;\nZ J\nE A J\n9 .\n1:1 J Collective Inference\n\n  \n  \n \n\nD T\n7 ‘S T\nCa‘-.IJ—\n|:) T\nE] T\n.\\:L! K}\n\nT\n\n-E‘ 1.,\nT\nT\nT\nT\nT\n\neasy / hard low / high easy / hard\n\n   \n\n3\n\nCollective Infere ce\n\n[]QnUnQ:UDFnnU\"‘n'Un\npro n\nIllllﬂllplllilll Collective Infere\n\n3\n\nC6\n\nnnqnhn\nnu\n\n      \n\ng’nnF\nIIIIMIIPIII\n\nq‘\n\np-..-..-.-\n\nUUDDD\nhf‘ Collective Infere\n\n3\n\nC6\n\nnnqnhn\nnu\n\n      \n\ng’nnF\nIIIIMIIPIII\n\nq‘\n\np-..-.--.-\n\nUUDDD\nhf‘ \n\neasy / hard low / high easy / hard\n\nCollective Inference\n\ngoof [J Bimbo\nIIIIIMIPIIIIIII Collective Infere\n\n3\n\nC6\n\nnnqnhn\nnu\n\n      \n\ngoof\nIIIIMIIPIII\n\nq‘\n\np-..-.--.-\n\nUUDDD\nhr .' easy / hard\n\n \n\n3\n\nCollective Infere ce\n\nIJIJIHJDDETIIEDFJDDUDIHCIU\nVllllullrlllilll Collective Inference\n\n   \n\nA\\ .1 j\nJ  j\n ‘*4-_.____ . ‘Q\"—\"-3-I\n‘-\".'_-. _ :1 j\nj D...“ ' :1 j\n\"'~_-. . (3 j I‘\n__ .3 & F\nj VJ-.'.'...  Z\n' :1 j\n D-\nI\nZ 1 j\neasy / hard low I high\n\n[mm KoHu easy / hard\n\nCollective Inference\n\\ ‘-:D\n\nj\n3 3 j\n y‘'-...m : j\n\"-\"W. Cj‘“——\n\n1:)\n\n[:1\n\n[:1 Collective Inference\n\n«:1\n\nin:\n\n  \n\nnu’nUn§ﬁ.DFnuD\"‘D’U\nEH7\" \\\n“II” I H II\nF\n\neasy / hard\n\n5\n\n\\\n3'\nW.\n3'\n\n[mm KoHu P/lcﬁi Dependency Model\n\n- For a Temglafe variable \n— Template parents ﬂ£):,’Bm(U,,,)\n\n(I.\nHi /ale) l:(<,.)‘%0 M 5 Y*-» _’__j\nCg LA 3’ ‘Hal Pvkﬁ\n\\_ \" H-»..r3(;)\n+w,I.+. '*as\"<a~#» cm\n\n3cPD P A | B1,..., B\n\nnnnnnnnnnn n Plate Dependency Model\n\nLe’r A(U1,...,Uk) with parents B1(U1),...,Bm(Um)\n\n- For each i, we mus? have Ui g U1,...,Uk\nL— No indices in parent that are not in child Summary\n\nnnnnnnnnnnn » 6l:\\)\\aGrgl:) Summary ”\"“”*\n- Templatelfor an infinite set of BN5, each\ninduced by a different set of domain objects\n\n- Parameters and structure are reused within\na BN and across different BN5\n\n' \n\n- Models encode correlations across multiple\n\nobjects, allowing collectiv i erence\n\n- Multiple \"languages\", each with different\ntradeoffs in expressive power\n\n \n\nDnvhn; Kc Izr"
  },
  {
    "path": "E:/Coursera/pointers-arrays-recursion/01_pointers/02_pointers-conceptually/03_pointers.mp4",
    "id": 5643,
    "text": " Pointers\n\nC Programming intx=3;\nint *p:\np=&X;\n¥P=47\nint.y= _7\nint*q—&y7\n*cx=*p+1:\nQ=P7 pgsxi\n‘VP/A’ ..\nincv’ ’,\nint ‘G / kii\n,*p’’’\n*q\nqgp:"
  },
  {
    "path": "E:/Coursera/programming-fundamentals/02_reading-code/01_variables-and-expressions/04_declaring-and-assigning-a-variable.mp4",
    "id": 5672,
    "text": " Declaring and Assigning a Variable\n\nC Programming x.v..\ntt\nnn\nLi in: x ;\n\nint y; x.v..\ntt\nnn\nLi int x ;\n\nm: y; mw\ncc\nnn\n‘.1 in: x;\nint y int Y ‘Pm X\n\nint y\n\nx+Z;\n\nintz y~X; z\nt\nn\ni ‘Pm X = .\n\nx+Z;\n\nint y\n\nintz y~X; intx= 4;\n\n‘Km Y\n\nint 2\n\nx+Z;\n\ny»x; int x ;\n\nint y\n\nn\n><\n+\n1*’ n\n+\nN"
  },
  {
    "path": "E:/Coursera/programming-fundamentals/02_reading-code/04_conditional-statements/03_execution-of-if-else.mp4",
    "id": 5677,
    "text": " Execution of if / else\n\nC Programming int 5 (mt x, int y) 1\n1: (x < y) 1\npr1ntﬁ1“x < y\\n\")7\nreturn ,1 + X:\n1\nelse 1\npI1r(f1“x >: y\\n\"H\n1f (X > B) 1\nreturn y + 7.-\n\n1\n\nreturn >< — 2;\n\nlnt maln (voldl 1\nlnt a — f 13. 4):\ntnt b — t 15, 5):\n\n 0;"
  },
  {
    "path": "E:/Coursera/programming-fundamentals/02_reading-code/05_loops/03_while-loops.mp4",
    "id": 5679,
    "text": " while Loops\n\nC Programming xnt. q(1nt a,1nt b) (\nint total = 0;\nmule ta < m {\nLocal += a:\nprxntE(”a=ld, Lw=id\\n\", a, 1.);\n.3\";\nn——:\n)\n\nreturn total.’\n\nJnt mam Lvoxdp (\nxnc x = (g2, 97;\npr1ntfl\"x=1d\\n\", xv:\nreturn 0;"
  },
  {
    "path": "E:/Coursera/programming-fundamentals/02_reading-code/05_loops/06_equivalent-for-and-while-loops.mp4",
    "id": 5680,
    "text": " Equivalent for and while Loops\n\nC Programming int mumvoidy ( int mainwoid) (\n\n \n  \n\ninty=1; xnty=1:\nintn-3: intn-3:\nfor (int 1 ~ 1 < or L») ( (\ny - y - int 1 = 1.-\n) whale Ii < n) (\nratnrn 0; y = Y - 1;\np in;\n)\n}\nreturn 0;"
  },
  {
    "path": "E:/Coursera/programming-fundamentals/02_reading-code/05_loops/09_execution-of-continue.mp4",
    "id": 5682,
    "text": " Execution of continue\n\nC Programming void printiemaxnders [;n: )0, xnt hx, xnt n;\nxnt 3 Jo;\nwrme (3 < mm\n1f [1 : o>(\npr1ntf[”Cannof dlvldr by n.\n\n1*‘;\n\n \n\n-1\"»;\n\ncont 1 mu-,;\n\n)\npx')nLl(“%d mod m = 1d\\n”, n. x. n 2 n:\n\n)“i\n\nAnt mam lvcxd} (\npunuzemamdersn-2. 4, 5»:\n\nreturn 0; Z\n|\n\n‘armm .1wu1n> *2» U\n5 ma v ya 0\n\nR ma 5 Yx ‘\n\n< ma 1 Y\\ /"
  },
  {
    "path": "E:/Coursera/programming-languages/03_section-1-and-homework-1/02_video-lectures/02_rules-for-expressions.mp4",
    "id": 4266,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nML Rules for Expressions (Seen So Far)\n\nyx? Expressions\n\n- We have seen many kinds of expressions‘\n34 true false x el+e2 e1<e2\nif el then e2 else e3\n\n- Can get arbitrarily large since any subexpression can contain\nsubsubexpressions,e1c.\n\n- Even! kmd of expression has\n\n1. Syntax\n\n2. Type-checkmg ru\\es\n- Produces a type or farls (with a bad error message ®)\n- Types so far int bool unit\n\n3 Evaluation rules (used only on things that type-check)\n- Produces a value (or exception or Inﬁmte—\\oop)\n\n \n\n.V3n—\\lar 2013 Dan omsmu Progamunng Lmrguages 3 (‘~ This 1'5 a comment.\n\n    \n\nThis 1'5 our first program. “\"')\n\nval x =_34; _ _\n(\"‘ statwg enV'|r_‘DNl\\entZ x ' mt ¢)\n(‘ dynannc em/1ronment: x —v> 34 ’*)\n\n$31 y = 17; _ _\n* statu; em/'H_‘onment. x : mt, y : 1nt ‘~')\n(‘~ dynannc em/1ronmen(: x ——> 34, y ——> 17 =)\n\n1\\--- f1'rst.sm1 Top L8 (SML)\nva'| y = 17 '\nva1 z = 70 .\nval q = 71 '\n\n \n\nva1 abs_of i = 70 : int\nva1 abs_of_Ls1'mp1er : 70 : int\nva1 it 0 : unit\n\n \n\n— x <\nva1 it fake : boo1\n‘ €\"? x\n\n\\/an 1t = true : boo1\n\n1\\‘~‘*- *sm1* sot L21 (Inferior-SML: run Comp'Hat'ion) A slightly tougher one\n\nWhat are the syntax, typing rules, and evaluation rules for\n\nconditional expressions?\nD\n\nL€1YS write It OU1. ..\n\n \n\n.V3n—\\lar 2013 Dan omsmm Ymgmmnnng Lnnguages (Text) syntax:\nif e1 then e2 e1se e3\nwhere if, then, and e1se are keywords and\ne1, e2, and e3 are subexpressions\n\nType—check1'ng:\nfirst e1 must have type boo1\ne2 and e3 can have any type (1et's ca11 it t}, but they\nmust have the same type t\n\nthe type of the entire expression 1'5 a1so t\n\nEva1_uation ru1es: _\nf1rst eva1uate e1 to a va1ue ca11 1t v1\n\nif it's true, eva1uate e2 and that resu1t 1'5 the whcﬂe expressia\n«en's resu1t\n\ne1se, eva1uate e3 and that resu1t is the who1e express1'on's res:\niL|1tD\n\n1\\——- tmp.txt A11 L15 (Text)\nwrote c:/Users/coursera/Deskto/tm _txt Now you try one\n\nSyntax, type-checking rules, and evaluaiion rules for Jess-than\ncomparisons’)\n\n \n\nymacar zms Dan Gmsmmu Progmmunng Lnnguages x"
  },
  {
    "path": "E:/Coursera/programming-languages/03_section-1-and-homework-1/02_video-lectures/10_let-expressions.mp4",
    "id": 4274,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nLet Expressions Let-expressions\n\n3 questions‘\n\n- Syntax. ‘ lfét -.111: 233. bin a 6336:\n— Eacnhi is anybindrng ande is any expression\n\n- Type—checking‘ Type—checkeachb.1'. and 2 II’! a static\nenvironment that inciudes the previous bindings\n\nType of whole iet-expression IS the type of e\n\n- Evaluation. Evaiuate each hi and e in a dynamic environment\nthat includes the previous bindings.\n\nResuit of whole |eI—expression is result of evaluating a\n\nI3n—Mar 2013 Dan omsmm Pmgmunnng Lmiguages 4 _ va'| x = 1\n1|’!\n\nd (‘let va'| x = 2 in x+1 end) + (\"let va'| y = x-2-2 in yvl end)\nen\n\nE\n\n \n\n   \n      \n       \n   \n       \n \n\n     \n\n1\\--- 1et_ex ressions.slI'l Bot L16 (SML)\nstandard ML 0 New_Jersey vll0.74 [bu1”|t: Tue Jan 31 16:19:10 2012]\n- use>\"1et_express1ons.sm'|\"'\n\n[o emn? 1ec_expresswns.smiJ\n\nva s1\"|y1 - fn:1'nt —>1'nt\n\nva'| sﬂ'|y2 — fn : unit ~>1'nt\n\nva'| it = 0 : unit\n\n- s1'11y2 ();\n\nva11't=7.1'nt\n\n  \n    \n     \n \n\nl\\““- *sm1* (Inferior-SML: run Comp1\"|at1'ovI) What’s new\n\n- Whats new is r where a binding is in the environment\n— In later bindings and body of the letexpressicn\n- (Unless a later or nested binding shadows it)\n— Only in later bindings and body of the let-expression\n\n \n\n- Nothing else is new‘\n— Can put any binding we want, even function bindings\n— Type—check and evaluate just like at “top-level\"\n\n \n\n.V3n—\\lar mt} Dan Gmssmau Yrogmiuuimg Lmtguages 6"
  },
  {
    "path": "E:/Coursera/programming-languages/03_section-1-and-homework-1/02_video-lectures/11_nested-functions.mp4",
    "id": 4275,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nNested Functions Any binding\n\nAccording to our ruies for Jet-expressions, we can deﬁne functions\ninside any let-expression\n\n._le_t _‘.1.5:1;,-7-:i2...AJ’:Li1' ix; ,e ena\n\nThis is a natural idea, and aften good style\n\n!zn—\\lar 1012 Dan Gmnnmu Ymgmixxxxiiiig Languages 2 Stanar ML o New Jersey v11o.74\n- use’\"nested_Functior}s.sml\"'\n[oﬁzemng nested_Fur\\(t1uns.sm1]\n\nva count = Fn : int * int -> int ‘list\nva‘| countu _from1 = fn : int -> int ‘list\nva‘| it - (57 : unit\n\n- countup_ﬁ'om1 7;\n\nva‘|1‘t = [l.2.3.4.S.6.7] : int ‘list\n\n— x\n\nU1 t: Tue Jan 31 16:19:10 2012\n\nProcess sm‘| finished\n\nStandard ML of New Jersey vll0.74 [bui‘|t: Tue Jan 31 16:19:10 2012]\n— use>\"nested_Functions.sml\n\n[oﬁiemng nes(ed_FunCt1ons.sm1]\n\nva countu _From1 = fn : int -> int ‘list\n\nva‘| it = (S7 : unit\n\n— count;\n\n;gd_In:2.l~2.6 Error: unbound var1‘ab‘|e or constructor: count\n\n- countup_from1 7;\n\nva‘|1‘t = [l.2.3.4.$.6.7] : int ‘list\n\n   \n  \n   \n\n      \n\n     \n\n \n \n\n]_\\s_(<._\nSWIICH to b\n\n*sm1* A‘|‘| L21\n\n(Inferior-SML: run Comp1\"|at1'on)\nuffer (defau\n\n‘It nested_Fnnct1' ons A sm‘|):\n\n        \n     \n\nan ms: an fun ?ountup_ﬁ“oml(x : int) =\nCI\nfun count (from : int) =\nif from=x\nthen X: : [J\n_ e'|se from :: cour\\t(from+].)\n1n\ncount(l)\nend]\n\nnested_funct1' ons .sm1 A11 L10\n\n  \n\n     \n\n1\\--- (sm) New :_Iersey vl10,74\n- use’\"nested_Fun<:t1cvns.smT\"'\n[oﬁzemng nested_Funct1ons.sm1]\nva\n\nm t: Tue Jan 31\n\ncountu _ﬁ“om]_. = fn : ‘int -> int '|‘ist\nva'| It =( : un1t K\n— count; 1\nst ' 1-2.6 Error: unbound var1'ab'|e or constructor: count\n\n3 countufffroml 7: 4 _\nva'|1t = [l,2,3,4,S,6,7] :1nt'|1st\n— k\n\nProcess sm'| Finished\n\nStandard ML of New Jersey Vll0.74 [bu1\"|t: Tue Jan 31 16:19:10 2012]\n- use \"nested_Funct1'ons.sm1\"'\n\n[o ening nested_runcn’ous.sm1]\n\n\\/Eli] countu _from]_. = fn : int -> int '|ist\n\nva'| It =( : un1t\n\n- countup_from1 7;\n\nva'|1't = [1.2,3,4,s,6,7] : ‘int'|1'st\n\n— count;\n\ns_tdIn:3.1-3.6 Error: unbound var1'ab'|e or constructor: count\n\nl\\‘_“’- *sm1* Bot L33 (Inferior-SML: run Comp1\"|at1'on)\nSw1tch to buffer (defauk nested_Funct1ons‘sm1):\n,~ a -v :»\n\n5: m anzuag 5 Nested functions: style\n\n- Good style to deﬁne helper functlons Inside the functionsthey\nhelp If they are’\n— Unllkelyto be useful elsewhere\n— Llkely to be misused If available elsewhere\n— Llkely to be changed or removed later\n\n- Afundamental trade-off rn code design‘ reusmg code saves\neffort and avoids bugs. but makes the reused code harder to\nchange later\n\nl;;\n\n \n\n!3n—\\lar 2013 Dan omsmm Pmgmunnng languages 5"
  },
  {
    "path": "E:/Coursera/programming-languages/04_section-2-and-homework-2/02_video-lectures/06_useful-datatypes.mp4",
    "id": 4287,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nUseful Datatypes Recursion\n\nNot surprising\nFunctions over recursive datatypes are usually recursive\n\n \n\n    \n \n\nfun\na ’e 1e of\nConstant ' > i\nI ljegab ' ~ (efwal e2‘)\n\n  \n\n_> (eval 21) + (eval 22)\n\nI Add\n=> (ev,.'a,1 e1) * (eval e2’)\n\nI M_u1t:L -.'Ly( 1,‘;\n\n \n\n>\n\nhr-—\\(ar son mu Gmnnmu Pzogmxmmng Languages mu.-u...a.a-u. Recursion\n\nNot surprising\nFunctions over recursive datatypes are usually recursive\n\nfun\n\n \n\ncé e ‘e of D\nConstant ' => 1’.\n' => ~ (ev'a1 e2l)'\n(eval 21) + (eval 22)\n—> ('£’~V.é:1 51). * (av-fa-1 e2’)\n\n \n\n      \n\nI Mu1t1p1y( 1 ,»\n\n.VarI—\\lar son mu Gmnnmu Pzogmxmmng Lzmguagcu _Qnr-1 Lucian\n\nan numer_o _as e \" exp —> mt =‘~\ncase e of _\n\nConstant 1 => 0\n\nNegate eZ rIumber_of_adds e2\n\nAd (e1.eZ) 1 + number_of_adds el + vIumber_of_adds e.\nMu'|t1'p'|y(e1,e2) => number_of_adds el + number_of_adds e2\n\nva‘l examp'|eAexp : exp = Add (Constant 19, Negate (Constant 4))\n\nva1 examp'|e_ans : int = eva'| examp1e_exp\n\nva1 examp'|e_addcEunt = number_of_adds (Mu'|tip'|y(examp1e_exp,examp'|e_exp))\n\n-\\—-- usefu'|_datatypes.sm'| Bot L34 (SML)"
  },
  {
    "path": "E:/Coursera/programming-languages/04_section-2-and-homework-2/02_video-lectures/13_a-little-type-inference.mp4",
    "id": 4294,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nA Little Type Inference uncaught exception Error ,r\nraised at: .. coInp1'1er TopLeve1 interact eva1'Ioon.sm‘|:66‘19—66.27 ‘\n\n. /comp1\"|er TopLeve1/1nteract/eva'|\"|oop.srn1 244155\n\ncomp1'1er TopLeve1 interact eva11oop.sm1:296.l7—Z96.\n\n \n\nProcess sm'| finished ‘\nStandard ML of New Jerse¥ \\/110.75 [bu1'|t: Sat sep 29 12:51:13 2012]\n— usev\"type_1'nferen<:e.sm \";\n[0[lJen1ngttyp$_}-nfe1r;enceIsrrﬂ] ‘ t k _ t I t\nsum, r1p e n 21m:  1n 1n —> 1n\nva'l fu'|Lname1 _ fn : {ﬁrst:str1'ng, ‘lascstring, midd'|e:str1'ng} —> StI\"a\n\nva sum_tr1'p'le2 - fn : int int.‘ int —>1'nt‘ ‘ I\nva'| fu'|Lname2 = fn : {f1rst:str1ng, ‘lastzstrmg, m1dd'|e:str1ng} —> St!\"a\n\nVa partja'|_sum = fn 2 ‘int_* 'a “-“ jnt —>1'nt ‘ ‘ ‘\nva'| part1aLname = fn : {F1rst:str1ng, '|ast:str1ng, m1dd'|e:'a} —> St(“|I'h\n\nVa} it = O : unit\n\n     \n \n\n1\\“‘*— *snI'|* Bot L43 (Inferior—SML: run Comp1'\"|at1'un) (*-' these functions are po1ymorph1'c:\n(*-  )\nfun part1a _sum X, y, z =\n\nx+z\n\ntype of y can be anything ’~)\n\n    \n    \n\nfun part1'aLname {f‘irst=x, m1'dd1e=y, '|ast=z} =\nx /\\ \" \" A z\n\n   \n\n—\\~~» type,inference.sm1 Bot L47 (sML) uncaught exception Error\n\nraised at: . compi'Ier TopLeve1 interact eva1'loup.sm1:66‘19—66.27\n/comp1'|er TopLeve'|/interact evaT|oop.srn'| 24455 1\n. compi1er TopLeve1 interact evaTIoop.sm1:296.l7—296.\n\n \n\nProcess sm'| finished\nstandard ML of New Jerse¥ \\/110.75 [bui'|t: Sat sep 29 12:51:13 2012]\n— use \"type_1nference.srn “;\n[oglzening type_inference.sm'|]\nsum_trip'le]. = fn 2 int ‘-' int * int —> int\nva'| fuTLname1 = fn : {first:string, 1ast2string, midd'|e:string} —> stra\n\nVa sum_trip'le2 = fn 2 ‘int *' int‘-' int —> int‘ _ I\nva'| fu'|Lnamez = fn : {ﬁrst:str1ng, 1ast2str1ng, m1dd'|e:str1ng} —> stra\n\nVa partiaLsum = fn 2 intf 'a ~ int —> int ‘ ‘ ‘\nva'| part1aLname = fn : {F1rst:str1ng, f|ast2§ltr1ng, m1dd'|e:'a} —> strina\nva'| it = 0 2 unit\n\n1\\“‘*— *snI'|* Bot L43\nswitch to buffer (defaiflt t\n\n     \n  \n \n\nV (InFerior—SML: run Campi'|ation)\ne,1 nfe rence . sm1)2 (*-' these functions are po1ymorph1'c: type of y can be anything 9)\n\n(*1'nt ‘a K in: —>1'nt ‘)\nfun part1a1_sum (X, y, Z) =\nx + z\n\n         \n    \n         \n \n\n   \n\nfun parv:1'aLr\\ame {f‘irst=x, m1'dd1e=y, '|ast=z} =\nx /\\ \" \" A z\n\n   \n\n—\\——~ type,1'nference.sm1 Bot L48 (SML) o emng typegn erence sm ‘ ‘ _\nsum_tr1p1el fn mt * 1nt_* 1nt —> mt‘ _ I\nfu'JLnarne1 = fn : {f1rst:str1ng, ‘lastzstnng, m1dd'le:str1ng} ~>\n\n       \n   \n  \n\nsum_tr1'p1e2 = fn 2 ‘irgt 1'nt_ int —>1'nt‘ ‘ I\nfu'|Lname2 _ fn : {f1rst:str1ng, \"lastzstrmg, m1dd'|e:str1ng} —> SIP:\n\n. k . . .\npart1_a'|_sum = fn 2 ‘Intf a -1‘nt —> mt ‘ _ _\npart1a'|_name = fn : {f1rst:str1ng, ‘lastzstrmg, m1dd'|e:'a} —> Stl“|I'\\a\n\n1‘t_= O : unit\n— ﬁ)arfl:1aLsum_(3,4,5);\nva 1t 8 2 mt _\n— Yar\"t1aLsum‘(3,\"h1\",5);\nva 1t 8 2 mt\n— part1aLsum (3,5,\"h1\"');\nstdIn:4.l—4.23 Error: operator and operand don't aclree [tycon misrnatchl\noperator dornam: jnt *' jnt *' int‘\noperand: 1 mt ‘-' mt ‘-' strmg\n1n expressmn:\npart1'a'|_sum (3,5,\"h1'\")\n\n   \n    \n\n      \n   \n\n   \n\n1\\“‘** *snI'I* Bat L55 (Inferior—SML: run Comp1'\"|at1'on)\n\nSwitch to buffer (defalflt I e_1'nFerence.sm'l ('-‘-‘ these functions are po‘lymorph1'c: type of y can be anything ‘~‘)\n\n(*-'1'ntI _'a ~1'nt —>1'nt '-‘-')\nfun part1a1_sum (X, y, Z) =\nx + z]\n\n \n      \n\n    \n\n    \n        \n \n\nJame {f‘irst=x, m1'dd1e=y, '|ast=z} =\n\nfun partj\nx A ' A z\n\n \n\n—\\~~» type,inference.sm1 Bot L49 (sML) Unexpected polymorphism\n\n- Sometimes type-checkerxs “smarterthan you expect\"\n— Types of some parts might be less constramed than you think\n1- Example. If you do not use somethmg It can have any type\n\n(* int * ’a * int -> int *)\nfun partial_su|n (x, y, z) =\nx + z\n\n(*(first:strinq, last:strinq, middle: ‘a} -> string*)\n\nfun partial_name {first=x, middle=y, last=z} =\nX A .. .. A Z\n\n- Th|S is okayl\n— A more general type than you need rs always acceptable\n— Assummg your functron IS correct, ofcourse\n— More precise defimtion of “more general type\" next segment\n\nyanarar 2012 Dan Gmsmuu 17u)gmmmmg Languages 4"
  },
  {
    "path": "E:/Coursera/programming-languages/04_section-2-and-homework-2/02_video-lectures/14_polymorphic-and-equality-types.mp4",
    "id": 4295,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nPolymorphic Types and Equality Types Equality types\n\n- You mlght also see type varlables wlth a second “quole\"\n— Example ‘'3 list * \"a —> bool\n\n- These are “equalily types\" that arise from using lhe = operator\n— The = operatorworks on lots of types‘ int, string, tuples\nconlalnlng all equalltytypes, \n— But not all types: funcllonlypes, real, \n\n- The rules for more general are exactly the same except you\nhave to replace an equality-type variable wllh a type lhat can be\nused with =\n\n— A “slrange“ feature of ML because = is speclal\n\n \n\nx.an—\\var zou Dan omsmm Pmgmmmmg languages 6 Example\n\n(* ”a * ”a -> string *)\nfun same_thing(x, y) =\n1: x=y then \"yes\" else \"no\"\n\n(* int -> string *)\nfun is_three x =\nif x=3 then \"yes\" else \"no\"\n\n(You can xgnore the warning about “calhng poIyEqua|”)\n\nxmxcar zmz Dan omsmau Ymgmmmmg Languages"
  },
  {
    "path": "E:/Coursera/programming-languages/04_section-2-and-homework-2/02_video-lectures/19_exceptions.mp4",
    "id": 4300,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nExceptions va w 3,4,5 ,MyUn es1ra econ 1t1on\n\n\\/a'| X = maxlist ([3,4,5],M¥Unde5'irab'|eCondit1on) (\" S ’*)\nhand1e Myundesi rab econdition => 42]\n\n(‘val y : maxﬁst ([1,MyUndesirab1eCondit1on)*)\n\nva1 z = max11'st ([]Myundesirablecondition) (‘-' 42 ‘-)\nhamﬂe MyUndes1'rab1eCond1't1'on => 42\n\n-\\--- 3B_except1'ons.sm1 sot L27 (SML)\n[autzﬂoading done]\n\nva1hd = fn : 'a11'st -> ‘a\n\nexception Myundesirablecondition\n\nexception Myotherexception of in:  int\nva1myd1'v = fn:1'nt * int ->1'm:\nva1max11'st - fn : 1'nt11'st ‘A’ exn ->1'nt\nva1 w - 5 : 1m:\n\nva1 x 5 : 1'nt\n\nva1 Z 42 : int\n\nva1 ‘it = O : unit\n\n \n     \n \n\ni\\**— =snI1= Bot L16 (Infer1'or—SML: run Comp1\"|at'ion) Programming Languages\n\nDan Grossman\n2013\n\n \n\nExceptions Actually...\n\nExceptions are a lot Vike denatype constructors\n- Decrarlng an exception makes adds a ccnstructorfor type exn\n\n- Can pass values of exn anywhere (e g ,function arguments)\n— Not too common to do this but can be useful\n\n- Handle can have multiple branches with patterns for type exn\n\nymxcar zmz Dan omsmau Ymgrmunnng Lnnguages"
  },
  {
    "path": "E:/Coursera/programming-languages/05_section-3-and-homework-3-and-course-motivation/02_video-lectures/03_polymorphic-types-and-functions-as-arguments.mp4",
    "id": 4306,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nPolymorphic Types and\nFunctions As Arguments (‘-‘ highersorder Functiuns are often po'|ym0rph1'C based on \"whatever\ntype of Function is passed\" but not a'|ways: <-)\n\ncs nogez a begter ‘1mp'|ementat1'un wmﬂd be ta‘1'|AreCurs1'\\/e -)\n\nFun t1mes_unt1'|_zero (ﬁx) =\n\nif x=0 then 0 e'|se 1 + t1'mes_unti'|_zero(f. 1‘ X)\n(“' F (F (F (F  ><))) \"),\n\n(fr (int —> mt) ‘rt int ~> Int *)\n\n \n    \n       \n       \n       \n   \n  \n \n \n\nR\n\n(-‘-'converse'|y, some o'|ymorptn‘c functions that are not h1'gher—order<-)\ncw 'a11's 4>1'nt \nfun Ten X5 =\ncase xs of\n= 0\nI _::xs' => 1 +1en ><s'\n\n_\\_._\n\n    \n\ntypes_and_functi ons.sm'| Bot L36 (SML)\n\nm l\"M_1\\'.1n|u*u|2 1"
  },
  {
    "path": "E:/Coursera/programming-languages/05_section-3-and-homework-3-and-course-motivation/02_video-lectures/10_why-lexical-scope.mp4",
    "id": 4313,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nWhy Lexical Scope Why lexical scope ?\n\n3 Closures can easily store the data they need\n— Many more examples and Idwoms to come\n\nfun =fny=>y>x\n\n  \n\nfun (5\ncase xs of\n[J ‘> []\n1 :; => if f x\nthen x: : (fi1ter(f,xs))\nelse fi1ter(f,xs)\n\n \n\nfun 1\nfun ..—.\n\n  \n \n\nfilter (greatex:'.l'hanX ~1, xs)\n— filtex:(fn :: => x > n, xs)\n\n.Va1~—\\I(4r zon mu r,..m;.:«x; Pms\\'.m|u;m2 x.«;.g.;am Does dynamic scope exist?\n\n- Lexical scope for variables is deﬁnitely the right default\n— Very common across languages\n\n- Dynamic scope is occasionally convenient in some situations\n— So some languages (e.g i Racket) have special ways to do it\n— But most do not bother\n\n- If you squint some‘ exception handling is more like dynamic scope.\n— raise e transfers control to the current innermost handler\n\n— Does not have to be syntacticallyinside a handle expression\n(and usually is not)\n\n \n\n!3n—Mar zoiz Dan omsmm !7mgmmuimg Lmiguages 6"
  },
  {
    "path": "E:/Coursera/programming-languages/05_section-3-and-homework-3-and-course-motivation/02_video-lectures/15_partial-application.mp4",
    "id": 4318,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nPartial Application Unnecessary function wrapping\n\n \n\n- Previously learned not to write fun ‘: .. = g x\nwhen we can wnte val : = g\n\n- Thxsislhesamethingwlm fold (in (z:,_) => x+y) 0 In\np\\aceofg L»\n\n!;m—\\lar zmz mu ommmu Progmmuung Languages => pre 1cate x ore se ex1sts pr Kate xs\nva'| no = exists (fr: x => x=7) [4,l1,Z3] (‘~ Fa'lse '4)\n\nva'| haszero = exists (Fn x => x=O) (\"‘ int ‘list —> boo‘! ’~')\n\n  \n\nva'|)incrementA'|'| = L1‘st‘rnap(fn x => x + 1) (“1'nt'|ist ~>1'nt ‘H5:\n:t \"I\n\n     \n\n(\" ‘library functions fo'|d1, L1'st.ﬁ'|ter, etc. a'|so curried: *)\n\nva'| removezeros = L1'st.ﬁ'|ter (fn x => x <> 0)]\n\nput hac in the actua1 y—neCessary wrappxng or an exp1i(it\n\n(* but if {nu get a strange message about ”ya1ue restriction“,\nnonApo'\\ ymorphic type \"-)\n\n0 doesn‘t w9rl< forlreasons we w9n't exp'!ain here (more Tater) :)\n(‘~' (on'|y an 1ssuE w1'|'| po'lymor‘ph1C Fun(t1ons) »~)\n\n(\" va1 pairwithone : List.map (Fn x => (x,1)) “~')\n_\\ﬁx_\n\n    \n\npar't1'a'|_app'|1'cat1'on.sm1 54% L54 (SML) The Value Restriction Appears @\n\nIf you use partial application to create a polymorphic function, it\nmay not work due to the xx: U’ ,u:“c‘.\n\n \n\n— This should surprise you: you did nothing wrong © but you\nstill must change your code\n\n— See the code for workarounds\n\n— Can discussa bit more when discussing type inference\n\n.V3n—\\lar 2013 Dan Grossruan Pmgmmimng Languages va remove-Zeros = LISE. 1 ter\n\n \n\n(‘X but if (mg get a strange message about “\\_/a'lue restriction\",\nput hac in the a(tua'| y—necessary wr‘app1ng or an exphnt\nnon—po1ymorph1c type ’~‘)\n\n(* doesn't work for reasons we w9n't exp'lain here (more 'later) *)\n(‘= (on'|y an issue wi'|'i pvﬂymorphic Functions) *‘~')\n\n  \n\n(\"va'| pairwithune : List.map (fn x :> (x,1)) (’~ 'a1ist A> (‘a ¢ 1':\nsnt) hst *)‘~')\n\n \n    \n      \n    \n    \n\n(* workarounds: 4*)\nFun pairwithone xs = List.map (fn x => (x,1)) xs\n\n  \n\nva‘l pairwithone : string ‘list -> (string * int) ‘list = Listimap (fa\n=n x => (x.1))\n\n(== this Function wqrks Fine because resu'|t is not 01 marphic v-v)\nva1 1n<:rementAndPa1rw1thone = L1st.map ﬁ\n\nwt L71\n\n  \n       \n \n\n   \n\n\"~ partia'|_app'|ication.sm'| (SML)"
  },
  {
    "path": "E:/Coursera/programming-languages/05_section-3-and-homework-3-and-course-motivation/02_video-lectures/16_currying-wrapup.mp4",
    "id": 4319,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nCurrying Wrapup fun curry 1’ x y = f (><,y)\nk\nfun uncurry f (x,y) = f x y (’—' uucurry Foo *)\n\nrun other__curry r x y = r y x\n\n(\" examp'|e ‘~')\n\n(‘~' tup'|ed but we wish it were curried ’~)\n\nFun range (1',]') = if 1' > j then E] e1se 1 range(1'+1, j)\n\n \n\nva'| countup = curry range 1\n\nva'| X5 = countup 7 (\"‘~ [l,2.3.4.5,6,7] *')\n\n    \n\n—\\—-— curry1'ng_wrapup.sIn1 Bot L8 (SML) L)\n\nEfﬁciency\n\nSo Wh|Ch is faster’ lupling or curwlng multlple-arguments?\n\n- They are both constant-lime operations, so rt doesn't matter in\nmost cf your code — “plenty fasl\"\n\n— Dun’t program againstan implementation until ll matters!\n\n- For the small (zero?) part where efﬁciency matters:\n— It turns outSML/NJcomp|les1up|es more efﬁclently\n\n— Bm many otherfunctlonal-language Implementationsdo\nbetterwith currylng (OCaml, Flt‘ Haskell)\n\n- So currylng is the “normal thing” and programmers read\nt1 -> 122 -> t3 -> t4 asa3-argumemfunctlonthat\n\nalso allows pamal appllcatiun\n\nI3n—\\lar mu Dan Grossruan Pmgmmsumg Languages 3"
  },
  {
    "path": "E:/Coursera/programming-languages/06_section-4-and-part-a-exam/02_video-lectures/02_what-is-type-inference.mp4",
    "id": 4333,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nWhat is Type Inference? Type inference\n\nr T)‘. .(C;~l. we problem Give every binding/expressiona type\nsuch thatlype-checking succeeds\n— Fall If and only lf no solutlon exlsts\n\n \n\n- In prlnciple. could be a pass before the type-checker\n— But often Implemented together\n\n- Type Inference can be easy, dlfﬁcult, or Impossible\n— Easy.Accepta|| programs\n— Easy: Rejectall programs\n— Subtle, elegant, and not mag/c: ML\n\n>\n\n \n\nymacar 2013 Dan omsmm Pmgmunnng languages 4"
  },
  {
    "path": "E:/Coursera/programming-languages/06_section-4-and-part-a-exam/02_video-lectures/03_ml-type-inference.mp4",
    "id": 4334,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nML Type Inference Fun f (y, z, w) =\nif y (‘-‘ y must be boo'l *)\nthen z + x (’~ 2 must be int 4*)\ne'|se 0 (°~ both branches have same type *)\n(\" F must return an int\n1’ must take a boo1 *~ int \"~ ANVTHING\n\nso va'|f:booT‘~'1'nt ~ ‘a —>1'nt\n\n,~\n)\n—\\-~- m'l_type_inference.sm1 Bot L4 (SML)\n\nStﬁndard ML of New Jersey v1l0.75 [bu1\"|t: Sat Sep 29 12:51:13 20: -\n=12\n\n— use_\"m'|_type_inFerence.sm'|\n\n[0 emng m1_type_inference.sm1]\n\nva x = 42 : Int\n\nva'| f fn:boo'|\"1'm: * ‘a ->1‘nt\n\nva'| it = C) : unit\n\n1\\’”‘~ *sm'|* A11 L7 (InFer1'or~SML: run Comp1'1at1'on) Ve/y simple example\n\nNext segmenlswlll go much more step-by-step\n— Lwke the automated algorithm does\n\n \n     \n\n.=) =\n-znusi. be Jana; +-;«\n' E Ba »int -2-)\n\n.Vay~.\\K3r son ix\n\nRelation to Polymorphism\n\n- Central feature of ML type inference‘ it can infer types with type\nvanables\n\n— Great for code reuse and understandmgfunctxons\n\n- But remember there are two orthugonat concepts\n— Languages can have type Inference without type variables\n— Languages can have type variables without type Inference\n\n \n\nJmacar 2013 Dan Gmssmau Yrogmmmmg Lnnguages 5"
  },
  {
    "path": "E:/Coursera/programming-languages/06_section-4-and-part-a-exam/02_video-lectures/06_optional-the-value-restriction-and-other-type-inference-challenges.mp4",
    "id": 4337,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nOptional: The Value Restriction and\nOther Type~|nference Challenges A local optimum\n\n- Despite the value restriction, ML type lnference is elegant and\nfairly easy to understand\n\n- More dlfﬁcult without polymorplsm\n— Whattype should length-of-list have’?\n\n- More dlfﬁcult with subtyping\n\n— Suppose palrs are superlypes ofwider tuples\n— Then val (y, z) = x constrainsx to have at least two\nﬁelds, not exactly two ﬁelds\n\n— Dependlng on details, languages can support this, but types\noften more difﬁcult to infer and understand\n\n— Will study subtyplng later, but not with type lnference\n\nI3n—Mar 2012 Dan omsmm Yrogmunung Lmtguages -"
  },
  {
    "path": "E:/Coursera/programming-languages/06_section-4-and-part-a-exam/02_video-lectures/09_signatures-and-hiding-things.mp4",
    "id": 4340,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nSignatures and Hiding Things va'| pi = MyMathLib.ha'|f_p1' + MyMathLib.ha'|f_p1'\nva‘|Dtwenty_e1'ght = MyMathL1'b.doub'|er 14\n\n   \n\n        \n\nBot L2 5\n\n \n\n- signacures.sII'l\ns1gI_1atur'e MATHLIE =\n519\nva'| fact : int ->1'nt\nva'| ha'|f_p1' rea'|\nva'| doulﬂer int -> int\nand _\nscrucgure MyMathL1b : MATHLIB\nVi-11 p1 = 3.l4lS9265359 ' r'ea'|\nva'| twenty_e1'ght = 28 : ‘int\nva'| ‘it = () : unit\n\n(sML)\n\n \n\n1\\\"\"~ *sm'|‘ Bot L13 (IM’er1'or~SML: run Comp1\"|at1'on) Hiding with functions\n\nThese three functions are totally equivalent‘ no client can tell which\nwe are using (so we can change our choice later)‘\n\n’ x.*2:\n\nX+X*\n\n \n\n_= xxy.\n\nDeﬁning helper functions iocaliy is also powerful\n\n— Can change/removefunctions Iaterand know it affects no\nother code\n\nWould be convenient to have “private” top—|eve| functions too\n— So two functions couid easily share a helperfunction\n— ML does this via signafuresthatomif bindings ,\n\nymxiar zoiz Dan Gmssmau Pmgrmuniuig Lmiguages va'| pi = MyMathLib.ha1f_pi + MyMathL1'b.ha'|f_p1'\nva1|twenty_eight = MyMathLib.doub'|er 14\n\n~\\—-— s1'gnatures.sm'l Bot L25 (SML) strucgure MyMat L1 2 MATHLIB\nva'| p1 = 3.l4l59Z55359 ' rea'|\nva'| twenty_eight = 28 : int\nva'| it = () : unit\n\n    \n     \n     \n   \n\nProcess sm'| finished\n\nStandard_ML of New Jersey v1l0.75 [bu1\"|t: Sat Sep 29 12:51:13 2012]\n~ use \"s1gnatures‘sm'| \"'\n\n[opening signamresmij\n\n[auto'load1'ng]\n\n[Hbrary $sMLNJ—aAs1s/bas1‘s.cm is stalﬂe]\n[a_um1oaaing done] _\n§1qEa§ur'es.s 20- 37 Error: unbound var1ab'|e or constructor: >\nsdou ‘ler 1n gatﬁ Mymathﬁb doub'|er\n\n  \n\n \n  \n\nuncaught exception Error\nraised at‘ 129-59’Te:/I9Jgve1/intsrac:/§v§11901 sm1'66 19,-ﬁg\n/comp1\"ler/TopLev§'|/interact/evaTToop‘sm 4.55\n’ 92L [1 rLt_eLa_c,t1e,\\LaJJ,o9\n\n   \n \n\n  \n \n\nm1 : g5‘17—295_.=\n\n  \n\n. *snI'|* Bot L32 (Infer1'or—SML: run Comp1'1at1'on)\nSvntch to buffer (defau'|t s1 natures.sm'|): 9\n[Hbrary SsMLNJ—aAs1s/basis.cm is stalﬂe]\n[zguto1oad1‘ng done]\n§1gn -27120-2] 37 Error: unbound varialﬂe or constructor:\n:d?JuE'|er 1n ath M MathLTb doub'|er\n\n  \n\n  \n \n\nuncaught exception Error\n\nw’set%coz'|11’1e4r/To L‘?!/€1%EE9ﬂiC_\"~ §Ia11o9Lsvn1:\n‘ /arnpﬂer Top ev5T mteract eva co ‘\n\n comnje§['ropLeyg]/jggeract/egg]031551.296.17-226;»\n\n66.19—66i7\n\n          \n\n    \n\n17use_\"signatures.sm1 '\n\n[opemng 51 natures.sm1]\nsigvature E\n\n \n\n51g _\nva'| fact : int -> mt\nva'| ha'|f_p . rea'|\nend\n\nstrucgure MyMathL1'b : MATHLIB\nva'| p1 3.l4lS9Z6S3S9 : rea1\nva'| 1t 0 : urnt\n\n   \n\n1\\\"\"— *snI'|* Bot L34 (I«Ifer1'or~SML: run Comp1\"|at1'on) Example\n\nOutsldethe module, MyMathLib.doub1er ws simply unbound\n— 80 cannot be used [directly]\n— Fairly powerful‘ very simp\\e Idea\n\n  \n  \n\nstructure\nstruct\nfun- 7\nval\nfun\nend\n\n12,./xm zon z.4u.-u—.a.4....a. L;.\nExample\n\nOutsldethe module, MyMathLih . doubler ws simply unbound\n— 80 cannot be used [directly]\n— Fairly powerful‘ very simple Idea\n\nsignature '\n\n \n \n  \n\n \n\nstructure\nstruct\nfim \"\nval\n\n.VarI—\\I3r son Dan (xmnnum Pu)gmn\\um|g Languages 5"
  },
  {
    "path": "E:/Coursera/programming-languages-part-b/02_section-5-and-homework-4-first-module-with-racket/02_video-lectures/17_defining-streams.mp4",
    "id": 4370,
    "text": " Programming Languages\n\n» Dan Grossman\n:: E...f'iE?£1.i?:§r?%s?S?3m 201 3\n\n \n\nDefining Streams Streams\n\nCoding up a stream in your program is easy\n— We w\\|\\ do functlonar streams using pairs and thunks\n\nLeta stream be a thunk that when cal/edreturnsa parr,\n' (next—answer . next—thunk)\n\nSaw how to use them, now how to make them...\n— Admmedly mind-bendmg. but uses what we know\n\n!nn—Mar 201; Dan Gmssnrauyvogmmmnng Lmrguages u am-9_.....m W mam —\n\n     \n\n     \n\n \n\n. . ammn-x, .r mg»: ».-.m;.....,.g,., mm) M\n#1ang racket\n\na... mu: hnguagtﬁmm .m.. an .MM.,. V’ Wgbbu ....<..:...,.,g,, rm) W,\n\n#1ang racket\n\nDuemn: mm: mm M.‘ n #1ang racket\n\n \n\nDuemn: mm: mm IDVVKQV Q) a.m.,_..».m m mm:\n\n  \n\n   \n   \n\n9. am mm ,\nwﬂ(VV(V Suva\n\n#1ang racket\n\n \n\nma/\\...mm«\n\n   \n\nDuemn: mm: mm um.‘ 9 a.m,_mm,.k- warm‘\n5“. gr Ma ‘mm 1... M\n\n.mm,m.m5..‘. mm... 3.‘. .n\n\n#1ang racket}\n\n \n\n.m:.»..,.' V “mun ».«.m.,,.,u',.\n\n;11lllll\n1\n\n(deﬁne ones (‘lambda 0 (cons 1 ones)))\n\n;(dehne ones—reaHv—bad (Cons 1 ones—reaHy—bad))\n(deﬁne ones-bad (‘lambda 0 (Cams 1 (ones—bad))))\n\n;1234s\n\nWelcome to V: version 5 2.1 [3m}.\n\nLanguage. rac el, m mory Vimll 128 MB\n> oneybad\n;‘<procedurezowes-bad>\n\n> (ones—barD\n\n   \n\nDuevnn: hrvguagtﬁmm mmzev m"
  },
  {
    "path": "E:/Coursera/programming-languages-part-b/03_section-6-and-homework-5-second-module-with-racket/02_video-lectures/02_datatype-programming-in-racket-with-structs.mp4",
    "id": 4378,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nDatatype-Programming in Racket With Structs Attributes\n\n- it : transparent is an optionalattnbute on struct deﬁnitions\n\n— For us. prints structvalues in the REPL ratherthan hiding\n1hem. which is convenientfor debugging homework\n\n- it unutable is anotheroptionat attribute on structdeﬁnitions\n\n— Provides more functions, for example:\n‘ ' ran\n\n      \n \n\n   \n  \n\n— Can decide if each struct supports mulationwith usual\nadvantages and disadvantages\n\n- As expected, we will avoid this attribute\n— moons isiust a predeﬁned mutable struct\n\n \n\ny;.n—\\iar zoiz Dan omsnm Ymgmuuinig Lmiguages 5"
  },
  {
    "path": "E:/Coursera/programming-languages-part-b/03_section-6-and-homework-5-second-module-with-racket/02_video-lectures/04_implementing-programming-languages.mp4",
    "id": 4380,
    "text": " Typical workﬂow\n\nPossible\n\nconcretesyn{ax(str/ng) @ errorsl\n\"(fn x => x + x) 4\" warnings\n\n \n\nabstract syntax (tree) 5311\n_ J3\nFuncuon constant Possible\n/\\ .\nX + 4 Le errors /\n/\\ @ warnings\nVar Var , ‘\nI I _ w ' *;\nx x\n\n \n\n.Van—\\lar zou Dan omsmm Pm;-mummg Lnnguages 2 So there is no such thing as a \"compiled ianguage\" or an\n“interpreted language“\n\n— Programs cannot “see” how the implementation works\n\nLe\n\nUnfortunatety, you often hear such phrases\n\n— “C is faster because it's compiled and LISP is Interpreted\"\n\n— This IS nunsense, politely correct people\n\n— (Admittedly, languages with “eval” must “ship with some\nimpiementation of the language\" in each program)\n\n!3n—Mar 2013 Dan Gmssmau Pmgmiuuiing Lnnguages 5 Already did an example!\n\n- Let the meta1anguageA = Rackei\n\n- Let the Wanguagermplemented B = “Arithmetic Language\"\n\n- Amhmetxc programs written with calls to Racket constructors\n- The Interpreter is eval-exp\n\n(struct const (mt) ihtransparentl\n(struct negate (e) vntxansparent)\n\n(struct add (e1 e2) uztranspazent) Ra.°“9“’a‘a Smlcmms\n(struct mu1I:1m‘Ly (e1 e2) #:I:ransparent) A”\"7’\"e\"9La”9“a9e\nprogram, which eval-\n(defme (eva1—exp e) exp runs\n(cond [(const? e) e]\n\nUnegate? e)\n(const (— (const~int\n(eval-exp (negate-e e) ) )J D]\n[(add7 e) ]\n[(multiply? e) . 1.\n\nJmacar 2013 Dan Gmsmmn Progmuuung Lnnguages x"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/03_object-state.mp4",
    "id": 4399,
    "text": " \"‘ Programming Languages\n\n.a;up<m1{(I xs.v5)\n\nDan Grossman\n2013\n\n(r “V (_.,n,.; v\n\n \n\nObject State Aliasing\n\n- Creating an object returns a reference to a new object\n— Different state from every other object\n\n- Varrabte assignment (e.g., x=y) creates an alias\n— Aliasing means same object means same state\n\nL}-\n\nxmarar zmz Dan omsmau Ymgrmuumtg Lmtguages 3 # Progr_‘amm1ng La_nguages, Dan Grossrnan, Jan—Mar 2013\n# sectwon 7: object state\n\nc1ass A\ndef ml\n@foo = 0\nend\n\ndef M x\n@foo += x\nand\n\ndef foo\n\n(ﬁfoo\nend\n\nendﬂ\n\n-\\—-- object_state.rb TOE L17 (Ruby)\nI\n\nwrote c_: /Use rs/cou rsera/Des\n\nop/prog1ang-fﬂes/1ectu re_mater1' i\n6315/Ob ect_state . rb “L7b]e:t_State. rb\" # Progfammung Languages, Dan Grossman, Jan—Mar 2013\n# Sect1on 7: Object state\n\nc1ass A\ndef m1\n@foo = 0\nend\n\ndef m2 x\n@foo += x\nand\n\ndef foo\n\n@foo\nend\n\nendl\n\n-\\--- object_state.rb TOE L17 (Ruby)\n1:\n\nwrote c_ : /Use rs/cou rsera/Des\n\nop/pr‘ag1ang—f1'1es/1ectu re_mater1' .\na a1 s/ob ect_state . rb ob]e:t_State. m\n\n1 A.new\n= A.nEw\n\n-_-x # Progr_‘amm1ng La_nguages, Dan Grossman, Jan-Mar 2013\n# sect-Jon 7: Object state\n\nc1ass A\ndef ml\n@fao = 0\nend\n\ndef m2 x\n@fao +«= x\n\nand\n\ndef foo\n\nen\n\n-\\—-- object_state.rb Top L14 (Ruby) # Progr_‘amm1ng La_nguages, Dan Grossman, )an—Mar 2013\n‘ # sectwon 7: object state\n\n-\\—-- ohject_state.rb Top L10 (Ruby) o ]e:t_State. rb\n\nA.new\n\nwb(ma§n):ouz:a> y A.nEw\n—> ;:<A:uxsfasbs>\nx\n\n.fou\n\n> x.m2 3\nundeﬁned method u‘ for m'1:m'1c1ass\nublact sta(e.rb:]0:1n m2‘\n(vb)\n(:/Ruby)93/Inn/1rb:l2:w <ma1n>'\n1’rb(mavI):UD7:D> ><.m1\n\n>0 N # Progrjammng La_nguages, Dan Grossman, Jan—Mar 2013\n# Sect'Ion 7: Object State\n\nc1ass A\ndef m1\n\n2?\n\n-\\--- object_state.rb Top L6 (Ruby) > x.m2 3\nundeﬁned method ‘M for m‘ imass\nob}e(t_s(a(e.rb:]0:1n m2‘\n(1rb):&\nC:/Ruby193/bin/1rb:l2:1n <ma1n>'\n\\rb(ma'irI):DU7:0> x.m1\n—> o # Fr‘Ogr_‘amm1ng La_nguages, Dan Grossman, Jan-Mar 2013\n# secnon 7: object state\n\ndef 1'n1't1'a11'ze(F=0ﬂ\n@fao = f\nand\ndef ml\n@foo = 0\nend\n\ndef m2 x\n@foo += x\n@bar = 0\n\nend\n\ndef Foo\n@fao\nend\n\n-\\—-- object_state.rb TDEtL5 (Ruby)\n\nwrote c_ : /Use rs/can rsera/Des\n\nop/pr‘ag1ang—f1'1es/1ectu re_materi a\ne a1s/ob eCt_state . rb 7\n\n.fnn\n\nK\n\n, 7\nw'b(mavI):ﬂ19:ﬂ> load “ob]e:t_5I:ate.rb\"\nobJ'e<t_state.rb:46: warmnu: a'lready inuiahzed cunstam: Dans,Aqe\n\nnew\nLafoa_n>\nq . foo\n\no\n\\rb(mavI):o22:D>\nH<A 5 Dx29lad7E Class constants and methods\n\n- Class constants\n— Syntax: s\\artwi1h capital letter‘ e.g., Foo\n— Should not be mutated\n— V|S|b|e ouiside class C as c: :Foo (unllke class variables)\n\n- Class methods (of JavalC# static methods)\n— Syntax (in some class C).\n\n‘deif ’\n\n \n\nend:\n— Use (of class method In class C):\nC gnéthﬁiiﬁgame (arqs)~\n— Pan of \\he c|ass,no1a paﬂwcularlnstaooe of It\n\n.V3n—\\lar zmz Dan Gmssmau Ymgmmunng Languages def m2 x\n@foo += x\n@@bar += 1\n\nend\n\ndef foo\n(ﬁfoo\nend\n\ndef r\n@@ ar\nend\nend\n\n# exampie uses\n=begin\nA A.new\nA.new # different object than x\nx # alias to x\n.foo # get back nil because instance variabie not initialize:\n\n.mZ 3 4: error because try to add with nil object\n\n.m1 4! creates @foo in object X refers to\n\nfan itlremember, x and z are aliases\nobject_state.rb 45% L65 (Ruby) 1rb(mznn):O19: > land “ob)e:t_§I:ate.r\nobJ'e<t_sta(e.rb:46: warmnu: awready mmahzed cunstant Dans,A9e\n\nzs\n\\rb(ma1n):DZ6:0>\ni1<(:0x28Za(h8\n\\rb(ma1rI):U27:0>\n,> #<(:0x27ZEd30 >\nvrbgma1rI):02B:0> c.resez_bar\n—>\n\\rb(ma1r\\):U25:U>\nNzNethodEr'ro - undeﬁned method ml‘ Fur k<C:0x2E3;\\:b8 can ~ >\nfrnm (\\rb):29\nfrum (:/Rubyl93/inn/wrb:l2:1n <ma1n>'\nirb(mavu):o3o:o> c1.m2 7\n> 1\n.m2 5\n\n.bar\n\n2\nwbgmam) 923:1)’, # examp1e uses\n:beg1'n\n— A.new\nA.new # different object than x\n\n><#a11'astox_ _ _ _\n.foo # get back n11 because 1nstance var1ab1e not 1n1t1a11zez\n\n.m2 3 4! error because try to add with nil object\n\n.m1 4! creates @foo in object x refers to\n\nfoo # remember, x and z are aliases\nobject_state.rb 45% L58 (Ruby) xrb(mav\\) :02\n~> ;:<A:ox293a9ss we\n\n1 rb(ma1r\\):U2J.:0> q.foo\nA.new(l9)\n\n>\nC.reseI:J7ar\n\nml‘ Fur N<C:0x283;\\:bS @fm7— >\n\nfrom (1rbJ:25\n\nfrom C:/Rubyl93/bun/1rb:l2:1n <m:nn>'\nxrb(ma1n):u3o:u> c1.m2 7\n»> 1\n\n2\n1rb§ma1r|):033:0> c1.fou\n\n>\n1 rb(ma1 H) :U34:O> :2 . fen\n_> 9\n\n1rb(ma1r\\):U35:0>"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/04_visibility.mp4",
    "id": 4400,
    "text": " Programming Languages\n\nDan Grossman\n\nr xr (mam, »\n\n3.; 5:: :a::1.i.::2:t:::1.:.,, 201 3\n\n \n\nVisibility Method visibility\n\n- Three vis/‘bi/inesfor methods ln Ruby‘\n— private only available to object itself\n— protected‘ available only to code in the class or subclasses\n— public available lo all code\n\n- Methods are public by default\n— Multiple ways to change a methods vlslblllly\n— Here IS one way...\n\n \n\nxmacar zmz Dan omsmau Ymgmmulmg languages 5 Method v/sibi/ities\n\n \n\ny..,.,\\m zen Dan (vm~~n|.'m Pmgmnumng Izmguagcx One detail\n\nlfm ws private, then you can only call it via 11: 0l'm(args)\n— As USL|aL1hlSIS shorthand for se1f_,m \n\n— But for pnva1e methods, only the shorthand IS allowed\n\n \n\n!zn—Vlar mu Dan Gmnnmn Pu)gmummg Languages 3"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/07_class-definitions-are-dynamic.mp4",
    "id": 4403,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nClass Definitions are Dynamic Changing classes\n\n- Ruby programs (or the REPL) can add/change/replace methods\nwhile a program is running\n\n- Breaks abstractions and makes programs very difﬁcull to\nanalyze, but It does have plausible uses\n\n— Simple example: Add a useful helper method to a class you\ndid not deﬁne\n\n- Controversial in large programs, but may be useful\n\n- For us‘ Helps re—enforce “the rules of OOP”\n— Every object has a class\n— A class determines its instances’ behavior\n\n \n\nymxiar 2m 1 Dan Gmssmau Pvogmmnung languages _ 1rb(m.:nrI):ﬂD2:u> x\n\nVm—\\hr mm\n\nMyxanona1.neu(a.\n\nmu !‘vm~.m.«n mw\n\nvmmnin itunsmze Vm—\\hr Jun examu e.r\n\nX 1 Mmmm.m(e,s:\n\nx.tu_§\n\nvm—\\m Inn hm Gym»-.n\\.«n Pm V3n—\\(ar rm: hm (‘nu~-.n\\.«n Pm chss n xnum\ndef\n\nsew . se'|F\nend\nend\nmrmzo; Syntax errur, unexvezted , exuemng\n\nse'|F ~ se'\\F\nA\n\n(irb):22: syntax error, unexpeuea ><eywora,end, exeecunq Send\nfrom (:/Rubyl93/inn/1rb:l2:1n <m:nn>'\nwrb(ma'm):023:0> chss Fvxnum\ndef dame\nse1F ~ se'lF\nend\nend\n\n\\rb(ma1r\\)tU2R:D> 3.:1ass\nnxnum\n1rbgma1n):o29:o> 3.doub'!e\n\n42.doubIe\n\nVrb(ma'm):U34:0>\n> 0b)e:t\nxr17(ma1n):035:U>\n> 42\n\nmm Cvm~».n\\.m Pm: mm cs, :s1ng etan_met , :prutE:te met as, 'prI\\/ate_met os, :pu 1: met ads,\n\n:ms:ance_vanames. ns(ance_var1ab'\\eJe\\'.. msunce_vanab1e_sez. - nstance\nvar1aIﬂ2_defmed’, :1ns(anc2_aF\"‘. 1nd_nF’. ns_a‘, av» :send, :mmh:_send.\nrespond/tam :respana_:o_nnssmq?. extend‘ zuwspway. memos, :vubh':Juechod.\ndef1ne_smg1etorv_method, :ob]e:t_1d, u_enum, :enum_for, :Eq\\m17,\ns:ance_eva'I, :1nstance,exe:, :_send_ _1d/J\n1rb(ma1n . 3a.u> nﬂmethuds\n.> [:taJ. :to r ':o,s, :m a. zinsuezc. :5. -1, M. :m1m ::o,r.\n- . , : . :‘ , eqv, mash, :<~>, mass, :svvgTetcn_:1ass,\n:-mmahze,dup. :1rut1a11ze_<'!one. tamt. :tavnted?, untainn\numzrustad’. :trust. maze, :fraz2r17. emms, 1ngTeton_methads,\n:pn'va:e_me:hods, :Phbh':_methods. 'instan<e_vgr1ab1es, zmscance\nv1stan(e_v:1r1alﬂe_set, ns(a.n(e_v2r1abTe_def1ned7, :1nSI:.1n:e_oF\"\n, zcap, :sen .ub'l1c_send, resuonzuuv, ;respona_:o_nnssm\n.d1sPTay, method pub11:_methnd def1ne_sIngIeton_methL7d, .ob]e:\n::o_er-um, :§nuTjur, .enu¢17‘ z‘. : :'mst.ance_eva'\\. :ms:ance_exe:\n._, _\n\n. chss Object\n0 def m\n43\nend\nend\n\nm\n\ncuss Fxxnum E\ndef ¢ x\n\n13\n\nend\n\nvn-—\\m zrm » . m*in2 x :u\\9\\nw. The moral\n\n- Dynamic features cause interesting semantic questions\n\n- Example.\n— First create an instance of class C, e.g., x = c.new\n\n— Now replace method methodm in C\n— Now call x.m\nOid method or new method? In Ruby, new method\nA\nThe point is Java/C#/C++ do not have to ask the question\n\n— May aliow more optimized method—caiI implementations as a\nresult\n\n.Van—\\lar ml 1 Dan omsmau Piogmmunng Lmtguages 4"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/09_arrays.mp4",
    "id": 4405,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nArrays Ruby Arrays\n\n- Lots of special syntax and many provided methods for the\nArray ciass\n\n- Can hold any number of other objects, indexed by number\n— Ge1 via a[i]\n— Setvia a[‘1] = a\n\nLie\n\n- Compared to arrays In many other languages\n— More ﬂexible and dynamic\n— Fewer operations are errors\n— Less efﬁclent\n\n- “The standard collection\" (like ilsts were In ML and Racket)\n\n \n\n.V3n—\\lar zmz Dan omsmau Pm;-rmuunng Lnnguages 2 m ‘  , ., ,\n1rD(mam):001:D> 0> d[0]\n\n1rb(mam):053:0> a[0] = 6\n\n=> 5\n\n1rb(mam):054:0> d[0]\n\n=> 5\n\n1rb(ma1n):0S5:O> a[U]\n\n=> 6\n\n1rb(ma1n):D56:0> e[0]\n\n=> 7\n\n1rb(mam):057:0> f = [2.4.6.8.lD.12.14]\n.> [2, 4. 6. 8. 10. 12. 14]\n1rD(ma1r1):058:0> F[2.4]\n\n—> [5. 8. 10. 12]\n\n1'rb(mam):059:0> f[2.4] = [L1]\n\n> [1. 1]\n\n1rD(ma1n):D60:0> F\n\n—> [2, 4. 1. 1.14]\n\n1rb(ma1n):061:O> [1.3.4.12].each {\\1\\ puts (1‘1)}\n\n \n   \n\n:09:\n\n  \n\n  \n\n    \n\n \n   \n\n3. 4. 18\n1rD(main):06Z:0> F.ea:h {\\1\\ puts (1=x)}\n\nk\n\n1r!J(mam):"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/14_subclassing.mp4",
    "id": 4410,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nSubclassing \"‘ Programming Languages\n\n....,mru xs.v5)\n\nW (_W» Dan Grossman\n . z 3.; 82$’.;..:1.i?:2:f§s?§?:m 2013\n\n \n\nSubclassing Programming Languages\n\nDan Grossman\n2013\n\n \n\nSubclassing c ass Pom: _\nattr_accessor :x, :y It defmes methods x, y, x=, y:\n\ndef 'im't1'a11'2e(a,b)\n(ﬁx 3\n(‘Y\n\nend\n\ndef d1'stFromorw'g'in\n\n:ath.5qr‘t(@x “~‘ @x + @y * @y) # uses instance var1'ab'|es\nEll\n\ndef d1'stFromor1'g1'n2\n\nh‘;|ath.5qr‘t(X * x + y *1 y) # uses getter methods\nEl’!\n\nand\n\nc1ass co1orPo1'nt < Point\nattr_accessor :co1or J! ccflor color:\n\ndef 1n'itiaTize(x,y,c=\"c1ear\")\nsupeE(x,y) Jlkeyword super ca115 same method in superclass\n@co1or = c\nend\nend\n-\\—-- subc1assing.rb 8% L24 (Ruby)\n\nwrote c: /Use rs/cou rsera/Desktop/prog1ang-fﬂes/1ectu re_mater1' a\nea‘! s/subc1ass1'n - _ rb re\n1rb(mu1n):0O7:0> p.(o10r\n\nuMethudErru . undefxned methud ca1or' For #<Pu1nt:0x26792d0 @x=0. @y=0>\n\nFrum (irb):7\nFrnm C:/Ruby193/b1n/1rb:12:1n <m:1n>\n\n1rb(ma1n):008:D> p.:1ass\n\n> Pn1nt\n\n1rb(ma1n):009:0> cp.c1as5\n\n> CDTDFPDIHC\n\n1rb(ma»n):n1o:o> :p.:1a5s.super:1as5\n\n_> Pu1nt\n\n1rb(ma1n):011:0> cp.c1a5s.super:1as§ksuperc1:ss\n\n> Object\n\n1rb(ma1n):D12:0> cp.:1a5s.5uperc1as5.superc1as5.superc1a55\n\n> aasxcongect\n\n1rb(ma1n): :c> cp.c1a5s.5uperc1as5.superc1a55.super:1as5.superc1a5s\n-> n11\n\n1rb(ma1n):014:0> p.xs_a7 Pu1nt\n\n> true\n\n1rb(ma1n):015:0> cp.1s_a7 Po1nt\n\n> true\n\n1rb(ma1n):O15:O> cp.1s_a? Ca1arPu1nt\n\ntrue\n1rb(ma1n):017:0> cp.1s_a7 Pownt\ntrue\n1rb(ma1n):018:0> :p.1s_a7 Object\n\n:o19:o> cp.1nstance_uf7 Pa1nt\n:o2o:o> cp.1nstan:e_uF7 Cu1orPuint\n\n:021:o> An objecthas a class\n\np = Point.new(0.,0)\n\ncp = Co1orPoint.new(0,0,\"red\")\np.é1ass\n\np . class . superclass\n\ncp.c1ass\n\ncp . class . superclass\n\ncp ..c_1ass . superclass . superclass\n<:p.is_a? Point\ncp.insktance_of? Point\ncp.is_a? ccs1o;:pc3'm:\n\ncp. nstance_of? ColorPoint\n\n \n\n- Usmg these methods IS usually non-OOP style\n— DISBHOWS other Ihmgs that \"act hke a duck\"\n\n— Nonetheless semantics Is that an Instance of ColorPoint\n“Is a\" Point but Is not an “mstance of’ Point\n\n— [Java note instanceof is hke Ruby's is_a?]\nJay-—\\Iar :on Dan :,m,»n..r... rmg-.,.....,,..,"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/02_section-8-and-homework-6-first-module-with-ruby/02_video-lectures/17_method-lookup-rules-precisely.mp4",
    "id": 4413,
    "text": " \"‘ Programming Languages\n\nnwendrzl .»,.v;:\n\nDan Grossman\n2013\n\n«r xr (mam, »\n\n \n\nMethod-Lookup Rules, Precisely - Look up instancevariable @x using object bound to self\n\nUsing self\n\n- self maps to some “current\" object\n\n- Look up class variables @@x usmg object bound to se1f.x:1ass\n\n- Look up methods...\n\nmnacar zmz Dan omsmau Pm;-mummg Languages 4 Optional: static overloading\n\nIn Java/C#/C++, method-Iookup rules are similar, but more\ncomplicated because > 1 methods in a ciass can have same name\n\n— Java/C/C++. overriding only when number/types of\narguments the same 1}\n\n— Ruby same-methodvnamealways overriding\n\nPxck the “best one” using the (static) types ofthe arguments\n— Complicated rules for “best\"\n— Typecnecking error If there is no “best”\n\nRelies fundamentally on type-checking rules\n— Ruby has none\n\n.V3n—\\lar zmz Dan Gmssmau Pm;-mmunng Lnnguages x"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/03_section-9-and-homework-7-second-module-with-ruby/02_video-lectures/08_interfaces.mp4",
    "id": 4423,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nI nterfaces Multiple interfaces\n\n- Interfaces provide no methods or ﬁelds\n\n— So no questions of method/ﬁeld duplication when\nimplementing multiple interfaces, unlike multiple inheritance\n\n- Whatiriterfaces are for:\n— “Caller can give any instance ofany class implementing I\"\n\n- So callee can call methods in I regardless of class\n— So much more ﬂexible type system b\n- Interfaces have little use in a dynamically typed language\n\n— Dynamic typing already much more flexible‘ with lradecffs\nwe studied\n\n \n\nymxiar ml 1 Dan Grmsniau Yrbgmlmlhltg Lnilguages s"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/03_section-9-and-homework-7-second-module-with-ruby/02_video-lectures/09_optional-abstract-methods.mp4",
    "id": 4424,
    "text": " Programming Languages\n\n» Dan Grossman\n‘ gm E;.,f\":ETZ1.E:§1?%i?S?3u> 2013\n\n \n\nOptional.‘ Abstract Methods No interfaces in C++\n\n- If you have mu|tip\\e mhentance and abstract methods, you do\nnot also need interfaces\n\n- Replace each interface with a class with all abstract methods\n\n- Replace each “Implements mterface\"wnh ancthersuperclass\n\n80. Expect to see Imerfaces only in staticalfytyped OOP without\nmumple Inheritance L}\n\n— Not Ruby\n— Not C++\n\nmm»: 201 z Dan Gmssn\\nu.!7rogmmxm|\\g Languages"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/04_section-10-final-exam-and-course-wrap-up/02_video-lectures/06_subtyping-for-oop.mp4",
    "id": 4430,
    "text": " Programming Languages\n\nDan Grossman\n2013\n\n \n\nSubtyping for OOP .'self/ this is special\n\n- Recall our Racket encoding of OOP-style\n\n— “ObJects\" have a list ofﬁelds and a list of funcllons that take\nself as an explicit exlra argument\n\nso If self/ this Is a function argument, ls It contravanant?\n\n— No‘ It Is covenant: a method In a subclass can use ﬁelds and\nmethods only avallable ln the subclass‘ essentlal for OOP\n\nclass A (\nint m(){ return 0; )\n}\n\nclass B extends A {\n\nint x;\n\nint m(){ return x; l\nl\n\n— Sound because calls always use the “whole object” for self\n\n— Thrs us why codlng up yoﬁr own objects manually works\nmuch less well In a statlcallytyped languages\n\n.V3n—\\lar zou Dan Gmssnmn Yrogmmmulg Lmlguagcs -"
  },
  {
    "path": "E:/Coursera/programming-languages-part-c/04_section-10-final-exam-and-course-wrap-up/04_course-wrap-up/01_summarizing-all-we-have-learned.mp4",
    "id": 4433,
    "text": " Programming Languages\n\nDan Grossman\nUniversity of Washington\n\n \n\nWrap-Up: What We Have Learned What now?\n\nI hope to have provided a frameworkthat will remain accurate\nas you contmueto learn about programming Vanguages\n\n— Terminology and details may change, butthese concepts\nhave all stood the test oftime [so far?’?]\n\nDan r.m,-ma... Flogmrmmug Language)"
  },
  {
    "path": "E:/Coursera/python/07_chapter-five-loops-and-iteration/01_lecture-materials/01_5-1-loops-and-iteration.mp4",
    "id": 4465,
    "text": " . P'\\’l‘HONFO|l\nLeaps and Iteration - Pan 1 m,Em,m,y\n\nRepeated Steps\n\n  \n\n \n \n  \n    \n\nOutput:\nP 2 \"E\nNo r0Qram/ﬁxﬁi 5\n// 4\n° ' 3\nprxnt:(n) 2\nn = n - 1/'\nprint:( 'B1a5toff! ') 1\nprint: (n) Blastoffl\nO\n\nLoops (repeated steps) have iteration variabies that\nchange each time through a loop. Often these iteration\nvarignles go through a sequence of numbers.\n\n   \n\nprint(‘Blastoff')\n\n \n\n4-/--t . PYEHONFOR\nLoops and Iteration — Pan 1 EVERYBODY\n\nBreaking Out of a Loop\n\n' The break statement ends the current loop and jumps to the\nstatement immediately following the loop\n\n' It is like a loop test that can happen anywhere in the body of the\nloo\n\n  \n \n      \n    \n\n  \n\n  \n\nwhile True: > hello there\n\nline = input('> ') hello there\n\nif line == 'done‘ >finished\nbreak finished\n\nprint (line) > done\n\n°“9' ' ) Done!\n\n6/--O Loops and Iteration — Pan 1\n\nwhile True:\nline = input(‘> ')\nif line = ‘done’\n\nbreak\nﬂint (line)\n\nprint( 'Done! ')\n\n \n\nNo\n\nprint('Done')\n\nPYFHON FOR\nnvsnmaonv Leaps and Iteration — Pan 1\n\nwhile True:\n/ line = raw_input('> ‘)\n\nv\\if 1ine[O] = ‘#‘\ncontinue\nif line = ‘done’\nbreak\nprint(1ine)\nprint( 'Done! ')\n\nt/-w\n\nprint('Done')\n\nPYTHON FOR\nuvmumonv"
  },
  {
    "path": "E:/Coursera/python-programming/02_functions/01_core-materials-functions/04_local-variables.mp4",
    "id": 5704,
    "text": " 5  V51! 5 ' Wu\nScott Rixner offset: = 22\nnmlcxyliez = 5 / 9\n\ncelsxua - ltahrenhexc — omen « mumpnez\nStun’. nude gunman. , fahxenhexc,\n\nomen, mumpxm, cums»\nxecuzn celsxus\n\nullperatuxe = 95\nconverted fahzenheit tcicelsiusuemperacuxeb\n\npz)nC1\"Fahren.be1l: temp  tazpexatuze)\nDuntﬂcelsxus temp. , com/erced)\n\no Vanables aenmu inside a funcnon are local to\n0 that functiwn\n\nfahrenhext - 27\n\noffset 2\n\nmultivhex = 19\n\nCelsius = 77\n\nnnnwnem: , fahrenhext, offset.\n\nmuluplxex, celsxusv\nnewtanp = :anzenr.eu_m_ce1s:usu2>\npr1nC1“a§:ex:“, fahxenhext, offset.\nmulcxplxer, eelnus)\n\nDx1r:c1\"xesul\\'.:\", newcesnm\n\n \n\nmsme\n\nfunct m\n\n95 32 mssssssssssss 25.0\n\nFabxenhen: camp: 95\ncexsms cam: 35.0\n\nbefore:\n:nsxae\nafter.\n\nzesulcz\n\n27 2 19 7\nfunctzon:\n27 2 19 77\na.o\n\n7\n:2 :2 :2 55555555555: o.u Hx $99‘ f\nH us‘-xg.:.xc= : s .- u\n-H =nu; - ._<._p_u=‘ra.| — -Ilia}! - =IlL -dgxeg\n>6] .:a?:I--new ‘=..L- . _'ll‘.su:\\v\nH «tin-.. =:m;m=. n=2I\nH mm .4353 u\n\\\nwlxralncxsmuu - -.3\nW;'m.~— -H -'51:\nFl‘«-~-1‘1'ﬂ'|'.4-VVIu»4 1?!\n\n:3 p:1nt4-:t_.u-_-A :~_—»,.:v. :4 -uaun\n\nml.--uh‘:i‘=,;.--gray: ..=..~; - -‘rm T Hu\n\n:4 u r 1\nJ‘ _~£:_q=E:-J3\nSn: v -\n:: :.|;x-..q<xxu - 1|\n-H;—~..uLs .' r-I\ni'P*~;1v:“| hmwmuu. aeﬂnr.\n‘uuzumq; :-Jsuml\n' ‘.=res‘:.| 544:-\n\nmm:\n\n \n\n‘M? 11 : L1 1\"\n-:-=:u,u my\n\n:_1 as n.:n:u_ —_«.u"
  },
  {
    "path": "E:/Coursera/python-programming/03_logic-and-conditionals/01_core-materials-logic/02_logical-expressions.mp4",
    "id": 5708,
    "text": " / pnm: lvaluel\n\nmmc<\"\":\n\n0 Ioqxcal mm\npz.\\.r,\\2(\"L091ca1 mm\")\nnnncu \"J\nDnnclvaluel and vnuen\nPnr::(valueX and va1ue2>\npz)n:(Value2 am valu22)\n\nPxmc1\"\"}\n\n9 lngxcal on\n,bunt(\"L0§1c.31 0R\")\nDxx.-.L(\" >\nvaxuu»\nvaJue2)\nve1ue2)\n\n \n\npun: Avaluai\npun: (value:\n\nDnrzct\"\n\n. value: . True\n\nvalue: = True\n\npm,uv.~.1..a2 at Hvalual and \\IE}uE47 ax va1ueJ))\n\n‘nus False\n\nmqxcal N01‘\n\nFalse\nTrue\n\nmqical mm"
  },
  {
    "path": "E:/Coursera/python-programming-introduction/01_beginning-to-program-in-python/07_lesson-7-introduction-to-loops-the-while-loop/01_introduction-to-loops-the-while-loop.mp4",
    "id": 5727,
    "text": " Introduction to\nLoops - the \"While\"\nLoop a ma.» >.\"~ »o- x-.\n- W.‘...\\_...,.,........_......._... .. .-.=.._\n\nnet m...n_.._...m.,.u‘..;,\n«. §.m.,,m\nem._m.. mm x 11\n\na».num.x. 7: rm,..u.»a..m._mm. 'n('V\\1lV‘u\n\nAH 15;; I1e'(HEl7(r\nV Yr-mu 2 4 s . Mu ta .. xnvrecule 4\". in K e/nrﬁrung )7!\n.. v1h.]l}b1V\" mm 4 m. «...» linens’ —m.»..n , .»..m~\nKm: mz. . m. M. W\n. -n ,\nK‘/I’ W .. .. .wm.(.) ,\n\n -19%: .p........ . >v!V‘,\\'h'.rv[)rv »\"\"’\\'<W““* >\n\n... um)-lc-7171: mm ~ .  1,. .0: m. «M\n.)'w 'vl-§M)'IK>In71.Ill>9F\n~~x-;F;;(;:[-m_ '71 my (Mud)\n\nmo \n\nmm <§/Assn. w J M w)r’A(=mn:.\n, M. .... .. .. W. .\nr-A»-x :m.~,.. ,\n\n. :;._.“n\nv I‘. ‘M ~.v.— «~ V\\\\M‘ ».x 4-; cm’: »..‘ t.\\u _, my :14.-u _=.;m\nVIVA 4-r\"\\*-mmmf-).\\lll'5X .~» 2.: m  uxu..;.\n\nANY mmgoaur)\nR . ..‘ ' ’\nM. (2 ,»\n\n:r:n'|:¢4m'\nn . (I V .\n‘ .1-(U)\nrv.~..-mmg.‘-;\n\n. .. mhﬂlu‘"
  },
  {
    "path": "E:/Coursera/rails-with-active-record/01_introduction-to-active-record/03_metaprogramming-in-ruby/03_ghost-methods.mp4",
    "id": 4610,
    "text": " am. John Nanlxlru lbnhnvlivi ms .u «g». mm: mm: mm.\n-,,...c.~m.~a :,'n:m- ‘ Lermv, 7\n\nGho\n\nFmhvwth eRevvtJaIvnA:m)uPr(< Ghost Methods In this lecture, we will discuss...\n\n<> Ghost methods Nonexistent (Ghost) Methods\n\n<> Question: lfa method is l and it's , l ‘, was\nit really called at all?\n\nirbCrna1n):001:0> class\nnil\n1 b(main):002:0> some_c1uss SovneC1a5s.new\n#<SomeC1ass :0x007Fb5S2ae1<:80>\n1rb(main):003:0> some_c1uss.i_don\nNoMethodEr‘r‘or: undefined method ‘\n\nfrom (irb):3\nFrom /Users/kalmanhazins/.rbenv/versions/Z.1.Z/bin/1rb:11:1n \\1m1n>' method_missing... method\n\n<> Ruby looks for the method Invoked in the class to which\nit belongs\n\n<> Then it goes up the ancestors tree (classes and\nmodules)\n\n<> If it still doesn‘tﬁnd the method, it calls\nrvi i’;:>»i :41 :;1 '7: method\n\n<> The default : ~.~im—1 :-»;~:,:—; ;1:g implementation throws\nti   rim’? ‘i Overriding method_missing\n\nclass Myszaz,\n\nan men. Um. ')n:: mesraa. ’A1gsW\n.,u;.— \"Leaking Eox. ~\nputs “\\\"H'ne:ho:H\\\" um-. plrlms (Narqs.jo1.'v('.') H 7\"\n\npurs \"Sorry , In u on vzenzmn, \nyum \"Ended up in me:hod_lnissing\" if clccgqnv/en?\nand\nand\n\n \n\nbc\", 1 N do Wzuawez\n\nm.<uJv » '\nMm he answer ir Hars».nr)\"\nand\n\nLookxng {G1\n_> \"solvei/v~yst:-ry\" um. paiams‘ (abc,I2312J7 v\nSorry He u on vaczzlnn\n\n— :> And the answer 15 Ended up m method nussAng . .We Can Do This!\n\nrequi:e_re1a:u/e 'store‘\n\nclass Reportlngsystem\n\n    \n\ndef xnitialize\n@sto:e : storemew\n\nWhy do we care to use\n\nand .. .. 7\n\ndef me:noa1_m;ssmg(name, ‘args7 Super here’\nsuper unless @s:ore.respond7c;~2 (name)\nestaresendtname)\n\nand\n\n  \n\nend\nrs : Repoztinqsystem. new\n\nputs \"Hxs.geL_piano_desc) costs #4(rsAjetipxanoiprice.to7s.l]usL(7, 'n'))\"\n: => Excellent piano casts 120.00 Summary\n\n<> Ghost methods allow you to call methods as if they are\nthere even though they are not\n\n<> Method behavior can be defined at runtime, for example\nbased on database columns existing or not!\n\nWhat’s Next?\n<> Introduction to Active Record © The Johns Hopkins University 201 5, all ragms reserved"
  },
  {
    "path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/02_collections-and-string-apis/02_arrays.mp4",
    "id": 4714,
    "text": " am John: Huphrll unwsw ms. nu mam. rluwud Mm mu 7 lrwluuvl\n\nArrays\n\n\\H'vndm'mr1 In ‘M\n\n \n\n|l)>N\\ H(wkN\\‘ het_arr : [1, , .1 . “] # heterogeneous types\nputs het_arr[f.] # => array lndlces start at 0)\n\narr_words  ’\nputs arr_wnrd5[-'2] # => day\n\nputs = :3 => what - today!\n\np arr_w$rds[—?, 3:] tt :> [\"great'-V H/ay\"] (go back 3 and take 2)\n\n# (Range type covered Later...)\n\np arr_words[2../'1 it => [\"great\", \"day\", \"today\"]\n\n# Make a String out of array elements separated by ','\nputs arr_words.join( ‘) It => v a,great,day,today! Arrays\n\n<> Randomly pull e|ement(s) out with sample\n<> Sort or reverse with sort! and revers‘ # You want a stack (LIFO)? Sure\nstack —— []; stack . ; stack.push (\nputs stack.pap # => two\n\nat You need a queue (FIFO)? we have those too...\nqueue []; queue.push ; queue.push ‘ ,\n\nputs queue.shift # :> one\n1;] .sort ! . reverse!\n\na # —> [5,4.3.2] (actually modifies the array)\na.samp1.e(7,) # => 2 random elements\n\n2, nil, nil, Arrays\n\n<> Lots of useful array methods\n- each — Ioop through array\n\n- select — ﬁlter array by selecting\n- reject — ﬁlter array by rejecting\n- map — modify each element in the array\n\nMany, many others... Another Important API\n\nhttp :IIruby-doc.org/core-2.2.0IArray.html Array Proce sing\n\n3’: -:4“. : qr\na.each { |num| print num } :2 => 1347310 (no new line)\nputs # => (print new une)\n\nnew_arr 7 a.select { |num| num > 1‘ }\np new_arr :: => [7, 8, 10]\nnew_arr a.se1ect { |num| num ' T’} }\n\n.reject( |num| num.even?}\np new_arr at :> [1, 3, 7]\n\n# Multiply each element by 3 producing new array\nnew_arr a.map {|x| x ' :1}\np new_arr # => [3, 9, 21, 24, 30] Summary\n\n<> Arrays API is very flexibie and powerful\n<> Lots of ways to process elements inside the array\n\nWhat’s next?\n<> Ranges 6 The Johns Hopkins University 2015, all rights nasewad"
  },
  {
    "path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/03_object-oriented-programming-in-ruby/01_classes.mp4",
    "id": 4717,
    "text": " am. John: Nanlxlru lbnhnvlivi mu: m «,1». mm: 7 Lr-mw 10\n\nClasses\n\n\\H‘vm1n.‘m:v In 7.‘.\n\n \n\n%'\n\n|<m\\.~ Homxw\n\nmm H» n»Uu ‘.m,:n13.m self\n\n<> At other times, using self is required\nEx. - When it could mean a local variable assignment\n\n<> Outside instance method deﬁnition, self refers to the\nclass itself . \\( m.:\n\n (name, agevar) 1: CONSTRUCTOR\n@name — name Why do we need\n\nse1f.age agevar 2: call (he age: method self here?\nguts age\n\n(new_age)\ngage ' new_age m ; newjge .\n\npersonl , Person. -\\ 4 ‘ ‘, 11) x: :> 13\n\nputs ‘ , t: :> My age is 13\npersan1.age — I7 3: Try to change the age\n\nputs person’ ‘ :t :> 13 (The setter d1dn‘t allow the change) Summary\n\n<> Objects are created with new\n<> Use the short form for setting/getting data (atti_)\n<> Don't forget self when required\n\nWhat's next?\n\n<> Class inheritance and class methods © The Johns Hopkins University 2015, nu ragms reserved"
  },
  {
    "path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/03_object-oriented-programming-in-ruby/02_class-inheritance.mp4",
    "id": 4718,
    "text": " am. John: Nanlxlru lbnhnvlivi mu: m «,1». mm: inn H» H\n\n\\H‘vmiu.'m:v m\n\n \n\n5}‘\n|<»N~ Homvs\n\nYvmjahvxxHuomn<Umwm\\y1UM .1Hngvvl<rnuw«u Cmss\n\nlnhernance\n\n \n\n|: wms H: M N5 In this lecture, we will discuss...\n\n<> The “||” operator\n<> Class methods and class variables\n\n<> var = var || something\n\nclass\natt r_reader :age\natt r_accessor : name\n\ndef (name. age) If CONSTRUCTOR\n@name _ name\nse1f.age = age It can the age: method\n\n9”“ O I H t\ndef (new_age) nyse rrmifhe rs\n\n@age I 5 it default\n(gage = new_age unless nevgagf 0\nand _ \"\n.¢\n\nend\n\nperson1 = sun.new1\"Km\". 130)\n\nputs person1.age v 5 nuefaulttw\nperson1.age = 10 2: change to 10\n\nputs person1.age 1: :~ 10\n\nperson1.age = 200 # Try to change to 263\nputs person1.age tr => 19 (sum) Class Methods and Variables\n\n<> Three ways to define class methods in Ruby\n<> Class variables begin with @% Class Methods and Variables\n\nclass\ndef (var) It 1. Usmg self\nt1'mes__ca11ed; var It 2;\nend\nclass st 2. Using << self\ndef\n@\\_itimes_ca'L1ed ||= 0; @§times_ca1.1ed += 1\nend\nend\nend\ndef (var) at 3. Outsme of class\ntimes_cal1ed; var an 3\nend\n\n# No instance created.‘\n\nputs MathFunct1ons.doub'Le 5 # => 10\nputs MathFunct1ons.trip1e(3) tr :> 9\nputs MathFunct1ons.times_ca11ed 3‘ => 3\n\nself outside of\nmefhod refers ‘to\nClass object Class Inheritance\n\n<> Every class implicitly inherits from Object\n- Object itself inherits from Basicobject\n\n<> No multiple inheritance\n- Mixins are used instead Summary\n\nx’> Glass inheritance lets you override parenfs behavior\n<> Class methods do not need an instance of object in\n\norder to be called\n<> Class variables begin with M\n\nWhat's next?\n4‘ Modules © The Johns Hopkins University 2015, all rights reserved"
  },
  {
    "path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/03_object-oriented-programming-in-ruby/04_scope.mp4",
    "id": 4720,
    "text": " am. John: Nanlxlru lbnhnvlivi mu: m «,1». mm: . m »».m, nu um\n\n \n\n‘$\n\nk )uNs }»l<wKN\\\n\n \n\n. TmuumuHnoxm«Um.um,7n¥5 .m ugnlwvunvv.-M Scope\n\n\\n'vm1a.‘mnhw\n\n \n\n®\n\nk )tN_~ Hnwkwx ®\n\nk )tN_~ Hnwkwx Scope\n\n<> Methods and classes begin new scope for variables\n<> Outer scope variables do not get carried over to the\ninner scope\n\n<> Use local_variables method to see which\nvariables are in (and which are not in) the current\nscope \"at p V1 EXCEPTION THROWN — no such variable ex1sts\nv1 * ‘\n[1 V1\np 1oca1_variab1es\n\np v1 if => o\"*<ide\n\nobj r MyC1\n\nobj.my_met: ~ => inside\n\n8) => [:\\/1]\n\np 1oca1_variab1es # => [:v1, IDDJ]\np self at :> main Scope — Constant\n\nMy/Constant '\n“nuns Myconstant it => Outer Constant\nMytanstant : *\n\nPuts ’ ’ puts Myconstant if => Inner Constant\n\npulfs Myconstant # => Outer Constant\n\nTest::Test2. .what_is_pi :3 => 3.14 ‘S: p V1 EXU I THROWN — no 5UCh variable exlsts\nV1 . ,\n\n[.1 V1\n\np 1aca1_variab1es\n\np v1 #3 => outside\n\nobj — Myclass.‘ .‘\nobj.my_method :: => insme\n\n8) => [:v1]\n\np 1oca1_variab1es :2 => [:v1.\np self it :> mam Scope — Constant\n\nMy/Constant '\n\n: puts Myconstant # => Outer Constant\nputs PI Mytanstant ; *\n\nputs Myconstant :: => Inner Constant\nputs Myconstant It => outer Constant\n\n+e$t::Test2. .what_is_pi :: => 3.14\n\nIt you see some unusual\nbehavior‘ CHECK your variable\n\nnames for upper or lower case Scope: Block\n\n<> Blocks inherit outer scope\n\n<> Block is a closure\n- B_eg_r_1embers the context in which it was deﬁned and uses that\n\ncontext whehever it is gqﬂgj Scope - Block\n\nclass Banmccount\nattr_accessor :id, :amount\ndef iniuaL1ze(id, amount)\n@id id\n@mount = amount\nend\nend\n\naccu uanw 1mt.nevl(123,203)\nacctz Ban mmt.new(321.100)\n\nacct3 aanmczoun .new(421, «1ee)\naccts lacctl. acct2. acct3]\n\ntotal_sum = a\naccts.each do |eachAcct|\n\ntota1_sum += eachkccnamount\nend\n\nputs tota1_sum # Block: Local Scope\n\narr = [5, 4 1]\ncur_number 10\narneach do |cur_number|\n5ome_var = 10 # NOT available outslde the block\nprint cur_number.to_s + \" \" at => 5 4 1\nend\nputs # print a blank line\nputs cur_number # => 10\n\nadjustment\narr.each d number;adjustment|\nadjustmen\nprint \"it mber + adjustment) \" # => 15 14 11\nend\nputs\nputs adjustment :7 => 5 (No? affected by thc blotk) Summary\n\n<> Methods and classes start a new scope\n<> Constants malntaln scope\n\n<> Blocks Inherit outer scope\n- Coutd be overridden’\n\nWhat’s next?\n<> Access Control © The Johns Hopkins University 2015, all rights reserved"
  },
  {
    "path": "E:/Coursera/ruby-on-rails-intro/02_introduction-to-ruby/03_object-oriented-programming-in-ruby/05_access-control.mp4",
    "id": 4721,
    "text": " am. John: Nanlxlru lbnhnvlivi mu: m «,1». mm: 7 L;-mmm\n\nAcces\n\n   \n\nW\n\nIHHNN )«kwm\\\\\n\n \n\nm. m,‘m,H, W \\\\W m. .m /~vl»hV W (- ‘1rm..=7 L:-m.,«‘M\n\nAccess Con\n\n\\H'vn.‘H.'m'v\n\nii?\n\nIHHNN )«kwm\\\\ ii?\n\numm Huvm» Access Control\n\nii?\n\numm Huvm» Access Control\n\n<> When designing your class — important to think about\nhow much of it you will be exposing to the world\n\n<> Encapsulation: try to hide the internal representation\nof the object so you can change it later\n\n4} Three levels: public, protected and private Encapsulation\n\n— (speed, comfort)\n@rating speed comfort\n\n# Can't SET rating from outside\n\n@rating\n\nputs Car. ( , .).rating # => 20 Specifying Access Control Access Control\n\n<> public methods — no access control is enforced\n- Anybody can call these methods\n\n<> protected methods — can be invoked by the\nobjects of the defining class or its subclasses\n\n<> private methods — cannot be invoked with an\nexplicit receiver\n\n- Exception: Setting an attribute can be invoked with an explicit\nreceiver Private Access\n\n‘ (age)\nse1f.age ‘ age # LEGAL * EXCEPTION\nputs my_age\n3 puts self.my_age # ILLEGAL\nif CANNOT USE self or any other recelver\n\nPersomn ‘.( 1:) it :> 25 Summary\n\n<> public and private access controls used the most\n<> private methods are not callable from outside or\n\ninside the class with an explicit receiver\n\nWhat’s next?\n- Introduction to Unit Testing © The Johns Hopkins Univursity 2015, all rights reserved"
  },
  {
    "path": "E:/Coursera/technical-support-fundamentals/06_troubleshooting/04_course-wrap-up/03_congratulations.mp4",
    "id": 5840,
    "text": ""
  }
]